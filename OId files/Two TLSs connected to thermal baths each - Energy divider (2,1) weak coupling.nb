(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2288086,      46857]
NotebookOptionsPosition[   2257388,      46430]
NotebookOutlinePosition[   2258058,      46451]
CellTagsIndexPosition[   2258015,      46448]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"BlueC", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.2627", ",", "0.4313", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PurpleC", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.5411", ",", "0.0784", ",", "0.9607"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RedC", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.60", ",", "0.30", ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.824417204382346*^9, 3.8244172267302313`*^9}, {
   3.8277982674557447`*^9, 3.8277983077204013`*^9}, {3.8308102903497305`*^9, 
   3.8308102943609886`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"19bc9419-a259-4b95-9793-c5f14aae470f"],

Cell[CellGroupData[{

Cell["Energy divider coupling", "Title",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8362581112683825`*^9, 
   3.836258122348595*^9}},ExpressionUUID->"df2f513d-42f8-4682-9ed3-\
7c6f063f0c69"],

Cell[TextData[{
 "1. The system has two TLSs coupled each to a thermal bath.\n2. The energy \
levels of the two levels are significantly off-resonant (for example ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "L"], " ", "=", " ", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "R"]}]}], TraditionalForm]],ExpressionUUID->
  "a1520080-0266-4601-a732-a76f6bd0a66d"],
 ")\n3. A three level system mediates the thermal flow between the \
off-resonant transitions.\n"
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8362581252991543`*^9, 3.83625816562213*^9}, {
   3.8362582110543747`*^9, 3.8362582311966004`*^9}, {3.836258300621565*^9, 
   3.836258317160121*^9}, {3.8417861618235383`*^9, 
   3.841786211060088*^9}},ExpressionUUID->"1229f72d-8b55-405f-8acc-\
885540b92bbe"],

Cell["System Hamiltonians", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8362584335160165`*^9, 
   3.8362584383227825`*^9}},ExpressionUUID->"8256f38f-83da-4593-81eb-\
aa553b70723e"],

Cell["Identity operator", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189702934168277`*^9, 
   3.81897029971469*^9}},ExpressionUUID->"b4ad0846-f57e-4812-8233-\
08e272066d52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Id", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  TemplateBox[{
    RowBox[{"ve", ",", "ho"}]},
   "KroneckerDeltaSeq"]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189703012247114`*^9, 3.818970323550434*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"37c1b27b-c65d-4fd5-9bad-1041d6cffba4"],

Cell["Subsystem Hamiltonians", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8362584513068433`*^9, 3.8362584596175103`*^9}, {
   3.836258492350932*^9, 
   3.836258498228185*^9}},ExpressionUUID->"ef83611a-5a8b-491c-93e3-\
b7689289b4f2"],

Cell["\<\
The system contains three subsystems L, M and R. L and R are two level \
systems. M is a three level system.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8362584661018896`*^9, 3.8362584887834325`*^9}, {
   3.84178680968559*^9, 
   3.84178681563326*^9}},ExpressionUUID->"2f4fb805-b245-4178-9d3c-\
93f3159b2ced"],

Cell["\<\
Combined form for the three non-interacting subsystem Hamiltonians\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.83625875011508*^9, 3.836258785767951*^9}, {
   3.841712665622283*^9, 3.841712681948944*^9}, 
   3.8417868250083003`*^9},ExpressionUUID->"ed93ad81-8969-45a7-828f-\
5a46feacd2de"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], "sys", "0"], " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[HBar]", " ", 
      SubscriptBox["\[Omega]", "L"]}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["e", "L"], ">", "<", 
       SubscriptBox["e", "L"]}], "|", 
      RowBox[{"-", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["g", "L"], ">", "<", 
         SubscriptBox["g", "L"]}], "|"}]}]}], ")"}]}], " ", "+", " ", 
   RowBox[{"\[HBar]", " ", 
    SubscriptBox["\[Omega]", "M"], 
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["2", "R"], ">", "<", 
       SubscriptBox["2", "R"]}], "|", 
      RowBox[{"-", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["0", "R"], ">", "<", 
         SubscriptBox["0", "R"]}], "|"}]}]}], ")"}]}], " ", "+", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"\[HBar]", " ", 
      SubscriptBox["\[Omega]", "R"]}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["e", "R"], ">", "<", 
       SubscriptBox["e", "R"]}], "|", 
      RowBox[{"-", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["g", "R"], ">", "<", 
         SubscriptBox["g", "R"]}], "|"}]}]}], ")"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841709763717658*^9, 3.841709931657691*^9}, {
   3.841710074015057*^9, 3.841710078188266*^9}, {3.8417111761061153`*^9, 
   3.841711189795104*^9}},ExpressionUUID->"2b55960f-589c-4197-93a1-\
602cf2b5a8dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HLSep", "[", 
   RowBox[{
   "veL_", ",", "hoL_", ",", "veM_", ",", "hoM_", ",", "veR_", ",", "hoR_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[HBar]", " ", 
           SubscriptBox["\[Omega]", "1"]}], "2"]}]}
      }], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"veL", ",", "hoL"}], "]"}], "]"}], 
   RowBox[{"Id", "[", 
    RowBox[{"veM", ",", "hoM"}], "]"}], 
   RowBox[{"Id", "[", 
    RowBox[{"veR", ",", "hoR"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836258505229535*^9, 3.836258629140747*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7ffc7def-e443-40f7-a063-be9af5fdb10c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMSep", "[", 
   RowBox[{
   "veL_", ",", "hoL_", ",", "veM_", ",", "hoM_", ",", "veR_", ",", "hoR_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"Id", "[", 
    RowBox[{"veL", ",", "hoL"}], "]"}], 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "0", "0"},
       {"0", "0", "0"},
       {"0", "0", 
        RowBox[{
         RowBox[{"-", "\[HBar]"}], " ", 
         SubscriptBox["\[Omega]", "2"]}]}
      }], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"veM", ",", "hoM"}], "]"}], "]"}], 
   RowBox[{"Id", "[", 
    RowBox[{"veR", ",", "hoR"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836258505229535*^9, 3.8362587107040834`*^9}, 
   3.8362594696771173`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"1f79d20a-423d-495d-a956-8101bc70933d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HRSep", "[", 
   RowBox[{
   "veL_", ",", "hoL_", ",", "veM_", ",", "hoM_", ",", "veR_", ",", "hoR_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"Id", "[", 
    RowBox[{"veL", ",", "hoL"}], "]"}], 
   RowBox[{"Id", "[", 
    RowBox[{"veM", ",", "hoM"}], "]"}], 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "3"]}], "2"], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[HBar]", " ", 
           SubscriptBox["\[Omega]", "3"]}], "2"]}]}
      }], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"veR", ",", "hoR"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836258505229535*^9, 3.8362586763449764`*^9}, {
   3.8362587300092125`*^9, 3.8362587342524395`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"48a2d7ab-9414-467c-9935-4fa9975fbc1c"],

Cell["\<\
The twelve possible eigenstates are numbered as,
|1>\t= |e,2,e>
|2>\t= |e,2,g>
|3>\t= |e,1,e>
|4>\t= |e,1,g>
|5>\t= |e,0,e>
|6>\t= |e,0,g>
|7>\t= |g,2,e>
|8>\t= |g,2,g>
|9>\t= |g,1,e>
|10>= |g,1,g>
|11>= |g,0,e>
|12>= |g,0,g>\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8362587900436554`*^9, 
   3.8362589011868205`*^9}},ExpressionUUID->"be56f688-0964-4302-b9bb-\
719f0e844ef8"],

Cell["\<\
Eigenstate mapping function, maps overall state (1 to 12) to subsystem L, M, \
R state,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.773698707838093*^9, 3.7736987156213007`*^9}, {
   3.7745556034403844`*^9, 3.7745556135964556`*^9}, 3.7745568178008423`*^9, {
   3.791163634247059*^9, 3.7911636438743353`*^9}, {3.813020849796363*^9, 
   3.813020871418713*^9}, {3.827353787219006*^9, 3.8273538015884066`*^9}, {
   3.8362589893361063`*^9, 
   3.836259009907134*^9}},ExpressionUUID->"39d0b36c-8425-4c3d-aae5-\
5673ff92f7d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EmapL", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "7"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "8"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "9"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "10"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "11"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "12"}]},
       "KroneckerDeltaSeq"]}], ")"}], "2"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "1"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "2"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "3"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "4"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "5"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "6"}]},
       "KroneckerDeltaSeq"]}], ")"}], "1"}]}]}], "\n", 
 RowBox[{
  RowBox[{"EmapM", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "5"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "6"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "11"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "12"}]},
       "KroneckerDeltaSeq"]}], ")"}], "3"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "3"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "4"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "9"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "10"}]},
       "KroneckerDeltaSeq"]}], ")"}], "2"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "1"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "2"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "7"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "8"}]},
       "KroneckerDeltaSeq"]}], ")"}], "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EmapR", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "2"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "4"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "6"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "8"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "10"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "12"}]},
       "KroneckerDeltaSeq"]}], ")"}], "2"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "1"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "3"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "5"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "7"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "9"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "11"}]},
       "KroneckerDeltaSeq"]}], ")"}], "1"}]}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189704897404613`*^9, 3.818970574089013*^9}, {
   3.8189706380076923`*^9, 3.8189706645496674`*^9}, {3.836259015359763*^9, 
   3.8362592363117104`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2d79f8b7-2b01-4f42-87b4-61b7e9576174"],

Cell["Matrix form of the three Hamiltonians", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189706697441363`*^9, 3.818970678451008*^9}, {
   3.83625927598283*^9, 
   3.836259276412429*^9}},ExpressionUUID->"1a1a4deb-03a1-4b0f-9263-\
4385261ac6cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HL", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{"HLSep", "[", 
   RowBox[{
    RowBox[{"EmapL", "[", "ve", "]"}], ",", 
    RowBox[{"EmapL", "[", "ho", "]"}], ",", 
    RowBox[{"EmapM", "[", "ve", "]"}], ",", 
    RowBox[{"EmapM", "[", "ho", "]"}], ",", 
    RowBox[{"EmapR", "[", "ve", "]"}], ",", 
    RowBox[{"EmapR", "[", "ho", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HM", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{"HMSep", "[", 
   RowBox[{
    RowBox[{"EmapL", "[", "ve", "]"}], ",", 
    RowBox[{"EmapL", "[", "ho", "]"}], ",", 
    RowBox[{"EmapM", "[", "ve", "]"}], ",", 
    RowBox[{"EmapM", "[", "ho", "]"}], ",", 
    RowBox[{"EmapR", "[", "ve", "]"}], ",", 
    RowBox[{"EmapR", "[", "ho", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HR", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{"HRSep", "[", 
   RowBox[{
    RowBox[{"EmapL", "[", "ve", "]"}], ",", 
    RowBox[{"EmapL", "[", "ho", "]"}], ",", 
    RowBox[{"EmapM", "[", "ve", "]"}], ",", 
    RowBox[{"EmapM", "[", "ho", "]"}], ",", 
    RowBox[{"EmapR", "[", "ve", "]"}], ",", 
    RowBox[{"EmapR", "[", "ho", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970688997239*^9, 3.818970793620942*^9}, {
   3.836259280166001*^9, 3.8362593019531326`*^9}, {3.836259382694125*^9, 
   3.836259435626956*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b19d99e2-4cef-40f9-ba8a-71cc7cfbc37f"],

Cell["\<\
Non-interacting subsystem Hamiltonians as a matrix in the combined system \
space\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970767713512*^9, 3.8189707841096783`*^9}, {
   3.8417127006288233`*^9, 
   3.841712730798438*^9}},ExpressionUUID->"9d87d23f-744e-44a2-a1e2-\
c922236b63cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsys0Matrix", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HL", "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "+", 
      RowBox[{"HM", "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "+", 
      RowBox[{"HR", "[", 
       RowBox[{"ve", ",", "ho"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ve", ",", "1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ho", ",", "1", ",", "12"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Hsys0Matrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970800687973*^9, 3.8189708560102053`*^9}, {
   3.836259251753298*^9, 3.8362592615195026`*^9}, {3.83625931285794*^9, 
   3.836259362452264*^9}, {3.84171273911337*^9, 3.8417127878245773`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"478248fe-4674-4fdf-b06a-fb51797b7f5d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836259351107608*^9, 3.8362593629963164`*^9}, 
   3.8362594383496485`*^9, 3.836259473452118*^9, 3.836343186591112*^9, 
   3.836349403009512*^9, 3.8417099670582952`*^9, 3.841712787972699*^9, 
   3.8417855697776337`*^9, 3.842476687341174*^9, 3.8424944251526933`*^9, 
   3.842558502741957*^9, 3.8425665087881365`*^9, 3.842573966728385*^9, 
   3.842576154849411*^9, 3.8426422090318003`*^9, 3.8431767221831627`*^9, 
   3.843261178859247*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"3cd7de25-2f8d-4d1e-ba81-\
3de09ad0caf4"]
}, Open  ]],

Cell["Interaction Hamiltonian between the subsystems", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970880030694*^9, 3.818970898054384*^9}, {
   3.836260732913148*^9, 
   3.836260735135339*^9}},ExpressionUUID->"28d5d770-f371-4948-8ae2-\
5735899eaa18"],

Cell[TextData[{
 "The energy levels of the individual components are specially tuned in our \
model. \n\t1. First of all, there are no direct interactions between L and R.\
\n\t2. The energy levels are prepared so that\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "L"], "\[TildeEqual]", 
    RowBox[{"2", 
     SubscriptBox["\[Omega]", "M"]}]}], TraditionalForm]],ExpressionUUID->
  "64223fc8-e2a8-450d-a5cb-e1be3e0a279f"],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "R"], "\[TildeEqual]", 
    SubscriptBox["\[Omega]", "M"]}], TraditionalForm]],ExpressionUUID->
  "8a4fbe9a-c0f2-4843-b85e-ccf0ff7cd33a"],
 "\n\t3. The interaction strengths between subsystems are given by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "LM"], TraditionalForm]],ExpressionUUID->
  "d5dd5615-bc1e-4ab8-ba1d-d3f657640a13"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "MR"], TraditionalForm]],ExpressionUUID->
  "4819243d-24c7-46b3-841a-73d968f05eb1"],
 "."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836353368058155*^9, 3.8363534134480925`*^9}, {
   3.8363534446038513`*^9, 3.8363534449709687`*^9}, {3.8363534988935485`*^9, 
   3.8363535354296694`*^9}, {3.836353575872204*^9, 3.8363536017471123`*^9}, {
   3.841713395019511*^9, 3.8417135715435658`*^9}, {3.8431673189810963`*^9, 
   3.843167326574362*^9}, 
   3.8431675445923185`*^9},ExpressionUUID->"69389f51-d5b5-4516-9ae0-\
04329595ae9a"],

Cell[BoxData[{
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], "sys", "1"], " ", "=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"\[HBar]", " ", 
     SubscriptBox["\[Gamma]", "LM"]}], "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["g", "L"], ">", "<", 
       SubscriptBox["e", "L"]}], "|", 
      RowBox[{"\[CircleTimes]", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["2", "M"], ">", "<", 
         SubscriptBox["0", "M"]}], "|", " ", 
        RowBox[{"+", " ", 
         RowBox[{"|", 
          RowBox[{
           SubscriptBox["e", "L"], ">", "<", 
           SubscriptBox["g", "L"]}], "|", 
          RowBox[{"\[CircleTimes]", 
           RowBox[{"|", 
            RowBox[{
             SubscriptBox["0", "M"], ">", "<", 
             SubscriptBox["2", "M"]}], "|"}]}]}]}]}]}]}], ")"}], 
    "\[CircleTimes]", 
    SubscriptBox["I", "R"]}]}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"+", " ", 
    FractionBox[
     RowBox[{"\[HBar]", " ", 
      SubscriptBox["\[Gamma]", "MR"]}], "2"]}], 
   RowBox[{
    SubscriptBox["I", "L"], "\[CircleTimes]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"|", 
         RowBox[{
          SubscriptBox["1", "M"], ">", "<", 
          SubscriptBox["0", "M"]}], "|", 
         RowBox[{"+", 
          RowBox[{"|", 
           RowBox[{
            SubscriptBox["2", "M"], ">", "<", 
            SubscriptBox["1", "M"]}], "|"}]}]}], ")"}], "\[CircleTimes]"}], 
      "|", 
      RowBox[{
       SubscriptBox["g", "R"], ">", "<", 
       SubscriptBox["e", "R"]}], "|", " ", 
      RowBox[{
       RowBox[{"+", " ", 
        RowBox[{"(", 
         RowBox[{"|", 
          RowBox[{
           SubscriptBox["0", "M"], ">", "<", 
           SubscriptBox["1", "M"]}], "|", 
          RowBox[{"+", 
           RowBox[{"|", 
            RowBox[{
             SubscriptBox["1", "M"], ">", "<", 
             SubscriptBox["2", "M"]}], "|"}]}]}], ")"}]}], "\[CircleTimes]"}],
       "|", 
      RowBox[{
       SubscriptBox["e", "R"], ">", "<", 
       SubscriptBox["g", "R"]}], "|"}], ")"}]}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841709763717658*^9, 3.841709931657691*^9}, {
   3.841710074015057*^9, 3.841710078188266*^9}, {3.8417110558049583`*^9, 
   3.841711158615835*^9}, {3.8417112142620535`*^9, 
   3.841711543827473*^9}},ExpressionUUID->"c808d86d-2fe3-40ea-b831-\
97c8eb7d1554"],

Cell["\<\
Considering the above Hamiltonian, we write the interaction between L and M \
as,\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970939321921*^9, 3.8189710018231997`*^9}, {
   3.818971137306467*^9, 3.818971150011942*^9}, {3.818971194958247*^9, 
   3.818971232771535*^9}, {3.819056757584648*^9, 3.8190567675412273`*^9}, {
   3.8213976301840677`*^9, 3.8213976301840677`*^9}, {3.821498996717906*^9, 
   3.821499005721004*^9}, {3.8214997841057086`*^9, 3.8214997841057086`*^9}, {
   3.8273547537695084`*^9, 3.8273547641343107`*^9}, {3.8273550314509635`*^9, 
   3.8273551040333834`*^9}, {3.827355147297969*^9, 3.8273551738923316`*^9}, {
   3.8274440774345827`*^9, 3.827444079233782*^9}, {3.8308219316293626`*^9, 
   3.8308219644429555`*^9}, {3.8308221178176556`*^9, 3.830822125253399*^9}, {
   3.836266380025174*^9, 3.83626638342428*^9}, {3.8362664558659706`*^9, 
   3.836266566284102*^9}, {3.836343322095519*^9, 3.836343330267501*^9}, 
   3.8363451724449263`*^9, {3.8417115965904255`*^9, 
   3.8417116158165407`*^9}},ExpressionUUID->"4f16174e-a0c6-4223-a792-\
e86a0b814102"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HintLM", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[HBar]", " ", "\[Gamma]LM"}], "2"], 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {"0", "0"},
            {"1", "0"}
           }], ")"}], ",", 
         RowBox[{"(", GridBox[{
            {"0", "0", "1"},
            {"0", "0", "0"},
            {"0", "0", "0"}
           }], ")"}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {"0", "1"},
            {"0", "0"}
           }], ")"}], ",", 
         RowBox[{"(", GridBox[{
            {"0", "0", "0"},
            {"0", "0", "0"},
            {"1", "0", "0"}
           }], ")"}]}], "]"}]}], ",", 
      RowBox[{"(", GridBox[{
         {"1", "0"},
         {"0", "1"}
        }], ")"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836343554440406*^9, 3.8363436150856943`*^9}, {
   3.8363451368838606`*^9, 3.8363453188446484`*^9}, {3.836349131628474*^9, 
   3.8363492112625475`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9be341bc-bdc3-454b-99b3-5b4ea5966ef9"],

Cell["Similarly, we write the interaction between M and R as,", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970939321921*^9, 3.8189710018231997`*^9}, {
   3.818971137306467*^9, 3.818971150011942*^9}, {3.818971194958247*^9, 
   3.818971232771535*^9}, {3.819056757584648*^9, 3.8190567675412273`*^9}, {
   3.8213976301840677`*^9, 3.8213976301840677`*^9}, {3.821498996717906*^9, 
   3.821499005721004*^9}, {3.8214997841057086`*^9, 3.8214997841057086`*^9}, {
   3.8273547537695084`*^9, 3.8273547641343107`*^9}, {3.8273550314509635`*^9, 
   3.8273551040333834`*^9}, {3.827355147297969*^9, 3.8273551738923316`*^9}, {
   3.8274440774345827`*^9, 3.827444079233782*^9}, {3.8308219316293626`*^9, 
   3.8308219644429555`*^9}, {3.8308221178176556`*^9, 3.830822125253399*^9}, {
   3.836266380025174*^9, 3.83626638342428*^9}, {3.8362664558659706`*^9, 
   3.8362666443197713`*^9}, {3.8363432507083406`*^9, 3.836343307939825*^9}, {
   3.8363433466633863`*^9, 3.8363433594609637`*^9}, {3.8363434068091097`*^9, 
   3.836343443614232*^9}, {3.836343516112311*^9, 3.836343535261611*^9}, {
   3.841711727465928*^9, 
   3.8417117384184413`*^9}},ExpressionUUID->"cef78387-f830-43d1-89f3-\
c45e6108b29b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HintMR", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[HBar]", " ", "\[Gamma]MR"}], "2"], 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1", "0"},
         {"0", "1"}
        }], ")"}], ",", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {"0", "1", "0"},
            {"0", "0", "1"},
            {"0", "0", "0"}
           }], ")"}], ",", 
         RowBox[{"(", GridBox[{
            {"0", "0"},
            {"1", "0"}
           }], ")"}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {"0", "0", "0"},
            {"1", "0", "0"},
            {"0", "1", "0"}
           }], ")"}], ",", 
         RowBox[{"(", GridBox[{
            {"0", "1"},
            {"0", "0"}
           }], ")"}]}], "]"}]}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836343554440406*^9, 3.8363436150856943`*^9}, {
   3.8363451368838606`*^9, 3.8363453188446484`*^9}, {3.836345537981867*^9, 
   3.8363455658599796`*^9}, {3.8363456299246836`*^9, 3.836345642899024*^9}, {
   3.8363456763036003`*^9, 3.836345686969716*^9}, {3.836345898311999*^9, 
   3.836345925084284*^9}, {3.836345963635878*^9, 3.8363459664002185`*^9}, {
   3.8363460773980665`*^9, 3.8363460800676575`*^9}, {3.8363492417397566`*^9, 
   3.836349367923258*^9}, {3.841711771790227*^9, 3.8417117807074957`*^9}, {
   3.8417118110723805`*^9, 3.841711825316992*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"3009589b-9897-4760-aab0-119f536a348f"],

Cell["\<\
Interacting system Hamiltonian as a matrix in the combined system space\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970767713512*^9, 3.8189707841096783`*^9}, {
   3.8417127006288233`*^9, 3.841712730798438*^9}, {3.841786917755107*^9, 
   3.8417869225253053`*^9}},ExpressionUUID->"99bb7f63-ca00-4952-b454-\
c6c31daafec8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsys1Matrix", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HintLM", "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "+", 
      RowBox[{"HintMR", "[", 
       RowBox[{"ve", ",", "ho"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ve", ",", "1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ho", ",", "1", ",", "12"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Hsys1Matrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8363453144939227`*^9, 3.8363453688408957`*^9}, {
   3.8363456967276673`*^9, 3.836345705439633*^9}, {3.841712865168323*^9, 
   3.841712955194809*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"27290db5-7cd3-4ac4-b8e2-ae9d7424f456"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8363457059844885`*^9, 3.836346086718517*^9, {
   3.8363493715146837`*^9, 3.836349380889057*^9}, 3.836349415313551*^9, {
   3.84171183086931*^9, 3.841711833427976*^9}, {3.8417119248461943`*^9, 
   3.8417119320391726`*^9}, {3.8417129522790575`*^9, 3.8417129558983746`*^9}, 
   3.841713019743534*^9, 3.841785574951816*^9, 3.84247669714702*^9, 
   3.8424944286233788`*^9, 3.8425585303570795`*^9, 3.8425665124685388`*^9, 
   3.842573971294327*^9, 3.842576159301152*^9, 3.8426422124308376`*^9, 
   3.8431767265542336`*^9, 3.8432611823015823`*^9},
 CellLabel->
  "Out[19]//MatrixForm=",ExpressionUUID->"e7cc855c-7e94-431e-ae96-\
5e64e3cde3af"]
}, Open  ]],

Cell["Combined system Hamiltonian", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189786431707296`*^9, 
   3.818978651182397*^9}},ExpressionUUID->"5b15f03f-8ba9-496b-bbde-\
3c982bc4ff4c"],

Cell[BoxData[
 RowBox[{
  SubscriptBox[
   OverscriptBox["H", "^"], "sys"], " ", "=", " ", 
  RowBox[{
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "0"], " ", "+", " ", 
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "1"]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841709763717658*^9, 3.841709931657691*^9}, {
   3.841710074015057*^9, 3.841710078188266*^9}, {3.8417110558049583`*^9, 
   3.841711158615835*^9}, {3.8417112142620535`*^9, 3.841711543827473*^9}, {
   3.8417120175047264`*^9, 
   3.8417120322193904`*^9}},ExpressionUUID->"842c021b-5895-448e-b366-\
3e59de25eb49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HsysMatrix", "=", 
   RowBox[{"Hsys0Matrix", "+", "Hsys1Matrix"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "HsysMatrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818971719356063*^9, 3.818971750208635*^9}, {
   3.8363481435215926`*^9, 3.8363481608407307`*^9}, {3.8417130748330216`*^9, 
   3.8417130861306834`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bc656a36-1b8b-42c1-a411-61f8009fcf6a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "3"]}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQB+Kpj8s+yGe/cvxW67RevuSN46uP16wVgLTvpsOqikD6
iufjyy4g/nyGtmNA+s2zYKm9FW8c1arSrj0D0odalQLeAWkTy7wJIHqdUNFW
EO3U035MsuWNo8Kp9mWqQFoqSrtDDUi/W1DprA6ka85s+uMEpNkOvXztCqQD
13iv9wTSV2+lvA4E0Vf93HOAdHGnKvNrIP2w1/22WNcbxw0rmmvFgXTZmrVL
JIH0ml2a2tJA+grjOxcLIG33/NbtDUDaLWfP/G1A2mTHyxM7gHS338zPO4H0
AtuJj1i73zhGcKzexgekv7xsyunqBbq73vCBw9Q3jitNVWsdgbSMy/4P1fPf
OCa8elNeA6QXO7rfnQ+kNVkfhXxc8MZRJfXAn59A+tTqKR6SC4H+cnHQkwXS
fq99LysA6Z4DS54oAmkOxzpVJyB993+BsvuiN446z5YkFABpAHyDypY=
  "],
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"3f68ddc2-4975-4b5a-90ec-\
d620567914a2"]
}, Open  ]],

Cell["Visualize the energy levels of the combined system", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8214837084313936`*^9, 3.821483732570406*^9}, {
   3.82735681900805*^9, 
   3.8273568562095785`*^9}},ExpressionUUID->"d3731827-5772-4af4-8d56-\
faec4bd18752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", "=", 
   RowBox[{"{", 
    RowBox[{"\[HBar]", "\[Rule]", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.821483757704315*^9, 3.821483764181883*^9}, 
   3.8273813193863916`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"f6a78a16-e87f-4884-8219-81d88c297d23"],

Cell[CellGroupData[{

Cell["Bare energy levels without the interaction Hamiltonian", "Subsubsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827356868873045*^9, 3.827356883413703*^9}, 
   3.8273610699545774`*^9, 
   3.830494957915609*^9},ExpressionUUID->"2aed4a0f-b197-4338-b2d0-\
92d5bb47581c"],

Cell["\<\
Function for shifting the eigenvalues from Mathematica to our representation\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836352255365159*^9, 
   3.836352282129157*^9}},ExpressionUUID->"95dd61ca-0e8f-48e9-8b40-\
f4193c9253fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Shift1", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "1"}]},
     "KroneckerDeltaSeq"], "12"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "2"}]},
     "KroneckerDeltaSeq"], "6"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "3"}]},
     "KroneckerDeltaSeq"], "8"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "4"}]},
     "KroneckerDeltaSeq"], "2"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "5"}]},
     "KroneckerDeltaSeq"], "10"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "6"}]},
     "KroneckerDeltaSeq"], "4"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "7"}]},
     "KroneckerDeltaSeq"], "11"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "8"}]},
     "KroneckerDeltaSeq"], "5"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "9"}]},
     "KroneckerDeltaSeq"], "7"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "10"}]},
     "KroneckerDeltaSeq"], "1"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "11"}]},
     "KroneckerDeltaSeq"], "9"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "12"}]},
     "KroneckerDeltaSeq"], "3"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570361704245`*^9, 3.8273570931968136`*^9}, 
   3.8273571490099325`*^9, {3.8363523957733307`*^9, 3.836352412143478*^9}, {
   3.8363525118656883`*^9, 3.836352537391593*^9}, {3.836352629782934*^9, 
   3.836352766366556*^9}, {3.836352860861972*^9, 3.8363528613572793`*^9}, {
   3.8363529061849995`*^9, 3.8363529063400154`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"7ea8f086-5ca0-446a-a107-86e9196667d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsys0EVal", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "Hsys0Matrix", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Shift1", "[", "i", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Hsys0EVec", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "Hsys0Matrix", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"Shift1", "[", "i", "]"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hsys0EVal", "[", "i", "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"Hsys0EVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570111683946`*^9, 3.8273570344061985`*^9}, {
   3.8273571723112164`*^9, 3.8273572333769093`*^9}, {3.836352314228255*^9, 
   3.8363523846373873`*^9}, {3.8363524281642823`*^9, 
   3.8363524282267213`*^9}, {3.841713109218913*^9, 3.84171313505084*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"b4cab229-6754-48db-ba8d-7afab628ff4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827357235012607*^9, 3.8273795155882125`*^9, 
   3.82738132232773*^9, 3.827382815797269*^9, 3.8274404685664787`*^9, {
   3.8274456109144316`*^9, 3.8274456137852583`*^9}, 3.827453312502881*^9, 
   3.8274701767968397`*^9, 3.8275241650433683`*^9, 3.827783709156357*^9, {
   3.830494963186015*^9, 3.830494968584754*^9}, {3.8304962386369658`*^9, 
   3.830496241735606*^9}, 3.830500645524202*^9, 3.8305037695057487`*^9, 
   3.830563367579111*^9, 3.8308139115399675`*^9, 3.8308289680179796`*^9, {
   3.8363523856860914`*^9, 3.8363524286570144`*^9}, 3.8363525491404495`*^9, 
   3.836352768319691*^9, 3.8363529082497635`*^9, 3.836353190023027*^9, 
   3.8417124737107487`*^9, 3.8417131363066316`*^9, 3.8417855819267488`*^9, 
   3.8424767498489323`*^9, 3.8424770414683466`*^9, 3.842494438246672*^9, 
   3.8425585486669903`*^9, 3.842566517711088*^9, 3.842573978704737*^9, 
   3.842576165542862*^9, 3.8426422203390083`*^9, 3.843176731930775*^9, 
   3.843261189503023*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3ae25fd4-6e60-470f-a767-cc3f832fcbb6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dressed energy levels with the interaction Hamiltonian", "Subsubsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827356868873045*^9, 3.827356883413703*^9}, 
   3.8273610699545774`*^9, 3.830494957915609*^9, {3.8424767873090706`*^9, 
   3.8424767917617316`*^9}},ExpressionUUID->"97ca4c2f-89ee-4735-9883-\
40db15f423fc"],

Cell["\<\
Function for shifting the eigenvalues from Mathematica to our representation\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836352255365159*^9, 
   3.836352282129157*^9}},ExpressionUUID->"12640f31-ca32-40af-a233-\
bac6896b3840"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Shift2", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "1"}]},
     "KroneckerDeltaSeq"], "8"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "2"}]},
     "KroneckerDeltaSeq"], "12"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "3"}]},
     "KroneckerDeltaSeq"], "10"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "4"}]},
     "KroneckerDeltaSeq"], "2"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "5"}]},
     "KroneckerDeltaSeq"], "1"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "6"}]},
     "KroneckerDeltaSeq"], "4"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "7"}]},
     "KroneckerDeltaSeq"], "3"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "8"}]},
     "KroneckerDeltaSeq"], "6"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "9"}]},
     "KroneckerDeltaSeq"], "5"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "10"}]},
     "KroneckerDeltaSeq"], "11"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "11"}]},
     "KroneckerDeltaSeq"], "9"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "12"}]},
     "KroneckerDeltaSeq"], "7"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570361704245`*^9, 3.8273570931968136`*^9}, 
   3.8273571490099325`*^9, {3.8363523957733307`*^9, 3.836352412143478*^9}, {
   3.8363525118656883`*^9, 3.836352537391593*^9}, {3.836352629782934*^9, 
   3.836352766366556*^9}, {3.836352860861972*^9, 3.8363528613572793`*^9}, {
   3.8363529061849995`*^9, 3.8363529063400154`*^9}, 3.842476885424136*^9, {
   3.8424774270804567`*^9, 3.8424774752609587`*^9}, {3.8424840934147596`*^9, 
   3.842484133092779*^9}, {3.842484179929656*^9, 3.8424842061705637`*^9}, {
   3.842484500892956*^9, 3.8424845166759443`*^9}, {3.8424845724607377`*^9, 
   3.8424846448264637`*^9}, {3.8424846755657606`*^9, 3.842484679566298*^9}, {
   3.8424854928280754`*^9, 3.8424855447362027`*^9}, {3.8424856465612736`*^9, 
   3.842485647825033*^9}, {3.842485734859923*^9, 3.842485759836588*^9}, {
   3.8424858225657578`*^9, 3.842485838118294*^9}, {3.842486490265129*^9, 
   3.8424864944506016`*^9}, 3.84248654702709*^9, {3.842486597980302*^9, 
   3.8424866251964073`*^9}, {3.842486663505526*^9, 3.842486665153098*^9}, {
   3.8424867736182003`*^9, 3.8424870534933987`*^9}, {3.84248709156326*^9, 
   3.8424871269352694`*^9}, {3.8424871617243176`*^9, 3.8424871618523083`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b927b931-a6d9-4ac7-a30a-d60d64234c1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HsysEVal", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "HsysMatrix", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Shift2", "[", "i", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"HsysEVec", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", "HsysMatrix", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Shift2", "[", "i", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570111683946`*^9, 3.8273570344061985`*^9}, {
   3.8273571723112164`*^9, 3.8273572333769093`*^9}, {3.836352314228255*^9, 
   3.8363523846373873`*^9}, {3.8363524281642823`*^9, 
   3.8363524282267213`*^9}, {3.841713109218913*^9, 3.84171313505084*^9}, {
   3.8424768197416997`*^9, 3.8424768406800675`*^9}, {3.842476887265541*^9, 
   3.8424768883836746`*^9}, 3.8424769926602287`*^9, {3.842494361740534*^9, 
   3.842494372374623*^9}, {3.8431780360441465`*^9, 3.843178037876259*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"baa81494-da5f-4c5e-8a19-c61bcc5029fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison of bare and dressed energy levels", "Subsubsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.843177686941576*^9, 
   3.8431777013880835`*^9}},ExpressionUUID->"278941ac-83a2-48c2-9436-\
4716049cdfaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp1", ",", "temp2"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"temp1", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Hsys0EVal", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]L"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]M"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "3"], "\[Rule]", "\[Omega]R"}], ",", 
           "unitassum"}], "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"temp2", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HsysEVal", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]L"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]M"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "3"], "\[Rule]", "\[Omega]R"}], ",", 
           RowBox[{"\[Gamma]LM", "\[Rule]", "\[Gamma]LMs"}], ",", 
           RowBox[{"\[Gamma]MR", "\[Rule]", "\[Gamma]MRs"}], ",", 
           "unitassum"}], "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"temp1", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(1\), \(BARE\)]\)> = |e2e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(2\), \(BARE\)]\)> = |e2g>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(3\), \(BARE\)]\)> = |e1e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(4\), \(BARE\)]\)> = |e1g>\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<|\!\(\*SubscriptBox[\(5\), \(BARE\)]\)> = |e0e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(6\), \(BARE\)]\)> = |e0g>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(7\), \(BARE\)]\)> = |g2e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(8\), \(BARE\)]\)> = |g2g>\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<|\!\(\*SubscriptBox[\(9\), \(BARE\)]\)> = |g1e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(10\), \(BARE\)]\)> = |g1g>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(11\), \(BARE\)]\)> = |g0e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(12\), \(BARE\)]\)> = |g0g>\>\""}], 
            "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "\"\<Energy\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{"temp2", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |e2e>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<|\!\(\*SubscriptBox[\(5\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(6\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(7\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(8\), \(DRE\)]\)>\>\"", ",", 
             "\[IndentingNewLine]", 
             "\"\<|\!\(\*SubscriptBox[\(9\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(10\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(11\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(12\), \(DRE\)]\)> = |g0g>\>\""}], 
            "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "\"\<Energy\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Frequencies\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]L", ",", "2.1"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]M", ",", "1"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]R", ",", "0.9"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\[IndentingNewLine]", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Interactions\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]LMs", ",", "0.01"}], "}"}], ",", "0", ",", "0.3"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]MRs", ",", "0.01"}], "}"}], ",", "0", ",", "0.3"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273568873571672`*^9, 3.8273568926490884`*^9}, {
   3.8273571088386097`*^9, 3.8273571406931243`*^9}, {3.8274456398012085`*^9, 
   3.827445643780323*^9}, {3.836352966082816*^9, 3.8363530996401267`*^9}, {
   3.8363532535102997`*^9, 3.836353284556481*^9}, {3.836353547293006*^9, 
   3.8363535725038376`*^9}, {3.8363536409995346`*^9, 3.836353649118433*^9}, {
   3.8417131875519915`*^9, 3.8417132402338915`*^9}, {3.8417132995114355`*^9, 
   3.8417133121898704`*^9}, 3.841722462608389*^9, {3.8417225616354647`*^9, 
   3.84172256171303*^9}, 3.842477007141875*^9, {3.8424772347504435`*^9, 
   3.842477299233326*^9}, {3.842484046912518*^9, 3.8424840485766945`*^9}, 
   3.842484236463565*^9, {3.8424842993151207`*^9, 3.8424843100493374`*^9}, {
   3.8424845215004606`*^9, 3.8424845227434306`*^9}, {3.8424846980133915`*^9, 
   3.8424846996616116`*^9}, {3.842484755579807*^9, 3.8424847846142583`*^9}, 
   3.8424853980883236`*^9, {3.842485437960017*^9, 3.842485439667288*^9}, 
   3.8424871782621965`*^9, 3.842487228440769*^9, {3.8424872891826315`*^9, 
   3.84248731121214*^9}, 3.843176682330936*^9, 3.843178233895215*^9, {
   3.8431784111135745`*^9, 3.8431785051438804`*^9}, {3.8431821765852118`*^9, 
   3.8431821814197545`*^9}, {3.8431824388148823`*^9, 3.843182442722721*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d1433650-efdf-41cc-bc8f-b9e099560a62"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Gamma]LMs$$ = 
    0.01, $CellContext`\[Gamma]MRs$$ = 0.01, $CellContext`\[Omega]L$$ = 
    2.1, $CellContext`\[Omega]M$$ = 1, $CellContext`\[Omega]R$$ = 0.9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item["Frequencies", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]L$$], 2.1}, 0, 3}, {{
       Hold[$CellContext`\[Omega]M$$], 1}, 0, 3}, {{
       Hold[$CellContext`\[Omega]R$$], 0.9}, 0, 3}, {
      Hold[
       Item["Interactions", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Gamma]LMs$$], 0.01}, 0, 0.3}, {{
       Hold[$CellContext`\[Gamma]MRs$$], 0.01}, 0, 0.3}}, Typeset`size$$ = {
    1252., {834., 268.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Gamma]LMs$$ = 
        0.01, $CellContext`\[Gamma]MRs$$ = 0.01, $CellContext`\[Omega]L$$ = 
        2.1, $CellContext`\[Omega]M$$ = 1, $CellContext`\[Omega]R$$ = 0.9}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`temp1$, $CellContext`temp2$}, $CellContext`temp1$ = 
         ReplaceAll[
           Table[
            $CellContext`Hsys0EVal[$CellContext`i], {$CellContext`i, 1, 12}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]L$$, 
             Subscript[$CellContext`\[Omega], 2] -> $CellContext`\[Omega]M$$, 
             Subscript[$CellContext`\[Omega], 
               3] -> $CellContext`\[Omega]R$$, $CellContext`unitassum}]]; \
$CellContext`temp2$ = ReplaceAll[
           Table[
            $CellContext`HsysEVal[$CellContext`i], {$CellContext`i, 1, 12}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]L$$, 
             Subscript[$CellContext`\[Omega], 2] -> $CellContext`\[Omega]M$$, 
             Subscript[$CellContext`\[Omega], 
               3] -> $CellContext`\[Omega]R$$, $CellContext`\[Gamma]LM -> \
$CellContext`\[Gamma]LMs$$, $CellContext`\[Gamma]MR -> \
$CellContext`\[Gamma]MRs$$, $CellContext`unitassum}]]; {
          
          Plot[$CellContext`temp1$, {$CellContext`t, 0, 2}, 
           PlotLegends -> {
            "|\!\(\*SubscriptBox[\(1\), \(BARE\)]\)> = |e2e>", 
             "|\!\(\*SubscriptBox[\(2\), \(BARE\)]\)> = |e2g>", 
             "|\!\(\*SubscriptBox[\(3\), \(BARE\)]\)> = |e1e>", 
             "|\!\(\*SubscriptBox[\(4\), \(BARE\)]\)> = |e1g>", 
             "|\!\(\*SubscriptBox[\(5\), \(BARE\)]\)> = |e0e>", 
             "|\!\(\*SubscriptBox[\(6\), \(BARE\)]\)> = |e0g>", 
             "|\!\(\*SubscriptBox[\(7\), \(BARE\)]\)> = |g2e>", 
             "|\!\(\*SubscriptBox[\(8\), \(BARE\)]\)> = |g2g>", 
             "|\!\(\*SubscriptBox[\(9\), \(BARE\)]\)> = |g1e>", 
             "|\!\(\*SubscriptBox[\(10\), \(BARE\)]\)> = |g1g>", 
             "|\!\(\*SubscriptBox[\(11\), \(BARE\)]\)> = |g0e>", 
             "|\!\(\*SubscriptBox[\(12\), \(BARE\)]\)> = |g0g>"}, 
           AxesLabel -> {None, "Energy"}, PlotRange -> {-3, 3}, 
           Ticks -> {None, Automatic}, ImageSize -> Large], 
          
          Plot[$CellContext`temp2$, {$CellContext`t, 0, 2}, 
           PlotLegends -> {
            "|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |e2e>", 
             "|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(5\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(6\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(7\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(8\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(9\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(10\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(11\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(12\), \(DRE\)]\)> = |g0g>"}, 
           AxesLabel -> {None, "Energy"}, PlotRange -> {-3, 3}, 
           Ticks -> {None, Automatic}, ImageSize -> Large]}], 
      "Specifications" :> {Delimiter, 
        Item[
        "Frequencies", Alignment -> Center], {{$CellContext`\[Omega]L$$, 2.1},
          0, 3}, {{$CellContext`\[Omega]M$$, 1}, 0, 
         3}, {{$CellContext`\[Omega]R$$, 0.9}, 0, 3}, Delimiter, 
        Item[
        "Interactions", Alignment -> 
         Center], {{$CellContext`\[Gamma]LMs$$, 0.01}, 0, 
         0.3}, {{$CellContext`\[Gamma]MRs$$, 0.01}, 0, 0.3}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{1319., {725., 734.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8424845235662565`*^9, {3.8424845768536663`*^9, 
   3.842484647364604*^9}, {3.8424846821201487`*^9, 3.842484700706637*^9}, 
   3.842484785242201*^9, 3.8424853995725946`*^9, 3.8424854401614037`*^9, {
   3.842485532742876*^9, 3.842485547623024*^9}, 3.842485649766801*^9, {
   3.8424857381944723`*^9, 3.8424857630244207`*^9}, {3.8424858399307003`*^9, 
   3.8424858649020977`*^9}, {3.842486496272894*^9, 3.8424865059554787`*^9}, 
   3.8424865491712313`*^9, {3.8424866022954965`*^9, 3.8424866279627867`*^9}, 
   3.8424866670974607`*^9, {3.8424868061751823`*^9, 3.8424870570944567`*^9}, {
   3.8424870959424233`*^9, 3.8424871288650208`*^9}, {3.8424871630746756`*^9, 
   3.8424871837000637`*^9}, {3.842487222908866*^9, 3.842487233489047*^9}, 
   3.842487313263069*^9, {3.842494374514057*^9, 3.8424943755880394`*^9}, 
   3.842494438610052*^9, 3.8425585567689047`*^9, 3.8425665219125957`*^9, 
   3.842573979260295*^9, 3.842576166018385*^9, 3.8426422207631073`*^9, 
   3.843178043511217*^9, {3.8431782241093144`*^9, 3.843178260146223*^9}, 
   3.8431783407238083`*^9, {3.8431783808396716`*^9, 3.843178382821248*^9}, {
   3.8431784833697524`*^9, 3.8431785204459295`*^9}, 3.8431785718084965`*^9, {
   3.8431824433266897`*^9, 3.843182466598118*^9}, 3.843261189622946*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"ca9562f6-0fbc-4f6c-8ba7-2eefab39c402"]
}, Open  ]],

Cell["\<\
The interaction Hamiltonian is in the weak regime, hence the energy levels \
are mostly unchanged by the interaction Hamiltonian. \
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827361083028102*^9, 3.8273611461071997`*^9}, {
   3.836361857382434*^9, 
   3.8363619266951475`*^9}},ExpressionUUID->"e6f9d14b-78ea-4859-bc0f-\
6b74263a718b"],

Cell["Density Matrix", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189719068160305`*^9, 
   3.818971912844532*^9}},ExpressionUUID->"ec0927c7-36bd-4c50-9237-\
8bcf452c40d9"],

Cell["In the combined system, the density matrix is 12\[Times]12.", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841714454572575*^9, 
   3.8417144752803106`*^9}},ExpressionUUID->"408dad37-17cd-4b58-b76f-\
f3253f54901b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]Matrix", "[", "t_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"ve", ",", "ho"}]], "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ve", ",", "1", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ho", ",", "1", ",", "12"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189719178661394`*^9, 3.818971971512575*^9}, {
   3.827380320898517*^9, 3.827380369807832*^9}, {3.8274705485346146`*^9, 
   3.827470548843895*^9}, 3.8304956926586123`*^9, {3.8363685138828783`*^9, 
   3.8363685141718903`*^9}, {3.841714478098386*^9, 3.841714479325901*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"ebb1d11f-dacf-457e-83e3-b522eae8b09b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818972011666029*^9, 3.8189720203164625`*^9}, 
   3.8273803530138335`*^9, 3.8304956936089582`*^9, {3.836368516518176*^9, 
   3.836368516830352*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"30f4a0fc-c29e-451f-8b0f-7638c484b44c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"5", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"6", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"7", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"8", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"9", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"10", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"11", ",", "12"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "4"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "5"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "6"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "7"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "8"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "9"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "10"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "11"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"12", ",", "12"}]], "[", "t", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8189720212851477`*^9, 3.8189813352428207`*^9, 
   3.8189816782989106`*^9, 3.819054785278103*^9, 3.81932037888659*^9, 
   3.821398231336958*^9, 3.8214913954605637`*^9, 3.821499023803048*^9, 
   3.8214995318577833`*^9, 3.821499820049381*^9, 3.827368250455928*^9, {
   3.827380346304126*^9, 3.8273803719024673`*^9}, 3.827383952073152*^9, 
   3.8274405853006134`*^9, 3.8274465526588087`*^9, 3.8274639307129545`*^9, 
   3.8274702016141725`*^9, 3.8274705505364323`*^9, 3.8275241913841662`*^9, 
   3.827783752562558*^9, 3.8304956985553226`*^9, 3.8304963022049356`*^9, 
   3.8305006592756567`*^9, 3.8305037829732866`*^9, 3.830563389714447*^9, 
   3.830813923592851*^9, 3.8308290852860174`*^9, 3.836354261645282*^9, 
   3.8363619927628384`*^9, 3.8363660670924034`*^9, 3.8363685175521336`*^9, 
   3.841714482586102*^9, 3.84178558657454*^9, 3.842493894637042*^9, 
   3.8424944390452957`*^9, 3.842558564129713*^9, 3.842566524570981*^9, 
   3.8425739798578377`*^9, 3.842576171046415*^9, 3.842642221366618*^9, 
   3.8431840367136374`*^9, 3.8432611903208885`*^9},
 CellLabel->
  "Out[32]//MatrixForm=",ExpressionUUID->"4e42e54a-644b-47be-9a65-\
15b4edc804d0"]
}, Open  ]],

Cell["Thermal interactions with the baths", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970880030694*^9, 3.818970898054384*^9}, {
   3.836260732913148*^9, 3.836260735135339*^9}, {3.841713820813396*^9, 
   3.841713829882421*^9}, {3.841714001819132*^9, 3.841714003700077*^9}, {
   3.8417140876939077`*^9, 3.841714091715563*^9}, {3.8417156013445435`*^9, 
   3.8417156072110753`*^9}},ExpressionUUID->"c892b235-b07a-4020-bcc2-\
6eca9464fe5e"],

Cell[TextData[{
 "The two corner two-level systems interact thermally with respective bosonic \
thermal baths ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "L"], TraditionalForm]],ExpressionUUID->
  "da7633d5-f4b4-4703-b78d-d3d341889fa0"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "R"], TraditionalForm]],ExpressionUUID->
  "f3d3c876-8370-4058-86d4-1f49c7ccf779"],
 " with temperatures ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "L"], TraditionalForm]],ExpressionUUID->
  "cce56ee7-b43a-4f92-b3d2-f57773c3845e"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "R"], TraditionalForm]],ExpressionUUID->
  "04306f16-2415-4237-a844-0d1bfaa2e9b3"],
 "."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189775325186715`*^9, 3.8189775822488546`*^9}, 
   3.818978580019899*^9, {3.841714017935651*^9, 3.841714046854662*^9}, {
   3.8417140995539265`*^9, 
   3.8417141011178083`*^9}},ExpressionUUID->"41e0e8e9-4d27-4a91-8a06-\
48fbfc98245f"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], "bath", "P"], " ", "=", " ", 
  RowBox[{"\[HBar]", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["\[Omega]", "k"], " ", 
     RowBox[{
      SubsuperscriptBox[
       OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}], 
     SubsuperscriptBox[
      OverscriptBox["a", "^"], "k", "P"]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141150360193`*^9, 
   3.8417141716313934`*^9}},ExpressionUUID->"d94e06c3-4ecf-43be-819d-\
111b5371e3d6"],

Cell["\<\
Interaction Hamiltonian between the thermal bath L or R with the two TLSs is \
modelled after the Spin-Boson model in the x-component\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274417844662666`*^9, 3.8274418215367575`*^9}, {
   3.8274432930406265`*^9, 
   3.8274433045814*^9}},ExpressionUUID->"608e341b-9ee7-476b-8e37-\
b481621397de"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], 
   RowBox[{"sys", "-", "bath"}], "P"], " ", "=", " ", 
  RowBox[{"\[HBar]", " ", 
   SubsuperscriptBox["\[Sigma]", "X", "P"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["g", "k"], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox["a", "^"], "k", "P"], "+", 
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}]}], 
      ")"}]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 
   3.8417159723872848`*^9}},ExpressionUUID->"e5bde381-93b7-41d5-9db9-\
e5ed3d057781"],

Cell["Note - Here, P = L, R (or in the simulations P = 1, 3)", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841716809398863*^9, 
   3.8417168421772227`*^9}},ExpressionUUID->"54ddb463-0eb1-4ecf-8764-\
88c05adc74fd"],

Cell[CellGroupData[{

Cell["Pauli matrices", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841716727741294*^9, 
   3.8417167337869635`*^9}},ExpressionUUID->"72385dd7-9d82-459f-9cda-\
67e8dfc26220"],

Cell["In z-base representation", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827440605243127*^9, 
   3.8274406316049337`*^9}},ExpressionUUID->"f4614c64-0ed1-4cea-88be-\
1a91779d653f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
|+z>=(1,0)
|-z>=(0,1)\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7625650301891313`*^9, 3.7625650615728874`*^9}, {
   3.772308297682048*^9, 3.7723083030028553`*^9}, 3.772310285749466*^9, {
   3.7745567872795906`*^9, 
   3.7745568033824034`*^9}},ExpressionUUID->"cc8702dc-7024-4407-b79e-\
089c00ab9780"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "axis_"], "[", 
    RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"axis", ",", "1"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", "1"},
         {"1", "0"}
        }], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"axis", ",", "2"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"-", "\[ImaginaryI]"}]},
         {"\[ImaginaryI]", "0"}
        }], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"axis", ",", "3"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1", "0"},
         {"0", 
          RowBox[{"-", "1"}]}
        }], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.761949611811145*^9, 3.7619496148729544`*^9}, {
   3.761950818122388*^9, 3.7619508224039326`*^9}, {3.762561106576414*^9, 
   3.762561110987118*^9}, {3.7625641369822435`*^9, 3.762564140459488*^9}, {
   3.7625642357469273`*^9, 3.7625642421145487`*^9}, {3.7625643733248587`*^9, 
   3.762564430704482*^9}, {3.76256540320552*^9, 3.7625654415409317`*^9}, {
   3.762566566897612*^9, 3.762566571498107*^9}, {3.762566834261737*^9, 
   3.7625668474893646`*^9}, {3.7625672266567564`*^9, 3.762567255563883*^9}, {
   3.7625673144277563`*^9, 3.7625673775391035`*^9}, {3.762568487805128*^9, 
   3.7625684897050467`*^9}, {3.7723078451333632`*^9, 
   3.7723078580118046`*^9}, {3.772308217501932*^9, 3.7723082190058746`*^9}, {
   3.772308292756543*^9, 3.7723082941887197`*^9}, {3.77231002002919*^9, 
   3.7723100530318623`*^9}, 3.772310285749466*^9, {3.7745567872795906`*^9, 
   3.774556803383401*^9}, {3.77550514253335*^9, 3.775505144183448*^9}, {
   3.8431691205361385`*^9, 3.8431691248086023`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"89d9ea27-56df-429f-acc2-7569b8eba157"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "1"], "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ve", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ho", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "2"], "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ve", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ho", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "3"], "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ve", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ho", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"MatrixForm", ",", "%", ",", "1"}], "]"}], " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7625675647053075`*^9, 3.76256765059167*^9}, {
   3.762567746254074*^9, 3.7625677506685915`*^9}, 3.762568492653244*^9, {
   3.7723078608537645`*^9, 3.772307889652068*^9}, 3.7723102857504635`*^9, {
   3.7745567872795906`*^9, 3.774556803383401*^9}, 3.802471133108018*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"3fc8d827-2adf-4d05-9c1b-d6de5989deae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->CompressedData["
1:eJwV0V1Ik3EYBfDN6bCUAsPF2MpNnGbaXnXJVlPp2ZZztUbtwlJUNJE0TZe5
LNFKkxlmBsGsbDUb8jYv+mCw0GSY6WSkQa2iIaU0U9D+zWFWVgY9uzj84Nyc
iyM8XqevYDIYDB3GPHc2GFe9BL32g3kgJGASj7EH0wjofo2mT6OHK6qeyNMJ
+D89pkszCGxfCRvJkBAIplDLmWh3feY3B9rXeUqZtJtAcfNtqhkd7OlObkHz
L+f4aHTlLqPcjn5+KHH/lRJQeS4VBGUEqNikIf4eAh/t68GQT4vD2kVyAr7S
yTVLFoFVe2vzMLoxZt3dlU1gPN42b0YLrVGuNRWBsaLrNtZ+ArLFnP4I9PnF
HtEh1OjY4j6P0tIp7iRqeBXcGdI7ytF8R2edqX/UeQQeFRs5fSil9pte5hPg
Vwbb+EdxX8c8EVtEYC6yUX66ikCurOBOPeoNcKRxDQRyrrqzBChzYEokRGei
a30qtOzMg44JtN4DPNc5AldiPtxaQh3qffoA+oPKvhEysq3dGbJpb2OKoJ2A
52bljkT0i3igSYkGRlrLc1HtW8esDp0Qti4fQek3Yp4eNXCvaWvQrvjCDV/R
2s2MrK2d+I+MZQo5XlNNc9HXGn8qD+W1DKllaPgLo8WBuubTwp+hJxd+TivN
2EdT/Wq0ZFPvPQ0qGecqLlgJJCXQM1Y0WXfM9buPANvX8S/kGntVy72Pv+xa
pLahDe+j3glQiyJiQYiWRCQkKlDFMMt5wEZA7q0rM6D/AXKRNM8=
  "],
 CellLabel->"Out[35]=",ExpressionUUID->"2300a300-0a8f-4839-b36e-8f15c2345e55"]
}, Open  ]],

Cell[CellGroupData[{

Cell["In compound system representation", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.7619495192838044`*^9, 3.7619495288103085`*^9}, {
   3.762561089384513*^9, 3.762561090154118*^9}, {3.7625627852721615`*^9, 
   3.7625627984978285`*^9}, {3.762562828880328*^9, 3.762562829297471*^9}, 
   3.7723103071816144`*^9, {3.7741460906221986`*^9, 3.7741460938705306`*^9}, {
   3.7745567872795906`*^9, 3.7745568033824034`*^9}, {3.7745756021655793`*^9, 
   3.774575613581605*^9}, 3.775532496987141*^9, 
   3.8274406271048994`*^9},ExpressionUUID->"72eaf14e-c094-444c-b5bf-\
08f8c48017fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", 
     RowBox[{"P_", ",", "axis_"}]], "[", 
    RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"P", ",", "1"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Sigma]", "axis"], "[", 
        RowBox[{
         RowBox[{"EmapL", "[", "ve", "]"}], ",", 
         RowBox[{"EmapL", "[", "ho", "]"}]}], "]"}], 
       RowBox[{"Id", "[", 
        RowBox[{
         RowBox[{"EmapM", "[", "ve", "]"}], ",", 
         RowBox[{"EmapM", "[", "ho", "]"}]}], "]"}], 
       RowBox[{"Id", "[", 
        RowBox[{
         RowBox[{"EmapR", "[", "ve", "]"}], ",", 
         RowBox[{"EmapR", "[", "ho", "]"}]}], "]"}]}], ")"}]}], "+", "\n", 
    RowBox[{
     TemplateBox[{
       RowBox[{"P", ",", "2"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Id", "[", 
        RowBox[{
         RowBox[{"EmapL", "[", "ve", "]"}], ",", 
         RowBox[{"EmapL", "[", "ho", "]"}]}], "]"}], 
       RowBox[{"Id", " ", "[", 
        RowBox[{
         RowBox[{"EmapM", "[", "ve", "]"}], ",", 
         RowBox[{"EmapM", "[", "ho", "]"}]}], "]"}], 
       RowBox[{
        SubscriptBox["\[Sigma]", "axis"], "[", 
        RowBox[{
         RowBox[{"EmapR", "[", "ve", "]"}], ",", 
         RowBox[{"EmapR", "[", "ho", "]"}]}], "]"}]}], ")"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]Matrix", 
   RowBox[{"P_", ",", "axis_"}]], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", 
      RowBox[{"P", ",", "axis"}]], "[", 
     RowBox[{"ve", ",", "ho"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ve", ",", "1", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ho", ",", "1", ",", "12"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]PMatrix", "P_"], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Sigma]Matrix", 
      RowBox[{"P", ",", "1"}]], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]Matrix", 
       RowBox[{"P", ",", "2"}]]}]}], ")"}]}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]MMatrix", "P_"], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Sigma]Matrix", 
      RowBox[{"P", ",", "1"}]], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]Matrix", 
       RowBox[{"P", ",", "2"}]]}]}], ")"}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7745740661766872`*^9, 3.7745741489408503`*^9}, {
   3.7745741828329115`*^9, 3.7745743120542574`*^9}, {3.774574530062931*^9, 
   3.7745745413606014`*^9}, {3.7745756544948835`*^9, 3.774575659239529*^9}, 
   3.774575774678233*^9, {3.774577387388764*^9, 3.7745773949035144`*^9}, 
   3.775532496987141*^9, {3.775532849464467*^9, 3.775532969263632*^9}, {
   3.8189776718308*^9, 3.8189776964386735`*^9}, {3.818977730687642*^9, 
   3.8189777547828054`*^9}, {3.818977794273266*^9, 3.8189778042371387`*^9}, {
   3.827380491444672*^9, 3.827380507530136*^9}, 3.827380556361558*^9, {
   3.8417168549850054`*^9, 3.841716874964943*^9}, {3.8417169060680447`*^9, 
   3.8417169546166534`*^9}, 3.842563052580039*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"41e18cd7-c025-46fe-87dd-d878f1ec0ca7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    SubscriptBox["\[Sigma]Matrix", 
     RowBox[{"1", ",", "1"}]], "]"}], ",", 
   RowBox[{"MatrixForm", "[", 
    SubscriptBox["\[Sigma]Matrix", 
     RowBox[{"2", ",", "1"}]], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273805110202456`*^9, 3.8273805283143253`*^9}, 
   3.827452102300601*^9, 3.841716965139845*^9, 3.8425630477604933`*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"2ced1de6-58e6-4715-9ef4-b0b8416d2be7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1"},
       {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841716961793791*^9, 3.8417169660225396`*^9}, 
   3.841785591442412*^9, 3.84249393590446*^9, 3.842494444342275*^9, 
   3.8425585703828554`*^9, 3.8425630544698944`*^9, 3.84256652998244*^9, 
   3.8425739845506325`*^9, 3.8425761763652964`*^9, 3.84264222528338*^9, 
   3.8431840421403785`*^9, 3.843261195598426*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"faaab86f-dcd6-4c50-8ec7-efc12e95bf91"]
}, Open  ]],

Cell["System-bath interactions", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836362394533554*^9, 3.8363624006880302`*^9}, {
   3.8420461505527277`*^9, 3.84204615401795*^9}, {3.8420463314039063`*^9, 
   3.8420463402380047`*^9}},ExpressionUUID->"7a294b1e-9022-4698-a77b-\
7a2ff2fdddda"],

Cell[TextData[{
 "The two two-level systems interact thermally with respective bosonic \
thermal baths ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "L"], TraditionalForm]],ExpressionUUID->
  "86082337-f187-41dd-8454-60a9ed237c42"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "R"], TraditionalForm]],ExpressionUUID->
  "609bc0af-db10-495a-bb74-e67330f4c80f"],
 " with temperatures ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "L"], TraditionalForm]],ExpressionUUID->
  "9cde23f9-35d9-4996-9c04-9e6930c13de0"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "R"], TraditionalForm]],ExpressionUUID->
  "e6af4d23-9158-41c2-b534-39e34399ed16"],
 "."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189775325186715`*^9, 3.8189775822488546`*^9}, 
   3.818978580019899*^9, {3.841714017935651*^9, 3.841714046854662*^9}, {
   3.8417140995539265`*^9, 3.8417141011178083`*^9}, {3.842046256149755*^9, 
   3.842046258268094*^9}},ExpressionUUID->"99ac85cd-3fff-4404-8222-\
fa26c6729724"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], "bath", "P"], " ", "=", " ", 
  RowBox[{"\[HBar]", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["\[Omega]", "k"], " ", 
     RowBox[{
      SubsuperscriptBox[
       OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}], 
     SubsuperscriptBox[
      OverscriptBox["a", "^"], "k", "P"]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141150360193`*^9, 
   3.8417141716313934`*^9}},ExpressionUUID->"7501b610-2267-4c05-a130-\
39be7dd16ee1"],

Cell["\<\
Interaction Hamiltonian between the thermal bath L or R with the two TLSs is \
modelled after the Spin-Boson model in the x-component\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274417844662666`*^9, 3.8274418215367575`*^9}, {
   3.8274432930406265`*^9, 
   3.8274433045814*^9}},ExpressionUUID->"beec2ea7-4535-4d89-80ef-\
f0fef53c8e95"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["H", 
   RowBox[{"TLS", "-", "bath"}], "P"], "=", 
  RowBox[{"\[HBar]", " ", 
   SubsuperscriptBox["\[Sigma]", "X", "P"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["g", "k"], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["a", "k", "P"], "+", 
       RowBox[{
        SubsuperscriptBox["a", "k", "P"], "\[ConjugateTranspose]"}]}], 
      ")"}]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 
   3.827441921166237*^9}},ExpressionUUID->"9ebdc39e-500b-4ac0-b483-\
269cb5ee9bd6"],

Cell["\<\
To get the Lindbladian operators, we use equation (15) of Optically \
Controlled Quantum Thermal Gate paper.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818978436415753*^9, 3.8189784881853943`*^9}, {
   3.8189785602256045`*^9, 3.81897856161137*^9}, {3.818978732987817*^9, 
   3.8189787759978113`*^9}, {3.8189792405488653`*^9, 
   3.8189792667341595`*^9}, {3.818979391173807*^9, 3.8189794854517174`*^9}, {
   3.827441967136815*^9, 
   3.8274419702361927`*^9}},ExpressionUUID->"23a678ee-376c-4906-9038-\
d144cce4f2a6"],

Cell["\<\
The inter-TLS interaction Hamiltonian is supposed to be in the weak regime. \
The energy eigensystem is minimally affected by the interaction.
This means that it is enough to model the thermal interactions in the bare \
eigensystem of only the individual TLS Hamiltonians. \
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8363624098248243`*^9, 3.8363624537953653`*^9}, {
   3.8363625008559055`*^9, 
   3.836362585287011*^9}},ExpressionUUID->"f641c1b7-3a42-474b-a31b-\
2ebcdbfc61d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hsys0EVal", "[", "i", "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"Hsys0EVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570111683946`*^9, 3.8273570344061985`*^9}, {
   3.8273571723112164`*^9, 3.8273572333769093`*^9}, 3.8273816366129203`*^9, {
   3.842046106435792*^9, 3.8420461126554775`*^9}, {3.842494113853383*^9, 
   3.842494113910452*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"04193726-ba82-4a1a-b18b-efa8270ef006"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}], "-", 
        SubscriptBox["\[Omega]", "3"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8273816373418074`*^9, 3.8273828310731544`*^9, 
   3.8274404788548107`*^9, 3.827445797559062*^9, 3.8274639044090834`*^9, 
   3.8274701851115713`*^9, 3.8275241771369457`*^9, 3.827783720950178*^9, 
   3.8304950485396767`*^9, 3.830496252718689*^9, 3.8305006465841665`*^9, 
   3.8305037705920706`*^9, 3.8305633697435384`*^9, 3.8308139126268735`*^9, 
   3.8308290085634346`*^9, 3.836354245754506*^9, 3.836362593992264*^9, 
   3.836366080698495*^9, 3.842293650799239*^9, 3.842323697750229*^9, 
   3.842384716709602*^9, 3.8423992230944166`*^9, 3.842470955499529*^9, {
   3.8424941065866413`*^9, 3.842494117854893*^9}, 3.8424944487788734`*^9, 
   3.8425585842478905`*^9, 3.8425630573196974`*^9, 3.842566536603165*^9, 
   3.842573990429536*^9, 3.842576181684777*^9, 3.842642230560046*^9, 
   3.843184045115571*^9, 3.8432612035068684`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"313d3347-84d3-4ecb-a0a3-094825179a55"]
}, Open  ]],

Cell["Calculating positive transition frequencies", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774569754350487*^9, 3.774569796526355*^9}, {
   3.7747434510291615`*^9, 3.7747434591162663`*^9}, 3.7755343075745163`*^9, {
   3.8274489222832007`*^9, 
   3.82744892998925*^9}},ExpressionUUID->"66f17df7-53d0-4d8a-a9d7-\
6e3ec18917c5"],

Cell["\<\
We work under assumption that energy levels are minimally affected by the \
interaction term \[Gamma].\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842046062049185*^9, 
   3.842046089523884*^9}},ExpressionUUID->"0e8a3bfe-f924-466f-b3fd-\
b46f05b082c0"],

Cell["Assumptions on energy levels", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274491954839435`*^9, 
   3.8274492151759033`*^9}},ExpressionUUID->"167ac6fd-5762-4375-9ac2-\
d6658663baeb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", "2"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", "0.61"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "3"], "\[Rule]", "0.1"}], ",", 
     RowBox[{"\[Gamma]LM", "\[Rule]", "0.02"}], ",", 
     RowBox[{"\[Gamma]MR", "\[Rule]", "0.03"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274492190437794`*^9, 3.8274492771114855`*^9}, {
   3.827449471116542*^9, 3.827449494022003*^9}, {3.8274495381153784`*^9, 
   3.827449543661744*^9}, {3.8363626498342857`*^9, 3.8363626535448246`*^9}, {
   3.8424941659165373`*^9, 3.8424941871217012`*^9}, {3.842494631378295*^9, 
   3.8424946335291185`*^9}, 3.842495010002046*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"fada4882-0c08-4b9c-8bdc-ae1399a2f91a"],

Cell[CellGroupData[{

Cell["Transition frequencies,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774565082328415*^9, 3.7745650874282675`*^9}, 
   3.775534307575541*^9, 
   3.7911636580454736`*^9},ExpressionUUID->"fc9e3fbf-d381-4682-b93a-\
b6f1b1c91286"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hsys0EVal", "[", "m", "]"}], "-", 
      RowBox[{"Hsys0EVal", "[", "n", "]"}]}], ")"}], "/", "\[HBar]"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7745647255170813`*^9, 3.7745648518231378`*^9}, {
   3.774565032268879*^9, 3.7745650762769613`*^9}, {3.774565111931733*^9, 
   3.774565126813331*^9}, 3.775534307575541*^9, {3.82744899823036*^9, 
   3.8274489994631796`*^9}, {3.8274491164235506`*^9, 
   3.8274491199041696`*^9}, {3.8363626619986544`*^9, 
   3.8363626796307635`*^9}, {3.842045939117073*^9, 3.84204594314952*^9}, {
   3.8420460992607865`*^9, 3.8420461006811457`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"d7437b97-5711-4844-a301-4af545ae371a"],

Cell["Unique and positive transition frequencies,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7745651339035754`*^9, 3.77456514554727*^9}, 
   3.775534307575541*^9, 
   3.7911636590897093`*^9},ExpressionUUID->"704d33cf-43a3-4b1d-8347-\
d14488739ceb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Omega]", "[", "i", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"temp1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[Omega]", "[", 
           RowBox[{"m", ",", "n"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"m", "+", "1"}], ",", "12"}], "}"}]}], "]"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"temp2", "=", 
       RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
      RowBox[{"temp3", "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Boole", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"temp2", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                  "]"}], "]"}], ",", 
                RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
             ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
         ",", "temp2"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"temp1", " ", "temp3"}], ",", "0"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], "\n", "]"}]}]}], "\n", 
 RowBox[{"\[Omega]size", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "12"}], "}"}]}], "]"}], "]"}]}], ";",
      "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Dimensions", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"temp1", " ", "temp3"}], ",", "0"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]plus", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp0", ",", "temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HsysEVal", "[", "m", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "12"}], "}"}]}], "]"}], "]"}]}], ";",
      "\n", 
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "12"}], "}"}]}], "]"}], "]"}]}], ";",
      "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"temp0", " ", "temp3"}], ",", "0"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]minus", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp0", ",", "temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HsysEVal", "[", "m", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "12"}], "}"}]}], "]"}], "]"}]}], ";",
      "\n", 
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "12"}], "}"}]}], "]"}], "]"}]}], ";",
      "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"temp0", " ", "temp3"}], ",", "0"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "\n", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827449363373305*^9, {3.827449406092229*^9, 
   3.8274494484857626`*^9}, {3.8274495135502515`*^9, 
   3.8274495167132015`*^9}, {3.827449552536069*^9, 3.8274496733456354`*^9}, {
   3.8274497034224324`*^9, 3.827449785125492*^9}, {3.836362686990432*^9, 
   3.836362687762799*^9}, {3.842045946512662*^9, 3.8420459478523493`*^9}, {
   3.842494202167737*^9, 3.842494203482559*^9}, {3.8424943179041557`*^9, 
   3.842494328508664*^9}, {3.8425849227335167`*^9, 3.8425849241933985`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"81668e02-c4ef-4850-b36e-7b30023cf5d2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"\[Omega]", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], 
  "]"}], "\n", "\[Omega]size"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774657080254648*^9, 3.7746570823714533`*^9}, {
   3.7753415910820603`*^9, 3.7753415920351963`*^9}, 3.775534307575541*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"88ab12be-ebb8-40c9-821d-5ba94b0311fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["\[Omega]", "3"], ",", 
   SubscriptBox["\[Omega]", "2"], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "2"], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{"2", " ", 
    SubscriptBox["\[Omega]", "2"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   SubscriptBox["\[Omega]", "1"], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    SubscriptBox["\[Omega]", "2"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    SubscriptBox["\[Omega]", "2"], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "2"], "-", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}], "-", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    SubscriptBox["\[Omega]", "2"], "-", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "+", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}], "-", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    SubscriptBox["\[Omega]", "2"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    SubscriptBox["\[Omega]", "2"], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    SubscriptBox["\[Omega]", "2"], "-", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}], "+", 
    SubscriptBox["\[Omega]", "3"]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "-", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Omega]", "2"]}], "-", 
    SubscriptBox["\[Omega]", "3"]}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7746570832865405`*^9, 3.774657217744459*^9, 
   3.7746576459998302`*^9, 3.774657998875121*^9, 3.7746601565797353`*^9, {
   3.774669776959401*^9, 3.7746697844692135`*^9}, {3.774669849884226*^9, 
   3.774669859868434*^9}, 3.7746698907542763`*^9, 3.7746699714173985`*^9, 
   3.7747486329130263`*^9, 3.7747525097806535`*^9, {3.775341585480019*^9, 
   3.7753415960056915`*^9}, 3.7753460747433414`*^9, 3.775346149455849*^9, 
   3.775427383309436*^9, 3.77544309487958*^9, 3.775505166483349*^9, 
   3.775515884832004*^9, 3.775533591010663*^9, 3.775534307576539*^9, 
   3.775534363803443*^9, 3.7836391660645885`*^9, 3.7837091069538126`*^9, 
   3.7839088165467463`*^9, 3.7845087576291857`*^9, 3.784945559431264*^9, 
   3.785201532546053*^9, 3.7854397931523666`*^9, 3.7856137203968735`*^9, 
   3.7856157146187534`*^9, 3.785701085745713*^9, 3.7857042371805305`*^9, 
   3.787447886926455*^9, 3.7879487652473993`*^9, 3.788039857530172*^9, 
   3.7880400886432953`*^9, 3.7891062253337755`*^9, 3.7898751518760843`*^9, 
   3.7899376554534836`*^9, 3.791162443033171*^9, 3.79425751361483*^9, 
   3.7942838751602583`*^9, 3.8274497998492594`*^9, 3.8274639600422525`*^9, 
   3.8274702139301467`*^9, 3.827470562139577*^9, 3.827524214788655*^9, 
   3.8277837671592445`*^9, 3.830495745671785*^9, 3.8304963150760603`*^9, 
   3.8305006596080904`*^9, 3.830503783327422*^9, 3.8305633934357724`*^9, 
   3.8308139239508424`*^9, 3.8308291150161023`*^9, 3.8363626916815414`*^9, 
   3.836366077843236*^9, 3.842045908208358*^9, 3.842045950389944*^9, 
   3.842046309955658*^9, 3.842293657017711*^9, 3.842323703188093*^9, 
   3.8423847214298315`*^9, 3.842399229821943*^9, 3.8424709601732655`*^9, 
   3.842494341418671*^9, 3.8424943952903166`*^9, 3.8424944639328527`*^9, 
   3.8424946476807327`*^9, 3.842495026179578*^9, 3.8425585990681815`*^9, 
   3.8425630704999104`*^9, 3.8425665521944995`*^9, 3.8425739993521423`*^9, 
   3.842576190700368*^9, {3.842584941269847*^9, 3.842584943081853*^9}, 
   3.842642239724616*^9, 3.8431840599280252`*^9, 3.8432612128344297`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"6eef152d-62c0-4eaf-b3d2-279b101b64ea"],

Cell[BoxData["22"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7746570832865405`*^9, 3.774657217744459*^9, 
   3.7746576459998302`*^9, 3.774657998875121*^9, 3.7746601565797353`*^9, {
   3.774669776959401*^9, 3.7746697844692135`*^9}, {3.774669849884226*^9, 
   3.774669859868434*^9}, 3.7746698907542763`*^9, 3.7746699714173985`*^9, 
   3.7747486329130263`*^9, 3.7747525097806535`*^9, {3.775341585480019*^9, 
   3.7753415960056915`*^9}, 3.7753460747433414`*^9, 3.775346149455849*^9, 
   3.775427383309436*^9, 3.77544309487958*^9, 3.775505166483349*^9, 
   3.775515884832004*^9, 3.775533591010663*^9, 3.775534307576539*^9, 
   3.775534363803443*^9, 3.7836391660645885`*^9, 3.7837091069538126`*^9, 
   3.7839088165467463`*^9, 3.7845087576291857`*^9, 3.784945559431264*^9, 
   3.785201532546053*^9, 3.7854397931523666`*^9, 3.7856137203968735`*^9, 
   3.7856157146187534`*^9, 3.785701085745713*^9, 3.7857042371805305`*^9, 
   3.787447886926455*^9, 3.7879487652473993`*^9, 3.788039857530172*^9, 
   3.7880400886432953`*^9, 3.7891062253337755`*^9, 3.7898751518760843`*^9, 
   3.7899376554534836`*^9, 3.791162443033171*^9, 3.79425751361483*^9, 
   3.7942838751602583`*^9, 3.8274497998492594`*^9, 3.8274639600422525`*^9, 
   3.8274702139301467`*^9, 3.827470562139577*^9, 3.827524214788655*^9, 
   3.8277837671592445`*^9, 3.830495745671785*^9, 3.8304963150760603`*^9, 
   3.8305006596080904`*^9, 3.830503783327422*^9, 3.8305633934357724`*^9, 
   3.8308139239508424`*^9, 3.8308291150161023`*^9, 3.8363626916815414`*^9, 
   3.836366077843236*^9, 3.842045908208358*^9, 3.842045950389944*^9, 
   3.842046309955658*^9, 3.842293657017711*^9, 3.842323703188093*^9, 
   3.8423847214298315`*^9, 3.842399229821943*^9, 3.8424709601732655`*^9, 
   3.842494341418671*^9, 3.8424943952903166`*^9, 3.8424944639328527`*^9, 
   3.8424946476807327`*^9, 3.842495026179578*^9, 3.8425585990681815`*^9, 
   3.8425630704999104`*^9, 3.8425665521944995`*^9, 3.8425739993521423`*^9, 
   3.842576190700368*^9, {3.842584941269847*^9, 3.842584943081853*^9}, 
   3.842642239724616*^9, 3.8431840599280252`*^9, 3.8432612131527095`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"6f8b35bb-3a79-4374-9340-cdf2a22b6e98"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modelling thermal interactions", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836362394533554*^9, 3.8363624006880302`*^9}, {
   3.8420461505527277`*^9, 
   3.84204615401795*^9}},ExpressionUUID->"3aa884a4-c778-4801-9bee-\
8f93851cef10"],

Cell["Get projection matrices \[CapitalPi](\[Epsilon])", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827441992715474*^9, 
   3.827442011477885*^9}},ExpressionUUID->"d8905ed1-d650-491f-a405-\
a8519c9cb09b"]
}, Open  ]],

Cell["\<\
Assume the energy levels are such that all eigenvalues are non-degenerate. \
The projection matrix then reads,\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841792958850112*^9, 3.841792993420986*^9}, {
   3.841793077739547*^9, 
   3.8417930858274617`*^9}},ExpressionUUID->"fcb81107-9b78-4ac5-af38-\
484b98f0f3f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   OverscriptBox["\[CapitalPi]", "^"], "[", 
   SubscriptBox["\[Epsilon]", "i"], "]"}], " ", "=", " ", 
  RowBox[{"|", 
   RowBox[{"i", ">", "<", "i"}], "|"}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}},ExpressionUUID->"f3217fe0-091c-4cfb-acbf-\
f2ee58bc3318"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "i"], TraditionalForm]],ExpressionUUID->
  "dbdd3fb5-1f47-4476-af8a-76b1c28bb7fb"],
 " is the energy of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]],ExpressionUUID->
  "291870d4-487c-4f3c-9ed1-0aa0b5b06ccd"],
 " state (in the bare basis)."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8417930216480756`*^9, 3.841793064671081*^9}, {
   3.842046478536379*^9, 
   3.8420464790176*^9}},ExpressionUUID->"cf1c4b72-586b-436d-8975-\
14491f916b16"],

Cell[TextData[{
 "In the bare basis, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5133daf0-6039-4ece-85f3-336353969331"],
 " for a known state |i> is given by "
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842567484080084*^9, 3.842567503868227*^9}, {
   3.842567619488685*^9, 
   3.8425676372426834`*^9}},ExpressionUUID->"3146605b-3c97-456f-b4d0-\
5325520c7a3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"|", 
   RowBox[{"i", ">"}]}], " ", "=", " ", 
  RowBox[{
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["i", "L"], ">", "\[CircleTimes]"}], "|", 
    RowBox[{
     SubscriptBox["i", "M"], ">", "\[CircleTimes]"}], "|", 
    RowBox[{
     SubscriptBox["i", "R"], ">", "\n", "\n", 
     SubscriptBox["\[Epsilon]", "i"]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["E", "L"], "[", 
     SubscriptBox["i", "L"], "]"}], "+", 
    RowBox[{
     SubscriptBox["E", "M"], "[", 
     SubscriptBox["i", "M"], "]"}], "+", 
    RowBox[{
     SubscriptBox["E", "R"], "[", 
     SubscriptBox["i", "R"], "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.842567645737986*^9, 3.8425676471188154`*^9}, {
   3.8425677632002*^9, 3.8425678023483105`*^9}, {3.8425678750606623`*^9, 
   3.8425678785883446`*^9}, {3.8425681951296244`*^9, 
   3.8425682567221513`*^9}},ExpressionUUID->"b2ad4195-d4b6-4f95-a21f-\
d65859f137e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Pi]Matrix", "[", "i_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"i", ",", "j"}]},
      "KroneckerDeltaSeq"], 
     TemplateBox[{
       RowBox[{"i", ",", "k"}]},
      "KroneckerDeltaSeq"]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "12"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274420145690536`*^9, 3.8274420273854733`*^9}, {
   3.827442062554495*^9, 3.8274421131843348`*^9}, {3.8424977726059103`*^9, 
   3.842497820906114*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"a04d84a2-29fe-4da1-a633-5c7f4eec41f4"],

Cell[TextData[{
 "Get Lindblad operators ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "P"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"716b8943-1721-41a1-ab30-2be282edc063"]
}], "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827441992715474*^9, 3.827442011477885*^9}, {
   3.8274421690737653`*^9, 
   3.8274421826326165`*^9}},ExpressionUUID->"aece2b54-393a-4b29-a705-\
a0373a141bd3"],

Cell[TextData[{
 "From Eq. (15) of Optically Controlled Quantum Thermal Gate, we see that, \
for the above ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["H", "^"], 
    RowBox[{"sys", "-", "bath"}], "P"], TraditionalForm]],ExpressionUUID->
  "eb9b803c-2adc-41e9-9af1-d16874368131"],
 " interaction Hamiltonian, the Lindblad operators are given by,"
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.841793089508891*^9, 3.8417931092841153`*^9}, {
   3.8417931707470684`*^9, 
   3.8417932039458246`*^9}},ExpressionUUID->"d1f24bcb-a8af-49b7-8158-\
67cbd63e6865"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], " ", "=", " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", 
    RowBox[{
     RowBox[{"\[Epsilon]1", "-", "\[Epsilon]2"}], "=", 
     RowBox[{"\[HBar]", " ", "\[Omega]"}]}]], 
   RowBox[{
    RowBox[{
     OverscriptBox["\[CapitalPi]", "^"], "[", "\[Epsilon]2", "]"}], ".", 
    SubsuperscriptBox[
     OverscriptBox["\[Sigma]", "^"], "x", "P"], ".", 
    RowBox[{
     OverscriptBox["\[CapitalPi]", "^"], "[", "\[Epsilon]1", 
     "]"}]}]}]}], "\n", 
 RowBox[{"\t  ", 
  RowBox[{"=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "N"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "N"], 
     RowBox[{
      TemplateBox[{
        RowBox[{
          RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
          RowBox[{
            SubscriptBox["\[Epsilon]", "i"], "-", 
            SubscriptBox["\[Epsilon]", "j"]}]}]},
       "KroneckerDeltaSeq"], 
      RowBox[{
       RowBox[{
        OverscriptBox["\[CapitalPi]", "^"], "[", 
        SubscriptBox["\[Epsilon]", "j"], "]"}], ".", 
       SubsuperscriptBox[
        OverscriptBox["\[Sigma]", "^"], "x", "P"], ".", 
       RowBox[{
        OverscriptBox["\[CapitalPi]", "^"], "[", 
        SubscriptBox["\[Epsilon]", "i"], "]"}]}]}]}]}]}]}], "\n", 
 RowBox[{"\t  ", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "N"], 
       TemplateBox[{
         RowBox[{
           RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
           RowBox[{
             SubscriptBox["\[Epsilon]", "i"], "-", 
             SubscriptBox["\[Epsilon]", "j"]}]}]},
        "KroneckerDeltaSeq"]}]}], "|", 
     RowBox[{"j", ">", "<", "j"}], "|", 
     RowBox[{".", 
      SubsuperscriptBox[
       OverscriptBox["\[Sigma]", "^"], "x", "P"], "."}], "|", 
     RowBox[{"i", ">", "<", "i"}], "|"}], "\n", "\t  ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "N"], 
        TemplateBox[{
          RowBox[{
            RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
            RowBox[{
              SubscriptBox["\[Epsilon]", "i"], "-", 
              SubscriptBox["\[Epsilon]", "j"]}]}]},
         "KroneckerDeltaSeq"]}]}], "<", "j"}], "|", 
     SubsuperscriptBox[
      OverscriptBox["\[Sigma]", "^"], "x", "P"], "|", 
     RowBox[{"i", ">"}], " ", "|", 
     RowBox[{"j", ">", "<", "i"}], "|"}]}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.842567923688396*^9, 
   3.842567925219358*^9}},ExpressionUUID->"1302c405-113d-46d9-8b1e-\
704d452528a7"],

Cell[TextData[{
 "WLOG Consider the matrix element of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["\[Sigma]", "^"], "x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "68e240f7-f921-46a0-a9bd-1f4130a6a52f"],
 ","
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.84256881247073*^9, 3.842568838348892*^9}, {
   3.8425690862200003`*^9, 
   3.84256909167462*^9}},ExpressionUUID->"15c82146-91ea-4f2e-b9f5-\
75d4de63a6f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"<", "j"}], "|", 
   SubsuperscriptBox[
    OverscriptBox["\[Sigma]", "^"], "x", "1"], "|", 
   RowBox[{"i", ">"}]}], " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"<", 
      SubscriptBox["j", "L"]}], "|", 
     RowBox[{"\[CircleTimes]", 
      RowBox[{"<", 
       SubscriptBox["j", "M"]}]}], "|", 
     RowBox[{"\[CircleTimes]", 
      RowBox[{"<", 
       SubscriptBox["j", "R"]}]}], "|"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["\[Sigma]", "^"], "x", "L"], " ", "\[CircleTimes]", " ", 
     "I", " ", "\[CircleTimes]", " ", "I"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["i", "L"], ">", "\[CircleTimes]"}], "|", 
     RowBox[{
      SubscriptBox["i", "M"], ">", "\[CircleTimes]"}], "|", 
     RowBox[{
      SubscriptBox["i", "R"], ">"}]}], ")"}]}]}], "\n", 
 RowBox[{"\t\t  ", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{"<", 
     SubscriptBox["j", "L"]}], "|", 
    SubsuperscriptBox[
     OverscriptBox["\[Sigma]", "^"], "x", "L"], "|", 
    RowBox[{
     SubscriptBox["i", "L"], ">", " ", "<", 
     SubscriptBox["j", "M"]}], "|", 
    RowBox[{
     SubscriptBox["i", "M"], ">", " ", "<", 
     SubscriptBox["j", "R"]}], "|", 
    RowBox[{
     SubscriptBox["i", "R"], ">"}]}]}]}], "\n", 
 RowBox[{"\t\t  ", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "L"], "\[NotEqual]", 
       SubscriptBox["i", "L"]}], ",", "1", ",", "0"}], "]"}], " ", 
    TemplateBox[{
      RowBox[{
        SubscriptBox["j", "M"], ",", 
        SubscriptBox["i", "M"]}]},
     "KroneckerDeltaSeq"], 
    TemplateBox[{
      RowBox[{
        SubscriptBox["j", "R"], ",", 
        SubscriptBox["i", "R"]}]},
     "KroneckerDeltaSeq"]}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.8425679262886147`*^9, 3.84256807137091*^9}, {3.8425683721294994`*^9, 
   3.842568406096892*^9}, {3.842568460284038*^9, 3.8425684966271586`*^9}, {
   3.842568532180354*^9, 3.842568632392863*^9}, {3.8425686662965546`*^9, 
   3.8425687051948056`*^9}, {3.84256884817601*^9, 3.8425689041583643`*^9}, {
   3.842569103104925*^9, 3.842569103518963*^9}, 
   3.84257331802597*^9},ExpressionUUID->"87e49ffd-5263-4748-968b-\
cc0bd7b7a4fb"],

Cell["\<\
For the If function to be non-zero, the states of the subsystem L have to be \
different.
For the Kronecker deltas to be non-zero, the states of \[OpenCurlyQuote]other \
subsystems\[CloseCurlyQuote] M and R have to be equal. \
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425689135824327`*^9, 3.8425690383815684`*^9}, {
   3.8425691116422167`*^9, 3.842569113474081*^9}, {3.842569304981044*^9, 
   3.8425693673099546`*^9}, {3.842569863445417*^9, 3.8425698647974377`*^9}, {
   3.84257311402769*^9, 
   3.842573116964895*^9}},ExpressionUUID->"a0458861-9e58-4b7a-b524-\
55cfaaaae085"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["A", "^"], "1"], "[", "\[Omega]", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "N"], 
       TemplateBox[{
         RowBox[{
           RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
           RowBox[{
             SubscriptBox["\[Epsilon]", "i"], "-", 
             SubscriptBox["\[Epsilon]", "j"]}]}]},
        "KroneckerDeltaSeq"]}]}], "<", "j"}], "|", 
    SubsuperscriptBox[
     OverscriptBox["\[Sigma]", "^"], "x", "1"], "|", 
    RowBox[{"i", ">"}], " ", "|", 
    RowBox[{"j", ">", "<", "i"}], "|"}], "\n", "\t\t", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        SubscriptBox["i", "L"], ",", 
        SubscriptBox["i", "M"], ",", 
        SubscriptBox["i", "R"]}]], " ", 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        RowBox[{
         SubscriptBox["j", "L"], ",", 
         SubscriptBox["j", "M"], ",", 
         SubscriptBox["j", "R"]}]], " ", 
       RowBox[{
        TemplateBox[{
          RowBox[{
            RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
            RowBox[{
              SubscriptBox["\[Epsilon]", "i"], "-", 
              SubscriptBox["\[Epsilon]", "j"]}]}]},
         "KroneckerDeltaSeq"], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["j", "L"], "\[NotEqual]", 
           SubscriptBox["i", "L"]}], ",", "1", ",", "0"}], "]"}], " ", 
        TemplateBox[{
          RowBox[{
            SubscriptBox["j", "M"], ",", 
            SubscriptBox["i", "M"]}]},
         "KroneckerDeltaSeq"], 
        TemplateBox[{
          RowBox[{
            SubscriptBox["j", "R"], ",", 
            SubscriptBox["i", "R"]}]},
         "KroneckerDeltaSeq"]}]}]}], " ", "|", 
     RowBox[{"j", ">", "<", "i"}], "|"}], "\n", "\t\t", "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{
        SubscriptBox["i", "L"], ",", 
        SubscriptBox["i", "M"], ",", 
        SubscriptBox["i", "R"]}]], " ", 
      RowBox[{
       UnderscriptBox["\[Sum]", 
        SubscriptBox["j", "L"]], " ", 
       RowBox[{
        TemplateBox[{
          RowBox[{
            RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
            RowBox[{
              SubscriptBox["\[Epsilon]", "i"], "-", 
              SubscriptBox["\[Epsilon]", "j"]}]}]},
         "KroneckerDeltaSeq"], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["j", "L"], "\[NotEqual]", 
           SubscriptBox["i", "L"]}], ",", "1", ",", "0"}], "]"}]}]}]}], " ", 
     "|", 
     RowBox[{"j", ">", "<", "i"}], "|"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.842567923688396*^9, 3.842567925219358*^9}, {3.8425695412985783`*^9, 
   3.8425696369087405`*^9}, {3.842569766821134*^9, 3.8425697968135333`*^9}, {
   3.8425698289691772`*^9, 3.842569837869275*^9}, {3.842572050506217*^9, 
   3.842572135704867*^9}, {3.842572583687786*^9, 3.842572684713132*^9}, {
   3.842573127546549*^9, 
   3.8425731515370092`*^9}},ExpressionUUID->"ea4f523b-6546-45ba-973a-\
98df3b4d57af"],

Cell[TextData[{
 "Now consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[HBar]", " ", "\[Omega]"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Epsilon]", "i"], "-", 
     SubscriptBox["\[Epsilon]", "j"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d5b925c5-e2f7-4ecc-a2e3-49e203f72331"],
 ", under condition that M and R in i and j have the same state,"
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425689135824327`*^9, 3.8425690383815684`*^9}, {
   3.8425691116422167`*^9, 3.842569113474081*^9}, {3.842569304981044*^9, 
   3.8425693673099546`*^9}, {3.842569863445417*^9, 3.8425698647974377`*^9}, 
   3.842573115789014*^9, {3.8425732146276927`*^9, 
   3.8425732346204977`*^9}},ExpressionUUID->"22b9606e-9f31-43f5-8c1e-\
66e1cec84a10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[HBar]", " ", "\[Omega]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Epsilon]", "i"], "-", 
    SubscriptBox["\[Epsilon]", "j"]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["E", "L"], "[", 
        SubscriptBox["i", "L"], "]"}], "+", 
       RowBox[{
        SubscriptBox["E", "M"], "[", 
        SubscriptBox["i", "M"], "]"}], "+", 
       RowBox[{
        SubscriptBox["E", "R"], "[", 
        SubscriptBox["i", "R"], "]"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["E", "L"], "[", 
        SubscriptBox["j", "L"], "]"}], "+", 
       RowBox[{
        SubscriptBox["E", "M"], "[", 
        SubscriptBox["j", "M"], "]"}], "+", 
       RowBox[{
        SubscriptBox["E", "R"], "[", 
        SubscriptBox["j", "R"], "]"}]}], ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "L"], "[", 
      SubscriptBox["i", "L"], "]"}], "-", 
     RowBox[{
      SubscriptBox["E", "R"], "[", 
      SubscriptBox["j", "L"], "]"}]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.8425679262886147`*^9, 3.84256807137091*^9}, {3.8425683721294994`*^9, 
   3.842568406096892*^9}, {3.842568460284038*^9, 3.8425684966271586`*^9}, {
   3.842568532180354*^9, 3.842568632392863*^9}, {3.8425686662965546`*^9, 
   3.8425687051948056`*^9}, {3.8425689745217295`*^9, 3.842568974699298*^9}, {
   3.8425690485158215`*^9, 3.8425690717093573`*^9}, {3.8425691318053827`*^9, 
   3.842569177197302*^9}, {3.842569209298209*^9, 
   3.8425692112871637`*^9}},ExpressionUUID->"fa332d7f-0b7a-40ad-b08d-\
8ccd940e9fbe"],

Cell[TextData[{
 "Since \[Omega] is positive, that means ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["i", "L"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e1c44365-4bbf-4805-a751-61934c1f1a0b"],
 " has to be the excited state, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["j", "L"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "03848b92-30b4-47aa-9483-24f28945fdbd"],
 " has to be the ground state. For this, we get the simplified form"
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425691784457865`*^9, 
   3.842569240023411*^9}},ExpressionUUID->"e2c33991-86ad-4914-a471-\
d21e0b863128"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[HBar]", " ", "\[Omega]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["E", "L"], "[", 
      SubscriptBox["i", "L"], "]"}], "-", 
     RowBox[{
      SubscriptBox["E", "R"], "[", 
      SubscriptBox["j", "L"], "]"}]}], " ", "=", " ", 
    RowBox[{"\[HBar]", " ", 
     SubscriptBox["\[Omega]", "1"]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"<", "j"}], "|", 
   SubsuperscriptBox[
    OverscriptBox["\[Sigma]", "^"], "x", "1"], "|", 
   RowBox[{"i", ">"}]}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "L"], "\[NotEqual]", 
       SubscriptBox["i", "L"]}], ",", "1", ",", "0"}], "]"}], " ", 
    TemplateBox[{
      RowBox[{
        SubscriptBox["j", "M"], ",", 
        SubscriptBox["i", "M"]}]},
     "KroneckerDeltaSeq"], 
    TemplateBox[{
      RowBox[{
        SubscriptBox["j", "R"], ",", 
        SubscriptBox["i", "R"]}]},
     "KroneckerDeltaSeq"]}], " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "\n", "\t\t  ", "\n", "|", 
     RowBox[{"j", ">", "<", "i"}], "|"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["j", "L"], ">", "\[CircleTimes]"}], "|", 
        RowBox[{
         SubscriptBox["j", "M"], ">", "\[CircleTimes]"}], "|", 
        RowBox[{
         SubscriptBox["j", "R"], ">"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"<", 
         SubscriptBox["i", "L"]}], "|", 
        RowBox[{"\[CircleTimes]", 
         RowBox[{"<", 
          SubscriptBox["i", "M"]}]}], "|", 
        RowBox[{"\[CircleTimes]", 
         RowBox[{"<", 
          SubscriptBox["i", "R"]}]}], "|"}], ")"}]}], "\n", "\t\t ", "=", " ", 
     RowBox[{
      RowBox[{"|", 
       RowBox[{
        SubscriptBox["j", "L"], ">", "<", 
        SubscriptBox["i", "L"]}], "|", 
       RowBox[{"\[CircleTimes]", 
        RowBox[{"|", 
         RowBox[{
          SubscriptBox["i", "M"], ">", "<", 
          SubscriptBox["i", "M"]}], "|", 
         RowBox[{"\[CircleTimes]", 
          RowBox[{"|", 
           RowBox[{
            SubscriptBox["i", "R"], ">", "<", 
            SubscriptBox["i", "R"]}], "|"}]}]}]}]}], "\n", "\t\t  ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["S", "^"], "-"], "\[CircleTimes]"}], "|", 
       RowBox[{
        SubscriptBox["i", "M"], ">", "<", 
        SubscriptBox["i", "M"]}], "|", 
       RowBox[{"\[CircleTimes]", 
        RowBox[{"|", 
         RowBox[{
          SubscriptBox["i", "R"], ">", "<", 
          SubscriptBox["i", "R"]}], "|"}]}]}]}]}]}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.8425679262886147`*^9, 3.84256807137091*^9}, {3.8425683721294994`*^9, 
   3.842568406096892*^9}, {3.842568460284038*^9, 3.8425684966271586`*^9}, {
   3.842568532180354*^9, 3.842568632392863*^9}, {3.8425686662965546`*^9, 
   3.8425687051948056`*^9}, {3.8425689745217295`*^9, 3.842568974699298*^9}, {
   3.8425690485158215`*^9, 3.8425690717093573`*^9}, {3.8425691318053827`*^9, 
   3.842569139746049*^9}, {3.8425692488115807`*^9, 3.842569268134614*^9}, {
   3.842569390462898*^9, 3.842569397992315*^9}, {3.8425697313547645`*^9, 
   3.842569781168743*^9}, {3.8425728629064674`*^9, 3.8425728662439795`*^9}, {
   3.8425736457885323`*^9, 
   3.8425736522569017`*^9}},ExpressionUUID->"f1b3c663-48a9-4413-af42-\
99a9595850db"],

Cell[TextData[{
 "Now carry out the summation over ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["i", "L"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "987a8e13-5c60-4e1e-ac73-d87ea65c0abb"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["j", "L"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9b5ff321-e60a-4039-9abb-9801a541d231"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["i", "L"], "=", "e"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "48a45176-7b42-4df2-b27c-bbeec4278223"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["j", "L"], "=", "g"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ea4c8be5-92ad-4877-ad38-9320fb438c8c"],
 " being the only non-zero term"
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425735070864077`*^9, 
   3.842573568077349*^9}},ExpressionUUID->"b19f3704-6f03-4f9d-a6cc-\
eab0d1886017"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["A", "^"], "1"], "[", "\[Omega]", "]"}], " ", "=", 
  RowBox[{
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      SubscriptBox["i", "L"], ",", 
      SubscriptBox["i", "M"], ",", 
      SubscriptBox["i", "R"]}]], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      SubscriptBox["j", "L"]], " ", 
     RowBox[{
      TemplateBox[{
        RowBox[{
          RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
          RowBox[{
            SubscriptBox["\[Epsilon]", "i"], "-", 
            SubscriptBox["\[Epsilon]", "j"]}]}]},
       "KroneckerDeltaSeq"], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["j", "L"], "\[NotEqual]", 
         SubscriptBox["i", "L"]}], ",", "1", ",", "0"}], "]"}]}]}]}], " ", 
   "|", 
   RowBox[{"j", ">", "<", "i"}], "|"}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      SubscriptBox["i", "M"], ",", 
      SubscriptBox["i", "R"]}]], 
    RowBox[{
     TemplateBox[{
       RowBox[{
         RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
         RowBox[{"\[HBar]", " ", 
           SubscriptBox["\[Omega]", "1"]}]}]},
      "KroneckerDeltaSeq"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["S", "^"], "-"], "\[CircleTimes]"}], "|", 
       RowBox[{
        SubscriptBox["i", "M"], ">", "<", 
        SubscriptBox["i", "M"]}], "|", 
       RowBox[{"\[CircleTimes]", 
        RowBox[{"|", 
         RowBox[{
          SubscriptBox["i", "R"], ">", "<", 
          SubscriptBox["i", "R"]}], "|"}]}]}], ")"}]}]}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    TemplateBox[{
      RowBox[{
        RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
        RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}]}]},
     "KroneckerDeltaSeq"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["S", "^"], "-"], "\[CircleTimes]", "I", "\[CircleTimes]",
       "I"}], ")"}]}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\[Omega]", ",", 
        SubscriptBox["\[Omega]", "1"]}]},
     "KroneckerDeltaSeq"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["S", "^"], "-"], "\[CircleTimes]", "I", "\[CircleTimes]",
       "I"}], ")"}]}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.842567923688396*^9, 3.842567925219358*^9}, {3.8425695412985783`*^9, 
   3.8425696369087405`*^9}, {3.842569766821134*^9, 3.8425697968135333`*^9}, {
   3.8425698289691772`*^9, 3.842569837869275*^9}, {3.842572050506217*^9, 
   3.842572135704867*^9}, {3.842572583687786*^9, 3.842572684713132*^9}, {
   3.8425734325226393`*^9, 3.8425734747382154`*^9}, {3.8425735762523623`*^9, 
   3.842573631988563*^9}, {3.8425736624512978`*^9, 3.8425737037470045`*^9}, 
   3.842573762273863*^9, {3.842573854031736*^9, 
   3.842573857544134*^9}},ExpressionUUID->"35e91b25-fe10-48ee-bdfc-\
ad70244e56b3"],

Cell["\<\
Therefore, for \[Omega]>0 we have, assuming that the energy levels are NOT \
specifically DESIGNED to be difficult/pathological (see the bunch of \
inequalities in the code below)\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842569702375276*^9, 3.8425697116108656`*^9}, {
   3.8425724091198726`*^9, 3.842572521410598*^9}, {3.8425737078181524`*^9, 
   3.842573712632947*^9}},ExpressionUUID->"e2380069-7477-4a14-9153-\
ad7f0488237f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["A", "^"], "1"], "[", "\[Omega]", "]"}], " ", "=", " ", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\[Omega]", ",", 
       SubscriptBox["\[Omega]", "1"]}]},
    "KroneckerDeltaSeq"], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["S", "^"], "-"], "\[CircleTimes]", "I", "\[CircleTimes]", 
     "I"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["A", "^"], "2"], "[", "\[Omega]", "]"}], " ", "=", " ", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\[Omega]", ",", 
       SubscriptBox["\[Omega]", "3"]}]},
    "KroneckerDeltaSeq"], 
   RowBox[{"(", 
    RowBox[{"I", "\[CircleTimes]", "I", "\[CircleTimes]", 
     SubscriptBox[
      OverscriptBox["S", "^"], "-"]}], ")"}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.8424979690606194`*^9, 3.842498063361803*^9}, {
   3.842567923688396*^9, 3.842567925219358*^9}, {3.8425695412985783`*^9, 
   3.8425696369087405`*^9}, {3.842569766821134*^9, 3.8425697968135333`*^9}, {
   3.8425698289691772`*^9, 3.842569837869275*^9}, {3.842572050506217*^9, 
   3.842572135704867*^9}, {3.842572583687786*^9, 3.842572684713132*^9}, {
   3.8425734325226393`*^9, 3.8425734747382154`*^9}, {3.84257372639927*^9, 
   3.842573768584629*^9}, {3.84257386252361*^9, 
   3.842573867154999*^9}},ExpressionUUID->"9f10d803-57a5-417d-9803-\
e40c49769e18"],

Cell["\<\
Method 1 - Use some practical values that remove the pathological cases\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842573798554468*^9, 
   3.842573827769816*^9}},ExpressionUUID->"71e735a1-7b24-4e3b-9ccf-\
faf19577a0b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OneMatrix", "[", 
   RowBox[{"ve_", ",", "ho_", ",", "N_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"ve", ",", "i"}]},
      "KroneckerDeltaSeq"], 
     TemplateBox[{
       RowBox[{"ho", ",", "j"}]},
      "KroneckerDeltaSeq"]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "N"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "N"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842498163444949*^9, 3.842498254971034*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"5f878fce-3b97-43e7-8df9-01a2f0d2af8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["AMatrix", "P_"], "[", "\[Omega]s_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "12"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "12"], 
      RowBox[{
       TemplateBox[{
         RowBox[{"\[Omega]s", ",", 
           RowBox[{"\[Omega]", "[", 
             RowBox[{"i", ",", "j"}], "]"}]}]},
        "KroneckerDeltaSeq"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Sigma]Matrix", 
           RowBox[{"P", ",", "1"}]], "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i"}], "]"}], "]"}], 
         RowBox[{"OneMatrix", "[", 
          RowBox[{"j", ",", "i", ",", "12"}], "]"}]}], ")"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[Equal]", "10"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[Equal]", "1"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[Equal]", "0.1"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447383604288*^9, 3.8274474559086637`*^9}, {
   3.827447486792178*^9, 3.8274475313922033`*^9}, 3.827447564644823*^9, {
   3.8274476127406654`*^9, 3.827447613628663*^9}, {3.827447745693725*^9, 
   3.8274477546138983`*^9}, {3.827448398009839*^9, 3.8274484035134645`*^9}, {
   3.8274485220356593`*^9, 3.827448603217798*^9}, {3.8274491531457777`*^9, 
   3.827449157128235*^9}, {3.8274502185225525`*^9, 3.8274502310901656`*^9}, 
   3.827451030496842*^9, 3.830496137981284*^9, {3.8363647402459364`*^9, 
   3.8363647518622403`*^9}, 3.8363648285490203`*^9, {3.8363661321683736`*^9, 
   3.8363661614108124`*^9}, {3.8424981449391584`*^9, 
   3.8424981473791265`*^9}, {3.8424984265552907`*^9, 3.842498455495052*^9}, {
   3.842498526716837*^9, 3.8424985528641686`*^9}, {3.8424990970474944`*^9, 
   3.8424991955921736`*^9}, {3.842499802332163*^9, 3.8424998814634514`*^9}, {
   3.84249994999232*^9, 3.8424999533247657`*^9}, {3.842500045297559*^9, 
   3.8425000690549593`*^9}, {3.8425587135775967`*^9, 3.842558740990749*^9}, {
   3.8425588007498364`*^9, 3.842558809280291*^9}, {3.8425588510023527`*^9, 
   3.842558902655444*^9}, {3.842559007095138*^9, 3.8425590570301924`*^9}, {
   3.8425591534280214`*^9, 3.8425591983210697`*^9}, {3.842559547669374*^9, 
   3.8425595500605497`*^9}, {3.8425602371964397`*^9, 
   3.8425602539575787`*^9}, {3.842560672649811*^9, 3.8425608102919846`*^9}, {
   3.842561048927334*^9, 3.842561122210452*^9}, {3.84256116490421*^9, 
   3.8425613080081406`*^9}, {3.8425613522067676`*^9, 3.842561450219838*^9}, {
   3.8425618427413173`*^9, 3.8425619334999313`*^9}, 3.8425619670824027`*^9, {
   3.842562008235065*^9, 3.8425620888168063`*^9}, {3.8425621258719926`*^9, 
   3.8425622761564136`*^9}, {3.842562317502098*^9, 3.8425623193854156`*^9}, {
   3.842562481682311*^9, 3.8425624837438498`*^9}, {3.8425630855379367`*^9, 
   3.842563089965966*^9}, 3.8425664958035073`*^9, {3.842566747790965*^9, 
   3.8425668195403056`*^9}, {3.842566852963513*^9, 3.842566853459963*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"2707836b-98e1-45f3-9a0e-99e6d207fbec"],

Cell["Method 2 - List all the pathological cases", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842573798554468*^9, 3.8425738337574267`*^9}, {
   3.8425738803909044`*^9, 
   3.842573885381278*^9}},ExpressionUUID->"f8089b16-c8f4-4062-9483-\
40848f122731"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["AMatrix", "P_"], "[", "\[Omega]s_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "12"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "12"], 
      RowBox[{
       TemplateBox[{
         RowBox[{"\[Omega]s", ",", 
           RowBox[{"\[Omega]", "[", 
             RowBox[{"i", ",", "j"}], "]"}]}]},
        "KroneckerDeltaSeq"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Sigma]Matrix", 
           RowBox[{"P", ",", "1"}]], "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i"}], "]"}], "]"}], 
         RowBox[{"OneMatrix", "[", 
          RowBox[{"j", ",", "i", ",", "12"}], "]"}]}], ")"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "1"], ">", "0"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], ">", "0"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], ">", "0"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        SubscriptBox["\[Omega]", "2"]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        SubscriptBox["\[Omega]", "3"]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[NotEqual]", 
        SubscriptBox["\[Omega]", "3"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "2"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[NotEqual]", 
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[NotEqual]", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[NotEqual]", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[NotEqual]", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "+", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "+", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "+", 
         SubscriptBox["\[Omega]", "2"]}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "+", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "3"], "-", 
         SubscriptBox["\[Omega]", "2"]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "-", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "2"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "3"], "+", 
         SubscriptBox["\[Omega]", "1"]}]}], ",", 
       RowBox[{
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "2"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "-", 
         SubscriptBox["\[Omega]", "3"]}]}], ",", 
       RowBox[{
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "2"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "3"], "-", 
         SubscriptBox["\[Omega]", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"2", 
         SubscriptBox["\[Omega]", "3"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "+", 
         SubscriptBox["\[Omega]", "2"]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "3"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "-", 
         SubscriptBox["\[Omega]", "1"]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "3"]}], "\[NotEqual]", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "-", 
         SubscriptBox["\[Omega]", "2"]}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[NotEqual]", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "1"], "+", 
           SubscriptBox["\[Omega]", "2"]}], ")"}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[NotEqual]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "1"], "-", 
           SubscriptBox["\[Omega]", "2"]}], ")"}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "3"], "\[NotEqual]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "1"]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "+", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", " ", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[NotEqual]", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "3"], "-", " ", 
           SubscriptBox["\[Omega]", "2"]}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447383604288*^9, 3.8274474559086637`*^9}, {
   3.827447486792178*^9, 3.8274475313922033`*^9}, 3.827447564644823*^9, {
   3.8274476127406654`*^9, 3.827447613628663*^9}, {3.827447745693725*^9, 
   3.8274477546138983`*^9}, {3.827448398009839*^9, 3.8274484035134645`*^9}, {
   3.8274485220356593`*^9, 3.827448603217798*^9}, {3.8274491531457777`*^9, 
   3.827449157128235*^9}, {3.8274502185225525`*^9, 3.8274502310901656`*^9}, 
   3.827451030496842*^9, 3.830496137981284*^9, {3.8363647402459364`*^9, 
   3.8363647518622403`*^9}, 3.8363648285490203`*^9, {3.8363661321683736`*^9, 
   3.8363661614108124`*^9}, {3.8424981449391584`*^9, 
   3.8424981473791265`*^9}, {3.8424984265552907`*^9, 3.842498455495052*^9}, {
   3.842498526716837*^9, 3.8424985528641686`*^9}, {3.8424990970474944`*^9, 
   3.8424991955921736`*^9}, {3.842499802332163*^9, 3.8424998814634514`*^9}, {
   3.84249994999232*^9, 3.8424999533247657`*^9}, {3.842500045297559*^9, 
   3.8425000690549593`*^9}, {3.8425587135775967`*^9, 3.842558740990749*^9}, {
   3.8425588007498364`*^9, 3.842558809280291*^9}, {3.8425588510023527`*^9, 
   3.842558902655444*^9}, {3.842559007095138*^9, 3.8425590570301924`*^9}, {
   3.8425591534280214`*^9, 3.8425591983210697`*^9}, {3.842559547669374*^9, 
   3.8425595500605497`*^9}, {3.8425602371964397`*^9, 
   3.8425602539575787`*^9}, {3.842560672649811*^9, 3.8425608102919846`*^9}, {
   3.842561048927334*^9, 3.842561122210452*^9}, {3.84256116490421*^9, 
   3.8425613080081406`*^9}, {3.8425613522067676`*^9, 3.842561450219838*^9}, {
   3.8425618427413173`*^9, 3.8425619334999313`*^9}, 3.8425619670824027`*^9, {
   3.842562008235065*^9, 3.8425620888168063`*^9}, {3.8425621258719926`*^9, 
   3.8425622761564136`*^9}, {3.842562317502098*^9, 3.8425623193854156`*^9}, {
   3.842562481682311*^9, 3.8425624837438498`*^9}, {3.8425630855379367`*^9, 
   3.842563089965966*^9}, 3.8425664958035073`*^9, {3.8425668477968225`*^9, 
   3.842566848464428*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"c34cb650-8f0e-4c87-ab68-140ad14f5d5a"],

Cell[TextData[{
 "Lindbladian terms involve a summation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "P"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"76d19705-7f56-4546-a759-2330cd6229cb"],
 " terms for positive omega, and most turn out to be zero."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274488084157166`*^9, 3.827448841420456*^9}, {
   3.842573904262418*^9, 
   3.842573911242221*^9}},ExpressionUUID->"02c58f0f-81af-4a2c-ae26-\
824ca607ef4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{
      SubscriptBox["AMatrix", "P"], "[", 
      RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447576800543*^9, 3.8274475964034977`*^9}, {
   3.82744776797626*^9, 3.827447794739555*^9}, {3.8274478786050024`*^9, 
   3.827447886065844*^9}, {3.827448406849849*^9, 3.827448407794946*^9}, {
   3.8274499395118814`*^9, 3.8274499843284287`*^9}, {3.8274510410100517`*^9, 
   3.827451044456638*^9}, {3.8424987629718904`*^9, 3.84249876985966*^9}, {
   3.8424988168193245`*^9, 3.842498817286322*^9}, {3.8424988678766136`*^9, 
   3.8424988688408527`*^9}, {3.8425593203027787`*^9, 3.8425593232563334`*^9}, 
   3.8425596494868174`*^9, 3.842563571227479*^9, {3.8425640843677797`*^9, 
   3.8425641095055337`*^9}, {3.8425641408895645`*^9, 3.842564165099522*^9}, {
   3.8425643632893686`*^9, 3.8425644226320324`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"24363a42-b6da-4e7a-8ef4-063a21bd1649"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]},
     {
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447596938063*^9, 3.827447617478876*^9}, {
   3.8274477573863163`*^9, 3.827447795927826*^9}, 3.8274478865840263`*^9, 
   3.8274484087024994`*^9, {3.8274485324558773`*^9, 3.8274486058915515`*^9}, 
   3.827449168182578*^9, 3.827449985363634*^9, 3.8274510332497215`*^9, 
   3.827451791163619*^9, 3.827463987308707*^9, 3.8274702204306736`*^9, 
   3.8274705659082546`*^9, 3.827524225523307*^9, 3.8277837726930113`*^9, 
   3.830495778447919*^9, 3.8304963198564405`*^9, 3.8305006647140875`*^9, 
   3.830503788348037*^9, 3.8305634010475206`*^9, 3.8308139286986775`*^9, 
   3.830829123587221*^9, 3.83082920633357*^9, 3.8363542761289377`*^9, 
   3.836364757197459*^9, 3.8363648314023404`*^9, {3.8363661388502913`*^9, 
   3.836366164143461*^9}, 3.842046566497884*^9, 3.8422936619791994`*^9, 
   3.842323707657508*^9, 3.842384725469577*^9, 3.842399236863262*^9, 
   3.842470965034341*^9, 3.8424987825749793`*^9, 3.8424988475002184`*^9, 
   3.842498935835591*^9, 3.8424992823973656`*^9, 3.8425000266033287`*^9, 
   3.8425589823119726`*^9, 3.842559130809168*^9, 3.8425592678423014`*^9, 
   3.84255938971396*^9, 3.8425597164852877`*^9, 3.842559848178113*^9, 
   3.842560381658806*^9, 3.842560514151084*^9, 3.8425608820320797`*^9, 
   3.8425611338320017`*^9, 3.842562400174202*^9, 3.842562553552101*^9, 
   3.842563136857561*^9, 3.8425632715180826`*^9, 3.842563383743165*^9, {
   3.8425635553711977`*^9, 3.842563581614981*^9}, {3.8425640950684366`*^9, 
   3.842564174888955*^9}, 3.842564409665346*^9, 3.842564440825808*^9, 
   3.8425666925224953`*^9, 3.842566807469222*^9, 3.842566954635812*^9, 
   3.842574176886589*^9, 3.842576334801297*^9, 3.8426423574513426`*^9, 
   3.8431841749319506`*^9, 3.843261329378138*^9},
 CellLabel->
  "Out[54]//MatrixForm=",ExpressionUUID->"9ae18ea2-30bc-42da-8636-\
912d5704bb79"]
}, Open  ]],

Cell["Pre-calculated matrices under uniqueness assumption,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7747485430721874`*^9, 3.7747486015220118`*^9}, 
   3.775533202315653*^9, 
   3.7911637262799277`*^9},ExpressionUUID->"08795b87-bcca-4db5-b4c3-\
649cc555fac0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
            {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["AMatrix\[Omega]", "P_"], "[", "i_", "]"}], ":=", 
  RowBox[{"temp", "[", 
   RowBox[{"[", 
    RowBox[{"P", ",", "i"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425640299086466`*^9, 3.84256404290496*^9}, {
   3.842564233672125*^9, 3.8425642676721325`*^9}, {3.8425643201192703`*^9, 
   3.8425643274368753`*^9}, {3.8425644633672466`*^9, 3.8425645014265566`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"033a1471-f08d-495a-9483-3a672b4def9a"],

Cell["Non-zero Lindblad operators correspond to the frequencies,", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.843184219857147*^9, 
   3.843184238454234*^9}},ExpressionUUID->"9ef077e4-e1c4-46cb-91da-\
dd7937a8bb82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Omega]", "[", "6", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]", "[", "1", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.843184201096665*^9, 3.8431842164757633`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a80f1d88-9ff4-4ba3-a284-963615a48d3f"],

Cell[BoxData[
 SubscriptBox["\[Omega]", "1"]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8431842032720146`*^9, 3.843184217199862*^9}, 
   3.8432613295492935`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"6319354c-b89f-49a8-a66c-85c69ee9ce51"],

Cell[BoxData[
 SubscriptBox["\[Omega]", "3"]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8431842032720146`*^9, 3.843184217199862*^9}, 
   3.843261329554298*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"e2872438-8bb4-4428-b8dd-f9cdf0885849"]
}, Open  ]],

Cell["Calculate Lindbladian terms", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827448716127077*^9, 
   3.8274487405647154`*^9}},ExpressionUUID->"6b0f201b-7dc3-40da-b3b8-\
b17277d7bd6e"],

Cell[TextData[{
 "Linbladian for the ",
 StyleBox["Markovian",
  IgnoreSpellCheck->True],
 " quantum master equation, as given in Eq. (13) of Optically Controlled \
Quantum Thermal Gate"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740576122513866`*^9, 3.774057638699093*^9}, 
   3.7745571586798544`*^9, 3.775533202317648*^9, 3.791163731723366*^9, {
   3.841793821721712*^9, 
   3.84179383257395*^9}},ExpressionUUID->"d474b1ab-b4ea-4c88-8a01-\
4b3994dbd69b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[ScriptCapitalL]", "^"], "P"], "[", 
   OverscriptBox["\[Rho]", "^"], "]"}], " ", "=", " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", 
    RowBox[{"\[Omega]", ">", "0"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalJ]", "P"], "[", "\[Omega]", "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SubscriptBox["n", "P"], "[", "\[Omega]", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox[
           OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], 
         OverscriptBox["\[Rho]", "^"], 
         RowBox[{
          RowBox[{
           SubscriptBox[
            OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], 
          "\[ConjugateTranspose]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox[
               OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], 
             "\[ConjugateTranspose]"}], 
            RowBox[{
             SubscriptBox[
              OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}]}], ",", 
           OverscriptBox["\[Rho]", "^"]}], "}"}]}]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalJ]", "P"], "[", "\[Omega]", "]"}], " ", 
      RowBox[{
       SubscriptBox["n", "P"], "[", "\[Omega]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox[
            OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], 
          "\[ConjugateTranspose]"}], 
         OverscriptBox["\[Rho]", "^"], 
         RowBox[{
          SubscriptBox[
           OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox[
              OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], 
            RowBox[{
             RowBox[{
              SubscriptBox[
               OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], 
             "\[ConjugateTranspose]"}]}], ",", 
           OverscriptBox["\[Rho]", "^"]}], "}"}]}]}], ")"}]}]}], 
    ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["A", "^"], "P"], "[", "\[Omega]", "]"}], " ", "=", " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", 
    RowBox[{
     RowBox[{"\[Epsilon]1", "-", "\[Epsilon]2"}], "=", 
     RowBox[{"\[HBar]", " ", "\[Omega]"}]}]], 
   RowBox[{
    RowBox[{
     OverscriptBox["\[CapitalPi]", "^"], "[", "\[Epsilon]2", "]"}], ".", 
    SubsuperscriptBox[
     OverscriptBox["\[Sigma]", "^"], "x", "P"], ".", 
    RowBox[{
     OverscriptBox["\[CapitalPi]", "^"], "[", "\[Epsilon]1", 
     "]"}]}]}]}], "\n", 
 RowBox[{"\t  ", 
  RowBox[{"=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "N"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "N"], 
     RowBox[{
      TemplateBox[{
        RowBox[{
          RowBox[{"\[HBar]", " ", "\[Omega]"}], ",", 
          RowBox[{
            SubscriptBox["\[Epsilon]", "i"], "-", 
            SubscriptBox["\[Epsilon]", "j"]}]}]},
       "KroneckerDeltaSeq"], 
      RowBox[{
       RowBox[{
        OverscriptBox["\[CapitalPi]", "^"], "[", 
        SubscriptBox["\[Epsilon]", "j"], "]"}], ".", 
       SubsuperscriptBox[
        OverscriptBox["\[Sigma]", "^"], "x", "P"], ".", 
       RowBox[{
        OverscriptBox["\[CapitalPi]", "^"], "[", 
        SubscriptBox["\[Epsilon]", "i"], "]"}]}]}]}]}]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 3.827441921166237*^9}, {
   3.8417140586832924`*^9, 3.8417140593323774`*^9}, {3.8417141887840157`*^9, 
   3.8417141944866605`*^9}, {3.841715972182141*^9, 3.8417159723872848`*^9}, {
   3.8417929381004667`*^9, 3.8417929490455933`*^9}, {3.8417930020166655`*^9, 
   3.8417930197729893`*^9}, {3.8417931157558475`*^9, 3.841793157795603*^9}, {
   3.841793207398374*^9, 3.8417932427162247`*^9}, {3.841793278739525*^9, 
   3.8417934148401113`*^9}, {3.841793836230352*^9, 3.841793969704443*^9}, {
   3.8417942683353386`*^9, 3.841794334067767*^9}, {3.8418874567750435`*^9, 
   3.8418874598037086`*^9}, {3.841887529228235*^9, 
   3.841887575843514*^9}},ExpressionUUID->"f093259f-a47b-4c21-bf02-\
0300f25ab0d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["LinMatrix", "P_"], "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SubscriptBox["LinMatrix", "P"], "[", "\[Rho]", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "\[Omega]size"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "P"], "[", 
         RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "P"], "[", 
           RowBox[{"\[Omega]", "[", "i", "]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], ".", 
           "\[Rho]", ".", 
           RowBox[{
            RowBox[{
             SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], 
            "\[ConjugateTranspose]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], 
               "\[ConjugateTranspose]"}], ".", 
              RowBox[{
               SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], ".", 
              "\[Rho]"}], "+", 
             RowBox[{"\[Rho]", ".", 
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], 
               "\[ConjugateTranspose]"}], ".", 
              RowBox[{
               SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "P"], "[", 
         RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
        RowBox[{
         SubscriptBox["NBE", "P"], "[", 
         RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], 
            "\[ConjugateTranspose]"}], ".", "\[Rho]", ".", 
           RowBox[{
            SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], ".", 
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], 
               "\[ConjugateTranspose]"}], ".", "\[Rho]"}], "+", 
             RowBox[{"\[Rho]", ".", 
              RowBox[{
               SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], ".", 
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrix\[Omega]", "P"], "[", "i", "]"}], 
               "\[ConjugateTranspose]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818981081096347*^9, 3.8189812662067566`*^9}, {
   3.82746595223258*^9, 3.827465973729707*^9}, {3.8274660509068813`*^9, 
   3.827466117022167*^9}, {3.8274671774434347`*^9, 3.8274671887182264`*^9}, {
   3.8274704867997785`*^9, 3.8274704983336215`*^9}, {3.8275262636777563`*^9, 
   3.827526266547587*^9}, {3.827788603014654*^9, 3.82778860623514*^9}, {
   3.836368103717692*^9, 3.8363681487500076`*^9}, {3.836368202011377*^9, 
   3.8363682043900056`*^9}, {3.8422955944598866`*^9, 
   3.8422956022946396`*^9}, {3.842564653684414*^9, 3.8425647032281413`*^9}, {
   3.8425649818198013`*^9, 3.8425649848361053`*^9}, {3.8425650193869963`*^9, 
   3.842565026452804*^9}, 3.8425754046014223`*^9, {3.8425755158811893`*^9, 
   3.84257551996216*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"97075489-4df1-4bfc-931b-3d1b4c350b81"],

Cell[CellGroupData[{

Cell[TextData[{
 "Net thermal decaying rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalTau]", "P"], "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]],ExpressionUUID->
  "0fbb11c8-5977-4492-b78d-88a4ebbe4e96"],
 " from state | i > to state | j > while releasing energy to reservoir P. \
Note i > j.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalTau]s", "P"], "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]],ExpressionUUID->
  "7173ec26-08e2-4d4e-939f-1e17665167db"],
 " is used due to variable naming issues."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7742260196846647`*^9, 3.774226077530282*^9}, {
   3.7742261649455256`*^9, 3.7742261857304506`*^9}, 3.774557208007482*^9, {
   3.774674891268958*^9, 3.7746749311644974`*^9}, {3.7747515663113747`*^9, 
   3.7747516155454597`*^9}, 3.775533202317648*^9, {3.784599762357682*^9, 
   3.7845997649491215`*^9}, {3.7911637366611524`*^9, 
   3.791163739740913*^9}},ExpressionUUID->"494c7efc-43ef-46a4-afa1-\
563d3c0e1058"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[CapitalGamma]", 
   RowBox[{"i", ",", "j"}], "P"], " ", "=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ScriptCapitalJ]", "P"], "[", 
    SubscriptBox["\[Omega]", 
     RowBox[{"i", ",", "j"}]], "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SubscriptBox["n", "P"], "[", 
         SubscriptBox["\[Omega]", 
          RowBox[{"i", ",", "j"}]], "]"}]}], ")"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"i", ",", "i"}]], "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SubscriptBox["n", "P"], "[", 
       SubscriptBox["\[Omega]", 
        RowBox[{"i", ",", "j"}]], "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"j", ",", "j"}]], "[", "t", "]"}]}]}], ")"}]}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417945264403763`*^9}, {3.8420513540451965`*^9, 
   3.8420513680414705`*^9}},ExpressionUUID->"8fa9fb71-e449-44c1-a8f3-\
921d94c21219"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalTau]s", "P_"], "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "P"], "[", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SubscriptBox["NBE", "P"], "[", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"i", ",", "i"}]], "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "P"], "[", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "]"}], 
    RowBox[{
     SubscriptBox["NBE", "P"], "[", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "]"}], 
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"j", ",", "j"}]], "[", "t", "]"}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 3.8277886209939003`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"6811e453-2291-41cf-a785-bab542f8fb03"],

Cell["Mathematica function for arithmetically proper replacements,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7747516503611603`*^9, 3.77475168976737*^9}, 
   3.775533202317648*^9, 
   3.7911637424775934`*^9},ExpressionUUID->"4b13f800-46f2-4960-9288-\
d07ed83e9952"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{"expr_", ",", "orig_", ",", "repl_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Actual", " ", "replacement", " ", "function"}], ",", " ", 
      RowBox[{"but", " ", "it", " ", "is", " ", "not", " ", "Listable"}]}], 
     "*)"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"exprs_", ",", "origs_", ",", "repls_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", "r"}], "}"}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", "r"}], "}"}], "=", 
          RowBox[{"PolynomialReduce", "[", 
           RowBox[{"exprs", ",", "origs", ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"q", ".", "repls"}], "+", "r"}]}]}], "\n", "]"}]}], ";", 
     "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Construct", " ", "for", " ", "making", " ", "the", " ", "function", 
       " ", "Listable", " ", "in", " ", "only", " ", "the", " ", "first", " ",
        "argument"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "orig", ",", "repl"}], "]"}], ",", 
        RowBox[{"{", "Listable", "}"}]}], "]"}], "[", "expr", "]"}]}]}], "\n",
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774752278383034*^9, 3.7747522798866615`*^9}, {
   3.774753210638798*^9, 3.7747532268405747`*^9}, 3.7747538566627827`*^9, {
   3.774753889805153*^9, 3.774753895424494*^9}, 3.7747547955878844`*^9, 
   3.775533202317648*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"1da1b8db-6fde-4df6-a7e2-c93a68280bec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "1"], "[", 
     RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", 
    "Simplify"}], "]"}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "2"], "[", 
     RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", 
    "Simplify"}], "]"}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8275264299748363`*^9, 3.827526514051481*^9}, {
   3.8275266344912987`*^9, 3.827526641726844*^9}, {3.8275268204413466`*^9, 
   3.8275268570738354`*^9}, {3.8275269165686617`*^9, 3.827526930318237*^9}, {
   3.830495885519*^9, 3.830495887713334*^9}, {3.8363685264932985`*^9, 
   3.836368528313595*^9}, {3.8420514798182373`*^9, 3.8420514822434435`*^9}, 
   3.8420515138059597`*^9, {3.8420515462863216`*^9, 3.8420515828325157`*^9}, {
   3.8425651678988466`*^9, 3.842565191045594*^9}, 3.8425756359502916`*^9, {
   3.84257598097369*^9, 3.8425759847525473`*^9}, 3.8425760618464665`*^9, {
   3.8431913529764204`*^9, 3.8431913626892385`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"5fc1dfe0-d655-4dbf-9ba2-5f36ea2a39ff"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "1"], "[", 
        RowBox[{"1", ",", "7"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "6"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "1"], "[", 
        RowBox[{"2", ",", "8"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "6"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "1"], "[", 
        RowBox[{"3", ",", "9"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "6"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "1"], "[", 
        RowBox[{"4", ",", "10"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "6"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "1"], "[", 
        RowBox[{"5", ",", "11"}], "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "6"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "1"], "[", 
          SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "1"], "[", 
        RowBox[{"6", ",", "12"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "7"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "6"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"2", ",", "8"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "6"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"3", ",", "9"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "6"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"4", ",", "10"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "6"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"5", ",", "11"}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "6"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "1"], "[", 
        SubscriptBox["\[Omega]", "1"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "7"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "9"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "11"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"6", ",", "12"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8425638576923494`*^9, 3.8425649573922634`*^9, {
   3.842576054980291*^9, 3.842576081173735*^9}, 3.842576388915809*^9, 
   3.842642370228137*^9, 3.8426562301575227`*^9, {3.8431913549161806`*^9, 
   3.843191382511697*^9}, 3.84326134207152*^9},
 CellLabel->
  "Out[64]//MatrixForm=",ExpressionUUID->"810c9a4b-d35a-4986-99ca-\
ed67e3fb6d8d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "7"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "9"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "11"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "7"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "9"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "11"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"3", ",", "4"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "7"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "9"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "11"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"3", ",", "4"}], "]"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "7"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "9"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "11"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"5", ",", "6"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "9"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "11"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"5", ",", "6"}], "]"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "9"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "11"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"7", ",", "8"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "9"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "11"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"7", ",", "8"}], "]"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "9"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "11"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "7"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"9", ",", "10"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "11"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "12"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "7"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"9", ",", "10"}], "]"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "11"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "12"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "2"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "4"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "6"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "7"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "8"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["J", "2"], "[", 
          SubscriptBox["\[Omega]", "3"], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "9"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}], 
      RowBox[{"-", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"11", ",", "12"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "12"}]], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "3"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "4"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "5"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "5"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "6"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "7"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "7"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "8"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "9"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "9"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "10"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{
        SubscriptBox["J", "2"], "[", 
        SubscriptBox["\[Omega]", "3"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "11"}]], "[", "t", "]"}]}], 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"11", ",", "12"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8425638576923494`*^9, 3.8425649573922634`*^9, {
   3.842576054980291*^9, 3.842576081173735*^9}, 3.842576388915809*^9, 
   3.842642370228137*^9, 3.8426562301575227`*^9, {3.8431913549161806`*^9, 
   3.843191382511697*^9}, 3.8432613546849704`*^9},
 CellLabel->
  "Out[67]//MatrixForm=",ExpressionUUID->"12cfc1a9-1a05-48fe-a987-\
563fcc9cdbb5"]
}, Open  ]],

Cell["Defining the interaction picture", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774557166496046*^9, 3.774557174574299*^9}, 
   3.774557208006485*^9, 3.775534455639141*^9, 3.79468825593429*^9, {
   3.842047357499569*^9, 
   3.8420473616050406`*^9}},ExpressionUUID->"c8331f47-d9b4-47f9-b68f-\
52c22c921d37"],

Cell["The total Hamiltonian is now given by,", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8420474274864826`*^9, 
   3.842047437658616*^9}},ExpressionUUID->"8daf6a8a-67cf-4e28-8adc-\
2de41762d449"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["H", "^"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["H", "^"], "sys", "0"], " ", "+", " ", 
    SubsuperscriptBox[
     OverscriptBox["H", "^"], "sys", "1"], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], "bath", "P"]}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], 
      RowBox[{"sys", "-", "bath"}], "P"]}]}]}], " "}], "\n", 
 RowBox[{"  ", 
  RowBox[{"=", " ", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["H", "^"], "sys"], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], "bath", "P"]}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], 
      RowBox[{"sys", "-", "bath"}], "P"]}]}]}], "\n", "  "}], "\n", 
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], "sys", "0"], " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[HBar]", " ", 
      SubscriptBox["\[Omega]", "L"]}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["e", "L"], ">", "<", 
       SubscriptBox["e", "L"]}], "|", 
      RowBox[{"-", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["g", "L"], ">", "<", 
         SubscriptBox["g", "L"]}], "|"}]}]}], ")"}]}], " ", "+", " ", 
   RowBox[{"\[HBar]", " ", 
    SubscriptBox["\[Omega]", "M"], 
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["2", "R"], ">", "<", 
       SubscriptBox["2", "R"]}], "|", 
      RowBox[{"-", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["0", "R"], ">", "<", 
         SubscriptBox["0", "R"]}], "|"}]}]}], ")"}]}], " ", "+", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"\[HBar]", " ", 
      SubscriptBox["\[Omega]", "R"]}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["e", "R"], ">", "<", 
       SubscriptBox["e", "R"]}], "|", 
      RowBox[{"-", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["g", "R"], ">", "<", 
         SubscriptBox["g", "R"]}], "|"}]}]}], ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "1"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[HBar]", " ", 
       SubscriptBox["\[Gamma]", "LM"]}], "2"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"|", 
        RowBox[{
         SubscriptBox["g", "L"], ">", "<", 
         SubscriptBox["e", "L"]}], "|", 
        RowBox[{"\[CircleTimes]", 
         RowBox[{"|", 
          RowBox[{
           SubscriptBox["2", "M"], ">", "<", 
           SubscriptBox["0", "M"]}], "|", " ", 
          RowBox[{"+", " ", 
           RowBox[{"|", 
            RowBox[{
             SubscriptBox["e", "L"], ">", "<", 
             SubscriptBox["g", "L"]}], "|", 
            RowBox[{"\[CircleTimes]", 
             RowBox[{"|", 
              RowBox[{
               SubscriptBox["0", "M"], ">", "<", 
               SubscriptBox["2", "M"]}], "|"}]}]}]}]}]}]}], ")"}], 
      "\[CircleTimes]", 
      SubscriptBox["I", "R"]}]}], " ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"\[HBar]", " ", 
       SubscriptBox["\[Gamma]", "MR"]}], "2"], 
     RowBox[{
      SubscriptBox["I", "L"], "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"|", 
           RowBox[{
            SubscriptBox["1", "M"], ">", "<", 
            SubscriptBox["0", "M"]}], "|", 
           RowBox[{"+", 
            RowBox[{"|", 
             RowBox[{
              SubscriptBox["2", "M"], ">", "<", 
              SubscriptBox["1", "M"]}], "|"}]}]}], ")"}], "\[CircleTimes]"}], 
        "|", 
        RowBox[{
         SubscriptBox["g", "R"], ">", "<", 
         SubscriptBox["e", "R"]}], "|", " ", 
        RowBox[{
         RowBox[{"+", " ", 
          RowBox[{"(", 
           RowBox[{"|", 
            RowBox[{
             SubscriptBox["0", "M"], ">", "<", 
             SubscriptBox["1", "M"]}], "|", 
            RowBox[{"+", 
             RowBox[{"|", 
              RowBox[{
               SubscriptBox["1", "M"], ">", "<", 
               SubscriptBox["2", "M"]}], "|"}]}]}], ")"}]}], 
         "\[CircleTimes]"}], "|", 
        RowBox[{
         SubscriptBox["e", "R"], ">", "<", 
         SubscriptBox["g", "R"]}], "|"}], ")"}]}]}]}]}], "\t"}], "\n", 
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], 
   RowBox[{"sys", "-", "bath"}], "P"], " ", "=", " ", 
  RowBox[{"\[HBar]", " ", 
   SubsuperscriptBox["\[Sigma]", "X", "P"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["g", "k"], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox["a", "^"], "k", "P"], "+", 
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}]}], 
      ")"}]}]}]}]}], "\n", 
 RowBox[{
  SubsuperscriptBox[
   OverscriptBox["H", "^"], "bath", "P"], " ", "=", " ", 
  RowBox[{"\[HBar]", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["\[Omega]", "k"], " ", 
     RowBox[{
      SubsuperscriptBox[
       OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}], 
     SubsuperscriptBox[
      OverscriptBox["a", "^"], "k", "P"]}]}]}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.8420474421911173`*^9, 3.842047455441123*^9}, {
   3.8420474986174903`*^9, 3.8420475987317853`*^9}, {3.842047675385434*^9, 
   3.8420477279303493`*^9}, {3.842576601287016*^9, 
   3.8425766357361903`*^9}},ExpressionUUID->"ac686f90-f79c-43f1-af3b-\
a93570ba1b23"],

Cell[TextData[{
 "We work in bare state basis, hence ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["H", "^"], "sys"], TraditionalForm]],ExpressionUUID->
  "3ec62b85-5af5-4f32-ac65-2b63293ae32f"],
 " is considered approximately diagonal."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842047624230675*^9, 3.842047641365596*^9}, {
   3.8431910460510173`*^9, 3.843191046451582*^9}, {3.8431911745855303`*^9, 
   3.8431911791615877`*^9}},ExpressionUUID->"a0ab26d2-f459-49c7-86cf-\
f63acac6bc89"],

Cell["Use the interaction picture defined on", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8420477704361525`*^9, 
   3.8420477775829535`*^9}},ExpressionUUID->"e1012fb0-fee0-4691-8698-\
8ab8579dc45e"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox[
   OverscriptBox["H", "^"], "0"], " ", "=", " ", 
  RowBox[{
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "0"], " ", "+", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"P", "=", "L"}], ",", "R"}]], 
    SubsuperscriptBox[
     OverscriptBox["H", "^"], "bath", "P"]}]}]}], "\n", 
 RowBox[{
  SubscriptBox[
   OverscriptBox["H", "^"], "1"], " ", "=", " ", 
  RowBox[{
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "1"], " ", "+", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"P", "=", "L"}], ",", "R"}]], 
    SubsuperscriptBox[
     OverscriptBox["H", "^"], 
     RowBox[{"sys", "-", "bath"}], "P"]}]}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.8420474421911173`*^9, 3.842047455441123*^9}, {
   3.8420474986174903`*^9, 3.8420475987317853`*^9}, {3.842047675385434*^9, 
   3.8420477279303493`*^9}, {3.842047785361843*^9, 3.842047845021573*^9}, {
   3.8420479784569845`*^9, 
   3.842047999942052*^9}},ExpressionUUID->"5dd02c33-2e37-4ead-be58-\
22fed51da8f3"],

Cell["Which gives the interaction picture Hamiltonian as", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842576847112862*^9, 
   3.842576858896186*^9}},ExpressionUUID->"3db8293b-1885-4058-9cbc-\
cc60eb035428"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["H", "^"], "INT"], "[", "t", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"+", 
      FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
     SubscriptBox[
      OverscriptBox["H", "^"], "0"], "t"}], "]"}], ".", 
   SubscriptBox[
    OverscriptBox["H", "^"], "1"], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
     SubscriptBox[
      OverscriptBox["H", "^"], "0"], "t"}], "]"}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"+", 
        FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
       SubsuperscriptBox[
        OverscriptBox["H", "^"], "sys", "0"], "t"}], "]"}], ".", 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], "sys", "1"], ".", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
       SubsuperscriptBox[
        OverscriptBox["H", "^"], "sys", "0"], "t"}], "]"}]}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     RowBox[{
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"+", 
         FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["H", "^"], "sys", "0"], "+", 
          RowBox[{
           UnderscriptBox["\[Sum]", 
            RowBox[{
             RowBox[{"P", "=", "L"}], ",", "R"}]], 
           SubsuperscriptBox[
            OverscriptBox["H", "^"], "bath", "P"]}]}], ")"}], "t"}], "]"}], 
      ".", 
      SubsuperscriptBox[
       OverscriptBox["H", "^"], 
       RowBox[{"sys", "-", "bath"}], "P"], ".", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["H", "^"], "sys", "0"], "+", 
          RowBox[{
           UnderscriptBox["\[Sum]", 
            RowBox[{
             RowBox[{"P", "=", "L"}], ",", "R"}]], 
           SubsuperscriptBox[
            OverscriptBox["H", "^"], "bath", "P"]}]}], ")"}], "t"}], 
       "]"}]}]}]}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["H", "^"], 
      RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], " ", 
     RowBox[{
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"+", 
         FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["H", "^"], "sys", "0"], "+", 
          RowBox[{
           UnderscriptBox["\[Sum]", 
            RowBox[{
             RowBox[{"P", "=", "L"}], ",", "R"}]], 
           SubsuperscriptBox[
            OverscriptBox["H", "^"], "bath", "P"]}]}], ")"}], "t"}], "]"}], 
      ".", 
      RowBox[{"(", 
       RowBox[{"\[HBar]", " ", 
        SubsuperscriptBox["\[Sigma]", "X", "P"], 
        RowBox[{
         UnderscriptBox["\[Sum]", "k"], 
         RowBox[{
          SubscriptBox["g", "k"], 
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox[
             OverscriptBox["a", "^"], "k", "P"], "+", 
            RowBox[{
             SubsuperscriptBox[
              OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}]}],
            ")"}]}]}]}], ")"}], ".", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["H", "^"], "sys", "0"], "+", 
          RowBox[{
           UnderscriptBox["\[Sum]", 
            RowBox[{
             RowBox[{"P", "=", "L"}], ",", "R"}]], 
           SubsuperscriptBox[
            OverscriptBox["H", "^"], "bath", "P"]}]}], ")"}], "t"}], 
       "]"}]}]}]}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["H", "^"], 
      RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], " ", 
     RowBox[{"\[HBar]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"+", 
           FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
          SubsuperscriptBox[
           OverscriptBox["H", "^"], "sys", "0"], "t"}], "]"}], ".", 
        SubsuperscriptBox["\[Sigma]", "X", "P"], ".", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
          SubsuperscriptBox[
           OverscriptBox["H", "^"], "sys", "0"], "t"}], "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"+", 
           FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
          RowBox[{"(", 
           RowBox[{
            UnderscriptBox["\[Sum]", 
             RowBox[{
              RowBox[{"P", "=", "L"}], ",", "R"}]], 
            SubsuperscriptBox[
             OverscriptBox["H", "^"], "bath", "P"]}], ")"}], "t"}], "]"}], 
        ".", 
        RowBox[{"(", 
         RowBox[{
          UnderscriptBox["\[Sum]", "k"], 
          RowBox[{
           SubscriptBox["g", "k"], 
           RowBox[{"(", 
            RowBox[{
             SubsuperscriptBox[
              OverscriptBox["a", "^"], "k", "P"], "+", 
             RowBox[{
              SubsuperscriptBox[
               OverscriptBox["a", "^"], "k", "P"], 
              "\[ConjugateTranspose]"}]}], ")"}]}]}], ")"}], ".", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"+", 
           FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
          RowBox[{"(", 
           RowBox[{
            UnderscriptBox["\[Sum]", 
             RowBox[{
              RowBox[{"P", "=", "L"}], ",", "R"}]], 
            SubsuperscriptBox[
             OverscriptBox["H", "^"], "bath", "P"]}], ")"}], "t"}], "]"}]}], 
       ")"}]}]}]}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["H", "^"], 
      RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[HBar]\[Sigma]", "X", "P"], "[", "t", "]"}], 
      RowBox[{"(", 
       RowBox[{
        UnderscriptBox["\[Sum]", "k"], 
        RowBox[{
         SubscriptBox["g", "k"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubsuperscriptBox[
             OverscriptBox["a", "^"], "k", "P"], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{
             SubsuperscriptBox[
              OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}], 
            "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["H", "^"], 
      RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], " ", "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], " ", 
     RowBox[{
      SubsuperscriptBox[
       OverscriptBox["H", "^"], 
       RowBox[{
        RowBox[{"sys", "-", "bath"}], ",", "INT"}], "P"], "[", "t", 
      "]"}]}]}]}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox[
    OverscriptBox["H", "^"], 
    RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"+", 
      FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], "sys", "0"], "t"}], "]"}], ".", 
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "1"], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], "sys", "0"], "t"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox[
    OverscriptBox["H", "^"], 
    RowBox[{
     RowBox[{"sys", "-", "bath"}], ",", "INT"}], "P"], "[", "t", "]"}], " ", 
  "=", " ", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"+", 
      FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox["H", "^"], "sys", "0"], "+", 
       RowBox[{
        UnderscriptBox["\[Sum]", 
         RowBox[{
          RowBox[{"P", "=", "L"}], ",", "R"}]], 
        SubsuperscriptBox[
         OverscriptBox["H", "^"], "bath", "P"]}]}], ")"}], "t"}], "]"}], ".", 
   SubsuperscriptBox[
    OverscriptBox["H", "^"], 
    RowBox[{"sys", "-", "bath"}], "P"], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox["H", "^"], "sys", "0"], "+", 
       RowBox[{
        UnderscriptBox["\[Sum]", 
         RowBox[{
          RowBox[{"P", "=", "L"}], ",", "R"}]], 
        SubsuperscriptBox[
         OverscriptBox["H", "^"], "bath", "P"]}]}], ")"}], "t"}], 
    "]"}]}]}], "\n", 
 RowBox[{"\t\t\t  ", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[HBar]\[Sigma]", "X", "P"], "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{
      UnderscriptBox["\[Sum]", "k"], 
      RowBox[{
       SubscriptBox["g", "k"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubsuperscriptBox[
           OverscriptBox["a", "^"], "k", "P"], "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{
           SubsuperscriptBox[
            OverscriptBox["a", "^"], "k", "P"], "\[ConjugateTranspose]"}], 
          "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}]}], "Code",ExpressionUUID->\
"7a2ea7d2-0cab-477b-96fc-06c97ad4434d"],

Cell[TextData[{
 "Here the part with the ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["H", "^"], 
    RowBox[{"sys", "-", "bath"}], "P"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "997800ca-55b8-487c-bb30-0c42bf61e233"],
 " is dealt with by the Lindblad terms. The ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "1"], TraditionalForm]],ExpressionUUID->
  "d5915511-fc12-406d-aed3-caa767722c93"],
 " in the interaction picture is the part we must concentrate on. "
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842051786564536*^9, 3.8420518166329355`*^9}, {
   3.8425768845125523`*^9, 
   3.842576937119055*^9}},ExpressionUUID->"a4270a7a-82cf-4317-8d2c-\
2e582cf75994"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Hsys1Matrix", ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842324716125496*^9, 3.842324719959943*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"ed933aa8-948c-40c6-9ed2-464a666c181b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]LM", " ", "\[HBar]"}], "2"], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]MR", " ", "\[HBar]"}], "2"], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8423247175076847`*^9, 3.842324720561544*^9}, 
   3.842384738429917*^9, 3.8423992531887665`*^9, 3.842470977277975*^9, 
   3.8425766825433846`*^9, 3.842576949958009*^9, 3.842642382437809*^9, 
   3.842656271376894*^9, 3.8431913941930294`*^9, 3.843261354902268*^9},
 CellLabel->
  "Out[69]//MatrixForm=",ExpressionUUID->"af594788-e1e0-421d-abb1-\
f931cd5fb974"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hsys1INTMatrix", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "t"}], "\[HBar]"]}], "Hsys0Matrix"}], 
      "]"}], ".", "Hsys1Matrix", ".", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "t"}], "\[HBar]"]}], "Hsys0Matrix"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8420519681910896`*^9, 3.8420520181197243`*^9}, {
   3.8425767036036935`*^9, 3.842576706020875*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"8bd297ca-cb57-4d15-b467-47218dd25da3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "1"], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM", 
       " ", "\[HBar]"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "1"], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM", 
       " ", "\[HBar]"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "1"], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM", 
       " ", "\[HBar]"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "1"], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM", 
       " ", "\[HBar]"}], "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "2"], "-", 
           SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", " ", 
       "\[HBar]"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8420519897820015`*^9, 3.842052018774039*^9}, 
   3.8422936754291253`*^9, 3.842295620523736*^9, 3.8423237199420652`*^9, 
   3.842384740227894*^9, 3.8423992533258915`*^9, 3.842470978114856*^9, {
   3.842576688966087*^9, 3.842576706488103*^9}, 3.8425769517560816`*^9, 
   3.842642382495661*^9, 3.8426562732822404`*^9, 3.843191394326089*^9, 
   3.843261354987319*^9},
 CellLabel->
  "Out[71]//MatrixForm=",ExpressionUUID->"03f99a86-051c-41e1-8263-\
fdae700ab364"]
}, Open  ]],

Cell[TextData[{
 "Net interaction induced transition rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalUpsilon]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]],ExpressionUUID->
  "562f47ba-0e33-43a7-ba3e-cf299786cc87"],
 " from state | i > to state | j > .\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalUpsilon]s", "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]],ExpressionUUID->
  "1c56d937-58ca-4e5a-b35c-4bd677584c31"],
 " is used due to variable naming issues."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7742260196846647`*^9, 3.774226077530282*^9}, {
   3.7742261649455256`*^9, 3.7742261857304506`*^9}, 3.774557208007482*^9, {
   3.774674891268958*^9, 3.7746749311644974`*^9}, {3.7747515663113747`*^9, 
   3.7747516155454597`*^9}, 3.775533202317648*^9, {3.784599794997555*^9, 
   3.7845998737094398`*^9}, {3.7845999259003105`*^9, 
   3.7845999260688314`*^9}, {3.791162536797328*^9, 3.7911625408566446`*^9}, 
   3.7911636923287706`*^9, 3.794688237535488*^9, {3.842051263194538*^9, 
   3.8420512985433626`*^9}, {3.842053327224682*^9, 3.8420533285400286`*^9}, {
   3.842053374342075*^9, 3.8420533760532055`*^9}, {3.8420536909279966`*^9, 
   3.8420536925251913`*^9}},ExpressionUUID->"d12345ec-9920-4667-8115-\
069a98e8a418"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[CapitalUpsilon]LM", 
   RowBox[{"i", ",", "j"}]], " ", "=", " ", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Gamma]LM", "2"]}], "\[ImaginaryI]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "-", 
          RowBox[{"2", 
           SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"+", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "-", 
          RowBox[{"2", 
           SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"j", ",", "i"}]], "[", "t", "]"}]}]}], ")"}]}]}], "\n", 
 RowBox[{
  SubscriptBox["\[CapitalUpsilon]MR", 
   RowBox[{"i", ",", "j"}]], " ", "=", " ", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Gamma]MR", "2"]}], "\[ImaginaryI]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "-", 
          SubscriptBox["\[Omega]", "3"]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"+", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "-", 
          SubscriptBox["\[Omega]", "3"]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"j", ",", "i"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417945264403763`*^9}, {3.842051315452283*^9, 3.8420513423403087`*^9}, {
   3.8420513742594285`*^9, 3.8420514048642893`*^9}, {3.842053434501127*^9, 
   3.8420534388303084`*^9}, 3.842053472689232*^9, 3.8420537026011677`*^9, {
   3.842576982421192*^9, 
   3.84257707573177*^9}},ExpressionUUID->"78943e17-36e0-4bca-9204-\
5a5203a106e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalUpsilon]LMs", "[", 
   RowBox[{"i_", ",", "j_", ",", "t_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Gamma]LM", "2"]}], "\[ImaginaryI]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "-", 
          RowBox[{"2", 
           SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"+", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "-", 
          RowBox[{"2", 
           SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"j", ",", "i"}]], "[", "t", "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalUpsilon]MRs", "[", 
   RowBox[{"i_", ",", "j_", ",", "t_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[Gamma]MR", "2"]}], "\[ImaginaryI]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "-", 
          SubscriptBox["\[Omega]", "3"]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"+", "\[ImaginaryI]"}], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "-", 
          SubscriptBox["\[Omega]", "3"]}], ")"}]}]], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"j", ",", "i"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.784599885954599*^9, 3.7845998878077726`*^9}, {
   3.78459997645426*^9, 3.7846000050760226`*^9}, {3.784600164475197*^9, 
   3.784600195589983*^9}, {3.784600554394643*^9, 3.784600558163535*^9}, {
   3.7903710571299343`*^9, 3.7903710650247855`*^9}, {3.790371167395059*^9, 
   3.7903711800920725`*^9}, {3.790371239573084*^9, 3.7903712508536015`*^9}, {
   3.7903717601227164`*^9, 3.790371783991993*^9}, 3.794688237535488*^9, {
   3.8420513060932283`*^9, 3.8420513063400307`*^9}, {3.8420516886455164`*^9, 
   3.8420516927072954`*^9}, {3.84205253863066*^9, 3.842052563638652*^9}, {
   3.842053119010563*^9, 3.8420531195112143`*^9}, {3.8420534637944746`*^9, 
   3.8420534659583263`*^9}, {3.8420535899715047`*^9, 3.842053592325009*^9}, 
   3.8420536346320243`*^9, {3.8425770888042116`*^9, 3.842577104685047*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"9fb6fead-bc08-4b69-a857-9642ac648b79"],

Cell["Quantum Markovian master equation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774557166496046*^9, 3.774557174574299*^9}, 
   3.774557208006485*^9, 3.775534455639141*^9, 
   3.79468825593429*^9},ExpressionUUID->"bf534a59-194c-46a1-af9e-\
fce3a4b1db9c"]
}, Open  ]],

Cell[TextData[{
 "Apart from the dissipation terms, the weak inter-TLS coupling Hamiltonian ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "1"], TraditionalForm]],ExpressionUUID->
  "faebb128-7758-4e89-adcc-55a73648dcc5"],
 " comes in as a Hermitian term. The ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    OverscriptBox["H", "^"], "sys", "0"], TraditionalForm]],ExpressionUUID->
  "1659c1f9-846a-42b0-8760-53b46a0616fd"],
 " term gets removed by moving to the interaction picture on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["H", "^"], "sys", "0"], "+", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     SubsuperscriptBox[
      OverscriptBox["H", "^"], "bath", "P"]}]}], TraditionalForm]],
  ExpressionUUID->"903b3255-4942-4c50-9eb2-65977ff94f96"],
 "."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842047021934884*^9, 3.842047094903759*^9}, {
   3.8420471527894926`*^9, 
   3.8420472346577377`*^9}},ExpressionUUID->"c08220fa-7869-4dfa-8a4d-\
b63d90c26f14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], 
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[Rho]", "^"], "INT"], "[", "t", "]"}]}], " ", "=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"\[ImaginaryI]", "[", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox["H", "^"], 
        RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[Rho]", "^"], "INT"], "[", "t", "]"}]}], "]"}]}], "+",
    " ", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[ScriptCapitalL]", "^"], "L"], "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[Rho]", "^"], "INT"], "[", "t", "]"}], "]"}], " ", "+", 
   " ", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[ScriptCapitalL]", "^"], "R"], "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[Rho]", "^"], "INT"], "[", "t", "]"}], 
    "]"}]}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.8420469891790595`*^9, 
   3.8420470110527554`*^9}, {3.8420517805598555`*^9, 3.842051780810872*^9}, {
   3.8420520336234913`*^9, 3.8420520341025333`*^9}, 
   3.844912775604752*^9},ExpressionUUID->"69760eb0-03e6-4487-86e0-\
af841d78aed2"],

Cell[CellGroupData[{

Cell["Ohmic bath spectral density,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740589299468665`*^9, 3.7740589530254955`*^9}, 
   3.774557208006485*^9, 3.775534455639141*^9, {3.79116374843661*^9, 
   3.791163749795998*^9}, 
   3.79468825593429*^9},ExpressionUUID->"dbebf0a7-5633-4c16-8820-\
e8f101ea46ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jassum", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "P_"], "[", "\[Omega]_", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Kappa]", "P"], " ", "\[Omega]"}]}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774058957216611*^9, 3.774058977249716*^9}, 
   3.774557208007482*^9, {3.775159922412965*^9, 3.7751599395107317`*^9}, 
   3.775534455639141*^9, 3.79468825593429*^9, {3.8277886320385723`*^9, 
   3.8277886360956635`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"83104cd1-dbbc-4d6c-8b00-801a0de7ccf9"],

Cell["\<\
Right hand side of the Markovian quantum master equation (in interaction \
picture),\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774058401810094*^9, 3.7740584145232224`*^9}, 
   3.774557208007482*^9, {3.775506817263886*^9, 3.7755068243015947`*^9}, 
   3.775534455639141*^9, {3.783709396292345*^9, 3.7837094005699096`*^9}, 
   3.791163751921321*^9, 3.79468825593429*^9, {3.819320417951104*^9, 
   3.819320420281378*^9}, {3.8275253804695377`*^9, 
   3.827525381950908*^9}},ExpressionUUID->"2ea50a03-a001-45f2-9db1-\
392ad739af91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RHS", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", "\[HBar]"]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Hsys1INTMatrix", ".", 
         RowBox[{"\[Rho]Matrix", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"\[Rho]Matrix", "[", "t", "]"}], ".", "Hsys1INTMatrix"}]}], 
       ")"}]}], "+", 
     RowBox[{
      SubscriptBox["LinMatrix", "1"], "[", 
      RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], "+", 
     RowBox[{
      SubscriptBox["LinMatrix", "2"], "[", 
      RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RHS", "=", 
   RowBox[{"Collect", "[", 
    RowBox[{"RHS", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "P"], "[", 
           RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], ",", 
        "\[Gamma]LM", ",", "\[Gamma]MR"}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7837097612513223`*^9, 3.783709764530221*^9}, {
   3.783709804242017*^9, 3.7837098678920417`*^9}, {3.7837099902731385`*^9, 
   3.783709991270486*^9}, {3.783711449887467*^9, 3.7837115790657215`*^9}, {
   3.7903707423563533`*^9, 3.7903707443789463`*^9}, {3.7903718011915936`*^9, 
   3.790371801403022*^9}, {3.790387819130892*^9, 3.7903878213050365`*^9}, {
   3.7903878643479652`*^9, 3.790387868687334*^9}, 3.79468825593429*^9, {
   3.8193204430903378`*^9, 3.8193204630966625`*^9}, {3.8193205060125685`*^9, 
   3.8193205305054893`*^9}, {3.8193208626376925`*^9, 
   3.8193208926988134`*^9}, {3.8275253874114285`*^9, 
   3.8275253962673473`*^9}, {3.83049590539629*^9, 3.8304959066514525`*^9}, {
   3.84204726872357*^9, 3.8420473263710785`*^9}, {3.8420480631343627`*^9, 
   3.8420480670876336`*^9}, {3.842051657178917*^9, 3.8420516584256153`*^9}, {
   3.8420520411794033`*^9, 3.8420520421454377`*^9}, {3.8425810147416964`*^9, 
   3.842581019722248*^9}, {3.8425814479246707`*^9, 3.842581475532464*^9}, {
   3.842581508229006*^9, 3.8425815396603713`*^9}, 3.842581572743165*^9, {
   3.842582052007701*^9, 3.8425820591662426`*^9}, 3.842582100179701*^9, {
   3.8425823225804*^9, 3.842582326498721*^9}, {3.842582402710885*^9, 
   3.842582416945035*^9}, {3.8425824621027784`*^9, 3.8425824871207323`*^9}, {
   3.8425833364355855`*^9, 3.8425833493577614`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"292a179f-85c2-4758-a655-1341d6a73322"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{95., {4., 13.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{74., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 77, 
             20053739685040533656, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{88., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 77, 
             20053739685040533656, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{65., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 77, 
             20053739685040533656, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{115., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[20053739685040533656 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8425816255098476`*^9, 
  3.842582118417061*^9, 3.8425823452280455`*^9, 3.8425824355062475`*^9, 
  3.8425825060976458`*^9, 3.8425833673361907`*^9, 3.842585189915801*^9, 
  3.8425854549334*^9, 3.8426423952810693`*^9, 3.8426477735289035`*^9, 
  3.8426562921514297`*^9, 3.8432613683580303`*^9},
 CellLabel->
  "Out[77]//MatrixForm=",ExpressionUUID->"4fc3a0f0-74c6-41e7-b647-\
023b5c9e0e4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{"RHS", ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["J", "P"], "[", 
          RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], ",", 
       "\[Gamma]LM", ",", "\[Gamma]MR"}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193205594617233`*^9, 3.81932057578364*^9}, {
   3.8193227020273027`*^9, 3.8193227271465364`*^9}, 3.8275254130313835`*^9, 
   3.827527040365856*^9, {3.827788657666405*^9, 3.827788677581398*^9}, {
   3.8420516157184463`*^9, 3.842051639650086*^9}, {3.842052125180848*^9, 
   3.842052137099195*^9}, 3.842052582208254*^9, {3.842053141854741*^9, 
   3.842053145539806*^9}, {3.8425801461920576`*^9, 3.8425801749680305`*^9}, {
   3.8425802400601177`*^9, 3.842580292333845*^9}, {3.8425807461013613`*^9, 
   3.8425808001396847`*^9}, {3.842581000013028*^9, 3.8425810304443116`*^9}, {
   3.84258520947369*^9, 3.842585237929245*^9}, 3.842585293395405*^9, {
   3.8425853738599243`*^9, 3.842585386120678*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9716bba7-3bff-4436-81a7-814be125e558"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{95., {4., 13.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{74., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 81, 
             20053739685040533656, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{88., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 81, 
             20053739685040533656, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{65., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 81, 
             20053739685040533656, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{115., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[20053739685040533656 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8425801894726353`*^9, {3.8425802942135515`*^9, 
   3.8425803255178037`*^9}, 3.8425808248003373`*^9, 3.842581054397354*^9, 
   3.8425852539983797`*^9, 3.8425853110252557`*^9, 3.8425854103354907`*^9, 
   3.8425854737216096`*^9, 3.842642419700237*^9, 3.8426563175310984`*^9, 
   3.8432613931715965`*^9},
 CellLabel->
  "Out[81]//MatrixForm=",ExpressionUUID->"1ec75923-4f32-416f-9906-\
13557718399c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Left hand side of the Markovian quantum master equation (in interaction \
picture),\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774059513518042*^9, 3.7740595261722393`*^9}, 
   3.774557208007482*^9, 3.7755344556401377`*^9, 3.7911637579063067`*^9, 
   3.7946882559352875`*^9, 
   3.8420509699533243`*^9},ExpressionUUID->"dc2e321e-1839-4c9e-a020-\
9d58352f662c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LHS", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], 
    RowBox[{"\[Rho]Matrix", "[", "t", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740595290079193`*^9, 3.774059544549122*^9}, {
   3.774059640284641*^9, 3.774059651110953*^9}, 3.774225450971875*^9, 
   3.774557208007482*^9, 3.7755344556401377`*^9, 3.7946882559352875`*^9, {
   3.827525431673414*^9, 3.827525431848422*^9}, 3.8304959218282156`*^9, {
   3.842048305934829*^9, 3.8420483062516146`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"4ad20e3e-d7e8-4762-a4c7-71075765a89c"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "5"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "6"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "7"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "8"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "9"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "10"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "11"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"12", ",", "12"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8420483081119246`*^9, 
  3.8420517183808436`*^9, 3.8420525975212297`*^9, 3.842053155496516*^9, 
  3.8420536443846264`*^9, 3.8420537174232297`*^9, 3.8422936924179635`*^9, 
  3.8422956287112556`*^9, 3.842323724620682*^9, 3.8423847588332477`*^9, 
  3.842399265974792*^9, 3.8424709933100357`*^9, 3.8425854755929117`*^9, 
  3.842642419812309*^9, 3.8426563176613674`*^9, 3.8432613932616787`*^9},
 CellLabel->
  "Out[83]//MatrixForm=",ExpressionUUID->"4b918bca-725b-4d4f-87f3-\
ae350db271bd"],

Cell[CellGroupData[{

Cell["\<\
Markovian quantum master equation for a general density matrix,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774125166785413*^9, 3.7741251783625774`*^9}, {
   3.7741252246495485`*^9, 3.7741252337625217`*^9}, 3.774557208007482*^9, 
   3.7755344556401377`*^9, {3.783645490714918*^9, 3.7836454914030504`*^9}, 
   3.7911637594441967`*^9, 
   3.7946882559352875`*^9},ExpressionUUID->"f946bb26-4305-4cc9-abc5-\
f02955803958"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"LHS", "\[Equal]", "RHS"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"i", ",", "j"}]], "'"}], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], "]"}],
      "/.", 
     RowBox[{"Rule", "\[Rule]", "Equal"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783645681318359*^9, 3.7836457339009895`*^9}, {
   3.783645766651436*^9, 3.7836457694030485`*^9}, {3.783645809122158*^9, 
   3.7836458338211317`*^9}, {3.783645884392934*^9, 3.783645886525233*^9}, {
   3.7836462244070444`*^9, 3.7836462314133134`*^9}, {3.783646417988537*^9, 
   3.7836465444271135`*^9}, {3.7836466237849426`*^9, 
   3.7836466252939463`*^9}, {3.7836521849575033`*^9, 
   3.7836522730539894`*^9}, {3.7836528651908813`*^9, 3.783652879555477*^9}, 
   3.7836530214292126`*^9, 3.7946882559352875`*^9, {3.8193206275347104`*^9, 
   3.8193206290538874`*^9}, {3.827525501646418*^9, 3.827525502716783*^9}, {
   3.8420527803600044`*^9, 3.8420527843412905`*^9}, {3.8425854951430035`*^9, 
   3.8425854964795446`*^9}, {3.842585532902937*^9, 3.842585553555608*^9}, 
   3.8425856654978247`*^9, 3.8425857881503935`*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"be38bfd9-0d97-4fd5-86bd-6f99ec5e1509"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"ApplySides", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{
        RowBox[{"Expand", "[", "#", "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", 
        "Simplify"}], "]"}], "&"}], ",", "sol"}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.783646633033229*^9, {3.7836468121170053`*^9, 
   3.783646829080839*^9}, {3.783646878386289*^9, 3.7836469405172243`*^9}, {
   3.7836470273251247`*^9, 3.783647078640966*^9}, {3.7836530036946163`*^9, 
   3.78365301100012*^9}, 3.794688255936285*^9, {3.8193206660286865`*^9, 
   3.8193206694568777`*^9}, {3.8193207176152797`*^9, 3.8193207529484267`*^9}, 
   3.8275255524878607`*^9, {3.8275259437510567`*^9, 3.8275260088625126`*^9}, {
   3.8275260593617053`*^9, 3.8275260798420935`*^9}, {3.8275261226330233`*^9, 
   3.827526123491664*^9}, {3.827526968009859*^9, 3.827526982104601*^9}, 
   3.8275270915737257`*^9, {3.8420526325224495`*^9, 3.842052650392462*^9}, {
   3.8420526943780255`*^9, 3.8420527225304766`*^9}, {3.8420529679720745`*^9, 
   3.84205300468128*^9}, 3.8420530390231113`*^9, {3.842585559054413*^9, 
   3.8425855675484724`*^9}, {3.8425857353031383`*^9, 
   3.8425857357339573`*^9}, {3.8425858015405607`*^9, 3.842585806711215*^9}, 
   3.8425858624805307`*^9, 3.8425872045287695`*^9, 3.842587358722702*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"d5c7deb4-3231-459b-bac7-f09b8cc2bd0f"],

Cell["Separate diagonal and off diagonal equations,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7836530236682253`*^9, 3.783653045240573*^9}, 
   3.791163762025284*^9, 
   3.794688255936285*^9},ExpressionUUID->"9767735d-b9d2-4ac7-bf1c-\
778efe8ce8b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"soldiag", "=", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", " ", ";;", "13"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"soloffdiag", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"sol", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", "+", 
         RowBox[{"13", "i"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "11"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "soldiag", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "soloffdiag", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783653048239567*^9, 3.7836530766655407`*^9}, 
   3.794688255936285*^9, {3.8193207913170776`*^9, 3.819320826306034*^9}, {
   3.8423237657463293`*^9, 3.842323766563912*^9}, {3.8425855067433157`*^9, 
   3.8425855249692917`*^9}, {3.8425859914914727`*^9, 
   3.8425860206777344`*^9}, {3.842586188214309*^9, 3.842586205100197*^9}, {
   3.842645084580303*^9, 3.8426450856376915`*^9}, {3.842645148340747*^9, 
   3.8426451697291937`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"9bd8fc79-eafa-49a6-ac55-c94f7af7cb9e"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"1", ",", "1"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "1"], "[", 
                SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "2"], "[", 
                SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"7", ",", "7"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"2", ",", "2"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "2"], "[", 
             SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "1"], "[", 
                SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "8"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"3", ",", "3"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "1"], "[", 
                SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "2"], "[", 
                SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"9", ",", "9"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"4", ",", "4"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "2"], "[", 
             SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "1"], "[", 
                SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"10", ",", "10"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"5", ",", "5"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "1"], "[", 
                SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "2"], "[", 
                SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "5"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"6", ",", "6"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"11", ",", "11"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"6", ",", "6"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "2"], "[", 
             SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "5"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "1"], "[", 
                SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"6", ",", "6"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"12", ",", "12"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"7", ",", "7"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "1"], "[", 
             SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "2"], "[", 
                SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"7", ",", "7"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "8"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"8", ",", "8"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "1"], "[", 
             SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "2"], "[", 
             SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"7", ",", "7"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", "\[Gamma]LM",
           " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "8"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"9", ",", "9"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "1"], "[", 
             SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "2"], "[", 
                SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"9", ",", "9"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"10", ",", "10"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"10", ",", "10"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "1"], "[", 
             SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "2"], "[", 
             SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"9", ",", "9"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"10", ",", "10"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"11", ",", "11"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "1"], "[", 
             SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"5", ",", "5"}]], "[", "t", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Omega]", "2"], "-", 
              SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", "\[Gamma]MR", 
          " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SubscriptBox["NBE", "2"], "[", 
                SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"11", ",", "11"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"12", ",", "12"}]], "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Rho]", 
           RowBox[{"12", ",", "12"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["J", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "1"], "[", 
             SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"6", ",", "6"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "2"], "[", 
           SubscriptBox["\[Omega]", "3"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SubscriptBox["NBE", "2"], "[", 
             SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"11", ",", "11"}]], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               SubscriptBox["\[Omega]", "1"], "]"}]}], " ", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}], " ", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"12", ",", "12"}]], "[", "t", "]"}]}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8425862110205097`*^9, 3.8425873611312966`*^9, 
   3.8426424204915433`*^9, 3.8426450864555416`*^9, {3.8426451512542906`*^9, 
   3.84264517070051*^9}, 3.8426563185250745`*^9, 3.8432613939353*^9},
 CellLabel->
  "Out[88]//MatrixForm=",ExpressionUUID->"22cebdd3-ed22-495a-81cb-\
20bfbebabbcf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TagBox[
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"],
            Column], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{95., {4., 13.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{74., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 89, 
             20053739685040533656, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{88., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 89, 
             20053739685040533656, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{65., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 89, 
             20053739685040533656, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{115., {1., 13.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[20053739685040533656 === $SessionID, 
   Out[89], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8425862110205097`*^9, 3.8425873611312966`*^9, 
   3.8426424204915433`*^9, 3.8426450864555416`*^9, {3.8426451512542906`*^9, 
   3.84264517070051*^9}, 3.8426563185250745`*^9, 3.843261393949312*^9},
 CellLabel->
  "Out[89]//MatrixForm=",ExpressionUUID->"c2d2f8fa-af67-4275-806d-\
bf08f4aa937d"],

Cell[CellGroupData[{

Cell["\<\
Diagonals of the Markovian quantum master equation simplified to transition \
rates,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774732893762006*^9, 3.7747329124091377`*^9}, 
   3.7755344556401377`*^9, {3.783711762482523*^9, 3.783711766105802*^9}, 
   3.7911637638883057`*^9, 
   3.794688255936285*^9},ExpressionUUID->"6bd0a43f-a3b5-49fc-8af0-\
66db89596c19"],

Cell[BoxData[
 RowBox[{"soldiagtran", "=", 
  RowBox[{"ApplySides", "[", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{"Simplify", "[", 
         RowBox[{"ReplaceArithmetically", "[", 
          RowBox[{"#", ",", "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "P"], "[", 
               RowBox[{"i", ",", "j"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",",
            "\n", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[CapitalTau]", "P"], "[", 
               RowBox[{"i", ",", "j"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], 
          "\n", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Gamma]MR", ",", "\[Gamma]LM"}], "}"}]}], "]"}], "&"}], ",",
     "soldiag"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7748277500370045`*^9, 3.7748278488198247`*^9}, {
   3.7748278971188083`*^9, 3.7748279003473983`*^9}, 3.7748366847520742`*^9, 
   3.775534455641135*^9, {3.784601484545556*^9, 3.7846014924543223`*^9}, {
   3.7903714172396507`*^9, 3.7903714428142567`*^9}, {3.790371690223647*^9, 
   3.790371694039406*^9}, 3.794688255936285*^9, 3.8193207860847654`*^9, 
   3.819322801325003*^9, 3.827527112696147*^9, 3.842051741026037*^9, {
   3.842053162910467*^9, 3.842053166290742*^9}, {3.8425860382174215`*^9, 
   3.8425860528050737`*^9}, {3.8425860905382195`*^9, 3.842586095008847*^9}, {
   3.8425863884945097`*^9, 3.842586389686688*^9}, {3.842586620691066*^9, 
   3.842586633515599*^9}, {3.842586814219542*^9, 3.842586868544238*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"c2b7798a-6d32-4369-be85-64f34d113092"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "1"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "7"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"1", ",", "2"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"2", ",", "2"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"2", ",", "8"}], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"1", ",", "2"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"3", ",", "3"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"3", ",", "9"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"3", ",", "4"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"4", ",", "4"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"4", ",", "10"}], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"3", ",", "4"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"5", ",", "5"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"5", ",", "11"}], "]"}]}], "-", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"5", ",", "6"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"4", ",", "5"}]], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"5", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"\[Gamma]LM", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"6", ",", "6"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"6", ",", "12"}], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"5", ",", "6"}], "]"}], "+", 
     RowBox[{"\[Gamma]LM", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"7", ",", "7"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalTau]", "1"], "[", 
      RowBox[{"1", ",", "7"}], "]"}], "-", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"7", ",", "8"}], "]"}], "+", 
     RowBox[{"\[Gamma]LM", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"5", ",", "7"}]], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"7", ",", "5"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"8", ",", "8"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalTau]", "1"], "[", 
      RowBox[{"2", ",", "8"}], "]"}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"7", ",", "8"}], "]"}], "+", 
     RowBox[{"\[Gamma]LM", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"6", ",", "8"}]], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Omega]", "2"]}]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"9", ",", "9"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalTau]", "1"], "[", 
      RowBox[{"3", ",", "9"}], "]"}], "-", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"9", ",", "10"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"8", ",", "9"}]], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"9", ",", "8"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"10", ",", "10"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalTau]", "1"], "[", 
      RowBox[{"4", ",", "10"}], "]"}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"9", ",", "10"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"11", ",", "11"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalTau]", "1"], "[", 
      RowBox[{"5", ",", "11"}], "]"}], "-", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"11", ",", "12"}], "]"}], "+", 
     RowBox[{"\[Gamma]MR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"10", ",", "11"}]], "[", "t", "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "-", 
             SubscriptBox["\[Omega]", "3"]}], ")"}]}]], " ", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"12", ",", "12"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalTau]", "1"], "[", 
      RowBox[{"6", ",", "12"}], "]"}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalTau]", "2"], "[", 
      RowBox[{"11", ",", "12"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8193208334935403`*^9, 3.8193209391751504`*^9, 
   3.819322802442855*^9, 3.8213982903822002`*^9, 3.8214914310988817`*^9, 
   3.821499050344736*^9, 3.821499430130426*^9, 3.821499546127965*^9, 
   3.82149982143658*^9, {3.827527097608526*^9, 3.827527113828358*^9}, 
   3.8277838000521097`*^9, 3.8277886947737527`*^9, 3.830495939419589*^9, 
   3.8304963511940975`*^9, 3.830500677944728*^9, 3.830503802227233*^9, 
   3.8305634183895917`*^9, 3.830815742971357*^9, 3.830829340792636*^9, 
   3.8363542994817467`*^9, 3.841794391095193*^9, 3.842051185660021*^9, 
   3.842051743713725*^9, 3.8420530508822374`*^9, 3.8420531682919283`*^9, 
   3.8420536520629225`*^9, 3.8420537233525515`*^9, 3.8422936984782896`*^9, 
   3.8422956346628103`*^9, 3.8423237316760535`*^9, 3.842384778949645*^9, 
   3.8423992719269543`*^9, 3.8424709992429256`*^9, 3.8425860762040024`*^9, 
   3.842586209005787*^9, 3.8425863734786386`*^9, 3.8425865548455267`*^9, 
   3.842587030237178*^9, 3.842642578376892*^9, 3.842656477227854*^9, 
   3.8432615538014326`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"6c8428b5-eb08-4f30-bf19-dfd17d87bd93"],

Cell[CellGroupData[{

Cell["Dynamical heat flows", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774847222367645*^9, 3.774847243086377*^9}, {
   3.775168598693924*^9, 3.775168603077224*^9}, 3.7755344643112864`*^9, 
   3.794688327677451*^9},ExpressionUUID->"8879bfd5-63c9-4c06-a8e5-\
c801877593ae"],

Cell["\<\
Thermal distributions in the environments (Bose Einstein distribution),\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.77405486735592*^9, 3.7740548855147495`*^9}, {
   3.7742249253153667`*^9, 3.7742249315809903`*^9}, 3.7745572080094767`*^9, 
   3.774676514800723*^9, 3.7755344643112864`*^9, 3.791163770946421*^9, 
   3.7946883276784477`*^9},ExpressionUUID->"ee7e573b-a197-4565-a281-\
2ef25585fde6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NBEassum", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["NBE", "P_"], "[", "\[Omega]_", "]"}], "\[Rule]", " ", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[HBar]", " ", "\[Omega]"}], 
         RowBox[{"k", " ", 
          SubscriptBox["T", "P"]}]], ")"}]], "-", "1"}]]}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7745572080094767`*^9, {3.7746765315715475`*^9, 
   3.7746765365044036`*^9}, {3.7749105878762474`*^9, 3.7749106047793016`*^9}, 
   3.7755344643112864`*^9, {3.790372147015021*^9, 3.7903721481949096`*^9}, 
   3.7946883276784477`*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"d15e8e76-aa81-46b6-b6d5-2621a6dfbe4f"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", "\[Omega]", "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{"NBEassum", ",", 
          RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", 
          RowBox[{
           SubscriptBox["T", "1"], "\[Rule]", "T1"}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "2"], "[", "\[Omega]", "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{"NBEassum", ",", 
          RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", 
          RowBox[{
           SubscriptBox["T", "2"], "\[Rule]", "T2"}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "0", ",", 
       RowBox[{"10", " ", "0.2"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<L\>\"", ",", "\"\<R\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<P[\[Omega]]\>\""}], "}"}]}]}], 
    "]"}], "\n", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T1", ",", "0.2"}], "}"}], ",", "0.01", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2", ",", "0.1"}], "}"}], ",", "0.01", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7946883276784477`*^9, {3.819321050958048*^9, 
   3.819321087191425*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"8dd7c247-f48f-448c-98ec-eeab0694013b"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T1$$ = 0.2, $CellContext`T2$$ = 0.1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`T1$$], 0.2}, 0.01, 1}, {{
       Hold[$CellContext`T2$$], 0.1}, 0.01, 1}}, Typeset`size$$ = {
    584., {163., 171.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`T1$$ = 0.2, $CellContext`T2$$ = 0.1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         ReplaceRepeated[
          
          Subscript[$CellContext`NBE, 
           1][$CellContext`\[Omega]], {$CellContext`NBEassum, $CellContext`k -> 
           1, $CellContext`\[HBar] -> 1, 
           Subscript[$CellContext`T, 1] -> $CellContext`T1$$}], 
         ReplaceRepeated[
          
          Subscript[$CellContext`NBE, 
           2][$CellContext`\[Omega]], {$CellContext`NBEassum, $CellContext`k -> 
           1, $CellContext`\[HBar] -> 1, 
           Subscript[$CellContext`T, 
             2] -> $CellContext`T2$$}]}, {$CellContext`\[Omega], 0, 10 0.2}, 
        PlotRange -> {0, 2}, PlotLegends -> {"L", "R"}, 
        AxesLabel -> {"\[Omega]", "P[\[Omega]]"}], 
      "Specifications" :> {{{$CellContext`T1$$, 0.2}, 0.01, 
         1}, {{$CellContext`T2$$, 0.1}, 0.01, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{651., {238., 247.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.842056444639167*^9, 
  3.8422936989506855`*^9, 3.8422956392718925`*^9, 3.842323732239538*^9, 
  3.8423847825169077`*^9, 3.8423992723719263`*^9, 3.842470999383399*^9, 
  3.8425873703843756`*^9, 3.8426425785106363`*^9, 3.8426564774794264`*^9, 
  3.8432615540681915`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"1fb2b75a-948c-46f2-86b7-43759bb55dd4"],

Cell["\<\
Use the first law of thermodynamics, the rate of change of internal energy of \
the system is equal to the energy inflows\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8420569695611997`*^9, 
   3.8420570046174107`*^9}},ExpressionUUID->"e7e8fa86-07ba-4de0-a3f0-\
72c865ae9b93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], 
   RowBox[{"<", 
    SubscriptBox[
     OverscriptBox["H", "^"], "sys"], ">"}]}], " ", "=", " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", 
    RowBox[{
     RowBox[{"P", "=", "L"}], ",", "R"}]], 
   RowBox[{
    SubscriptBox["J", "P"], "[", "t", "]"}]}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.841794700414009*^9, 3.841794768238675*^9}, 
   3.8420568948517475`*^9, {3.842056994624349*^9, 
   3.842057062392112*^9}},ExpressionUUID->"344da48f-646a-4854-b02a-\
5bb88c761205"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], 
   RowBox[{"<", 
    SubscriptBox[
     OverscriptBox["H", "^"], "sys"], ">"}]}], " ", "=", " ", 
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], 
   RowBox[{"Tr", "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["H", "^"], "sys"], 
     RowBox[{
      OverscriptBox["\[Rho]", "^"], "[", "t", "]"}]}], "]"}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{"Tr", "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["H", "^"], "sys"], 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      RowBox[{
       OverscriptBox["\[Rho]", "^"], "[", "t", "]"}]}]}], "]"}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{"Tr", "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["H", "^"], "sys"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[ImaginaryI]", "[", 
         RowBox[{
          RowBox[{
           SubsuperscriptBox[
            OverscriptBox["H", "^"], 
            RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], ",", 
          RowBox[{
           OverscriptBox["\[Rho]", "^"], "[", "t", "]"}]}], "]"}]}], "+", " ", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[ScriptCapitalL]", "^"], "L"], "[", 
        RowBox[{
         OverscriptBox["\[Rho]", "^"], "[", "t", "]"}], "]"}], " ", "+", " ", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[ScriptCapitalL]", "^"], "R"], "[", 
        RowBox[{
         OverscriptBox["\[Rho]", "^"], "[", "t", "]"}], "]"}]}], ")"}]}], 
    "]"}]}]}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"Tr", "[", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["H", "^"], "sys"], "[", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox[
          OverscriptBox["H", "^"], 
          RowBox[{"sys", ",", "INT"}], "1"], "[", "t", "]"}], ",", 
        RowBox[{
         OverscriptBox["\[Rho]", "^"], "[", "t", "]"}]}], "]"}], "]"}]}], " ",
     "+", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{
       RowBox[{"P", "=", "L"}], ",", "R"}]], 
     RowBox[{"Tr", "[", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["H", "^"], "sys"], 
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[ScriptCapitalL]", "^"], "P"], "[", 
        RowBox[{
         OverscriptBox["\[Rho]", "^"], "[", "t", "]"}], "]"}]}], 
      "]"}]}]}]}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.841794700414009*^9, 3.841794768238675*^9}, 
   3.8420568948517475`*^9, {3.842056994624349*^9, 3.8420570751334033`*^9}, {
   3.8420571601160727`*^9, 3.842057218340434*^9}, {3.84205728403996*^9, 
   3.8420573245543556`*^9}, {3.8420573667641363`*^9, 
   3.8420574138112345`*^9}, {3.842057445634144*^9, 
   3.8420574686096354`*^9}},ExpressionUUID->"4ceadb6f-017a-49b0-9590-\
8f9584c79067"],

Cell["\<\
Calculate heat current flow, (see Eq. (19) of Optically Controlled Quantum \
Thermal Gate\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7742288085586786`*^9, 3.7742288269920254`*^9}, 
   3.7742288804849157`*^9, {3.774228912222834*^9, 3.7742289133275094`*^9}, 
   3.7745572080104733`*^9, {3.7753423933357325`*^9, 3.775342394544462*^9}, 
   3.7755344643122816`*^9, {3.791163774275506*^9, 3.791163775732607*^9}, 
   3.7946883276784477`*^9, {3.8417947031843095`*^9, 
   3.8417947160828953`*^9}},ExpressionUUID->"4b4d74ff-fbdb-44fc-9f71-\
c0d7c63205aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["J", "P"], "[", "t", "]"}], " ", "=", " ", 
  RowBox[{"Tr", "[", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["H", "^"], "sys"], ".", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalL]", "^"], "P"], "[", 
     RowBox[{
      OverscriptBox["\[Rho]", "^"], "[", "t", "]"}], "]"}]}], "]"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.841794700414009*^9, 3.841794768238675*^9}, 
   3.8420568948517475`*^9},ExpressionUUID->"4e2dfc07-3a9a-4472-bca8-\
2aaf1df1a5ef"]
}, Open  ]],

Cell["There are two ways to go about calculating the heat flows", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8420568717581244`*^9, 
   3.842056883053398*^9}},ExpressionUUID->"145a4b21-8fe7-4854-881e-\
e22c3f1ae275"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["J", "P"], "[", "t", "]"}], " ", "=", " ", 
  RowBox[{"Tr", "[", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["H", "^"], "sys"], ".", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalL]", "^"], "P"], "[", 
     RowBox[{
      OverscriptBox["\[Rho]", "^"], "[", "t", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["J", "P"], "[", "t", "]"}], " ", "=", " ", 
  RowBox[{"Tr", "[", 
   RowBox[{
    SubsuperscriptBox[
     OverscriptBox["H", "^"], "sys", "0"], ".", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalL]", "^"], "P"], "[", 
     RowBox[{
      OverscriptBox["\[Rho]", "^"], "[", "t", "]"}], "]"}]}], 
   "]"}]}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 
   3.8277886209939003`*^9}, {3.8417944284018383`*^9, 
   3.8417946150393515`*^9}, {3.841794700414009*^9, 3.841794768238675*^9}, {
   3.842056919445326*^9, 
   3.842056954248534*^9}},ExpressionUUID->"7bfc6fba-ee38-4f61-8707-\
41027308d1d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["EngyFlowIn", "P_"], "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "P"], "[", "\[Rho]", "]"}], ".", 
    "HsysMatrix"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193270506031733`*^9, 3.819327054273734*^9}, 
   3.827527534643571*^9, 3.830496143879735*^9, {3.8417948099537387`*^9, 
   3.8417948101844025`*^9}, 3.842056511700751*^9, {3.842056608651331*^9, 
   3.842056611678686*^9}, {3.842056664040618*^9, 3.842056684892979*^9}, 
   3.8420567675483465`*^9, 3.842057608374386*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"5dd8d5e0-9b6f-4aa4-a213-87eecac598ad"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["EngyFlowIn", "1"], "[", 
     RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "P"], "[", " ", 
           RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
     "&"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["EngyFlowIn", "2"], "[", 
     RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["J", "P"], "[", " ", 
           RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
     "&"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193270830269938`*^9, 3.819327135163083*^9}, {
   3.819327268577691*^9, 3.8193272689369*^9}, {3.8193273701532106`*^9, 
   3.8193273738132644`*^9}, {3.8193278864961185`*^9, 
   3.8193278947568855`*^9}, {3.827527453643444*^9, 3.8275274618732233`*^9}, {
   3.8275275713599453`*^9, 3.827527612331483*^9}, {3.827527683905697*^9, 
   3.827527800650346*^9}, {3.8304959575925603`*^9, 3.8304959585674334`*^9}, {
   3.8420564871777525`*^9, 3.842056491511319*^9}, {3.8420566169017487`*^9, 
   3.8420566186214542`*^9}, 3.842056652342346*^9, {3.842056720919877*^9, 
   3.842056746691801*^9}, {3.8420575391648335`*^9, 3.8420575735691957`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"d928ad55-1899-48c5-b639-f65de9a9e557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", "\[HBar]", " ", 
  RowBox[{
   SubscriptBox["J", "1"], "[", 
   SubscriptBox["\[Omega]", "1"], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Gamma]LM", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "7"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "8"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"7", ",", "5"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "6"}]], "[", "t", "]"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SubscriptBox["\[Omega]", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           SubscriptBox["\[Omega]", "1"], "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "3"}]], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "4"}]], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "5"}]], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "5"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"6", ",", "6"}]], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "6"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "7"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "8"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "9"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "10"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "11"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", 
         SubscriptBox["\[Omega]", "1"], "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"12", ",", "12"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8420576115136747`*^9, 
  3.842293706503438*^9, 3.8422956432303815`*^9, 3.8423237392181435`*^9, 
  3.8423847874446225`*^9, 3.8423992764350796`*^9, 3.842471001315816*^9, 
  3.8426425814443083`*^9, 3.8426564805519915`*^9, 3.8432615570579042`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"d2ebd6c3-9bce-40c9-ab68-f7c6a4b68a9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", "\[HBar]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Gamma]MR", " ", 
     RowBox[{
      SubscriptBox["J", "2"], "[", 
      SubscriptBox["\[Omega]", "3"], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["NBE", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "2"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "5"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"5", ",", "4"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"8", ",", "9"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"9", ",", "8"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"10", ",", "11"}]], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"11", ",", "10"}]], "[", "t", "]"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SubscriptBox["\[Omega]", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"1", ",", "2"}], "]"}], "+", 
       RowBox[{
        SubscriptBox["\[CapitalTau]", "2"], "[", 
        RowBox[{"3", ",", "4"}], "]"}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         SubscriptBox["\[Omega]", "3"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              SubscriptBox["\[Omega]", "3"], "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"5", ",", "5"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"7", ",", "7"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"9", ",", "9"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"11", ",", "11"}]], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            SubscriptBox["\[Omega]", "3"], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"6", ",", "6"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"7", ",", "7"}]], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"8", ",", "8"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"9", ",", "9"}]], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"10", ",", "10"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"11", ",", "11"}]], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"12", ",", "12"}]], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8420576115136747`*^9, 
  3.842293706503438*^9, 3.8422956432303815`*^9, 3.8423237392181435`*^9, 
  3.8423847874446225`*^9, 3.8423992764350796`*^9, 3.842471001315816*^9, 
  3.8426425814443083`*^9, 3.8426564805519915`*^9, 3.843261559152807*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"e9a7d050-073a-4201-8b55-b79effdd6342"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["EngyFlowIn", "P_"], "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "P"], "[", "\[Rho]", "]"}], ".", 
    "Hsys0Matrix"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193270506031733`*^9, 3.819327054273734*^9}, 
   3.827527534643571*^9, 3.830496143879735*^9, {3.8417948099537387`*^9, 
   3.8417948101844025`*^9}, 3.842056511700751*^9, {3.842056608651331*^9, 
   3.842056611678686*^9}, {3.842056664040618*^9, 3.842056684892979*^9}, 
   3.8420567675483465`*^9, {3.842057588710267*^9, 3.8420576072463827`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"02d2ee10-9464-4b41-aa14-2b51c54ca5bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["EngyFlowIn", "1"], "[", 
     RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", "%", "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["EngyFlowIn", "2"], "[", 
     RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193270830269938`*^9, 3.819327135163083*^9}, {
   3.819327268577691*^9, 3.8193272689369*^9}, {3.8193273701532106`*^9, 
   3.8193273738132644`*^9}, {3.8193278864961185`*^9, 
   3.8193278947568855`*^9}, {3.827527453643444*^9, 3.8275274618732233`*^9}, {
   3.8275275713599453`*^9, 3.827527612331483*^9}, {3.827527683905697*^9, 
   3.827527800650346*^9}, {3.8304959575925603`*^9, 3.8304959585674334`*^9}, {
   3.8420564871777525`*^9, 3.842056491511319*^9}, {3.8420566169017487`*^9, 
   3.8420566186214542`*^9}, 3.842056652342346*^9, {3.842056720919877*^9, 
   3.842056746691801*^9}, {3.8420575391648335`*^9, 3.8420575735691957`*^9}, {
   3.8425873858007717`*^9, 3.8425874041828547`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"d5cb83d3-d87a-4bf2-9034-1a0a95370d10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[HBar]"}], " ", 
  SubscriptBox["\[Omega]", "1"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalTau]", "1"], "[", 
     RowBox[{"1", ",", "7"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "1"], "[", 
     RowBox[{"2", ",", "8"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "1"], "[", 
     RowBox[{"3", ",", "9"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "1"], "[", 
     RowBox[{"4", ",", "10"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "1"], "[", 
     RowBox[{"5", ",", "11"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "1"], "[", 
     RowBox[{"6", ",", "12"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8420564943581686`*^9, {3.8420566526666403`*^9, 
   3.842056688293727*^9}, {3.8420567266227865`*^9, 3.842056772150886*^9}, {
   3.8420575766818933`*^9, 3.842057583654417*^9}, 3.842057615992741*^9, 
   3.842293710909295*^9, 3.8422956477314568`*^9, 3.84232374870643*^9, 
   3.84238479049422*^9, 3.8423992798481636`*^9, 3.842471002022642*^9, 
   3.842587412604119*^9, 3.842642590283333*^9, 3.842656489502509*^9, 
   3.8432615659629903`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"f6cc0127-5d2d-4557-8e60-2bc8c5bc5e05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[HBar]"}], " ", 
  SubscriptBox["\[Omega]", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalTau]", "2"], "[", 
     RowBox[{"1", ",", "2"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "2"], "[", 
     RowBox[{"3", ",", "4"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "2"], "[", 
     RowBox[{"5", ",", "6"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "2"], "[", 
     RowBox[{"7", ",", "8"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "2"], "[", 
     RowBox[{"9", ",", "10"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["\[CapitalTau]", "2"], "[", 
     RowBox[{"11", ",", "12"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8420564943581686`*^9, {3.8420566526666403`*^9, 
   3.842056688293727*^9}, {3.8420567266227865`*^9, 3.842056772150886*^9}, {
   3.8420575766818933`*^9, 3.842057583654417*^9}, 3.842057615992741*^9, 
   3.842293710909295*^9, 3.8422956477314568`*^9, 3.84232374870643*^9, 
   3.84238479049422*^9, 3.8423992798481636`*^9, 3.842471002022642*^9, 
   3.842587412604119*^9, 3.842642590283333*^9, 3.842656489502509*^9, 
   3.8432615726951103`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"0d617bbc-491f-49bf-ae7e-c4909870cf68"]
}, Open  ]],

Cell[CellGroupData[{

Cell["On unit conversions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942664296517987`*^9, 3.794266434955821*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"b9a8c2b4-5816-4842-b7ed-\
a84a10948677"],

Cell[TextData[{
 "To resolve the natural units to SI units, we use the relationship,\nEnergy \
= \[HBar] \[Omega] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "B"], "T"}], TraditionalForm]],ExpressionUUID->
  "5d6676fd-b251-4652-be24-89e1ef0dcda2"],
 "\nIn the natural units case, we have chosen ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],ExpressionUUID->
  "27118dd3-4fa7-40a0-8543-e7640733a414"],
 "s to be an order of magnitude lower than the largest \[Omega]s."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79426642334105*^9, 3.79426657626483*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"667262fa-e272-4dbf-a1e9-\
91f0fbbf2ce6"],

Cell[TextData[{
 "In SI units, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"T", "'"}], "H"], TraditionalForm]],ExpressionUUID->
  "bbca5603-a163-45fa-a3e5-797e0ee1ee05"],
 " = 400, in natural units, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "H"], "=", "0.2"}], TraditionalForm]],ExpressionUUID->
  "c960270c-6531-4a71-88c3-52cc6f935c46"],
 ".\nThis gives a ratio of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"T", "'"}], "H"], TraditionalForm]],ExpressionUUID->
  "df8f053f-02c2-4c72-9667-68a4d6e62089"],
 "/",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "H"], TraditionalForm]],ExpressionUUID->
  "de2d96ec-9fc5-4593-b9d1-5ed3fc918829"],
 "=2000."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942665999934487`*^9, 3.7942666785030007`*^9}, {
   3.7942667345950384`*^9, 3.7942667448463616`*^9}, {3.7942808428196807`*^9, 
   3.7942808446903334`*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"f87b0cf0-8983-4e68-b6d9-\
ec74b88f4c74"],

Cell[TextData[{
 "Temperature conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "'"}], "=", 
    RowBox[{"2000", " ", "T"}]}], TraditionalForm]],ExpressionUUID->
  "059e5910-388c-4a24-bbee-11efd4e38094"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942666907050724`*^9, 3.7942667222182713`*^9}, {
   3.7942667567474823`*^9, 3.794266757444193*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"c9842949-74ab-4b4c-9b3e-\
53389a9f8af8"],

Cell[TextData[{
 "Frequency conversion,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Omega]", "'"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2000", 
       SubscriptBox["k", "B"]}], "\[HBar]"], "\[Omega]"}]}], 
   TraditionalForm]],ExpressionUUID->"6553ad76-65d3-48fa-9685-7e0fec00ade7"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalOmega]", "'"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2000", 
       SubscriptBox["k", "B"]}], "\[HBar]"], "\[CapitalOmega]"}]}], 
   TraditionalForm]],ExpressionUUID->"90fb8586-3fe7-4ac5-be26-667dcd25bcee"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942667627446947`*^9, 3.794266824765622*^9}, {
   3.794266923462131*^9, 3.7942669475851107`*^9}, {3.7942718534040165`*^9, 
   3.7942718792859116`*^9}, {3.794272061349345*^9, 3.794272065755951*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"756b362e-f63d-478f-9162-\
a1feff4b3f49"],

Cell[TextData[{
 "Time conversion,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"t", "'"}], "=", 
    RowBox[{
     FractionBox["\[HBar]", 
      RowBox[{" ", 
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}]}]], "t"}]}], TraditionalForm]],
  ExpressionUUID->"8749a315-fed8-4cb4-89aa-6d5822dec5cf"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942667627446947`*^9, 3.7942668603827357`*^9}, {
   3.794271887258107*^9, 3.7942718917397547`*^9}, {3.794272072177114*^9, 
   3.794272073452735*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"0dac00eb-c071-4b35-8a97-\
6e0c85e9fb58"],

Cell[TextData[{
 "Transition rates conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalTau]", "'"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2000", 
       SubscriptBox["k", "B"]}], "\[HBar]"], "\[CapitalTau]"}]}], 
   TraditionalForm]],ExpressionUUID->"a55a7b1e-8d0c-4b67-8b53-039c03914941"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942721260731263`*^9, 3.794272145333819*^9}, {
   3.7942722142311363`*^9, 3.794272247380316*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"72081ed7-9968-490f-bd59-\
87f85f614356"],

Cell[TextData[{
 "Energy flows conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"J", "'"}], "=", 
    RowBox[{
     RowBox[{"\[HBar]", 
      FractionBox[
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}], "\[HBar]"], 
      FractionBox[
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}], "\[HBar]"], " ", "J"}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2000", 
          SubscriptBox["k", "B"]}], ")"}], "2"], "\[HBar]"], "J"}]}]}], 
   TraditionalForm]],ExpressionUUID->"1270844d-d58c-467e-98ae-5cfd4a117c41"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79427176851785*^9, 3.7942718192809644`*^9}, {
   3.7942720532361326`*^9, 3.7942720532361326`*^9}, {3.794272091776184*^9, 
   3.79427212193836*^9}, 
   3.7946883341910334`*^9},ExpressionUUID->"0a4284b8-48e8-48dd-aa21-\
ae340ecdff06"],

Cell["Unit conversion factors for SI units,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279562856717*^9, 3.794279571874467*^9}, 
   3.7942808551629505`*^9, 
   3.7946883341910334`*^9},ExpressionUUID->"78e58b2e-71df-4699-9610-\
975118ec7627"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", " ", 
      RowBox[{"1.3806", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "23"}]]}]}], ",", 
     RowBox[{"\[HBar]", "\[Rule]", 
      RowBox[{"1.0546", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "34"}]]}]}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7942694647135396`*^9, {3.7942705751665306`*^9, 
   3.7942705756297846`*^9}, 3.7942728197783885`*^9, 3.7946883341910334`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d3ca9179-4996-43a8-910f-fec4ad15e266"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tconv", "=", 
   FractionBox["300", "0.2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]conv", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Tconv", " ", "k"}], "\[HBar]"], "/.", "unitassum"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"tconv", "=", 
   RowBox[{
    FractionBox["\[HBar]", 
     RowBox[{"Tconv", " ", "k"}]], "/.", "unitassum"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTau]conv", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Tconv", " ", "k"}], "\[HBar]"], "/.", "unitassum"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Econv", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Tconv", " ", "k"}], ")"}], "2"], "\[HBar]"], "/.", 
    "unitassum"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279162538752*^9, 3.7942791998186207`*^9}, {
   3.7942793641651325`*^9, 3.794279414927433*^9}, {3.794430999462424*^9, 
   3.794431025213562*^9}, 3.7946883341910334`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"ac0a3550-25c4-47e1-aed4-7c393a16a6b6"],

Cell["Unit conversion factors for natural units,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79427929106101*^9, 3.7942793178357034`*^9}, {
   3.794279550338332*^9, 3.7942795537391944`*^9}, 3.794280854010661*^9, 
   3.7946883341910334`*^9},ExpressionUUID->"598c6a90-11d3-46e5-8fc3-\
edd150b6c3b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\[HBar]", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794269397822668*^9, 3.7942694163007307`*^9}, {
   3.7942694676494246`*^9, 3.7942694696080093`*^9}, {3.7942705589283156`*^9, 
   3.7942705720149584`*^9}, 3.7942728132018347`*^9, 3.7946883341910334`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"bbc2eec7-d1c8-4a29-87fb-3c50fded81fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tconv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]conv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tconv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTau]conv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Econv", "=", "1"}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279162538752*^9, 3.7942791998186207`*^9}, {
   3.794279269854555*^9, 3.794279274841489*^9}, {3.794279324154192*^9, 
   3.7942793414757624`*^9}, 3.7946883341910334`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"d99498e6-0d53-4413-a9f3-414d99ff73fa"],

Cell["\<\
Note - When using SI units, due to frequencies and energies being in widely \
different orders of magnitudes, there may be numerical errors in calculations \
(Removing Quiet functions in code will allow warnings about this issue to be \
displayed). Hence it is always advisable to confirm simulation results with \
natural unit simulations.  \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942851464950123`*^9, 3.7942853384149876`*^9}, 
   3.7946883341910334`*^9},ExpressionUUID->"f283ec5b-8afb-409d-b7ca-\
104fd5bfda3d"]
}, Open  ]],

Cell["\<\
Density matrix, transition rate and energy flow evolution with time\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7751597474668713`*^9, 3.775159758275875*^9}, 
   3.7751684837870855`*^9, 3.775534473087042*^9, {3.7959950131782017`*^9, 
   3.795995023850216*^9}, {3.8193216512486486`*^9, 
   3.8193216529996753`*^9}},ExpressionUUID->"fbfb67c9-2a33-4bda-96d9-\
052185ea3e71"],

Cell["\<\
Assumptions on the temperatures of the baths, TLS energy levels, and TLS \
interaction strengths,\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7836539848854723`*^9, 3.783654029431021*^9}, 
   3.791163780096901*^9},ExpressionUUID->"f26ccbf3-5a1e-4923-bbc3-\
b6a3c565ab91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tassum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["T", "1"], "\[Rule]", " ", 
      RowBox[{"0.2", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["T", "2"], "\[Rule]", " ", 
      RowBox[{"0.02", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", 
      RowBox[{"1.0", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", 
      RowBox[{"0.48", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "3"], "\[Rule]", 
      RowBox[{"0.5", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "1"], "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "2"], "\[Rule]", "0.01"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7903728943154235`*^9, 3.790372953581931*^9}, {
   3.790373021807481*^9, 3.7903730282354245`*^9}, {3.7903730686244555`*^9, 
   3.7903730829501395`*^9}, {3.7903746481577826`*^9, 
   3.7903746521012316`*^9}, {3.7903749177956896`*^9, 3.7903749537216187`*^9}, 
   3.790375095043697*^9, {3.7942601530263615`*^9, 3.794260154971158*^9}, {
   3.794260263909217*^9, 3.7942603665960803`*^9}, {3.79426041313457*^9, 
   3.7942604192198567`*^9}, {3.794261815532322*^9, 3.7942618284919786`*^9}, 
   3.7942618968790226`*^9, 3.794272872428309*^9, {3.7942796130097013`*^9, 
   3.794279652643711*^9}, {3.7954088102977858`*^9, 3.7954088146801767`*^9}, {
   3.795408864303483*^9, 3.795408867635575*^9}, {3.819321780480033*^9, 
   3.819321805546974*^9}, {3.821491669900217*^9, 3.821491686948207*^9}, {
   3.827528552600561*^9, 3.8275285557397475`*^9}, {3.8277887155312986`*^9, 
   3.827788725508029*^9}, {3.8422937791594567`*^9, 3.8422937810277157`*^9}, {
   3.842294589200328*^9, 3.8422946279270663`*^9}, 3.8422949602559514`*^9, {
   3.842295230358649*^9, 3.8422952354356213`*^9}, {3.842587597949811*^9, 
   3.8425876497559137`*^9}, {3.842587688126021*^9, 3.842587701436894*^9}, {
   3.8425881612400866`*^9, 3.842588201762244*^9}, 3.8425882688098326`*^9, {
   3.842588311672695*^9, 3.842588312011735*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"cf4abcbc-253a-4206-b2cf-1790201863eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tassum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["T", "1"], "\[Rule]", " ", 
      RowBox[{"0.2", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["T", "2"], "\[Rule]", " ", 
      RowBox[{"0.02", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", 
      RowBox[{"1.0", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", 
      RowBox[{"0.50", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "3"], "\[Rule]", 
      RowBox[{"0.5", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "1"], "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "2"], "\[Rule]", "0.01"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7903728943154235`*^9, 3.790372953581931*^9}, {
   3.790373021807481*^9, 3.7903730282354245`*^9}, {3.7903730686244555`*^9, 
   3.7903730829501395`*^9}, {3.7903746481577826`*^9, 
   3.7903746521012316`*^9}, {3.7903749177956896`*^9, 3.7903749537216187`*^9}, 
   3.790375095043697*^9, {3.7942601530263615`*^9, 3.794260154971158*^9}, {
   3.794260263909217*^9, 3.7942603665960803`*^9}, {3.79426041313457*^9, 
   3.7942604192198567`*^9}, {3.794261815532322*^9, 3.7942618284919786`*^9}, 
   3.7942618968790226`*^9, 3.794272872428309*^9, {3.7942796130097013`*^9, 
   3.794279652643711*^9}, {3.7954088102977858`*^9, 3.7954088146801767`*^9}, {
   3.795408864303483*^9, 3.795408867635575*^9}, {3.819321780480033*^9, 
   3.819321805546974*^9}, {3.821491669900217*^9, 3.821491686948207*^9}, {
   3.827528552600561*^9, 3.8275285557397475`*^9}, {3.8277887155312986`*^9, 
   3.827788725508029*^9}, {3.8422937791594567`*^9, 3.8422937810277157`*^9}, {
   3.842294589200328*^9, 3.8422946279270663`*^9}, 3.8422949602559514`*^9, {
   3.842295230358649*^9, 3.8422952354356213`*^9}, {3.842587597949811*^9, 
   3.8425876497559137`*^9}, {3.842587688126021*^9, 3.842587701436894*^9}, {
   3.8425881612400866`*^9, 3.842588201762244*^9}, 3.8425882688098326`*^9, 
   3.842588314073968*^9, 3.8426435716659746`*^9, {3.8426603848149734`*^9, 
   3.8426603858196173`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"4c85975a-f815-42c7-915c-dda3318c99e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tassum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["T", "1"], "\[Rule]", " ", 
      RowBox[{"0.2", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["T", "2"], "\[Rule]", " ", 
      RowBox[{"0.02", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", 
      RowBox[{"1.0", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", 
      RowBox[{"0.52", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "3"], "\[Rule]", 
      RowBox[{"0.5", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "1"], "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "2"], "\[Rule]", "0.01"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7903728943154235`*^9, 3.790372953581931*^9}, {
   3.790373021807481*^9, 3.7903730282354245`*^9}, {3.7903730686244555`*^9, 
   3.7903730829501395`*^9}, {3.7903746481577826`*^9, 
   3.7903746521012316`*^9}, {3.7903749177956896`*^9, 3.7903749537216187`*^9}, 
   3.790375095043697*^9, {3.7942601530263615`*^9, 3.794260154971158*^9}, {
   3.794260263909217*^9, 3.7942603665960803`*^9}, {3.79426041313457*^9, 
   3.7942604192198567`*^9}, {3.794261815532322*^9, 3.7942618284919786`*^9}, 
   3.7942618968790226`*^9, 3.794272872428309*^9, {3.7942796130097013`*^9, 
   3.794279652643711*^9}, {3.7954088102977858`*^9, 3.7954088146801767`*^9}, {
   3.795408864303483*^9, 3.795408867635575*^9}, {3.819321780480033*^9, 
   3.819321805546974*^9}, {3.821491669900217*^9, 3.821491686948207*^9}, {
   3.827528552600561*^9, 3.8275285557397475`*^9}, {3.8277887155312986`*^9, 
   3.827788725508029*^9}, {3.8422937791594567`*^9, 3.8422937810277157`*^9}, {
   3.842294589200328*^9, 3.8422946279270663`*^9}, 3.8422949602559514`*^9, {
   3.842295230358649*^9, 3.8422952354356213`*^9}, {3.842587597949811*^9, 
   3.8425876497559137`*^9}, {3.842587688126021*^9, 3.842587701436894*^9}, {
   3.8425881612400866`*^9, 3.842588201762244*^9}, 3.8425882688098326`*^9},
 CellLabel->
  "In[198]:=",ExpressionUUID->"00f1899c-7a1b-46ec-bbd6-01fae8378702"],

Cell["Assumption on the strength of the L-R interaction", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.783712848551632*^9, 3.7837128578926334`*^9}, {
   3.7942794413463144`*^9, 3.794279443594536*^9}, 3.7942809031685534`*^9, {
   3.8193217280538716`*^9, 
   3.8193217320175004`*^9}},ExpressionUUID->"576d9b36-fdc4-46b0-849c-\
50468dda9ae1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]LM", "\[Rule]", 
      RowBox[{"0", "\[Omega]conv"}]}], ",", 
     RowBox[{"\[Gamma]MR", "\[Rule]", 
      RowBox[{"0", "\[Omega]conv"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.794260537532092*^9, 3.7942605379559965`*^9}, 
   3.794279882079415*^9, {3.7958269125451975`*^9, 3.7958269136991167`*^9}, {
   3.8193217361558337`*^9, 3.8193217381952934`*^9}, {3.8275283638897433`*^9, 
   3.8275283662138977`*^9}, {3.842293826870472*^9, 3.8422938275204926`*^9}, {
   3.842587556811474*^9, 
   3.842587561793894*^9}},ExpressionUUID->"b39fe54b-7c79-467e-8c67-\
e1835c241f95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]LM", "\[Rule]", 
      RowBox[{"0.003", "\[Omega]conv"}]}], ",", 
     RowBox[{"\[Gamma]MR", "\[Rule]", 
      RowBox[{"0.003", "\[Omega]conv"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.795408418923833*^9, 3.795408419294843*^9}, {
   3.8193217398054876`*^9, 3.819321745290885*^9}, {3.842293831739999*^9, 
   3.8422938383890457`*^9}, {3.8425875369989023`*^9, 
   3.8425875469810357`*^9}, {3.8432617347176075`*^9, 3.843261736520706*^9}},
 CellLabel->
  "In[457]:=",ExpressionUUID->"80be7725-1bb4-4e48-8f72-a98823add088"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]LM", "\[Rule]", 
      RowBox[{"0.01", "\[Omega]conv"}]}], ",", 
     RowBox[{"\[Gamma]MR", "\[Rule]", 
      RowBox[{"0.01", "\[Omega]conv"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425875681824255`*^9, 3.8425875753802414`*^9}, {
   3.8432617246533594`*^9, 3.8432617263005524`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"2867abef-e347-4ce1-8da4-8fc841123015"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]LM", "\[Rule]", 
      RowBox[{"0.03", "\[Omega]conv"}]}], ",", 
     RowBox[{"\[Gamma]MR", "\[Rule]", 
      RowBox[{"0.03", "\[Omega]conv"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425875790213356`*^9, 3.842587580320074*^9}, {
   3.8425883614806185`*^9, 3.842588362914493*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"2ae9dcec-e1b8-4695-9cf9-77837e97bc9a"],

Cell["System energy matrix under above assumptions,", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942729842511735`*^9, 3.794272992451922*^9}, 
   3.7942809063213205`*^9, {3.795993131922058*^9, 
   3.795993133609578*^9}},ExpressionUUID->"7deedac0-af58-47c3-b656-\
1186c451e4bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Hsys0Matrix", "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"Tassum", ",", "unitassum", ",", "\[Gamma]assum"}], "}"}], 
      "]"}]}], "]"}], ",", "\n", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"HsysMatrix", "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"Tassum", ",", "unitassum", ",", "\[Gamma]assum"}], "}"}], 
      "]"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842387860592284*^9, 3.8423878636416445`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"0a794838-4f85-4eb7-ba10-67d9656a4f39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.25`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0.75`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0.75`", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0.25`", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0.25`", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "0.25`"}], "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0.25`", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "0.25`"}], "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "0.25`"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "0.75`"}], "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "0.75`"}], "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.25`"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.25`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0.75`", "0.005`", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0.005`", "0.75`", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0.25`", "0.005`", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0.005`", "0.25`", "0", "0.005`", "0", "0", "0", "0", 
        "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "0.25`"}], "0", "0.005`", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0.005`", "0", "0.25`", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0.005`", "0", 
        RowBox[{"-", "0.25`"}], "0.005`", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0.005`", 
        RowBox[{"-", "0.25`"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "0.75`"}], "0.005`", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0.005`", 
        RowBox[{"-", "0.75`"}], "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.25`"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8423848480797176`*^9, 
  3.8423878639697046`*^9, 3.842399299503426*^9, 3.8424710182036314`*^9, 
  3.8425877098930197`*^9, 3.8426425972640514`*^9, 3.8432615736034746`*^9, 
  3.843261667506243*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"0cdfd5ab-e638-4312-bdf7-b9c0f9c76468"]
}, Open  ]],

Cell["\<\
Numerical solution of the dynamics, with a random initial condition.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7836540352374563`*^9, 3.7836540706328754`*^9}, {
   3.794280910763088*^9, 3.7942809265140305`*^9}, {3.795826802298605*^9, 
   3.7958268028381605`*^9}, {3.7958268336398*^9, 3.795826882950331*^9}, {
   3.843254417936707*^9, 
   3.843254424196296*^9}},ExpressionUUID->"e342fcef-c56c-4e29-a1a2-\
3b86ccce5d5b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomReal", "[", "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"RandomReal", "[", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init\[Rho]Matrix", " ", "=", " ", 
   FractionBox[
    RowBox[{"temp", "+", 
     RowBox[{"temp", "\[ConjugateTranspose]"}]}], 
    RowBox[{"Tr", "[", 
     RowBox[{"temp", "+", 
      RowBox[{"temp", "\[ConjugateTranspose]"}]}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8426565617349043`*^9, 3.842656573324854*^9}, {
   3.8426566108517942`*^9, 3.8426566558466043`*^9}, {3.8426577812285805`*^9, 
   3.8426579429741*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"1cc4eec2-2a49-4f48-ace2-cd6ebab4513a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.14253154318387828`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07291259156731139`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03646958381873613`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09549083193031922`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.025612851880485576`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11698301216920075`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.00615822745975468`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10285119880277427`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0011353002669100658`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06433434040711697`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0035024730689453333`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05725929533310492`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03648710681878687`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11000276030347034`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.021558099517333174`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.041667787311073394`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06986416408127338`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13839177034220423`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.011010348297003729`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10416516137539432`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.017787438446244468`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07654035882911583`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.026590237554557524`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.07291259156731139`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03646958381873613`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.026844854949447477`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.060617870866494714`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.07005618809747295`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09244316954507602`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03679953011063447`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.016381623598344334`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.006443096275969392`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07895558938571957`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.025430310916724274`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13684800742333475`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.004359133739381884`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.04842737439054863`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05877331051283211`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05996355558923512`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03558580261235594`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12952418697226495`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.009963524497585785`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08113811641132578`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06276170352790134`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11056395625694826`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.027971418034754655`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.09549083193031922`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.025612851880485576`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.060617870866494714`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.07005618809747295`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10052224659093173`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08019862529521335`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06945998722912389`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06444429248768226`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.04075835649016657`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06173065831867838`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.004173579726263955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13596509626449865`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0004142055295052191`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09861354338519887`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.02343005457281742`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0869138071657635`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03452675356902684`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06229819086670728`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.01636704856350637`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.021423511461933227`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.006654781922112914`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07078646569489427`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.010618624812254302`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.11698301216920075`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.00615822745975468`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09244316954507602`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03679953011063447`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08019862529521335`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06945998722912389`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11554597012838537`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05070120415842053`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.01617481826952073`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05747540316880654`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.040737645780805826`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12273181427921713`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.010698457105007848`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0199885501112681`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.010505767570580646`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07649866175173417`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.016059621122268858`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11463581403766386`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0008776358233665916`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10406178599425071`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.052347381068184984`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08069214225961618`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0066897574303063645`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.10285119880277427`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0011353002669100658`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.016381623598344334`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.006443096275969392`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06444429248768226`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04075835649016657`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05070120415842053`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.01617481826952073`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09983271029631424`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09945336739388742`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.036293876044436124`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12533339594663828`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.005280489110655579`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10396484492334428`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05153558011055978`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.053066983688202`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.010318392900137535`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10739658022794003`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.00362375049315875`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.013720679477599394`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.02357133695832345`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06593216034030118`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.02361315011875075`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.06433434040711697`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0035024730689453333`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07895558938571957`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.025430310916724274`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06173065831867838`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.004173579726263955`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05747540316880654`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.040737645780805826`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09945336739388742`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.036293876044436124`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0861687566218801`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08340648255659276`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.034615005337297874`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02366723270611332`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03163946184210777`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06636074294172442`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.015270592548328478`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06533073941447318`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03750070098295905`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.04403118216871104`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03130444593066439`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12469666182603868`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.04082347693205933`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.05725929533310492`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03648710681878687`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13684800742333475`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.004359133739381884`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13596509626449865`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0004142055295052191`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12273181427921713`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.010698457105007848`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12533339594663828`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.005280489110655579`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08340648255659276`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.034615005337297874`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13167083180806774`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0007494957840406703`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.013236099605596026`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11861287622468439`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06819969971531671`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06327177109087291`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0004802507726929438`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13663542218561567`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04771118794285824`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10589935763215987`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.023332830775740238`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.11000276030347034`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.021558099517333174`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.04842737439054863`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05877331051283211`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09861354338519887`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.02343005457281742`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0199885501112681`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.010505767570580646`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10396484492334428`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05153558011055978`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02366723270611332`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03163946184210777`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0007494957840406703`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.013236099605596026`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03432457282948124`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07979633893724977`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06056495590305612`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.1317762617696487`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.04441954664791334`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10156936531927821`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05560656028833093`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.1114665362736866`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0017152502705708019`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.041667787311073394`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06986416408127338`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05996355558923512`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03558580261235594`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0869138071657635`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03452675356902684`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07649866175173417`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.016059621122268858`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.053066983688202`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.010318392900137535`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06636074294172442`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.015270592548328478`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11861287622468439`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06819969971531671`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07979633893724977`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06056495590305612`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02410707398908452`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11113649103150267`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.051265009493876905`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07212385873581337`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.030124784006056345`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07397320006176135`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.027826627194328754`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.13839177034220423`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.011010348297003729`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12952418697226495`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.009963524497585785`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06229819086670728`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.01636704856350637`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11463581403766386`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0008776358233665916`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10739658022794003`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.00362375049315875`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06533073941447318`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.03750070098295905`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06327177109087291`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0004802507726929438`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.1317762617696487`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04441954664791334`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11113649103150267`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.051265009493876905`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09077445131112065`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.060424063882408355`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.027513880366891945`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02895433707394038`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.011546945662295112`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.10416516137539432`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.017787438446244468`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08113811641132578`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06276170352790134`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.021423511461933227`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.006654781922112914`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10406178599425071`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.052347381068184984`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.013720679477599394`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.02357133695832345`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.04403118216871104`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.03130444593066439`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.13663542218561567`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.04771118794285824`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10156936531927821`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05560656028833093`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07212385873581337`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.030124784006056345`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.060424063882408355`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.027513880366891945`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.053426944562577544`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07681773462244385`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.07198592985469161`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.07654035882911583`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.026590237554557524`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.11056395625694826`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.027971418034754655`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07078646569489427`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.010618624812254302`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08069214225961618`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0066897574303063645`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06593216034030118`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.02361315011875075`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12469666182603868`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04082347693205933`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.10589935763215987`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.023332830775740238`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.1114665362736866`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0017152502705708019`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07397320006176135`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.027826627194328754`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02895433707394038`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.011546945662295112`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07681773462244385`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.07198592985469161`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.09425004372883126`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.842656624096762*^9, 3.8426566562223177`*^9, {
   3.8426578016264896`*^9, 3.8426578376870584`*^9}, {3.842657880880204*^9, 
   3.8426579535376782`*^9}, {3.842658949832349*^9, 3.842658969661194*^9}, 
   3.842659746340806*^9, 3.843261573704756*^9, 3.8432616695091968`*^9},
 CellLabel->
  "Out[133]//MatrixForm=",ExpressionUUID->"9ea49945-ba1b-4e7d-a37e-\
2bec0ddeb029"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"50000", "/", 
       SubscriptBox["\[Omega]", "2"]}], ")"}], "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"unitassum", ",", "Tassum"}], "}"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamics", "=", 
    RowBox[{"NDSolve", "[", "\n", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "//.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
            "\[Gamma]assum", ",", "NBEassum", ",", "unitassum", ",", "Tassum",
              ",", "Jassum"}], "}"}], "]"}]}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Rho]", 
              RowBox[{"i", ",", "j"}]], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"init\[Rho]Matrix", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}]}], "}"}], 
       "]"}], "\n", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"i", ",", "j"}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "\n", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"i", ",", "i"}]], "[", "t", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Arg", "[", 
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"i", ",", "i"}]], "[", "t", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"plot1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", "  ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Diagonals\>\"", "]"}]}], ",",
       "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", "\"\<t(s)\>\"", "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Magnitude\>\"", "]"}]}], "}"}]}], ",", 
      " ", "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(1\), \(BARE\)]\)> = |\[UpArrow]2\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(2\), \(BARE\)]\)> = |\[UpArrow]2\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(3\), \(BARE\)]\)> = |\[UpArrow]1\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(4\), \(BARE\)]\)> = |\[UpArrow]1\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(5\), \(BARE\)]\)> = |\[UpArrow]0\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(6\), \(BARE\)]\)> = |\[UpArrow]0\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(7\), \(BARE\)]\)> = |\[DownArrow]2\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(8\), \(BARE\)]\)> = |\[DownArrow]2\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(9\), \(BARE\)]\)> = |\[DownArrow]1\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(10\), \(BARE\)]\)> = |\[DownArrow]1\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(11\), \(BARE\)]\)> = |\[DownArrow]0\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(12\), \(BARE\)]\)> = |\[DownArrow]0\
\[DownArrow]> \>\"", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
    "\n", 
    RowBox[{"Plot", "[", 
     RowBox[{"plot2", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", "  ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Diagonals\>\"", "]"}]}], ",",
       "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", "\"\<t(s)\>\"", "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Phase\>\"", "]"}]}], "}"}]}], ",", " ", 
      "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(1\), \(BARE\)]\)> = |\[UpArrow]2\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(2\), \(BARE\)]\)> = |\[UpArrow]2\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(3\), \(BARE\)]\)> = |\[UpArrow]1\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(4\), \(BARE\)]\)> = |\[UpArrow]1\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(5\), \(BARE\)]\)> = |\[UpArrow]0\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(6\), \(BARE\)]\)> = |\[UpArrow]0\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(7\), \(BARE\)]\)> = |\[DownArrow]2\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(8\), \(BARE\)]\)> = |\[DownArrow]2\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(9\), \(BARE\)]\)> = |\[DownArrow]1\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(10\), \(BARE\)]\)> = |\[DownArrow]1\
\[DownArrow]> \>\"", "]"}], ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(11\), \(BARE\)]\)> = |\[DownArrow]0\
\[UpArrow]> \>\"", "]"}], ",", 
         RowBox[{
         "Style", "[", 
          "\"\<|\!\(\*SubscriptBox[\(12\), \(BARE\)]\)> = |\[DownArrow]0\
\[DownArrow]> \>\"", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}]}], 
   "}"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "5"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "6"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "7"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "8"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "9"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "10"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "11"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"11", ",", "12"}]], "[", "t", "]"}], "]"}]}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "5"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "6"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "7"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "8"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "9"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "10"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "11"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"10", ",", "12"}]], "[", "t", "]"}], "]"}]}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plot3", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "5"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "6"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "7"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"5", ",", "8"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"6", ",", "9"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"7", ",", "10"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"8", ",", "11"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"9", ",", "12"}]], "[", "t", "]"}], "]"}]}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"plot1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Off Diagonals\>\"", "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", "\"\<t\>\"", "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Magnitude\>\"", "]"}]}], "}"}]}], ",", 
      " ", "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(1, 2\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(2, 3\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(3, 4\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(4, 5\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(5, 6\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(6, 7\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(7, 8\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(8, 9\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(9, 10\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(10, 11\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(11, 12\)]\)\>\"", "]"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{"plot2", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Off Diagonals\>\"", "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", "\"\<t\>\"", "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Magnitude\>\"", "]"}]}], "}"}]}], ",", 
      " ", "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(1, 3\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(2, 4\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(3, 5\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(4, 6\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(5, 7\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(6, 8\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(7, 9\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(8, 10\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(9, 11\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(10, 12\)]\)\>\"", "]"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{"plot3", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Off Diagonals\>\"", "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", "\"\<t\>\"", "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Magnitude\>\"", "]"}]}], "}"}]}], ",", 
      " ", "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(1, 4\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(2, 5\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(3, 6\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(4, 7\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(5, 8\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(6, 9\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(7, 10\)]\)\>\"", "]"}], 
         ",", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(8, 11\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(9, 12\)]\)\>\"", "]"}]}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["EngyFlowIn", "1"], "[", 
        RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["EngyFlowIn", "2"], "[", 
        RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["EngyFlowIn", "1"], "[", 
         RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], "+", 
        RowBox[{
         SubscriptBox["EngyFlowIn", "2"], "[", 
         RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}]}]}], "}"}], "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]assum", ",", "NBEassum", ",", "unitassum", ",", "Tassum", ",",
         "Jassum"}], "}"}], "]"}]}], "/.", "dynamics"}], "]"}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
   RowBox[{"PlotLabel", "\[Rule]", " ", 
    RowBox[{"Style", "[", "\"\<Energy In-Flows\>\"", "]"}]}], ",", "\n", "\t", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.00004"}], ",", "0.00004"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\!\(\*SubscriptBox[\(J\), \(P\)]\)\>\""}],
      "}"}]}], ",", "\n", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Left \>\"", ",", "\"\<Right\>\"", ",", "\"\<Total\>\""}], 
     "}"}]}], ",", "\n", "\t", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "BlueC", ",", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425877982755165`*^9, 3.8425878444437475`*^9}, {
   3.8425878968612804`*^9, 3.8425880726045885`*^9}, {3.842588116695605*^9, 
   3.8425881448147917`*^9}, {3.8425884518145456`*^9, 3.842588459018429*^9}, {
   3.8426436733009987`*^9, 3.8426437253924417`*^9}, 3.842643770275937*^9, {
   3.8426438465494967`*^9, 3.8426438483721485`*^9}, {3.8426566356187367`*^9, 
   3.842656668733981*^9}, {3.842656798033289*^9, 3.8426567987241096`*^9}, {
   3.842656831609104*^9, 3.8426568520394163`*^9}, {3.8426568903047466`*^9, 
   3.842657126484473*^9}, {3.8426597679092016`*^9, 3.8426597852010775`*^9}, {
   3.842659833120535*^9, 3.842659867367022*^9}, {3.8426599031027417`*^9, 
   3.842659991171487*^9}, {3.842660804745757*^9, 3.8426608309195757`*^9}, {
   3.8426608937027245`*^9, 3.8426610715936265`*^9}, {3.8426611722710214`*^9, 
   3.8426611828512173`*^9}, {3.8426613182258816`*^9, 3.842661514062914*^9}, 
   3.8426615550685644`*^9, {3.8426650641498666`*^9, 3.842665064652913*^9}, {
   3.842665213744102*^9, 3.842665215297965*^9}, 3.8426657605299807`*^9},
 CellLabel->
  "In[230]:=",ExpressionUUID->"649f84dd-46f9-4a19-a39f-1d8eb38138bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
uvDPZhGOxyhbEf4fZQk80A==
            "]]}, Annotation[#, "Charting`Private`Tag$200418#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl0nk4VP0XAPAJSZJEWvSqUVmykyWT7j1aZKlIxatFCsmSFF7Ros2W7KGS
LGOdQUzMoESEJCVNEqqxRkxyx1bE7977++M+9/k859zzPed8r8KpczYuQhQK
hY8/xLshRXFkgOOIToYsj+ZeSUZvSHvF/GEiIJaQfa1sLA8dOdlaxGHuh1tO
c7LRgQXo3i9siXKKHXTJDh49Oc5E08NFTBKZDnAhuHdtoCAHnZHLqzBScwKP
w/v2RW+io0pj7w7lUlzB/f4qXhMlBbVumPy5ss0daNGHJkEoAb2UIh8ezPSC
Hk+HlQNoJPrBKGN5IJwHd/1p2r3Um+hgZqmDjpoP0N0oWS0eAejcskbmoKwf
rGcdnmvuOofKXOqaTqX4w9XEkBuWnk6oysDobrvhiyDxqNAhzcEORQ4Ix0u2
BcKYg/YKq5K96MFnK3l11ZfBLU9rX6z8TvSMsqrGFeZViMuMVLrquR1FG9dt
l7O8BrqFQRLWrjT09dXcXj+4Dk0UoV4xWRp6SE/39nv9G5D3drHkhyAa+m3o
qbaG2k24p1fIlAqjoe6puz+FUW9Bb6D908g8I3T80LsrfbLBcKrdJGDHG0M0
SNx+EywJga28ReHu8vqoeHXP62RKKEi2vTh4ZVQHvevneX5qIhRKpCI6MkED
Xa82uergcBg4jwhyUpcoowxe0PNCXjgwxYwMjtQooHqJi13E225DoaDPxOTU
WrTKMn7J6aYIULJlJMZ9lkUtFsizXlTfAT0TmmVOiTTKZWf/K8+OhLPin+Qy
Li5HT3hqz19kRsGIMt+yIXg5+kOhIoubFg2iHRY3mg2k0YphBaXVljFA3bYr
JPSPNHqt/vTvuroYiH0ZPXrMRQbdnc584wOxwKrY32RlJIOKX/6VqvA0Frjz
gULGLtJoi62+zzv9OMiXSuHa/ZVCE3QCTa8UxYFQTrPKWwdJ9IhE1Ro1tXio
CQnam+MujlK/C/Pbs+JhyjbYIDRWFO1/YVYdQr0Ly4QuHYnQFUYZDyPj9ZLv
wvdZmdPhdyiot3/r6R7ZBEhzcPut5fMX0bdZRYuJSYCaAqERTacZ5I/6saXI
kkSI2blX5TH9D1K9KJ03HJwI1j7NKby3f5Dgnv4n9ylJcOwK1fKe7wxiUaka
uudSEuw0urM0S2MWkbp37sjERBKMt2jLf8ybRT5eKNGge9+Da4p5SpWcWeTB
vt+UA8P3QNdFWL1j9yziqIJw51zug9yIG5LiMIMoCt/Myefdh+3KIgF06h/k
x5eGwCNHH4D/tzXZgaXTSFGZxH6xtgeg9HL+g7PZFOIXf0CBbZ0MTG2btHdz
EwjNK3HcqSkZtp/920wTjCMU886G5aYPYenT1MQR3XGkbiM1uar6IUQ5Cn/f
91yA3J5z9jq7LQW8erqDkAgBYv05z2QtOwVoI8X99DABIlvyc0Wj9iNof+k6
45QhQDqitgz+x3wEq59HjMjUCRCDggyP/7RTYY2HyFL/HgES37R81K80Fart
vN4m/hAg075QTpNPg3qFQqZ2uwBREpkOrDiRBuJbubHSBQLkUPxjY1pGGpwN
l7m13luA3NjgOlfelwZ/Ge3RbaoCpKh4XbWRcjrUJtt69wxgyFdou17ulg7G
l3x9tfIxRKIlcqdRfjrUrFdnVwVhCO3E7oXlP9PhVfbCaisnDDnzc7Z+q04G
SGKe2xiHMSTxSklYmU8GaO4P2H7xIIa8lPC02MrOgBbOnjHLfzEES94oUTad
AQHRDzSzT2AIVa2z2XAbHTyxeZFXLhhiVREXzblCh45cvVCdMxhy1dzigGE1
HXjeC0Q+4PH89gUyHKFMCJL7kDDggCEdruVcg92ZQLu91uTBIQwRm/JOZIdm
wlTLPrVkMwwxCFH51+B1JhSHPT+Ta4whzrK8NWyJLHjYos401MWQuMykTn2r
LNCRHE/crooh1VusUkpjs0D3jovOGkUM+VkjekKfmwVL9wZkp27AkH9snlNL
V2bDcZFvWia4Lbr9evTss8FS65SQwUYMueitkVmSnA1LjZ47Fm3CkOz5Phe9
r9nwG1EencPrcaMeKpdQc0BasneEoYQhQusODW1xygG56AnLy7h1CpYwn2Tl
ABfxP3URz3c0rvXcMpgDSytPz73H60c1BWo+Uc0FJ6/KzlYFDHl2RPeX7tlc
yDKV/+/Negz5MTRUzHqcC/IHbP9S1mHI6oB0H10sF3izXv6p/2CIqZi9Pksv
DwZvtW2uXIshvklSUzr+eUBzsO+zxp2h9KqsuDwPLm37a2yKu6U0KFBnNg8C
hwz9AnHP7TI0LkYYUHGXXlSHW53786/2dQYINvmfWobXP+KUXVVUywDxozbv
jHGHYceva4sy4Q2Ht34HbvZ12Z1FZkxo9RV7r4y7T6pZRDuCCYnOCQNDeD2Z
tFv1j5uZULnfvOo+7h1axmFaUvmwKKiLsR+393OB+WObfLBQ5PPn5TDk0T7m
Eq2EfHCtkQ2tx/2m61Rz4ad8GHQy7WDg/uMhF60pVwD+rpH0aNwqM++tC48V
QNXxQqUE3La3w6U1UwvgDNVWLR33rTUm3ILuAqgfZCQX4GblTidobCoEVqhW
xivcPMMiu4LThaCg+q20Ebdkg+sajbxCUMrlfGnHbWy7vjN/uBBqFL/UtOJ2
7297qK75GC6sdYtsxn3PN8oh3/sx2JyIPlOFu17YlKr+5DHYt3a6c3BPxP3t
Zk48BhHn3rt5uMW8Vp3VExTB+4VvGPm4E6S1h+KGi8HycNpCYj4l5Sdlj8RZ
MDa/agsRL9tmEMbYzAJV3qRPIW4L63I7thkLLFbvqmLi7nI2Vq5xZUFjLFeK
yPcKqJpsDmGBvyh1AZE/H7mj/nMWC2JWRNUTjsmoS+h/yYLgzhv/FePewDFz
GetlgdV0tSYLt9viw3Sq4xNwnjM3K8FddPRkt1XXE+D81t9BGKEEHi/klkBS
ZKsLG3dTZtxnieZSSHx9r5uw9NSjVcbmbNgtaEBLcf9rzjzsUceGmzrS9UT9
H8c1Ff372EA9/2Q7Ue/yheLxG8IcuCQi7fuU2H+o3suoDRzgLvvUUYY7NZkT
/8CEA/pZWpVEfe0imlO2IwfWLb31gojXvKzUZQVxQIduXU98f+gzCD1/xIGd
DSd2E/EBfu37xkoOJER3vS4n7tM8rKU+4ilIsC3vE47N3Puu1r4KMDT9FpFv
FVWsrFz5Anwrh4IJ275+5urZXAsrUblDxPmibcZx3hV1cM79MhnndD975pvT
AA+Tig4Trp3pz6mqbAQtefNGwu9kl8WLc5vgIkXjBmGPFW4Lk3jNcARZ7kp4
kUyt/0b+O7jDT0kknP3LzN1wuAXKRPJyCDfaFa3+8u09JPFr8gnLmXoqKw21
gk2pEWkPPRWDc9gHCE1vIPNjb6+rWPWDC6e09mWQ/fFWINXdHwFpX51CWDGP
HhzObQMGe/89wvHndZttGj6B30lWPGHNF7J+VW/bQaD6O4rwa6nf/6i3fYat
RRoRhGmvVtKmmzpgm+m5MMLMID27ly86wXP4eAhhi+fZ3C1vuoDv/Yrc5+Ds
aht62xeQlqq7Sfhtwcb4LV1f4WSNIelSB01ubfc3yHeZI/dT9tSo7rM7D7Y+
nSEta3Ys7X0fD1TLpcl88dV5amvduuH6zAHSc98n2M78bji24CvpL8PfZr+c
6QGfy4/I85+NNu6w6+uB6rXx5H3pGn7dusG9FxRuvSX7zb2KafJHe4GmpU/O
s2O+NcTMpw/CHdnhhLuCnnylT/aB0Vkrcv7+wULhiuF+2LPWg9wPpdu2PtF7
ALwVJ6MJ//N5LsxnYgCMaeaxhDcs3CV67fx3sLW0jyOsohN+8w7/O4wt3EXu
2ybxwanNroPQaLTkLuHLM0yTet4gzEuWk96e+b2lxHkIn+9EAjnv3o2O9MEh
MPwqIM3YPJv3wukH8I39yP/nsOhHwbevP8Cx+hfpJKV2vpXzMCTftkki/Nm0
83vV0DCYtoWRRtMYO6s9R2Bg8X3SWb8DUqtHR+BucjjpyZCB0l9ufKDrOJE2
XXHwDbWPDzHczaQ1+4fiMs78BLpQJ3meLPua/Sb+T5gSv0a6vGrwaGjfKIhe
eEX2+yFlPCbY4xeoy8qTPrF+/aY1o79gz8A5ct427sD5LrcxsJX8RO6nr7n9
3NjPMTAEQ9KOztQ3MhoYfGXyyX12/XFVMfDAwOBoLukfBQml1FwMPqhdID3t
WLtjST8GD4rMSLfqi+auUxYA5aAKaaa4+VJdNwFsQGVIBwZ0WH3JFoDFCjHS
5oMecWF9AmgPFybdd1G64JjyOCTuEyF9dXF5g7b7OEwtW0yawd4t08wcB3/O
MtKfnFod3PjjYO+z5v/9MApCU1QnYNxXmbQcFlb03nUCxG8YkV50NKBYkzEB
JW3WpMdr3VgRIxPA0/cgXd743cvvzCTk3EwnrTEkcVU3axJ6+56RThfTjRzt
noRlem2keeaevh83TsHpTaOkqRHZR5+6TEFG70Jyn7dNyvrYvCk4sECdtLiy
ptdRxWkoZqH/j0tkTs27TcOvXhvS/wNU31a1
            "]]}, Annotation[#, "Charting`Private`Tag$200418#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200418#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
oWVgOnFb/f/tzOFLGxbLIPXMQA/7f0bg3os=
            "]]}, Annotation[#, "Charting`Private`Tag$200418#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
smsxxf4fwLpeCw==
            "]]}, Annotation[#, "Charting`Private`Tag$200418#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
FgP+3+8g3qSZf9az8CQohfD/APB3GyM=
            "]]}, Annotation[#, "Charting`Private`Tag$200418#6"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
0RMKOg==
            "]]}, Annotation[#, "Charting`Private`Tag$200418#7"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
8/7fzpq69td2HQSb0wj/D1zbpSc=
            "]]}, Annotation[#, "Charting`Private`Tag$200418#8"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
58hc++uwDmxbC3D/DwE9TAY=
            "]]}, Annotation[#, "Charting`Private`Tag$200418#9"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200418#10"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
1XIBBHy3MfL7P4Myk3w=
            "]]}, Annotation[#, "Charting`Private`Tag$200418#11"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
U4T/D4ie/fU=
            "]]}, Annotation[#, "Charting`Private`Tag$200418#12"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox["\"t(s)\"", StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox["\"Magnitude\"", StripOnInput -> False], TraditionalForm]},
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Diagonals\"", StripOnInput -> False], 
         TraditionalForm], PlotRange -> {{0., 99999.99795918367}, {0, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(1\\), \\(BARE\\)]\\)> = |\[UpArrow]2\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(2\\), \\(BARE\\)]\\)> = |\[UpArrow]2\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(3\\), \\(BARE\\)]\\)> = |\[UpArrow]1\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(4\\), \\(BARE\\)]\\)> = |\[UpArrow]1\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(5\\), \\(BARE\\)]\\)> = |\[UpArrow]0\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(6\\), \\(BARE\\)]\\)> = |\[UpArrow]0\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(7\\), \\(BARE\\)]\\)> = |\[DownArrow]2\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(8\\), \\(BARE\\)]\\)> = |\[DownArrow]2\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(9\\), \\(BARE\\)]\\)> = |\[DownArrow]1\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(10\\), \\(BARE\\)]\\)> = |\[DownArrow]1\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(11\\), \\(BARE\\)]\\)> = |\[DownArrow]0\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(12\\), \\(BARE\\)]\\)> = |\[DownArrow]0\
\[DownArrow]> \"", StripOnInput -> False]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9zntMU3ccBXAEgoI68VHUKRNQoxIlvFJ3twW/VETQTgkMRd6giAgpM4CP
8SginUDBVBiizkpdQZx3KuCk/BAUrMpryIC2vKGFUlqk1LaUXkBhLtl6kpOT
z3/HNjLeN8rYyMjo+8/9dxvZ2ydlvPB9Rv8lYw2NNYe7wf+ejOgs5+FHDL6X
bep+Aw81OJltnc3AaQaf2WG/JxVPMzgsznHxIn7N4L5rLvLz+F2DdfmfJLju
icEyJb+juY5n8PUSajv/xEuDj7XURse18Q3mSWprE8saDW4nrSqwELSCdn+F
UXLDCLZ0Lf/CVmU7dGemLY9wmUDNx8s3DA53QOvTyltJ/v1YrOtOcrymC4Zl
xmFO5ycwnnidW71ECOEyndvDMgVWcM65zbexG3wLXZz3cYewFsvZzbtFvRD5
47L1bIdqDKe7Hn/d0A/BWXnW006vkfzjBl+uaBDcBB6rqTIhehbqIOBLhsFv
r5VXCWcQkbyCOR1SMVQvx+OcmBK0MK6rOqWUwFCw34qGvaOoVtVMOS4dgUj2
YH1r1wh6kKZxUKpGIfmxgz6gU4wG6E+HuDNSsLErbbZm96Mx+WOTmvdjYPlt
oiDIWog29y5kJehkcPpwxUDmpja00yn7Sq5yHMRHc2/nJ7xCKfO4+1uxHKyo
gQ/zvq5EC9St4Vy5Ahx7zElW5GDM30yoHR6aABPtp4ma1RVYr2f/+EvFe7hk
33PmpKgOK529VFyvmoT5FM2pfkUD5rnO7y8bqRJMPXzWlP3yCiNVpZ/YppyC
+Ad3Biz6GjD0Uh50VaqCTaal2sDr9VgXe5rFiP0AZr7mD6PS67CwLVu2bVR9
gH1qgXvgkWpMJJCdG4hRw0INZZfsViUmbeuJV0+pQT21jFvxqAwbmIveSY7V
QNNi2LklzwsxIpxPWT6mAVLddC/ruxAMt/Be6RyjBZr21HhEDhN5y2Pzs6Ra
2P2mKIRGuYnSzFGj49lp8HZ3iCm6yEHdJztDY5TT8Pb9D0kLvVz0pSarvCNa
B7+bs4vai0vQND+mkjmpg812v8kGfbgINY/Tks7MwMT6BOO7Og66t8w5TyWZ
gfqbP1/A6XeQDfN+0PMoPZA58XGrXhWiHPdqaZVYD1fXyri3W/JQ1QcT84ER
PUz96ZHMYeahkeKje5aM6eHvnDXGv1Lz0DcLsqTDCj3kUqRC2rtcNFFDWipW
6yFKVsO+0cFEh1wTdpmbEOC/eqXiC1E2stjhQAvaTkCJj+kBaQ8DkUWX8tN3
EHCgeOir3psMFMl4U1W6iwAWMza6KYCBakaDF1V7COA9YHy80ZOJznKYrEwy
Ac+kJLfZ7iuoZaOi8tFBAt42p56YE15GM02u3Z3eBLinv8DxwsvI7mL6vP4w
AX/Q/aiB/pfRT6L1HhQfAtz4kY7lgnRkX+ApFAV8/pMxYnX1Ph0do+TPzgcS
MOcZ+qRpOx1lqAetbUMIYOzf9nppaRrqO5p0OjaCgEReWCedm4rMFutzWCcJ
eFdUdwXZpSLnxyuePIsigJpBttXcS0GhIQFdfdEEeOEvzOxtU1DOihL9YgwB
lgcPsSI4yegflMZr5A==
            "]]}, Annotation[#, "Charting`Private`Tag$200506#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9zHlMkwcYBnBcnYwOdVNQ2TSCRzgUohXZVISXyuFXQDeYUlpARLEiWOKB
85oih3II4ViMQcEDrRtdEZm2vKwTZqdQHUFOx91CgSJ8FihtP0DKXLL1SZ48
+f3z2EXFB0V/ZGZmFvih/25N4dqRAUmkp9l/SVrEz5kSesD/HtnfWCYR7jL5
Tvpcr2vCCJPPFa5ITxXyTT5s7+T8g/CCyfviNsyeFmab3J69SX1KWGSyLm9G
KdQ9NHmAlDXIf5eYnHsvoF4WWmXy3pdSXlydzGSJUio9+aDG5Hrrhfn05ldA
7vV8lHE9eYv5Ytn3q8l6CPTyaGwSXEJ5SNmyrp4GWB12+dRxZRrGujq4xY83
wdINjFfhwiSUKKw8qpUt4CuNmxtul4D5xxh1QTVvoDdLsEorj8OXn00uX9/a
Brwre5LleQdReNE15M8/OqBp7sYUP8tIVL9fFlTc2gV18VurPk/k4pMIl2aZ
sgdyL0kWRaRy0Hpn2O0GlQI0X76otdzMReOgTnyQVIKF+7ajZ0kuSjVyZoiq
FzgSK57g4zD86cK4C6npgyU72e7kAy52Xvy1u1ivgmced6+K3nOwX11Kqxzu
hyL98yLFVg4ubzOmndANgC4y/e5+NRsdNqYnXyUHISSmWxFKD8Hz00KvFwo1
VN1wTuc//w6NAasji9VDMOqxPVs88y3umdei7el+C7vNSSo3Yxe2+XYMVg0N
Q3uKc11WG4H3J8/cqtaMwPGDSVlV9b7oaxX8l62KhPKQXI7e6I3W4sTQNeQ7
sJuyraThDsQqNfeKSgMFfJJzoo2JTYUTOamxo2Dz9SEfvoCJ+1auXGOjGYWz
tKzSctcd2No8cKwzZgxqYIXoGXijqu7v+LF3Y0CNJ8svPvXBzimeg1vsONBO
y34RefkhFSljfto/Dg0ZHRXLbu5EIZ2Yz4jRgtN6J5/GYQIJdWxemuqD+7rM
Ji388YIF1mw4MgHu0xsX2bkE4JsDjREx5ATUzudrc9cF4hfjaWUNPB1E2xst
pQmBOCGLKc8c0YH04b22PkYgonyQn3BYD2Wp+ZduCgLwzieMLI1SD9HSDv3P
tAC0zRRwf4s2QCG9wGnY3R8zvCpUYoUBhhniLtVJFopHaRadvQbYtOsrx6Bj
LOy9tdt5Tr8BtrArVU+PsnCrcSDBf8gAr0vePr52iIVvK63NFWMGOH5EO+nJ
ZiHL9YSjBY2CvD1FS85tYyHd3oXPXUtB97BdQfEcFrq1nslLtKdg0CMtmGYk
MCr1ufi+IwXMxVYvoqYIrOwLm9U4U7CjvLrHVkvgkduZOSluFEiH4tYWqAh8
aTNULvKj4BrQp5JqCNTXur5pJChIXrCA3SMjcNXpxGmDPwUL7eX526oJPNu6
1Jv5DQXBJekibQWBTvm+La1sCjpsNpVElRC4l5k3Oc2hwBg2uvmpgMCksa4V
duEU8OpFj2yKCWzfnXAodj8FoY8Dk17fIHDebHVGzgEK6JHPOtZdJ5BRavnw
SfSHfxHX5cqPBEaEs5vaeRTUVkSd780hMMPynmE2hoKZItva7VkE/gNRMWP0

            "]]}, Annotation[#, "Charting`Private`Tag$200506#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9xwlMkwcYxvFOnCgDZNPiEQmoIOAscnQIy4IvDcL3cVSH4ZBSBAG5DIcO
gblhPVBBRyowtswJGFFxjcjcpLwIKCvagUNSQRAsQrXAh7aWlpZ+iMK2ZOuT
/PPkt35fVnjyIgaDEfZP/770opNqXBy/nfHfjn+SKXwr8oP/rUp43CAWcU2+
VLzYv1IUZ/KRi3bFRaJMk1OdN7O+FRWavPeA+0K+qNTkoVIv6rCoymRD2XuF
yHDT5HG1RNbZKjb5fG1oj2TPXZMju1pSDnRLTBYrWlq+uiY1uYe5vNyi7yHs
s8052L3ohK/5CkneRnUP6Gp2SwOdBdgZ1bB6eEQGdtbei7yEJzGD7eKdpesF
UsYpHYwSoHh0pd89xRPYsotnd6kvF8tzPLvDpQOQHODPqKjMwS6b2XVb+gfB
zZpxLNshE0VH2VEd7c8g2nfTGrkiHal3q8Mv9w+DTWHeyfMVqXg7zq1PohiB
R3OF02LHFGQSsTUy5SgEr7Xdac3aj/MThsYktQKkTjWxHubJ2KLp5EQpX0CC
z53r8rpErCvUuak1L+HqaWlVjSYB5Ud/e355RgmLu/Spt5nxOEbVmzW/HgMf
Fivvs+9jcd3g/JlDhnE4dbrty/ePotHFo/jEOfUETFRa3SnNjcBv5kT+D0Yp
8H7ErpsKCcf50I3xl6lJqL//Y4UvFYYRS55Mjzx/BUHL03WlD4JwMPDZxN3J
1yDl/rHVguLgldmC6nsaFSj2V717FQsYuHL3Xw5KNfw6IPTxfemHzEbBHkf1
G/jYo/0XR4Uf4l2Kd1qpgezglnWWTdux96JeWJQxBfwircNGGeBee3vHNZop
wAtWvvVHONjfN54jT9PC4eIexk95AajsfpqlfaOFhg3pNjuoQJS/TXHxztBB
doe7jLudRDpewvloTAdP011SpJYhKLIgrTzTpsEz63pQfnYoklRG2RnlNDie
k55YEROGhctQ6p6uBznhU73blosDiY/j0tR68Kv9dPj+z1xcqzvTIEsxwNXp
6iF+Phf1krRbZ1UGcFW1rr3WFobYOZGZmzoDs3w5b0oSipeWen6nUcxAU6vH
G25bCDqcvcq7k2yEAcFrxrObwVji36RsHDUCP1PVca2FxMYps2XyF0aYrMek
vCYSX1TvZH0wZoTWD+33Bv1O4ufz47khk0ZwPaTlUyISXzUzzUe1RogR5/Dc
LpAYzD7kusyMBsE2yYrOAhItnN0yeU40FF7vSN26jUTv/oIygTMNzZ4RZeZe
JO4rut94xZWGHCygRtxIbH4Zu6Bh0eD1RdvK85tITK85KzzpTUPEMW2AgUli
15rJWzeCaIiMVbZL9ATO/MkeeEzS4BLvtLRqisAN+YI5YwgNVhF0Yr6KwK/7
VwVwdtGgKS2PZCkJ3Fwe+KQ/moakG7yFH3oJjOSUzc7F0GBZS3Ue7CHwuHbY
bj2fBmHRqaqwhwQO7czdn5FAw6pT7HgzCYFLFu6VCBNpKElMCn7eRqBnveXN
28k0tNcpfbCZwDh+dO9QCg169o7NFY0ElljWGhfSaIiZYNpl3SLwbyAjW1k=

            "]]}, Annotation[#, "Charting`Private`Tag$200506#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9xw0w1Hkcx3HlRlSXLu2UJkMP8nAozhk/1fblGneLrtLl4YrkIQ8rMvz/
2R5wyoWiZePGdchz085JuugnolZ5uJwT1nnKLrtrPaxlWfuXsnc3c7efmfd8
5rUjMNozZLWWltaRf/r3W/JNpyW1AYe0/lvypij2ey4d/vf02bdVtdxvNS5K
+8Q5l+uv8eV8o7QUbpTGYWaW1le5CRqfidynjudmajyQ+YWU5BZorMz+KOQq
H2oskfG62hpqNc4q9ejk+TZq7NVeHxrZwdO4VlhfH1fRonEnTZ+ztud3UASU
fCbIleA1BryLu2SdIFAPHixKfYDavKu2Do90Qdj2n/yMvbsR097cIVrRDd8p
Yh4NW71BtYLN9CZhLxzv6RiOLXiCODF2HZ4tfWCww25VoEEWbt+4tN2K3w9T
nq9Elw3qMDfR3rv5xSDkHIoPrCt8iaUftnqW8IfhgEXi67b+ZvzE36aHJxwB
saPuhfKYZkz75vS9LpEANgw4P1KMvcQr48qaYJkQRhcCG21/aML18jYXb9Eo
mPaxAwvEdfh+gsJGJh+DrI/+zh9l1Xgo8fG7kkURsHqdrntcKMViaaV23ZQY
mgPsbMTPL+Pt/SupsUoJXOGxosrycpC5bdq1W7JxoN32aZjNLkZXlrnOrwVS
iCwxGOP4lqMVj10BJdIJEN3dwvqlogKd1OmdH3k3CQXjwS3DpRWo33VwvHFi
CpSHZ3nndpajsiVWYZN8GhwveaT5zBYj180n3piIZMCadEx4VpWPaDVJvrtl
M9BALyaZbhyEG6WnbojkoG+97zdLejLqzl9gpzBnYaZpU6h74XF0xth4t6F8
Fk5C3g39hjjM75HEDIXPQa5V0Ia97clY1PFX9NzMHNhfZHWfr0rDQ+9DzR2Y
CgibEha0LmRiKoDnsk6sgKXl1Xs22rIxdy3jU7vweejJNDE++DwDM6TM7FTR
POSm5DlGR6fiBD3csi9iAR6J9zLv/pGE+4Le+ofLFuBa00TLpvoYvE2RWtUV
qgT65wFrGL1eeIEXXn1zWgk5ldtafVY8EW4bjyLCFuHHxGPBy4wIVKRrlyEX
LsKMylDfTByLTG6Wn3oWogJpyFQhfZFE6c5PRTUCFcx33tGaVJGoZlZbb2hU
BemJHKOn8yQaLTxqvUqsgtsjH1ZHyEnktCIh3CdUwEp8PHdJQqLJOtoawZwK
ToxZTvh1k8jNPtZCT5sCNmPLnVv3SbTWzCbqlCkF01UZ8Q+/IpEDn5WdZEZB
xSqn9p4DJApMeVVTZkHBBmY0mv6SRHVjp9VyawrcThjunzcjUcS9m+zrDhTo
6IpORq0jUbvhRPWvX1Pwc5DFwat/Emix1b7vLYOCrXp5e963EmhnfNKyyp0C
R4WJz4UXBLrE33LY5RgFR32N/N2qCWTJce3l+1Bgq3ZJesEhkJdL9tLy9xQc
cpXb024RKHlu2GiHHwX7g5dfh1wn0MBR4hzzLAVOM/wj6jgC6aib0tlBFLyh
U2aM8wSyq1z/8EkIBeF7jR5khRDI38+neyCUAvfqGdd+PwKlry9VqcMpKMO0
GBMvAv0NE11cEw==
            "]]}, Annotation[#, "Charting`Private`Tag$200506#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9xw1Q0wUcxvEZJIFmlpJieoJAKAm31qT+uwt+7Ayd4ktqoKL4inNAyIso
LwU4xXgLkbfQQjEElSkQA8aPF0Gn4ATFMTYE5xxjwBDm3HjZH0mo7nLP3fee
+9gdPLYt4D0KhbLp3/77lnzHkQHBfg/K/+N+EpLxhucO7zxyoKNcwNts8pVk
c89cnr/JsfnLkhN5ISYfdXJ2+ZkXZ/K+YOpMFC/d5J70rzQneJdMHs9828sb
LzN5QCsUixoEJp+/6t0u3NVoss/DenbwI6HJgt76+uPXWkxut/4oy6qzFdYZ
8vvqRHK0WCA8aa9th+187e3PDklQ5Fu++PkLMZTWUOa9z5ISQfSVbscMErh+
Ie56AFVJCJQL3Zt6pcCqtDALoSuIrDDao20tXcCq885bclpMPJw/uXS1rBt6
aNyAPEERwYun+9678wyyhytvePPrUPP34m2FsucwFGQuj7rfilX+rp3C3hfw
5nOj3sWvA63X7ykQq5XgnR37Nue4FKcHx6sPa3vBWRpOj9/ahfU6EdNXrQIb
/4sl60UyvB5ncNXq+uDlleh+ONCJ8ni+onBCDc66qttrHj/Bfk2pWe1wP7gz
ctzrtSJc2j2dFDE+APySye59S+/iyi+TT6dpB8HxUl/anz4C/GmK59ms1ED7
WlWbR+s1nPa231+oGQLOt4omc08f/GG2dPSF4iXky+3KW2YKiW6vZ4ONQ8OQ
lBv9lCT/Ioomoy836UbgXH6P7ZOmKsJr4fY2W7UWPq6Iyj1bXE1YVyfsctC+
Am3o/DiFpIrARo3fL2odPJi3KqZjSyUhyR/LSAx6DRo9X/Lpsgpi3/LlDja6
1zA4N0ds8ewWIescCJNz9HC2OTjw5JNiQv3o6TH9Kz381m3nWK76g5C/Ya90
CzKAolZQZm2WQpD7hcw5/QZYR7VnxPd9R/CsWB/SOKOwJm0Hy2HoFLI0QZlJ
6lH4/WJDhq4rHeMssYUaOAY+w/dsEu5mY9ehDn+OdgyYVa7pdE0eLjEklYvZ
47AhV9WYJ72AY0JORerIOFC/T7aiUfMQRYMhkUcnoKRtdZnYIwevfED7Vdc7
AaU3vn4VrTiPtqnFfnUBRnDiF+6RbErFFM8adbXSCI431zNq+Fysfm1mKVcZ
Yc6KHCojjYuqy1tcZvUbQcz+YrjyMBcZ0wORG4eMwJQ0r8ix5uLLWmsLpd4I
zQx+h9nJU7iBHrHK0oyE3Daalv9NAlo5uYb4OZKg7y7I3RUai26y6MwEJxKy
FmTGUGxj8WDi/eqiVSRsHXCBgvYYrO3bM6NzIeEuPcmv1TUGAwtSM864kRB8
ug5kI1H40Gao4tY6ElTMBrqBfQInHtC7OlgktE/+eIe56ASuiEqYMm4kIbRh
h/xccyTGyBatZW4loctr8JqtYyQ6Z3lJZTtJkB1eaG6vikAfZubk1G4SPM5w
Qv3PRyBX/3yZ3V4SatgMzzyIwJ4tkUeCDpBg4RM+ZXE5HGfPNKVkHCLhyOPA
3e6bw5FWOresKoAEZf8sy+Nvw9B/705JD5uE1dspzBs3wzBl7lXjDIeE0TZX
UPiF4T+5r23h
            "]]}, Annotation[#, "Charting`Private`Tag$200506#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw90H8w1HkYB3DlShxzrtKpU1EcuuMks1eZ4Un18TtrnR+dkkjbtoZryqXy
q65l0TWo9EfnSltS37tIsT1O2drKj+pqF+tnsVp2ybZs1n6l49zM3T4z73nm
9df7mccuLpmVMNfIyCh4Nv/uhhKHkUFhrLfRf3NiYVLBB8oL/vfIbmmlkNpm
cGnuJ5uKqRiDj5Usz+VRSQbvc1zjkk5lGLwr0W0mlTptcNfpdaqfqN8M1hX9
Lad0FQYPqsWSpntCgwuvBL0Qb683OKK5jp34XGywUF5Xd+hag8EvrD47Y9b6
FEQ54d4YcnyDySLx4dXqF1C2p2vZ1+WZ2BRZaf2qVwJrfc+v9xrOQ66HEyNZ
2wJhix7adftlo7BvsZdI3gZxR1MblfI0PHPA/TmroR0kT8vyA388iM2Wkzbf
yDpBz5h7q7CCjVSmR+SjB91QEXdiw1ewA1UfrVkC2StosRiM35q4DatjXFvF
8l44W3fX9nCqF1r57bgkUfRBxMIc9gMHR5xW6mr2qOWwpes6h5ukXV+nafKJ
VPRDVc5otthi3obyDK2rWvMGatinXVaILbEn8/ZrwYQClA5LhDcOueGA6qZx
7dsBsIqfauSv90Kbzmn+Qd0g8K30PLfLW9Fpbe7Pp9RKWCBwXhzuG4BpU9Sm
J30qmOztiKVag3E6aHWsQDUEjyKHzDOPMjF8ftv73tfDwGSKghofh2In6VbW
D72Fewp/qU0tC69OHrko0oxAkiA9rXtFGJLFYc9sFWrQyj3SDqwKQ6uarO32
6ndwca5TSbGKhVivis5RaOC+uU30wHkWtpSMF/C4o7B31ZtTaMfCXStX2i/V
jAIJr3wccCgUZa2DB3o4Y5DgeVbCu81ExfOO5LF3Y9DRuTWYfSEEez6wnRhc
LTBS0z2KFcFIx4p9Ph3QQseW/UL7lCCkzPwt3DnvwSS0tIp2DUR/FbeIr5h1
+jnT6m8DMMMUG9z2j8OXjHvNJz39sT1eGsNRj8OSz83n9O/0w2VafqWErYNf
r1h+ZFb74riYU5U/ogNtHFf60tYXsUmZlLJvAkLzvL8LLidYusD9F418ApYX
3zASbCNom18W/WeCHpRrLb5XE4J5m+4qavr0YPx7dHfLMYI1o8amPf16kCBj
0jqdYP/FEJc5A3pgXZvcF5tBcOP0YErgkB7SXh63nsgiOFxrZdI3pod6+7IK
z2yCAR4HnU2NaSheeS7DsZCgmaNrUrQDDazb90u9Z+9hyI4UZTnSEHH84d26
6wTjeI9rrjrTkHjNeHwjRbD2zY4ZjQsNr2/wb228SXD/pfyCkwwanKPKgdwh
2Lx0qOoPXxqmis8m80QEJxo92qX+NJznuO6yfEhwVWrWlD6QhhSmW88FMcGj
si+2+DBpmG8mjLrzhOCaM6RNFkVDm64rbPgZwQifosmpH2b71onKUv8ieGLs
1XK7nTT4KC57mrwk2BWSspe7e7Y/kJrn0EJw/oworyCehnXbJxzvtBJ0v2le
UZ1Ag4Cfu3ezjGDMzqiWLjYNXjy9UNo++1/zK/oZDg0NH6QL4zoJ/gNZ3lx5

            "]]}, Annotation[#, "Charting`Private`Tag$200506#6"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9xw0w1AkcxnHd3ulWomLnqlOEIqLO4fq76n5M46X3uJRke7u8ba1zWnkJ
G8p7bbq6rhm9ILnbuXI1WT80tlYWpc7bCqu1rLViLWvX/hHubuZun5nvPPNZ
cyLK/9QnBgYGu//p3xcWrB2R8459Z/DfUpcxOdPcbfC/R463lPG4e/S+l/Wp
5w0uXe/EglVZF7lMvcPtHJySuMl6Hz29aT6Oe1nvrstfK2K5t/XW5s9KudpH
esuVguaGZzy9rxbveisIqtE7sLE67HSTQG+etLr67AOh3m9ppteM2l7B/oZL
CdO2z4iFZoJzNsq3EJBRfzMoYQAbDpYt75E0w1gf82OOv5xguNq7R6lbAdmv
K3oFKoLXa76NL20Hs/hLE0byD8S1aJcmf2EHuK4qYh0QdxONS6YsNog6QWhS
yFhWl4fcFNeDtc+7Idfq4VkG0YqKj8v9i0Q9EDjs1rGjT4JP6c5tAqkEHIyT
NHsq+5Hme+Rus6wXpg5voT+wl+PcoLb8B6UUjPM18ObwIFarGrwOyvqgTmDx
zeYAOZYmq52Vqn7wbdwcGhvXj+KUJ++LJmVAqaXG1FMlOKB4SKkcHoCx5426
RU9FaNE5lxmjlYN3knJf1GdNaP9VVlquchBWNjh2vfHi4/kZrmddrwIi0yNz
taYlOLfL5liRYghaZ2lbmdFFxAHD9gnJ+w+w3PDkczNJFdHp3T1YMzQMbom3
2usKa4n7U/F3+KoRWF22L8nmeyHhbR7w2kqmBN+A8FHKfiFBK2cH2SpHwYPu
XLj155cE1iiCM2Qq2BK0bo+/p4BoLdBwLjLG4HfvAdPWS3ziqKWl7QrVGNS/
Xzpqvb6SELXJo8UR4xC/fcWNq0ueELKmd1Hjo+PwaneFlU/nfUI8HWbvzlBD
BccN2/KyCfKYwGvRgBpG/XdVfXRMQ66R32KXiAkIZ5mLTZi30E/ByM+UTQDN
TlMsPlqIyVQUborUwG0bG8qCjSXYcbKFHqHUQNlQ2pjZu1Jcqc4saw7TAo3/
px2bV4oaQcTjnBEt+Eolqau/LUFsGGSywieBOtnSsY5biPc+d8lTSSdBIQ9x
CikpQKuckuCqUzowvxB+hke5jtmeFbLyXh04xFId7TOysHyMQhX36eD1zRez
g1uysO/OXqcFAzp41fLLgmJ1JnrMyVk7h3RgmXi+awk9Ez9U0hb2juvAdk1c
ao1rBu5wjVlPpZDwqyzdLVmajkZ2zszgtSTUxh9IUG5mo7soPp9tR4LllLSj
UJyCJy6+LL+/noTF5mUzoT4pWNl/ZF7lRIJ1WA9bZpGMkXdzOOnuJHAum8p4
wkRsXDH0+A8fEhx3RFp3W5zDyXrXjhY/EobzJzmsjFi0jmPP6HaSsD3Ub6OJ
moUJoi+2e+0jwS3b5JyH8Cw6XPNuFx0iob39t+up0T9hoFf+1MxhEsgLs7Kl
4mhMHe9ZtSaEhL9iHgXf9Y7Grr2sUMZxErYZTntUffkjGs7zszknSQh0HH9x
xTgKXR4aP3p6ioQJjldgqfQM0kMOtXaFkeC84c0ZfvlpzDYu1s1HkKAYjvd5
l8PAvwGu8mgG
            "]]}, Annotation[#, "Charting`Private`Tag$200506#7"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9ygsw1AkcB3ClFHoYUfSQHqLuGPbYpvcvnP7/RaRDwpIea9PpIRVJkkc4
j4i7TEVX0dxecirbT1t0e530YFao1WKXtZZsa9dj/x5x3czdfme+853PzHdF
2FGfg9N1dHQ8v/bfrb1u1S/jhm7T+S+JxpE5Y5yt8L/79zWWczk7tb6ZNmN7
AYep9dnry9KSOZFah1uvsz3Hidc65Ij91BlOltatWd/JT3FuaD2c+0XCGb6v
tUzBF9Q95Wp9+bZHAz+gWmu/VzzWkbd8rbkSHu9kaa3WDabz8wyaXgPDcskT
kTF7w6wF/NOrFA0wWJUfEBMSj3X+5WZtHQJ4ecJwWrBXKkY42tCPqt+Bxfns
9SbcROSKTbbWSJrBxUiz8ITfacw7TnvrU/sefjjJXk8XH8NXRqNLv20Rwud0
tlmfBRs55x39/3r+ERw23r0wd+UBlE+Y+dxqaQNxVokD6bYPHzHtmviSDrhW
HFP42CEUTYmgYoFUDGevLrLgKUNwsme48oBCAoxFv3XRokKQp6xz9pd2wsMu
jmlsLBPvxqvtFMoucBq7t7lwWjCKzj9ovzUihUNWbbtKiEDslpfpVn3qhvZd
TjNtsgNwqXDyUtSwDL7cezbbIdofbRzSLv6k6IHwCTR4TvfFuHHO9r/Fctii
cbLPF/jgpMeq0FvyXijZ/GDxAhNv9NVrHuxo7wO7/YKBA2oGCt0+9lT3fgK+
KkYYV+OGd0ZjimqU/XCttbOMec4V3Ux2v7GUKmATzT28N98FTSsTAlYrPkOj
Qtf49Y8uiNXywFSpEny/9PUPFrvgu+tDOckRAzAv1mujmOaKIcuXrzZXDsDS
Db4z1Vu+x5Ym2XERWwXqK9PT8i64ofTth6Oqzyq4XLxiMtOYQNEYy4YeoYZJ
fiJjfT6JVCjf2bBbDX+ORfkZvmEgx4CcS2MPQlhe/jdB9e5IyiNyL0kH4ZQm
h9eX5oHx+lhrf3gI/HekRH5w8MT3+xuZbMUQRBbR3lRXeOJi9aVyAWsYjhRd
zfIu8sQhPrsio38YvOYZ03iGnoh1PZHR4SNgnlT/Yt42D7w5m5aplIzAjYV7
s0+x3NEyoyTwyUENcPnZY6lJDEzf/lhaKdZAe0l9c+EjEisHdPVFnRr4Qydc
V6+CxM4iL9tp3Rr4/czT0ONlJG6clEW792qgS3KllCglsa/KdJZYpYGaY8+8
R38hkeEYtVZfl4LHm1xYYXEkGljbRQZaURAXRvrvdCGR3hKTm2BNQSk7f8az
bSSGJb+ovLOWAvtkZp3tZhKruoKmlLYUWJmFFsx1IvFwcUZOEp0C/eRem/o1
JL4y7624t+Prnx6U4mNA4shLx/eNJAVZFpnefD0SV55JGNe4U8AqWLLGUZfE
2JZFrs7eFJC7yQHTCQLX5bk1t+yhwENY/kmoINDPOXd0fC8FMpOfxxl9BCaq
2patCKYgZdlrI56MwFav6EMR+yj49aEJcaODQL2pmvSc/RRc8CkJny8ikFY2
5/6jgxTYis5lJHwgkBm8510ri4K9AcL7qiYC0+fc1kyxKeAKRprCBAT+A3vV
WJw=
            "]]}, Annotation[#, "Charting`Private`Tag$200506#8"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9zX0w1HkcB3B3XC6tuZs7Ll0P6OGkaOQwV8p9ONF3VxGxy7Ke6jweNSLp
rnZ6YldnpbtuasapkGoTMS0fx+haki5XnlZYeVqsh7UWa3+FdW7mbj8z73nP
65/3xzIi0ffoh3p6egeW82835G6ZGK4I+1bvvzv3WUL2e6EL/O+J8JbSCuFB
nW/xDFyvCTk6n85dz7soTNA52mqb7U/CMzqHxtstpQqzdO7K+lqeIvxdZ3XO
Yr9QXaLzsELc3FhTofOVAq9X4sBanQNeVEfFN4l1ruivrj5R1KDzK9NPrhq1
/QXXSVrB3vP8XYafi09uUrwChyZtJ3uBi43MUrOe3mYIcD24qbwoHeMctjol
TrfCaZsVX+z54RxW9Jm4POlvB3PvXU5pqhS8ety+ybehA+axTYL3j+GLT9+t
s5F0wr0KluIjZTQKzzow6/7sBp5/e0tNQyTKF8x88yU94J7VxefFh+Fjzo42
cX8vrF3o2R7pGYKm+4NvNsv6IP3KKtqJQ2zUjqhFRxT9IKDVZTU/DcRqZaMb
UzYA5jmPeqo6WHj3zPQOhXIQXOpj8xY9WSg9W/42f04GxLrRytGAhUPyh/pV
40PQy/XX1w4wcV2nNiNJPQyiC7a/ZdGZuHUn7/xlxQiIBNSsyYYA/HFe6Pqs
Tw4HOZemBnmHUeu1KSxfPgrJV1Rxred90X9F+0zv2zGYKzK3KDnrg50e3SO1
o+OQp2d8o4F+AAvfncp7opwAs/ZjgiM8OnqY+L20kCkgqYDW5sDfj6YibuBm
xSSkvLF7ZFbngVgrZ6fLlFBY3m3W6L0PW3Nnsy/GTUGk+anvjHPdMdTcfPMa
5RTUTxnOxKI7StqGj0tjVHB9p6Brbfw+lDW9SVRNqmDDPUch6xcPlL6P2uoU
Nw2M7rKiiJeeSIWJ3VYNTYPfrUp0HtiPQiNibB8zA9eynxqbKAgSeVxOhmwG
kvzSGcV/0/HMSmywi52F7i5BenE5AzsiWzgxilmojahRB6Z64ZfTGaXNUWpo
N/KWPivywllxTFnmhBpe3h1UVId6ITaOJCRHz4GXc+rkzm4G3vrY/mdl/xzY
SF+HG3ow0CLzDvuPoxpYfJ1Iu3GdjnzXSpmob9ma+2tqVARFU/orpQMaKDvC
gvpJggN53rYfDGnAc4PNxqZxgru1w8mMUQ0ECwrXSocIjlWZGvapNOBOSzPQ
dBKkOyRZr9SnIIiXctvyKUEjqx0J7C0U7PH7SnQoh6CT5FQO14qC7QUPQv0E
BCMu1osKrSnwWTg0cvgywarB4CWlLQWXOlm/Mi8RjL2ZmX3BiYIHY1N8dhrB
F2tGy4o9KbDnrm7mRBCce+7Q0UKW95fKejmhBDemcuc1DAruDIz2cIIJpklW
u7v5UDCiyCjmBBDcdtWjXcKiYD1uqQyhEwxwy3k3H7S8p3WMCPEkeE7Vs94y
hIK9kjyDEHeCXd7J38eFU8AN6HUKdiG4YukJPzuSgmC+7DnbmaD9Q1rJ46MU
nIy+zWR/Q5ATwmrtilr+L7KTBTkS5NMKNEsxFODuosQge4L/AB5JY94=
            "]]}, Annotation[#, "Charting`Private`Tag$200506#9"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9xw0w1Hkcx3HhEj1cheKqy+NQcxm359SvbupLjYfjUHciKyUP29pGNZsL
PfilTEW0uOvOlShEs+dhGPRzirt1ebg2t9SyHmLZJ9a2Ldb+2Tuum7nbz8x7
PvOyP3H6UJyxkZHRV+/799sLnadkjcf3Gf239PWJnAXuXvjfU9E9NY3cIIMf
3DT1usONMvhC4ZabGdxEg0+6bN9xiXvZ4GOn3JeSuTkGD+R8pviWe99gbd7f
Yq622mCZiifofNpocG5pYDfvSIvBh7uaGaf4PIMbxc3N58rbDe62/jDf4tUf
UDHkmLTYME/MLHnnHVXdgN3ofb2BPagzrMZmeEQAU+fpnrbx44jl4ep5eroX
3sT4DaXW9KPGUau9reLX8CzEVGb+8BnKP0vjH2rvA9GVL/Ya3XtMutbOb/5E
KAL7up+LOy+1E26aR1jbr4Mwmc6oP6jtJoq/bA6VCIfhjN/t8n1sAamPcnvF
E4/AvkplzjcdfxJrv8higWQUHJZ8x/acfEkW5dqGWJUYcnLvnSlZ1kWa1Z3e
YZIxMNvwMCRC2EYqLk+7qdTjIKpPF91ubSZDaXVvSuYk0O2W7h82WEmkiiqT
JqUUZOfWpR7clUI2ixZvsLUyMG42dvbbU4JcP7159ZZKDtGpiU5rIqrRRT3X
6/moAlqem5/fmF+LFgMdj5coJsB3QH+qPr0OhS5/PTPyZhKCJfcTkph1SOQz
KG+ZUMJ6V477o021qGw+pahVPQV6nGdkM1mFfKy+fmEnUcF4kZ8m0L0CWTfg
I06qt9CpsngYSC9CpEVBvy5Rg5WSHumWnI16C2c5Gax3wA8gUeNrI9CxrVud
bNXvgJV9IJDje4UIX8nODjE1UL5SXHrd7DaR8PtPa95qQEA7G2rr/D0ZWmC4
erKm4UWuadvV5AJCHed5r5ROg11H9t20+Z8I18J/NY05A5b98u2azALir2Dl
3ZDMAL+xqY5hd4dcNift7gmzIF1nRsWtziV9MT1RTNUsuM8eDvINuE4+mr5R
I2BoQdmh/+AoukhmeczarCktxM9NFeesjiWkU56YdHIOvDZdSWOgcPRgBS1b
LZ6DGH3mGv0oG9llPaL/EqeDbtGTAQH7Isr0eiJpGNXBS/bK3TvXY9TwzsR8
aEwHDtLQt/s3YjRWFLxjmVQHWaql0D2bMdq9KEsKmNCBOS4rUDpjNNlkbTaq
0UF2TwGTvgujLz3Y28xNKBiIBTnvCEYWLm6JdGcKjBeCaBtyMfIUpuRhFwrK
c7ea2H+H0YmM3xvKtlHwrEQabv8DRk3jkUvqHRTUzFxTmRRilFCcxbnmSUEV
k02LqMCoy3aittKXgksyV9mdpxjNdXj09fhTELx7/48OrRg5JGO9LoCCkIUt
ux7/hlGqcOMB7xAKIi743q1ox2h7vs9rYTgFxRX8+BQBRoe98+b1ERTYZAQt
SnsxStcMb7E/SkGpj3ZniBCjgeCkeFY0BWc+lys/HsRo+VJrJieGgsnWAMtr
wxjRqlZV18e9t2rFTsUIRlFHw3sHGBRwWNzKgDGMMleV6paYFFCKFn6VBKN/
ACOfXU8=
            "]]}, Annotation[#, "Charting`Private`Tag$200506#10"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9yg0w1HkcBnAlRFxXbKXR9UberSTn3811X+p0LpWcLCcvkVirLSdXrkuG
lJdr81JG3W0vozrXhhV2/RBqFbaTWdY673btrvWybbtr7R8X183c7TPzzDOf
mWdr1JmAmOV6enqHPvbfbaXbTEvZkV/p/Zf0tdS8ecZe+N/TJ7qYbMZhnR9k
r/AqYoTrfJG+KTuTQdU5ztbB+RIjVeeIBNelCwyazv20XbIfGXd11hR8EDI0
FTpL5Rxe+3O2zvkP/To5IU06B3EbYhM6ODqzhQ0N535v1bmTsLrQhP8GWigU
f7VBNzIy55zfLu8En1c9yxxdB1A7iblhaIQHniWikztuDmIUdzuPM6pukKGQ
qwVGEow9arG3WdgDl1uKpvX/EGGFiW4dAa29oO9M2+W5nI9xP52zchL0Qf22
srW9S+cxxmV3UsuLAaApBdP3iW1I9veGgBLBEKxzeEJYyeKjmnAXPkc4AvlB
1VO8/j5E+Ob4fZ54FDg3OjrDdwyhxXEN66RcCAb+T2ZPtw2jBkW7N0ksAmuu
zC8+YQiVpqpc5IoxOGoLLZ/R+9Dg5arhklkxRD+YYx8L5COJrFy/bkoCU4Wm
sJjegaz6FrOSNFIQdQ0XGRa9RHY7szN+kY9D8WPzr+/4VqOfFxher0dlUGlA
+jyFWYwW/bZHlsgmgKj8VVl5kY4dM+xRjwxPgtjsea7AsQrr8xkYb5qYgqtX
3d5KOfXYo7mUe82KaahSkIOly5owH4vv/twilgPhKclqY2kjRmClhVjL30HF
JVZsOl6PoSZZ6DWxAqg1N3bSsmqxbvpMXiblPbTeMr87yazGIjZvtrZUvAdP
/wrLbCMmJuBLEwfJStgfq3fuVsVjTNzx1xnlOyVs5rbtPmxdjA3Ox9p5UFSQ
T0uZinmdiOGRHO9VEhUsVLLSWJ0ZiGHia+ZGVgPvQ6/KtLMQ+cooBVliNagN
rR1Ndt9Gqcao1TV+Bspfxkn8M39DvdFd4WT5DMzM20jIEXfRRlUWkxergSh0
OiB/Fx3NcMjPcqc1oHL3Y18LvI1Q+zg1OW4WLJPj19mTbqIHK92uK4SzMCZT
iOqCaWhL7uPQ+hgtSEkZ6fmlGSjHq1bMGtVCAYE/uUA4h1jv9Y0HRVrIF97b
5PQiCYnuHXFeJtFChLFTdHRCEtqzKE0+OKGFatr1KunLH9BkHcFoVKmFrMjy
/V+eTUTfuifZG+vjkOMTtmJb8WlkYutCDbXBYSD1zVnz1dHIQ5BSkGaLA34o
dEf7qSgUlfmK9cgeB595OS+z8QSqGzu+pHDG4Quik405NRLF38/Nu+KBw0jv
gvjdnVDEtZx4VnYAB03Kqtq4jUfRbJt7b5cvDp/Uly3O3TyCtl1IW9AexKFx
X6Chq8YP/SRYv9/bHwfLsjUTzTUHkEOhT48gGIeGtw5PEXUPCvIumFv4Hgf1
lTEzJnE3SlcObdoahkPV+jSDU0Ii6j+SfIpyAod07p2+sDcEZLjUnJMXjQNN
T11bPt9e61ZuWlETg8Pb+qQIuqMFFh4W3N0fi4PyCncyrdAayzF9qF0if/wT
zGjENUTsH7p0akw=
            "]]}, Annotation[#, "Charting`Private`Tag$200506#11"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw9zH841AccB/AbTc7qMY1n1UM/hRTpZqLHU59u7uuI4ioVdciMc4X8WD+U
pN3m+mF+bNUqYfRjXYtVXJ9Lc+1aosz8OpFyOJzuznU43y+KtefZ7v087+f9
vP55L96TwIk2odFoge/779YULNP0iyPW0/5L5pz4nAnROvjfmsimcrFok9HF
whkbzoq4RqcV2AkFonijYx2dXY6K0o0O3+s2fVCUbXRH9meqr0WXjTbkvesW
GcqM7tfKGmsfiI3OLQ1okO2sNjqkripmb73MaHF3VVXKtRqjG2ws8y1ankIs
70Z5klWm18xPZAeWahtA4t/OH/LMwNrt5XNfdjXCA31u4sRxIfLdnTwShpvh
wO9e2jXOAhQrrNdJu1shceXD/GK3I5i/n1HPqWmDXva+m789S8a6j8dtV8rb
ISF8+mdfizgUHXPf/ujhC5B3COsvzYtE1du5nBL5SzDJPRqpnt6KFVzXFll3
F1g91ruEprDRhr2rqFGpgB8E12gpj9bg1ICh8kttN6xLUvObC+Zgla6WuV3Z
AxaJ99WOGtLzevqwq1bXCyl2Io4T3XCv89idVyVjSvijokESdMMe+1S3TCXq
PmC83RbyaPfnaNs+lZVs6Ae/pDkMciug02rhidPaAUhjOo+f1vrgkUnRhscK
FcySXnCTjLFxKmBpRIlqEOzXRl3ypgXiNrPWka5Xr2FZu/lPjoFB2E68GKge
VINAOpkkqQrGK+OHCqU6DfxdOJC/9jgHCestzxYptcCMu5B3v56DNpUZO+21
Q3Bzm0OLtI2DWK0K+06pg7Cw0vgpKQebC0ZzBPw3sOp62aqGZA6GL1xoP0/3
BvSMKxxrRTDKW/r3d/L04FOZMZrgHIzK+ucJ+iE97LkamP0hOwg7J2KcPPjD
MNvVgdcv34RUhIz5Ud8wXLSqCFYHBKLIwm82gzcCLVTe5PO/NqKfip+XpRwB
z/VeITShP6bTscYtbhQYNooiF28/bItq4vK0o9Bq/fgVzZyN84ezyhtjDHDu
jHep90pfHJXxbp/SGKC5RfijVxqBWDsQnxo7BvsSuk6Hj7Gw2JxxRtc9Bk8u
LW9QnWfholNXw+5Hk+CvLnp69zILT264p6xUkMC2/WK/qYaFlW9M6Z09JNzN
/J5Wo2VhT+Fmlw/6SMg+HxdyRsfCtVP9qRsHSehMKXNaMsLC1xKbmQo9CQsi
rq7gT7DQ3z15Od2UgvknOp8l0gm0cHSND1tGQRPdTDjpRKCH/FBehiMFx98N
WZqsIHCP4M/KK8spWHEnbZTuQqCkd9e0zoWCh2ZRv9itJjCu6FTONx4UuFdf
/HaLF4F18wZv/+pLAZ1ku+n8CBx74t7W5EfBhOU7X7MAApcczJgkN77/S+ky
X7CJwMPyT32YQRSUSK12buYQ6JxPtMp3UODYwSXFoQSGMPPGJ0Mp4D4Q2zbv
IjBT/9Ju8W4KDrnNyB3iEtixOfUrfiQFt2NDvRyiCDSblp7MiaKATG8NYUYT
yLg1q6wimoKkGoez3BgCubt3NHfEUICvzTSHeQSenFVKTvMoCM91DTzHJ/Af
nkhbHA==
            "]]}, Annotation[#, "Charting`Private`Tag$200506#12"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox["\"t(s)\"", StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox["\"Phase\"", StripOnInput -> False], TraditionalForm]}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Diagonals\"", StripOnInput -> False], 
         TraditionalForm], PlotRange -> 
       NCache[{{0., 99999.99795918367}, {-Pi, Pi}}, {{0., 
         99999.99795918367}, {-3.141592653589793, 3.141592653589793}}], 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(1\\), \\(BARE\\)]\\)> = |\[UpArrow]2\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(2\\), \\(BARE\\)]\\)> = |\[UpArrow]2\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(3\\), \\(BARE\\)]\\)> = |\[UpArrow]1\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(4\\), \\(BARE\\)]\\)> = |\[UpArrow]1\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(5\\), \\(BARE\\)]\\)> = |\[UpArrow]0\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(6\\), \\(BARE\\)]\\)> = |\[UpArrow]0\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(7\\), \\(BARE\\)]\\)> = |\[DownArrow]2\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(8\\), \\(BARE\\)]\\)> = |\[DownArrow]2\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(9\\), \\(BARE\\)]\\)> = |\[DownArrow]1\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(10\\), \\(BARE\\)]\\)> = |\[DownArrow]1\
\[DownArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(11\\), \\(BARE\\)]\\)> = |\[DownArrow]0\
\[UpArrow]> \"", StripOnInput -> False], 
         StyleBox[
         "\"|\\!\\(\\*SubscriptBox[\\(12\\), \\(BARE\\)]\\)> = |\[DownArrow]0\
\[DownArrow]> \"", StripOnInput -> False]}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425878363120546`*^9, 3.842587847235633*^9}, 
   3.842588074978342*^9, {3.842588123312332*^9, 3.84258817022402*^9}, 
   3.842588208422208*^9, {3.8425882456274548`*^9, 3.8425884604108543`*^9}, 
   3.842642597934924*^9, 3.842643595047985*^9, 3.842643660651394*^9, {
   3.842643696651991*^9, 3.8426437715049906`*^9}, {3.8426438503185143`*^9, 
   3.8426438701002903`*^9}, {3.8426566612615323`*^9, 3.84265666992916*^9}, {
   3.8426567324847436`*^9, 3.8426567510188427`*^9}, 3.8426571331333027`*^9, 
   3.84265795619525*^9, {3.8426589456052947`*^9, 3.8426589739500933`*^9}, 
   3.842659750495966*^9, 3.842659994686627*^9, 3.842660835666727*^9, 
   3.8426608661242924`*^9, 3.8426610076383734`*^9, 3.8426610745284443`*^9, {
   3.842661155621397*^9, 3.8426612855880747`*^9}, 3.842661404677117*^9, 
   3.842661516009495*^9, 3.8426615568119173`*^9, {3.8426650490019083`*^9, 
   3.842665066841675*^9}, {3.8426651990407143`*^9, 3.842665216997856*^9}, 
   3.8426652491188836`*^9, 3.8426653644367476`*^9, 3.842665570437317*^9, {
   3.842665664042185*^9, 3.8426656840384407`*^9}, {3.8426657467115574`*^9, 
   3.842665766205903*^9}, 3.8432615745244694`*^9, 3.8432617454443913`*^9, 
   3.843261780206955*^9, {3.8432634551370983`*^9, 3.84326353849277*^9}},
 CellLabel->
  "Out[234]=",ExpressionUUID->"cac58377-5740-457e-bddb-0d753f0aec78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
yO2j5zsQ8LiZY8exCvsftiVDZw==
            "]]}, Annotation[#, "Charting`Private`Tag$200693#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
zYHy/wBqd2ZM
            "]]}, Annotation[#, "Charting`Private`Tag$200693#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
X5s90CTWvaSim4v9D7WLBgM=
            "]]}, Annotation[#, "Charting`Private`Tag$200693#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200693#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwUV3c4l+8XVraQFBUllVWIUCTP+zlWRVaSVd8oypa9y0hSJHsne++99957
773jY1bi5/fXe53rnPd+7jOu8zz31dfvFN+cJCAgMCUiIPj/t+EH6+p8gSaO
ilA/n4ahBOdCa+z9JwUDIwG3y1cnsnGrr7ozC1LkQPie80pcTxJOZiyfsohA
BYZ/nHg0wxONi/pCJBqY8hL4Ytu5i/8Lw/1lSCq+x6kFrJqCfJuCgTi2zQ6l
RAIdOCFv558l64dTaNhdp+/XB5lErtfTYT44+x+Xv3xKMYb2xkHyLy+8cT33
os/YgSm8XTysEif2wi3G5r28zWkO8kAZcxT2FXd4uillkc4Srtwuebvt7IY7
az+6/5PAGqqVCNv4yFxwHPO/JFVWbCB58o2RHrc9DntC6EfdbwcV7Gq5OmfM
cU9L6SfrKh0gRGB/HRnp4nTZb3K/T/kAXodycy2Kz3G4JibE8NgJ8F3BR40f
HuKaPyTOWIIziKxM+jz1voFTEuD72nXHBTwLmDjP44VxE0slvNycH6GTpGgq
e10cp/9TcsCd2RX+adJpULk/wG0rdbyfpfsEpVwPbR45PMA5UqixwCk3GJst
slUblMBRVE43hxF8hnUao7Da52I4f0tD072dz2Az/DniiBKHu8K5e/7pijss
/BkuuPP0Hi550rE8ffILrL17+uHCEj9OIJD8DUX/V6jOv+p1l+oWruKx36m3
LR4Q2nIRjsZYcdInLmdXVXrCqKzZ0d10Zlxvfrzq5fxvoNh87YTXFDNOw5D3
yCbFCxpaptp9SNlwy1eL43ojv8MKznSuWZIbV7xyle3CY2+otKT3eWDEh3Oq
f/u7rs4bLC2WIt227+Ako1JazcEHtH+plWbtC+EoHDZ+Xi3xgQgNi/1Hivdx
ncp3zDvu+AJ5tnmh74oILuC23YP3mb4gt3hC7kUZwqlTVlzk5PQD2h6Kq+yt
CMe8QLg2GOcHlYynwv5jRbi5qkeVbsz+EKX9n2zM6H1ccvg3P4Ewf2iqkamz
IRfGmVh3v52mCwDBa099NesEcXcUzwt7ewcAP/EHi2837+D+cL2gwk4FArkE
NTvbUz7cp+m5nBCCIDBZ2Lk1mM6Bky67+fmhfRDQEihwsQ5dw9EEv1Pf2QkC
/52w9PZzjLg+s1zuGJNg2LuaWeC/RosLlf1N8GQlGM5tybycpKTBaXJgvYdv
QsDucufDT+/O4lgJPyakTobAxp0cAdEfF3HLYw126s9DQbxtlEKMlBmXWUgp
R9YfCiwsQ4lvlq7hLP2eXM1XCIMQ/g4uvYesOGHjwG2tljAwvemjM0bNjiOQ
Gmk48yAcGLKLdXbuceDqrjOHVVSGg6e3S/CjZg7c10NtY6P7P8BTTdXfsZ4D
pzCUJMqY/wMERY3tyI/j6XLXzzXxRkAS9k5LhIcdN+zFv2iVEgGq8evPkwpZ
cXfTog2seH+C6NP9waqS6zi/ljO/LPN+wmOWypk1/au4fQsoEr4cCYwYd7RB
+WUcG9G+XbFGJPTNxNX5vL2AU/LLEBGOjoTBE3yJlhRncS7XdA6LZiPBcytM
h2HrFC4zi6nyHnsUjE8ZdEu6EOLGod+5SC8KaBQMBvzvHmKUnd/E76VGQR5D
ZLByHwFOWEOSuGg9Cs7eqtzZvEWC010/qBe6HQ0nuFbeXuKlxAW+z3UvNI+G
iuiGDJ5uGlwtpaG0UH40aIcNNoZRnsXhw65TFu5Hg1jUno9j5jkcM+dIm+D9
GMgn7Ik3yafDyRf7fi94HwNHzjXao1focR+kpJ8IVsYAwz/H+8LbdLjUwRNn
C07GAi4gos8SR4cb1inqvSsZCw6V/pXTNOdwZHsmgfmfY+GR3iM9XTta3F03
DtW7zbHwkrb47uB3Gpw23eTFfMo48D5j9GixlRJXyS//I88nDigCJb3z3hLi
1qtJNO70xoFPX0Qi3/t/2CXFcuY8+njYD37XTkazg0lPWU4LqMVDqJSgP0PT
GmZjwh2bGxYPj092Pn7etYzFH82+ERiPh5fCf5+hsg2s1yucPZc5AS4LNEx2
je1gJ5mUlvi1EkDf3/C84O4f7HbaqZScuATINzple1f9CNMUqTHkX0yAtMFm
s0StEzivFrtbOTcTIUrRVYDS9ySuVJ1vg88oERKN0PepO4S45aWlrOyMRNCx
+M+J4ykh7oJtlDkfPhEOvJ7ImeBP4h6Qqd3JFkiCsob5mJQrJ3EWQTR7t62T
gFN9+LzNEgEumq2xMKsoCSSnZtQrKw+xzjxHu9sHSdAgfMejkOsvdighKJKF
JcNfVwpgRnsYV+/6P17nZAiKmnFsYtjC1LXiKzJrkuGihtX9kfk1zB3/nzMv
SQpY2KnksBHPY/nOdOKZj1Lg3nXy+PjycWyWpo2I1yMF7OhcN3g0B7Czka71
GW0p8PjF1CcCkyFMjEfEnYcmFR5KJDDOFE1iJuVbUhmKqdD/zvhmkdIcFiGb
coonIBUsKa3xK1+XsNbR123pA6mw/29CjudoFftjwPD9FkMapAdbX1rx/IVx
/O1SSH+RBrTrEoLE/huY8tcvtLd+psFPqc0p0aUNzPWiaG/aVBowP04j7W3Z
wLIT9wO4WdLBgvnLSIfEBjYpmKmS9jYdpOm+rfdVrGPUDToXuZPSAUcYHNf7
bBUTUb4ykrqSDpP5IZVlekuY/lx/ONetDHiyz98jdmkeC7bweplqkgGJwoWu
Pd+nsXrCB8xcORlQIUB2uN4zhu34/ptK2ckA22LZmHPp/RjluHPl1MVMyO0P
P7IK7MQi8ETea0KZwKVLgenUNGC8pO4av1UygTlQiGWYqxarYjzFQ2ydCSyP
8T4diQ2YIq/XIU1gJtQK15E+jm/HZiXOtF/Ky4Qcmrm+7nM9mJWa/w+O3kw4
lanIovihHyMzPm8ksJUJPMKvKq8pDmGhLqEiQJsFmpzOanJWIxhn0GVKmdtZ
oNh3LcNmahQrTYkcUVHIghcjqT8W/cYwucrrKVrvsoDYX+9Tsv8YNtkbb/fO
Kws4B5MdLH+NYmZLN6Tt07KA9kQe72jOCEZ0mHrxc2sWVOzJzhtvD2EBtLxL
vitZEDEkcLuvbgBjY88pjKDIBpMA8fHPWB9WeP+ue/KNbHjlWv1c0qobk1Yo
Usl/lA3xMp0eNpQd2Ki2CHu1TjbY+7aqNZ9twoxtK3bb3LLhfWNZorhkDXb0
Tax+KC4buJjaoggoSjHv6LqAudpseJb3nMPmdi52reDRm82ZbMhIemE2Vp6F
5ba0CPw7mQMbVzvvnpDLwx5MyhGRX8uBhOgbUpHeJdjgdlfPOdEcWHF4K9VB
XYXpkT+LYdbMge25F5bjRzXYn8uDZlyOORCou7hnol+PefI9FxOKyAFOlbT/
iu41YkwPx89IlOXAbthP8dC3TVjm81dT8qM5QHjundXRZhMmZjKb+fxvDjiz
4myuTjdhva46TjoMuRCm1f39jlgT9jZkWd78Xi4oXmJTomZuxPbSjK44quaC
h1x6i6pnPeZevbH+1ToXbrHIVL4OqcUYBszLAwNzofv2T2xZvRpLXdn9Fp2X
CwWuK9sjLRUYRmD3X3pvLmxttBZejyrGOs/94yreyoV+Ps4blm/zsFc3nA7q
aPPAYOYzyKpmYnhE2Np1Ow8U8z5FiCUmYK6KbmFjCnmQSiaECLmiMHodcoOl
d3lA3+LFHPf0J5Zo7ym845UHk+XzpVl8MZiw92mKE+l5UK/wbdu5IRFrifUd
omzLg8itwBlnu3TsRRFd0oXVPOg7L7o3XZuFrbcF27Ccyodv8Yb/9fXkYE7T
jI94b+YD4UZ6iY1aHka7F3FeRCof2mMNZ+sU8rHYU9cWHurmgxGdS9Spknzs
DnNc/tPP+ZC/3TCdE5GP1QtwuGnE50M199ATJeJ8TFUq5ZlBXT6IKH1jr/2b
iy3/d4vVejYfRr8KHtp552AOZlnbLoQFcE2ZvjepJwuj/ixQ63WtAGip9vQ5
0jKwn2EFfqGiBeAduDpjr5KC8WYKa8VrFgDzZd5li7Z4rLq2jC/bsQA+ZN+k
ahCOxpSG4GR5RAFI/HZhN0wNw+bXarqaygrgTqONeMa6H1ZFU1x0b7QAzrJp
Hz7X+YaF82dGJf0pACVbLt3sBA/MSjn+y8WLhUDT2H75EY0P9sQ23PSLYCHM
1zw4GzEbgHGF+6r9flYI/3XupFU3hmIkFe6iehaFoII4kkuv/sSmpj7cGPIt
hHdfie5lq0RhpUSWZ6SyCoG5TePB3ZRoLJDd4HdhRyG8ODu58/RzDGYq/WqK
Y70Q9KYKuPErMZiMkUpTMGURZHZ/NA4Zj8HYvGWzyDiLQJS6dyX5bQx2Ikc8
xEaqCAwyz66+8orGRvvuOS/qFEGI6FfB6FdRWP4+j56qWxH0rohzc4z8xHwY
2Z40xhbB/pc7hU+cwzFD7NI9oZoiqGXRZk/sCcYevKK9mjhVBOljdsoMeH/s
qisZ+QWCYoh7X1d/isAHO4g/3PjMVAyqxtR9H+S+Yv1N24N7IsXAt5doHCT7
EctaXa7UeV4MfwPVDZ+P2mOep6cSB2yLQQOvOSIyZI295RvwfhhcDAE86lb3
Z+wx0WdtNgX5xUB0papG7o8zdsmmRpO9rxj8El47NSu7YbuhRY+CtorhsKis
zUbpK9ZVlsFLSlsCjno3WuqSv2Gpk3EXrHlL4Pu09KLPZW/MjTCcYEGuBCo8
pcNp/nljr9h8F5WNSoBrucWxwdwHE5Fy76z3KIHXW2BJ98kHozf8UHg3uQRq
zOJq8gR9sE0vi8j4xhK43bvN88TPG2vN0nenXyiBriNVEybx71h8r6aJG3Ep
vGzdB+ZhT8x5T1l193opCIvpmDGe+Iq9YJCFt2KloHSYS10z4Iad0bxH88Cx
FHqZFLUYTjhhqy48+3k/SuHE6kLBF1ZbrD6OdZK1tBQGgg5+lJeaYVGNjI0B
w6VQTdNG0zinjzmsnMkk/l0KcdxneNTQG0yZmizY8nwZxKUqa5rNvcVu3z50
nLtTBuZVhzW0KkYYpdK2zjOlMug7MDrZ9tEMm7dalq8zKwMLRjlxSXYrrCpk
UvCOTxmkNwk/mpSwxcJL+6/EZZQBK1ZBx1Vkj1lNtJLStZfBoUB6ga7le+zJ
yZpfrqtl4ER6y9jV9gPGxVo0sE1RDhkv68bmGj9gJI8yKrRvlMNbLxW8keEH
bEo/LqH3YTn4Jlf8eGr2Hiv9FvZd4m05BFcyT1Au22OBmT7Wua7l8MqyN1p4
0RYz7fmswRJTDtr3rl24/tEak9l9/9C/qhzOV7s9Seq0wNguWvAQTZYDBT/N
W5pFU+yEiP55i8NyaH2sSfegzggbfal5NHOpAh4sa1sLlugcv3+UF57er4AG
CVPztr+vMJ9YmY4atQoY7m1WNPurhimqyl5vtKsAetKNQd9rTzFaSjnr1rAK
EHd8tEPu+BTrrpBr6SytgJckTrRO8mqYr7n8lb6xCvAeI6cXkdbEnrIrmA8d
VgBbgGE8R7EW9tUocWb9dCWkbZ+Y/hPzFtNvSKQyZa6E6viU5fEhXUz6apLg
Fm8l9PLb99fI6GM37ZNeWYpWwnD3Twp5IgOMoi/JY+9JJeSdfBKrf8IAW76V
nGf7uhLanDPOPVbSx1rckyf+mlVC7AsTc0IqPSx1Opn8w8dKoNr9JFImooN5
iqTwE/hXgtN/nC2qR9qYYWDKfy6xleDsdKNjwPA1JrOR8pkorxI+PCQi8sdp
YFzSqVludZVAQ30pnc1QDaOMTR0h668EKxbVWPvop9jqv1Rij/lKEJwUbcC/
l8HaVNJ4qPYq4bGrdrzKkjiWnpWm9p20ClgfrdlXPgHM61T6xzMXqoBJTwen
jcQx4zfpaX4cVbBSac3qpyiFyVWkD9DdqwJ0x9XhZKs8dutixolgqSq4cfMy
bWOdIkZtnsHJoF4FV4Ne7N6ifYatt2Y8C9evgidlNsxXi5WxdrZMRyb7Ktjj
+74bVqiCpTtlJkV6VEFDaTX+BY0q5jWc2XMtvApKq80k+ZtVMGOBrH+xqVWw
zNguoruljMl7ZbGzl1VBv5rKjSfRzzDexawnSW1VYDMa8a5v5ilGI5Ztzzle
Be6eFz92dD7BNsKy49LWq4C4iPq1z5Yc1rmT3cFzVAUvXmR9ONqXwjLlc35n
na4GDr63hPx9Eph3Us51AeZqMKAtGSNwwGEmhLmy+bzVEP3K76mm3F1M4b9c
ayHRanDjp+Ytb+HBeAtyo4qfVMN385r7T8e5MZozeS0ir6uhtOHh7XBqfmxD
P2+n3Kwayrt0J979FcK6avOuiH6sBnXzVtu2DgzLZsqXqvGrhn0CmoHBUVHM
1ybfXDK2GiSFRN+cyRHHzLrzfzTkVoP24ID8ty0JTJGroEGqrhrmL4ebeoZK
YnxuBZstfdVQtXHJmzZdEqOdLGCUm68GefbakA+Ckhj+XqFk5241tLzW7xWQ
kMB6/ArfKZLWQPm1IluNWTEsd60wpPd8DcQENc8z3RTF/B8W1Shz1ECTsFHz
siqGKf0tOv9cqgYo09l48rPvYALPikXH1GqgTr6C34ztNnYuo9hAQ78Grn1k
yTQsvIFtk5UETNnVQKTfVPaFV9ewvtclFVoeNSChVRW4bsGI5ZeWLM2F1cCX
Q7Ytj0NGLJC+9Kxuag24SP+6jgiuYVYmpWi5tAbSfuE9hBjYMeXmUh3Dthpg
FRyXsKTiwnKbab70jtbA7o8dSVZCXuxMi3ayyGoN3AvtFU4LvY0ZtxS2xP6t
AY/q6xWr1XxYawvlGuWpWiD/Pfq73pIfu9mqSW3JUAsks25VyTn82OfWXJ6x
G7XwwnFiSe0zPzbbSvZE8l4tiBl4t2ds8GFibS/M0h7VwnLodxHG37exyLZM
PzrVWqi3NsFKM3mxf21Eee91akE1FFO1e3wLU29X7Z+zqoVAqghoabuJFban
7sm61cK9IX0aXjJ2jL6D4GJ+QC3MJoZ8k750HTPvUBJmiquFar1nIymvmbDO
jsTnbrm1UORP8n51lR671XngsF5TC6x/00us7Gkwz06FCOWeWuD7SxAwUkGG
LXXGVpRP1wJX6ierzXAy7EHX/iQb/tg/V36N4MxpLLZL5uT3E3XgEf0gJGDw
LHayO/L6Hk0dNAZIGK7TX8A0urclNJjrIGrnzkXeVkastPvR2waeOqgLmqaT
b2HCGHrCP/Pg6qDladp/rI7MmE3PRmKQXB28Ji36rsZzFevrkWg++q8O1H5p
pi7ZXcX4eoNXdIzq4FdtMKrUvIp5965SdjrUAcr5+EtgjRlb74VbQp518O3i
eHUQOzP2uM9fPjKsDk7bfNF9ys2EJfYtmpCl1IH5iE6megIjRtIv4mtSXAc9
Hl33D6ouYNr93jmDTXWgkCZoUfCJDqvqn+2FoTpg+JtfoMFNizENCO0mLtaB
Ok9n934gFeYw4Hn+zH4dfD/BHh87RYIND0wK2ZLWw1ep9TfSgwSY4KCA+hR9
PXSmSVPqR+0j/0F3eym2esgPf0sto72D8IOj4Vl36uGuwRRTPddvpDDEW35R
sh7k6376+IkRYGlDrhPOSvWwSaRdYCRAhFEMDxIsa9VDZvuvWO42Ukx3mOua
onk9vK3LpqRtpcDqh53Ei13qoXWoiIiMjgq7PtKrfc23Hmi3Uv55/6DGnEY4
3L5G1QNBRvu0+5vT2PiIQwI+sx4ShFfuvjQ/jYmMdjaqV9bD3h+Dg5M91FjI
KMtydUc9CHJlp1j5U2G7ozanOCfqgZny7Xn23lOY0lgrl996PQS78BVyRZBj
2WPMcn//1cMq0bPvd0lJsdPjFu+0qBqAbuGN7Sg3EdY8fimbn6sBzDWlvnaS
HSCOCZOesPsN8O/+m1baqR30aaJ2m/BxA0zdMq9XUthA0xMX6A3VG+Dw86TQ
+8YFBJOGgr16DfAtk2SJRWEGRUxWqorYNgDlRXWqO+fm0MHkObtY9waw4ZR0
G5pbRupTumGUwQ0g90TuivbEBiqYKi21SGiAwPfsf27e2EbuN+nPsRc2wMD1
srxn0ntI1fydwVBjA+Q2WX/vbfqNOEobqz2GGkD8pkNHhO9ftE90jQFbboAr
pEf2q2EHqFHW3nTjTwNs2YURVgwfoJDA3sboU41w6OpJwSJ/gPQnuJmfXWoE
ro/v1vQu/UXCHJ+tSbkbgTP1qEVK7zeiMJ1sL0KNQEaTduXsyz00UnSPzVCu
EXhp2xotWHaQw+PV3s53jeDE5fTbIHkDyfhLcn10agRfkdOinGur6NJYxMc7
Po0wLOC0FO+/iFZZ94cXohph1dQU56o0i8qMn/CFZjeCwdcmXhuxSeRVkPxF
pqYRhjJfUxZIDqGXBERThz2NUCnERvZquAfdkvpPKGu2Ecp1fcyGfnSiQ5/8
71o7jWBzmcAq8GUHah8+vUBH0gSD6lJacSGd6Od1PayRvgmGnjBlpfp2IxPD
6gA79iZgo30l8OBEH4I8xjUuoSZgaPxTcyFkANEcWkhMPGqCPrJNlzO4YTT1
oD3MR60JXDo/e7pujqLs7+xb4vpNsHdjAPUUTSCXQSfpXbsmKDJRWeo7P4UU
rw5HJXo0QQopKYMkyTS6ps//Wz28CUBKbNozdRrhsz0VqNKawNtBqlLyzAyq
+TuXUFHWBOczy3glRWaQvwTuyLS9CWSerWgy3p1B2t+ClVkmmgB/Yc+onXQG
CfRvpvX/aoJNxtMmucXTiOjKY+IvBM2g6GwZ/Z/qNOrViX1x/0wzfKh+tei2
PIXiMv/lrF1tBrZPQnc6raeQ1W/lU5F8zfDnReTi5f1J9EAs87WieDNU8iXR
WetPInoP8mIipWZI+CyTHxcxgRZ6Xp8p0G6GGNpHRI5y48j9DV0lo1szpHcY
d3a8GUGq6cbn2wObgfm/3G6RziHEsddg7JTQDPQbpMq5bIOoyd3u8lxjM1Dm
sdgK/+xFoV09FkFDzTDX0szoWNeN9Bm4W6WWm4H3Qba45mQnokidsEs/1QJ/
R7xoV080o+FtoW7NSy3wjejgKylzPUpBvjfOcrfAwde7Kq+eVCMHtxWnOtQC
+xVDopz6ZUimQ2LQWq4FOgXtOAbOFaBLFyJ4bmq0gKpZ+NmD5Gy0prnnNvqu
BQi5VnEzYVmoPElh3MupBTLLGTTPFOUgL3zSHVGfFjgTPN5a9a0AvbxP+G0r
qgXaJlrvftktQbdcX8zGZbfAid+jYs58leiwNe++ak0LOFol3uuQrUYddKf9
KHpbIMdyJeMD1KLauahd49lj/P47pQ8O61BhnoB6z3YLzLou5Yt5N6C0Tw1l
gsStcGjtNk6z34iin6lfDadrBQLx81QmQs0oiHXNlYCtFUQJ4+1blFqQ547j
ovbdViBi4OX5o9CKnOtoZZoetEIR25+HF2+3IauAuAxulVa4Ht9KaPm7DRm8
ETrrq3OMf2r5ql16O9K802K1a90KgyoCwqlKHegZ8cthdfdWuIQzo/+50YGk
+zZQRXArRJ+227ER70S4uI9R15Na4aTu+lCaZycSsKQndi9qBS0N64+drZ2I
QzJJd7WpFepNYtzzTnahy3QirQrDrfDYWCbq860uRDvXzpO3fMzft5fTSqEL
keS98rv4txVUwk9K5+p2ob+u27vvT7WB8cdqHhvrLrSh9Fl9mrENyht/Bv1x
6EJzLAzlD7jaQMSRRsnKtut4HlKvpoi0gcL47112oy7UUYv7dFq2DehzXb7K
qnahWv/uRfP/2qCDz1GF7X4XKtJ+IzNo1AatrvH5eLoulC6wnyHyoQ3SxwyX
txY7UQyRx9korzYgmB09MsjtRMG9l62Jf7aB3G+uvB82nehbbOawXkYbKDpc
eNN6pxO5WIhj7RVtMOzuvGo92IEMzukRB022wXu9K98mPI7rO/tX9+9GG4g+
XpBz6GlDSrlerRon2sHXoUms5nQbwpRy/TiutUO829YTZ90WxM/ycM+Trx02
pc5LnXVrRhzbQ+qbYu3AxntX/FNoE6L1P7parNUOza5XPKWSGxCptu8nJot2
0KZSYayIr0cH/KxLLq7tcGX9dcrz8Do03yOd+TiuHc7kWWpqW9agorOB2Nh8
O2yr3xVYnChD6TMc0aJ77bCDZk3bv5Wg6JwS4njSDiCpu1PpJVSEPJ9OtRpz
dADzfgXDRc9c5HzdgrdHqAPe/WfoH3ovG1ltkfgLSnXAlFSgxp/RDGRQE7IX
ptYB6hQRUuccUpCmH9dzAv0OkEwIGyZ+m4CeaVWUa9t1wCqFUpNeQgyS5le8
1vS1A6iObpvKKEciHOHcJ+6wDthWlOzZ5w1DAj3WSz4pHVDUqKFH/iQI3Yih
kN0t6YDzJC8tLL0DEJP5j0z11g7w71MeJWUKRLTivOcqRjvgqfk3nJFXMCI9
W2N9fa0DzphJvJjgCUd2X5K6jQ46gPStyOU22ki0e9RAP0rcCZfMHxo8vBWN
dK3STdnoOsF1L/ZUq008isq6+rPlUic0MMU0+/glouFV/1YTlk4Qr9ueehOZ
jGS07NlL+DuB7+ObqkW3dPQpYl1J834nPCYLdeDhyUTlQ69ciMU7ITmCg+7N
mSzEq/BoTF6xEwTku685FGUjPY8Sih21Tijl6qUpdcxB0fW3hEJfdcIJbmVN
VpSL6BCd36xJJ/yoExJqichDcjbulV9sOuH1kdyNevF85J7zd+2WUyfsEtRP
ak3loz83ph/Zfu+EHSMFMUGyQsT/5pkVU1AnKAxMFT32LUSGkY0xNRGdcH9f
430FfREap884pErvhAAlzdFAmmJ0XvEaV05eJ9h/obCedytGCt8C1FTLOuEZ
n8qm4e9iVE3okBvd2glf75wvPuotQfEbj/QFV47zMRubcjYvQxOcpUGj+E7Y
71+yaBwsQxd0eOqc/3TCPW62nNeoHH0do2NuJe+CUm1TFb6jclRz4Yus6Zku
4J4bp5J7UYEOnh7Y0V/sAlciXPxcfgV61zzdp8nRBWE7piPSx/s1kViZkIS3
C7TJheOGn1eiaWjiTRHsgqQTUVY8rpVIqSDDY+dBF7wf3LzN21WJhGIdRL++
6YJPtcOpTS+qkOnEL2Meoy6wth2oL3WoQskMWuG9Fl3wgzHsnVtYFbrkI7XH
5NoFsafbaRP6qtCz1lKWWo8uON2VvHNyswp5kfIq6vl1QZ7m4F3cqWpE8IE+
LSe6C3IbOfdei1Sje0VfhlWTu+BPb2OQ/NNqZLZ9QHqY1QWndEsH2fSq0az+
zOtHVV0gqKZd8tOnGl2OV/Zea+yCmPHpxAex1Uh5qqnMt7MLMKnEtum8atSk
knlhbKILzE2MXIj7q5GIINsr9sUuKIh7OV8xV43S6cOTTDe6YL9a+IfsdjW6
unsGX7LfBcnl1mzZJ2qQf99nYZIT3aARZUO8SVVzvG//uSiQdwPByuMqqos1
yNbfvCX0TDdg2LvZU9dr0Kr50tm5i90gPRh0sM5Zg14+1XjBc60bYnUcQ4v5
a1AnX1+s7c1u8J/IfWImXIPEaR+v1fB1w9Evk8KLUIPyNyvvUN/vhtYuI51c
iRrE0XX3g6p4N3AwV/+WfFSDqLyvnV572g1PmttwL2RqEF6OOtJZuxvYneO+
2R7bA1R/eOktu0Gt7iNRyXF8aetcVfKn4/PIKyaRaA26lfqcYudbN4ySvT9k
FqlBUR5dirjAbtj7cNP6yt0adM7gYdiXiG6wSujfF+GpQW7SZTM98d1QstDL
9569Bu3f4OdiyuiGaKKMvhmmGmRAnmShW9ANgi8u+FnQ1aDxRaay7Ipjm3b6
Mv+pGqTQ6E/8r6Ebgq9s3LhOUIOqEyjkHnZ2Q8pdHsNHx/W+89kp0GfwmJ+x
R2j8QjVieGDIzrbUDQ7pdMGXWquRJ+v0O5PNbnCdbB+4X1aNjohUC4t/d8Pf
H2mz0WnH81AjLiVP0QNvbrkpqHge91OU0cCGswccdH6RVYtWI+arPjnV/D3Q
pkUr4c5djfwISA8oRXqgqkL7bu6FamRTgfeMkumBjSoKCZm1KiSGmtObjXpA
+uSk+Pz3KpR7CfbOWfXA8sUJc3HrKsR+kIfT+NADgZ7+FiwvqxBlSVTnllcP
XKLWOel8swr1C9niL2X2wG7WDx7q8kpkIMBx9x2+B6Z/bZr5J1SgSwsP7bj+
9MBE1cMpA+MK1B6iU750ohcU9qQe9wpUIN6j+AfaZ3pBaMd+x6SyHG03saqo
8fbC5wYOFveeMvRB47qNuHEvuNcOR8WvlyCfr0zF55d7YVKJ+lz6lUJUMHkO
q5zqO87n3JhiYib6o/zEXXmpD4Zvhug7GGcirO1b9+pGH1zQxAVkCmSi2iIS
nYsE/ZDzofKfqUsG6vbd/27G1A/dwpOsIXlpaF1idIrleT/4O3nPAXMyYk2K
+fSltx/qb1t//30qBulemey4MtoPo0x5LnTh0Sg14BJD/kw/ZA7g1fW4ohGf
S0D6NL4fJFP5AxpkoxA8/zxw/8wA0F8gES9l/4leUBncWJcdgAdB0mU8OsEo
8mOCueuzAfCXvjlt6B+EZn7PlDH8NwArRsp94jWBSH/+heJDwwGYuJ+ib8cW
cNw/OfvIrwOQwNqqNEbui0rveNTd9R0A6W3Xy7HSPugopeF0W8gAOC2JjFh8
90ZuwRD7O3EANOvmXlLLe6Em6vfr3zMHoPlF3EWNfU9E+alIiK1wAOQr0Jph
hgfyM+VrU2wYgM+UaVyn5L8gGk9TPq+OAeASuynMyeaOPOMzg5oGBsB1pqf8
7sXPiLzq1wHR5ADMd9PksHO5IbeRW69hcQAuJSmfZdX6hAh3jRrsNwZA7KRZ
06NqV+REk8ZVsD8AcpR79xVkXdG/m6s+eIJBwPvGpuBIXZGdJOceN/kg3MqP
miLDf0R7Gvov9M4Mwmkfuu/S1K7Iwi6pKvbiIKw1P48Sfu6KNvwX2SavDoKO
w5tr1f2uyCiD3ZPx5iCccP5VoPz+E1puerupzDcI96ge3p6UckNvZ+OUfYUH
oTapYzBY8DOaOZwtaRMbBIEPNVoLou5I8yLLVfLHg0DlzzT1RfsLGuPXcpN4
OghXTPmxjLCvSF0uesXx+SAw+69IHs14IKWPzPm7BoPwXik8keCHF3q4dunx
rOcg8J99zt983xfdqqKzrGgfBJfgBJWat8EoZURp+E//IDT0LgZ+5g5BHLt+
uLsTgzAYkVt3cjsEXeOkpUj7NQgD/724kuwYhugCqH+G0gyBc647k/T3CHSg
S9pkqTgEueoJ13+KRqNmmt+XuPqHgBnfX6zWmIDcDqfeD48NwTNypjVC+kQk
uto87j43BKERp1ivayWiwobwyLntIXgXEqtY+TcRxX8Alp9nh+G14LKpJVsy
cln9zEn7ZBgOar8fTb1KRdiwiWel6jConpX9MhOfin43qK0Zaw6D/OAB24uV
VGQSw5nR8m4YUs7f6M8xS0Mv1Tv4PnkNg3veaYzEPh0JN9IL77cMwy1q1VGJ
e5loN+8oNL5nGLSkrxr6qWSirJjFv0ojw/Bz9bFnpGUm4nAsLstaHoZ8brJX
e5mZiP7uS1ED8hGgDHpc8IMlC+Fj4h6NPxiBlsrg6hME2SjFUUCltmoEPNkb
k6bdc1DkGeae880jx+/DppT/onKQf8wpeYPuEahlJWQPONZnHxqmH9DOjMB9
qnezwks5SPG0z11NolH42KZPYiCZi/5ErNEdPBiFqW/vx5M3c9Ev3iEfeflR
6I8t8qInyUOz1bVUMSqjcElxXFiCIQ+1z4cRS+uOAi9r0+q8aB6KviW9E/Rl
FFouj7g99cpD0uXxvfyto7DASKxz4VI+win4KnzuHQVqNpvDNq58JDD9vnV4
dBTE6SnvPEb5iInkWa3z2ii8ZJVd+fFfPsLLEuZ2UI/Bi6hh0/SwfLQwsc5z
/fwY7MnY7yUn56NR0+EUqytjsG0uu2NalI/qA7JiLvOOQTYxR4Nmfz4KGdPw
M3gyBo5Tv+taqAqQ17vHpyvUxiDtAulpNsYC5HJC0IP29RhsfupIleUoQIas
1B+LzMZgPC37GYlYAQKjUjNS/zGYCZzWZTcvQIsHFxRj+seAOtD1nG1rAXqn
eLW3Y/z4vPwT2TH9BWg34YbywfwYxJDtEMZMFiDip8Lqz/bGIPR36LWr2wXo
WtLz16QXxsE+q3qI5WIhSjrUmuVnHgc9huikw6uFiFfJ8K0mxzjI3X+8lHGz
EGFHDvpFQuNwNp6KPvR+IXr+LMLMQG0ciEN+FQY+L0TTyfHbQa/GQavTL/SO
ViHSJ8iwqtUbB7V/cYnp+oXIJqXC7rLdONwaLE3ktS1E/iemXDpCx+F2l2Dn
e/9CxKiyRHQQPQ7m1zNT90ILUXTqphtHyji4nlcwl4sqRFkqJz2cS8ahyImT
yT+tELWnXffjHx2HCKIzn77UFqJnhFx0mrPjUGNhJLvdVIhGVQWCPFfHoXnc
pxzrKEQrhJJhcwfj8Lu//I/5UCEiU38bE3R5AsyMmG30VgsRPbF1wgb3BCi2
SQrx7BQi1szPKVLYBIix7Ow7/itEYiRJOX9fToCQS4B9G2URUsgqKlB6NwFv
9PLLOs4WIY0XzSVpjhOQcbKcQJehCBmTjlSQeE8AlQcjcQhzEXLIXqnRiJwA
2bSXHm/YilAwGVXrmaoJMB02Zh7lLUJ5L2/11kxNQHNgbf3UvSI072Q/x0ww
Cd6NuXm0okXIrHtiUuP0JIR73G9jf1iEDq9LjEYwTcJNdqJffDJF6Itl4sAY
9yS411T+k1QoQpEXTNufy0zCMuVn05ZnRaiw5F7dkP4kPPuWJ/9Q9Rj/REt2
X8IkFBL8u6KhXIToHr2I7JqdhNBwY31S+SJE68BDOEs8BedekWiTSBUhmsyT
b3fZpqCGtGUa3S9Cp98XHArzTMHqKJuu9d0iRC1tGOQoOAU0N/Uibt4+ts9f
5a3FTUFYtbaJKmcRoprtayR7NAUMv+mbTrAWIcqsr69kFabgyv14P3amY/sD
7o+P6hQQl2qWNB/rG4oLSZyMelNwx12+05OkCJHP/VerYXocPzLin3bcD7Js
2v9ibafAn0f0jfx2ISKVcfDi/joF941rhi5OFiK37P5hea8pWCkV/F4+XIhI
Lt5mN/Odgt6Gh8oSfcf2/FxFfugUkNCYfd86nhciJ/lNXMoUELUPLM1kFSLX
+ST0OmMKDmeIdP1TChGhLNFX15wpyF7Tn2WLK0QnGYquNZVMgU/yEzl8UCE6
kXtNSbF1CmKDt6+zORSiw4WdfO21KThbcKaBEVeILguxOsPmFJBxC/38JFiI
RNyVHl/amQLR7uz1fp5CZMeRM9FzMAWP1kCJl7kQ7eqakIlTTkPoLjZeeVSA
1peW1a5yToPmxMo54+ICRCXMwPLv1jS49GTkq2cVIK6vUuuDfNOgk5OkyJtY
gPRvJrp4C0/DVPn54cCAAjSv/yblSGoaboXstz59V4DGViYOxnSnITzytVU0
UwE6uH+6ochwGkTYI+lvnitADJ6YT4DJNAhY9wmEkxcgVa4frLI206DnwC8D
2/mo11BdrvTzNDgy3Pf62piPWtd6f4bGT4MKadsPEaN8VPqrSUxldho8L7me
rErIQ/s+dqGfFqdBPtn/ZFZIHhIQ4MTnrE7DgtarZx4eeSjFxjOKZmcaKE9d
eHdknIdCT8gTNBPPwI7cl/5FgTxkfba3TIR9Bp7ULPiPlOYiPsFxoWv6MzCy
+/PPxfIclPgBf2vt1wxUZrP+qvfMQmkuWeRk2zPgDRrRgXZZKNvNZPba/gzw
Zxquq+pmoRKv9RBVglkQspBvyBPPQu0Ry0S1NLOQffNnYc/vTLRTPj0censW
mOhJXIq1MpHYUbfbI/NZuHRPM5nkZToadcwZj9mdhdiPtp7USklobjGdsHhl
DqpK205KUP1E8Ry1S5O/5uDSqe9VDUUR6K3uUAfp9hx48vMFpb+NQIsLhOHP
DuZgvr7kbWzVD7Q6ryqwSTkP9KZ5LRwO4Qg/e/INx615eFtHsqhCGIoIppTr
A03moXlZtuCragCqYjZMLbOYB/K/JSYbNAHIRdPZd9ZmHtpefnLMavJHRJMp
L/mc52FJQ2BNQsQfkU4Q7LX5zMOJ2pNRqax+iHosmZ04Zx7ukCibaZH7oEtD
h+7mO/Pg33Ip3JLjK3I4ubT69Pc8sCpzm3cXfEGjnD0KAv/mgZgt8XPnwy/o
x4eECztECyAm1eCZo+eOmFgUEq3OLcAL19R8njw3dOVdVIMt/wII1R3y8Bp+
RE7BHpzqggtQPqrreIfkI5qssvwufH8B2kZaTu1GuqDIc9Iqf8UWgEu+2j1v
0BkxF+PnHRQXwOruxJugJ07oGrEEiZPpAtyT6Ok9GrZDLrdu6WtaLkDd0bmt
vzft0LTKhXawXYDkiQT3e+9tUUzyasAJ5wWQfRY9P8Zhg1gUAlg/ei9Ab5KB
B0OkJXK1dfyi5b8AxOMJS9rElmg2Wm9NPHgB9PdsnQiNLVDsDsojilyANWPB
HHJpc8QaNi/hlrEA4RN00n38psittjPxbc4C/AkbIIBiEzS/Vkz5sGABsuom
7egemKAH5+NM2EsWgP3wQch/Ge9QPHzvJa1YgK3L76F73BiR6NsKLVYvwMF1
iVwpRmP01k8rvLF+AUpOOw+6vzFC9aWyBEnNC8Ahohv5rNwQsc0Lan9pX4DE
/SuPzdkMkdvpa4163QswzS+9+SPCAM0LUXJJ9y9Asd+LD5/YDdCD17vfbw4v
gNEsXrKxSh8leExuUYwvAO/hrt2akT4iy2tWWZlagNnn+5MaXPpIdzy3pGVu
AdQ3eBj1/umhRtKfV1KXFoDlRvwB95Qe4rj95aPn2gKwXnXmSR3QQ09KnfXV
NhfAluZr/MtJPWT30O4J284CVPJT48L+6KHYbjOhrf0FCOycGdli1Udt/xlc
qTw4rudoLMHoK320u6hF8o1gEaxUcoXT0vQRs8WLNTWiRZC+qcCSSmaApI6U
etnIFuEVs1kClZkBMvsqW7J1ahGw15PcB4sGKJzuQXTl6UUg8xq1Czc0RHWR
2JdvZxcBLLr/nTkwRBcKeFTYGRdh0HWK/eJ9YyQqxoFtMy0C92BdFdmSMdJv
Y2aturYIhC6/bL/9fIfKZs5sqd9chLEgZapyn+N+GlMMs99aBPJ5V+/mPRNE
8+dk1fbt43hzxplOTVP0mmbby+veIrSam3AXCpshMtR/s/rRIjhNv7TyJLVA
ioGhr2/oLMIIX86bxglrZH/VT2pXfxGKGAkTn720QbGpHrw1xosw99Sf7NWY
Ddqrdjh8YbUIyxNadumjtij818tQ70+LQHmzS8V/3B4tPLrevRezCNuy/3KU
5h2Rw98U0frJRcCFzI//XfuIDmWua8YsLsH4gF78jSYfNHvWTNFhdQlGly/8
vDLrg5qGKyWebSzBDiFZOPmRD/LXfXmDdH8JhiZnvhYL+KIbriF4fdJlsCHj
jw386YuUSk5/4mNbBtHoo1IDcz+UfOMgqUprGSJW5Sv56AKQ94Z0eKjOMswL
ivtc5glAlgUhXuYGy9DijQiJpAIQSAqas5ovH9/HP+trHQJQn6aZyBeXZaCW
fph/aTYAEQQvtitELcMrp5Ke/7ID0dxLwaobccsQGetlytwaiJpZ3XJOJh3z
OR+bPD0XiAJyrgfnZi5D5YHBr7cXg9DNjpevLlQuw8mX+u69jkHoGUnf1sT4
Mog0WAaOQTBSvRJnfmpmGR7GRP0pUgtG6kKWW3cXlkGlduXRI7Ng9FKfbuvb
r2XgG/WIsY8ORm/bn+HvE6yAY0SVqsRRMLIK7N8IuroCbITTnwKTQ5BNRrxJ
DesKZBWQDWWUhyC7RquN9RsrcKOXnt2xOwR9+EO/Icm3Aj1kYaXwOwS5vVT5
tSW2ArOfK0+riIeiILbBNXntFbit7JRP0RyKQnGJRva6K/D3o/R69FAoCle1
WYs3XIHiP4xyO4uhKPLrhbV/FivQRFjh10QShhLXVVdTPq2APV9HmCAuDCWT
3jAc+LIC/2LYbRJlwlAq8++Vk17H/oDJkD61MJSpGLKiFrgCr0+yl70xD0OF
+UPLpAkrMGgStKUdE4aKO5L0+VOO+aRyGFSkh6HSRdvllxkrMHY+99FgURiq
ZGBYzitYgbCu/gcPOsJQ4wf1Ja3GFeBpvt/EsBeGWjP/LBZ3rkBpiY3/J/Jw
1DkdunhmaAWsU6ICtxjC0dCDkYWKpRV4yG/SMyUcjkxEgtd+ba6ASMBsFotU
OCLhe7Z15c8KRLrL3nBQDkfh7LS/5U+uwq/UWLHl1+GI73LHoSPFKlheFSU1
NQ5HGmRSFJMMq0A+q1HU6RKOPLeq6YBzFWge0vik+IWj+aZ8LgKZVWAI+0Z9
LiUc4SKTxSsNV+GQ31ubOy8cBVtFqDt9WwUn9YQcu+zj+1XG1xTSVyHR7p+c
Y0w4uiJE+T6yfBWspOHd96BwJHPdzZ2g4xjPgDKv3D0c2VAT+GtOrIJC9VHA
ZetwFPfb9mflr2N+utVfSo/52lVPRmrtrQLpY3tzedVwpODxMJrkaPVYH1z9
JCcbjv5coouToV6DroknnUF3wlHHnH38L7o1cGm9/HqOIxzFpk8n+F5eA3om
tdY4xnAkB5nJg1xrUK9lM/LpKAxdJz+fai+wBiYgNJS4EYb2u96nMYmswYYb
0yvJqTAUrfU4U/vxcTz3SNVmZRjadZvP29Bbg8BzQqkP7MJQi7xsgZ/pGphx
dk1o64Qd64Pcwru2a6CpJ0JEoRSGpJOdSxzc14D3xuneX5xhKKLtUhVZwhog
7R8uqv2h6MG5p63Ms2vAhZ7M0J0PRW3Nn4clFtcg5KfZV0HyUKTkXLqou7oG
QymJEuhvCNJaZyXO2l4Dvj+uRLvjIcipcR+JEq9DRUX0bZa4EFTsEJHxim0d
htVjxDK4QtCtuSXfaN11YBF546F5MxjR5TupsaytAw9tvMvdXwGoqGLx+efZ
X5BIc8ipbeiDen5se38y2ADDH6d2tf77ijSuXGG5+GsD9qJ3+2vynVF/77zp
qN4m8GXf5b540QIVh4/XbRhswqa69rP7g+YoQrv/IrHxJrBIdvoZBpkjne26
Km6zzeN8pS/8ozNH+2fjzjjabYKiXJft6FkzxPBUK+uqxyboEzsx99OaoP+6
Jjbepm7CxudG6RQxXSQWMiBhn74JXGftq4zqdRDbq47g75mboJdHamAvrYPW
N8qhMHcTTl/wl3N/+hZ9oInwJi/bhKCyGbk1PW0UKf+CN7VtE4xOdEt1pGki
1/NKrpUdm/BLUM3r9j1NpDvxeLC3axO2LiQQtHzVQLff3Xf617cJjaQWhXRV
/6FqL4ZOufFNuF594bfHI3UUr0zLojW5CfME6fuypmroKxOFjfX0JlAZcGRo
/FBFT9N/X4mc3wR1eY24fgIVNNs2+G5zfRPqPfsfmpxQQsEUJS7TG5tQoHYr
WP7FUyTz8EdAD34T6Cte0ySUKSICV8fE2u1NuPcnIo2JTRHlVr4qydvdBLfl
nU3DwCdI9594e/z+JuynlEgqn36CLgmzTQX92YTZNy+dUnwUUKcV2bb7wSZU
ERi+fMikgD7mLJPYHW5CU9nwSzpDeXR3o/WiAQEeRnfdbqXnyKFlrgyuFyfx
cNLFuZyGTg5F6PngZInwcFm+hGzIRxYpxpsrYiR4uCO+O2LJKYuKrwjZMFPg
gVHIwTq8SAZdCzn4cZIaD5k6pf7/amVQf9945tZpPAx/Oquf8VsGfaWtqpk9
gwfXu4Lx2zKyCJOP6e87i4f7iYWfmstkEd7j01I9HR7iB+1nZ6XlUHyjzkHB
eTyQ/3r2uQIvh9SJpU8nXcRDXUzj+cwceUQtxnUtlBEPhvEnQ/9KKqCqD9R3
PC7jISyrK2+hVAFZlGw8dLiCB51lXHUpeoI49rvVja7igTPhy0p0wxPkbRrk
JM+Kh8eDoU0OW4pIIt3WD9iP+er5xR75PUX7y8/jb9/Ag9GNhy9yhJWQpjZz
61luPGhlh0nqBz9D56JOThDx4KFcaCrNSE4ZNY7Nbu7w4kFO2SQkkkwF8aok
nR8UOMY3sFmhc1dFR1J8WuEiePgu2P2mOvk5iuCR+MMigweHjT5qvXOv0Ogf
HY67Bnh4qH1JrvWVDrLQ7XK4bISHstafLMmVOoiqX7iL6B0eTASefz5k0kVY
FpVdjxkeBl1e+REO66JInZwWEzs8UHXF8ihJ6SOt3kPjlC94yMYeJl2jNEIH
oro1vh54SGf2ou95ZYT8M7rO233DQ/DkRNRyvhGq/Rpb+cgHD8+qQk/KaRgj
NlFp2vlgPBSGbFFOJb5Dy2kBecyJeFD5uY+CT5siF8YjcrJkPJz+OLIYc8cU
MX7RffkrBQ/nLJWZtJ6bIhnt+6TlGXhQEuMMP4gzRekMU6rPC/CgHkTi9FPQ
DJl+5joIqMdD89eryQ0yx/tAs0bs1BwedmSB7wBniX5ar40xLuAh9ksLiGhY
ogde5225lvAgc8BQcuODJfIrMciQXcODU4/iPeoSS3SL/twl7x08aLf/1SO5
bYXetGjvnCPZAp6bddX/qKwR5bSXNyvZFry+ObN8n8MaZe8Xct6l2AIRtaAe
LjFrRMBG9VqFegtCbB5Jc1hao3CnvPYQ+i14lfIh8PuANeq+Q5LIxL4Ft8jd
hoy9bJCtDK84z40tUDr79yFhrA1i1lIfx3FuwaO7tdcVimyQkXf6uVc8W3D7
/tnAczM2iGxF2TlGcAtO74n4KvLbIuULKQW197egsZUU36V2rKckj9bmcFtw
IdOYFRxtERaZoM7xaAv4NU63bNfbIs+2v95SMlsQXHSaRXTJFg39kW/QV9iC
E3N/L7tT2CGLZ/v8aapb0NCV1ntG2g6lUEhR8eltgWbp2XKdMjsUfNWsitJo
CwgtCTDmfjvkKhRmuWCyBV4DJ3PJ1+3Qy7drY+E2WyBhwCdly2iPhPxxDxSd
tqBKy4a2WdIe0Vb7pJO6b4F716WM00b2aPXXDH3Z92M8/uGG/3zsUf3lu45m
QVtgO/OXqjHbHkU+dl9g/7kFFXGBwq+77JGd7bD8WPwW0I0MUMGaPVJK4Cr0
Td8CemtdOUsSB3Sr7wPzo/wtuME91Uh32QGREXa5/yvbAql0Wfk7tx3QNO/1
zey6LaBmKCtcEHNAgZ4NVZf7juudH5ugpOGApBYNfN1nt+DamHnsX7NjP2/F
TzzxNqjjol8ZuzigWRvatBfs29DeoKi+YeqAKC6X5pwR2gYO078ZOcf/3656
U1z/aBvorCW+jD10QKpvTlfZq21D4IJa0z1OB/SBvKiBV38bIrBaU38KB9Qk
ED4cZLcN4la3qXQW7NE5Tce1w6/bEMNbSjtTZY80PF4TvA3bhrClidamUPv/
NVgm3lTnfRzHJcshCTNjySiTpXMtCfdiPvkUMmS54ZJsocG1lIfsS0wYS9Nj
qTjF0Mg6lXgwN9Emk6SZEyLKruLOyDL3d7+/0ujxL7xf73NeL2jqsFd+9qsQ
Ty0sF7+OTQWO828VYm1C/H3P/xbcAlKBmtHXNesSYru38ktfh1S4nHi5OeyR
EPlnO7NeGaYCKshbXhkQ4jecHBhXSoW3v6Q//GNYiF26ZuEh/6TAOfbyYYkJ
IWbc+zrkh8EUGA0ZDOAtCTE07PSJ5vwU6BpYmlOkhJiW615VeiIFqs1leR2f
hFhrpiSWAykQLo1xDHkKpSq0wto2/zV+51n7iCKFLX7zEmVDyeAc40s3KlM4
OFapINWdDCZjCekcDQp1DZnqeeeTgW668WPlHgrPMSzuOTGTISLQuj/GiEId
lS+yGrcnw2vlJ/J2phQmd6/JVtJJcD9tvlhgSeF86a6vHXqSIN9Vo4LlSOFl
3Vc6fR5JoL6Wd+t5GIWHZJaPZwcnQiNdlkkiKXTxrufKYSKwP9dxdsRQ2JVt
Eq2/IxG48r0r4UkUGjkXbdk3kgBFuuJ7xfIp5BupfPjVNgGkfZNbjJoo7P3o
q5ehEA/CHl5r4d8U3tUtusYOi4XbT96djA8XYZxM8mOjKR60rR339o0Q4RfD
/OOLrTy4pTFucyBKhN6SZurVuTxoiB7YphAjwpfrhXsZRjy4pNTSei1RhNL/
zow0pIVDnE+KaChXhP4FszO31cLAcFE+w7RWhKROSj8r8ARclTH9aXlGhMbr
akk25QHQNB7ZtTEnQq0KaiXDLgDartf+pfBWhLlSjMNSq/7Qx1FzYgpE6CTS
XX7j5A8r5WLSvDURTt68FLsm7gdo8GfmrATBsskVVY10H5h2jDr9QoegtWfS
wtF6TxBo1NXM7ybIGRnQdfXzBOHS1OA/egRNXY6kFCh5gkyJx97tTILS0g7D
Y2keYDJu9d7VjOCQvf7tKS93yIyQDe+zI3heWHVIVY0D2oV1vne+J3hE51uX
wm4H+Pi837E+jKDK30O+ffYOMPTVMquUR7C6fNJm+o9DkFvHUomMJnhxlCv3
YM4elh70DajHEzSqz2jmqNnB7zJLnVsSCf7MnHwX0Wi72WtKjWtJBPtaPvDb
rGzBc8Inpz+NoFfnSqFy0EHopAWQkk3w2uiBre/vIlywUWSG5hJsKZ61OXkM
4WTuPnX3PIKhZ1jcpGUb2KmSJjI4R3Drv1eGg2P2w8dj1fOq5wkGMUcrmb8B
DF99NCheRHCjbT4/TwIgz1iheayU4EKxS+DOBmsITthb2XuRYMS2KUMxhjVY
d3MLW8oIxp3dI2oLsYL3Tj+H5V8heDSAbNdgW0Jf8UNufOXmfsXr1IXrbPjl
5VvboCqCUq+Ys6f12cANNda2rCH4oNP7pgabBUY3PLburiWYo6s5fm/AAmSE
iZ+21RPka5xpy4qwgFmrCsGnBoJbfNVanypZQFfW/ZcLTQRrrkdqMXrM4ZSi
bPv9mwQDrVy5DXbmsKvySHF5K8HVzH0Pp1bNIJ8/6/hdJ0EJVijHctgMVobi
JOgHBB93iz3K5plDv3r5ylwPQQ2+LVuz0Rxqgrom/+wl6Dzzk0T6mjmkNUwP
3HlMsDLuQruVvQV4LUveqX9C8LlmgdtctQWYWBg0lj7d5GXsHywuxQK5dJey
M88IflrxkdX6Dwu65S7FeT8nqMaIsEoJZMOlI51BtkMEaxdMBwan2RBTPulm
/IKgXdSYVkC4JXyjq8eUHiM43b+fFZlnBQUH+PMd05u847WPfbnJp2OFIft6
luDZyy7vTt0FmK1yMxR/Q7BLdnRi+5n9YLXxNv7wIsFYwS2HFSkEQaeq9PQq
wZLMBByuPQBOZnEGsgwaL7aeHr6lbg9yekYnfXfT6CDJ9xKPdQaLkeSSTD0a
BdFP5zUFzhCc09tRa0BjQu9f0dHBm/075/d52ZBGy62K5KqHK0RUFxZlW9CY
kyuwkdPkQL/aYusNBxpVpVjHexnuIOozGx10pLHuq4g3G+gOu5Iy18lhGqsc
H5bYZ7hDysiXdgc5NDbH31b6QLvDntJDL0aO0rg2qv3d6nsP8DpY8mH9GI0+
fJOoc0xP+GF1YsdOf3rTP5KLphGeMO4WHxoZRCPfeqHw6htP2PL5fkFRCI3a
UdX/5elwwfSmfHP79zTWiPrqvg3iQoD/0aHxMBr9ijYG1Ku4UCB/jXzm0Wja
kywhOcGF/wPaKtaa
            "]]}, Annotation[#, "Charting`Private`Tag$200693#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
LDwgvWSNuew9VttlL4PsyxFSA2uvME2GR2BwpwxqPL5zH9lYYiLoLveAdhms
82RQD7iYYVTa4ufuO5XBm9g2/dKql9iq6439/PAyCDh/fVG+UR9riOeY5Cgr
g7/3na8+K9HBopsYm76NlMGoluqzn54amMMKVRbx7zIIJuTRdPtPBXt8ljTE
9nw5jFMLnf5y4xEmIHDkNHezHDK8Zceu2UhjFCrbhqoq5fCLcPdu2qWH2Lzd
sny9VTnE5Mr91mFWwqq/T4re9CsHO+bry1dCHmNhZQOX4zPL4aH/N+L5AnXM
bqKNhK6jHNROdlZt8Whhiidqf31YLQeNK+/O2JlqY7wcxYPbZBVQxp+96PtE
BzslnVmpd7UCfouwHOUM6GBTxvGJfVIVcKo69Lfnmg5W9uXH13sGFXDf1v73
w2gdLCjL73Xehwr4S/a0SvlAG3vV6/H8SmwFULrWqAmd0sYe7r6XCqyuAJng
ZG2d0GcY50WbG0STFQBhQxfYi9UxQgnj8zZHFVDcKvOD1+0JNqql/W+GqRLC
uBQGnOhUML+4h521TyshpnXujMdlWUxJ7RF7k30l4LEPYuRkdzFqCrnXbT8q
odP79UB33C2sp1KutausEgTHJtLTLW5i/tbyl/vHKkGltM3kR7UYpsylYD18
VAmUV7JOBjwA7JNZ0sw6ZRUY/xWlNwi4hxk3Jp15xVIFqh9fPtg0lMZkWZNF
t/irwCiYzvKVwwPs2rtkHVvJKjCbY7xpW/kII+tP/rynWAXPnm9J7l6Wx5b5
UvLfvqiCR4GWtiheHmv1TJk4sDrGd7629euJPJY2nXLa0a0KSqntmDvuymHe
EqlCBIFV8Lwg68wj94eYaVDqM9e4KlhqahajE5HFHm6kehDlV4HKWuDcGQsp
jFc2Ldu9vgoEIq6lLCncwyji0n6SDlRBpMJYaPUfwFb/phF/nq8Ckp1qGiHW
21j7k/QbZ/aqIIz6jOofB2EsIzv96VeSaqisSrl9/8J1zIc8w43qQjWkaMY5
/m68gpnrZ6QHcFfDiUjDuzHe7JhcZcYgnXg1aFbeSomc5cb4LmYShshUQ7ZG
LdFrYX7srHUmD4N6NeDdC+qzhoSw9bZM1TDjatAq+kUasi2CdXBmOTG/q4Zi
+qX+y1riWIZzVnLU52rgIkryniC6jfmMZPWyhVXDwnjfXZ7525i5cPbfuLRq
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
Pf9aoDg=
            "]]}, Annotation[#, "Charting`Private`Tag$200693#6"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200693#7"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
T55fsVoA63pzwv8DXZClyA==
            "]]}, Annotation[#, "Charting`Private`Tag$200693#8"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
d9Tof1QNyWc=
            "]]}, Annotation[#, "Charting`Private`Tag$200693#9"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
peWdzLf/AC7G/37Am7Twz+4HuNX+7/8AjolrWw==
            "]]}, Annotation[#, "Charting`Private`Tag$200693#10"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200693#11"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox["\"t\"", StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox["\"Magnitude\"", StripOnInput -> False], TraditionalForm]},
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Off Diagonals\"", StripOnInput -> False], 
         TraditionalForm], 
       PlotRange -> {{0, 100000.}, {1.4871897827794062`*^-16, 
         0.2426242369492179}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 2\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 3\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(3, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(4, 5\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(5, 6\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(6, 7\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(7, 8\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(8, 9\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(9, 10\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(10, 11\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(11, 12\\)]\\)\"", 
          StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, Annotation[#, "Charting`Private`Tag$200778#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVlXc8198XxxGJfLNnyMgoI0RJn/v+HCohOyENMjIzQiQJlZGRESqUvffe
e++9hZK9dzJ+/f459/H843XOebzOvfdw6lupGxEREBC8+xf+fzZG8izNFOrh
PTi2R/Ici/HuNJYB+6kYzARbE62HF+CXnvRkFaYqQ0YocybBtRy84ngBRTGB
Flwt2ANMOxUf7U0sHZr6GE4TEk+5WsTi/7Ikl1wTMIDrMbVZfaFf8bzrnRpJ
BMawyHO76Mp+IF61cWeFYcAMbo7rkBV2eeFfRbJ5v0+1BMWLOlGBa2743msx
1E5gA4+vpwTeOPsKPxeX/1hUwBbCcjk1rH/Y4Y8om1Pn6O3hIckuDVq3wtO+
Gtv7TuAALrVDgrf3jPH8M6u3tBYdIVPKkjAm6AkeUzsRfGbACfIuMBnUy9/H
3y1jmKyvcoaYbB1PRQ51vAnfRaHXqS6g771+7XOyAh7fzI5Y7rhCj1MTXJy9
iW9xSfplD24w3NMx86hWGq8hLvahW8IdWJeviPxZw+Mn5ktFhATegmj07utC
cYQ3+35r0IvjHdxsjGabM5TCb2l0vp6mfw/I90Y5w9Wr+Dfk98/DaQ/4Jecu
Epx/GU9e9bMlnMAT0mboaWWoRPCf7C1sdrc9wf0VqWXCyQv4cwI7jHcXvcDx
LpdyXRAXPmXyTUXGpDc80yTjeKHCghcPJTMiH/gAEPmYRJedBl95J/j001Yf
cA0VF/7UQoZXIGTLqa7yBVVJdnHWdWJ8X0GCNluBH9i9+/hRZekEXtdC5Ngx
1R/GLuDvOPUT4xc4S+L7oj6C/R8hQ/uak/iSRU5epjsBsGgp6k0vRYZ3bXj6
p74+AKKHSF+opZ7G34pObbOFQFhspNW5Zv8fntx57TtnaSAwZxFz1jKdwXdp
Sth2SgTBq2yuYwHN//Ahok6yr7OCQML/mp2Z2Gm8DkUls4BAMEhbmH5vWSHF
c8yeWB6KD4a5V6uNGX9P4H9Xy1V5cHyCmk+Jd0KGjrGUCL9g8fBPsKvxW6Ns
dA+zduh5+pM+BJI+ndqcerCFSagzSgUEhMAXjlx54p8b2L7gw/+w06HA5fff
KxWdTayKNHpy8X0o2Al3zvpyb2Hvf/7O/UIQBkMPAk/eur2FKZRf9Lz9KgzG
bjJcsXPbxKg+W+lsb4fB6CUrodbNdaz/eZ5QrPVnoHr8nUlwbBX7qvSHQG3x
M0QQxAkYfFrE9PixviOjLxBH2flqK3YW4znxNjFt8guI60ZoHd6fxhbGG510
HnyFqJrz1ahwCssqolA+NfCPpSxPWzBNYPbBapwFquEQL/GhNPXRKCZlGbpl
0BoOc79fKxLfHMII5EcbqWUj4HaJfSSlwABWz80RXlkVAdc1Xt2is+nHPhwZ
Wj67Hgmq3KEJc7v9mOpwsvTZgkiQ0Mq8cpdlEKPPW6FrFvkGz6kf6FxjHMJG
/C/PvUj9BtaqTxQGDYewK+kx5i9EvkMMkYnji+RBLLiVetU+/zvwL0204nr7
sT07KJZii4I+fGT5TZZejJd4z6lENwr2I1eNtTI6MY3gTJxUTBTkbsjKRQ83
Ye5cxkfF01HwKvPnvUiLGiwrm73qGl80nOzWaCaZLcZ+wIBbsWk0dNubreq/
ycYouvxuXEuLBiunGS2Gt4mYlO4tkuKVaNBRNWZRbYnCTFYOGiRFY8DrMbeB
6NsILPR1nleRbQykJ9HJkLJ/x+ooLBQkC2Lg5mTKrpJRLLYRzk1RtBcDDMVi
ciJ7iRiHwGj71euxkLih2Vm9lIqplAR9LHwdC4eeBjlsVhmYi7yC2tWqWJDR
IQxVPpeJpQ0R0hYSxQEt3a6zy2E6NmJc3HflVhyYXTTywWmkYqd2rUMLPOPg
IftTierIROyKB7/2lZY42Eu73cxhGosZ0k8yF1DEg+5w3Ufrt9+woLiwUQmV
eJhUe7oQJBmGVV1WicwPjIdPi7LJnz4FYis1J3Ul+uKhyLvlVledD8aqXsGR
z5AAXzyVOSJovTCFKfuf4vcT4A5H0Fl5aU/M0VooLi88AawzKZ+a3fbCEo6n
jcR/JABbrJlkiMQHrM8/gi+PIxEaaeb9jcR9MSJ2jfnLBonwqTvpNKOPHyaa
fjo1Nz4RwtoSG4/z/DA9XK3F5blE6KZv+3nG1hfzb3USzr2YBKvFLffOd3tj
ZTpia2LPkmCiPeG6G6cHtjA/n52TmQS4q5lq7rtuGNPLaFuxjST4ch2OmR44
Y7Kn7kvkiCeD/hrPZES5A2YXRrUr6pAMujJ/CbTcHbAY3qai7OJkCCSqOL74
2Anryn/jJHqQDLfCLpsazb7Gjm5exWVjKWDFSCBledcVE+xbORRxSwGD8QLK
K2RumI5BQmVWbQokX/1h7UzlhnltPHITOZkKmaEB1PHvXLECN/obWXKp0Prs
pVkJ6xtsmqqdWMQnFXKiI15XZDljtFHvGjLbU0HRZTuNhMoJk7mE87pElQZu
NosEh88dMOuKTflM9TTgmHsZRH1kh7WN6bdnDKbB4Vxd+GaxNbZvzvJRmCUd
dlmoMhlLn2H8f7tVMx6mg93KQDmPgBn2jlm6L30qHSrt7gfvb+tjOUl7IULn
M6Dh9eENqXuPscmrWVrpTzP+3UeJ4GuFmtiZRmNmoeQMuKeD9CiCVDCc5rnR
tMUMqM7RLR6nv42Z/R6IEBTOBLPR5v0lQ3nss53/4zTrTHDvfzsXbKaGNZyQ
5RDMzYTF6y/aN2M1se2gw6nU7UyIbF3gUmV7gFH8cKuaYs6Ck/63aF6JPca+
bRAHLEtmwZkwZD9OpoeJkHrp/tHKgvsyy12xunpY9dnTl0gcssDNoj4t4bwe
pi7if0QVmgVZLjsnHPofY9M3qTtY87PANCfN+HfAQ+zF/U+R/H1ZIF6xfdIm
/T52ypLxmfhmFpQ8k51lf6SJfXX/igOabPgVf+YBdKpjAmFsFIqi2dB2SHDw
/rEyVpYaNaqlmg2PXEyXLe7cxpSruFMNrLLhnov7s9JywCb7Epys/LMhn4Zw
zznkCvZ8/oLCq/RsCHrj3/giWgQjPkpj9mzLBsK+NxadEWJYCI3IfNBiNnxJ
cBukvXcN4+XLLfpGngMvWJvCbr0CrOj6Fa+UCzmweZeOSJn6JqagWqxVIJcD
H1cJULHobWzMEMdXY5wDZVwWl9Nq5DHLl5U77R45QHIyX0K44A527CfTMByf
A1oVfOqCJ5WwgJj6kN91OXAu79mjogwljKtQzmj9Vw6UU9w2IctWwvJaW8UP
iXKhamfG3IlaCZOdVCYm48qFr3su8reG72BDW929dNK5YIW0S08xKGCmZPdi
OfRy4TlxQeDC8G1sn23oueCbXKj4vfiT+votzFfsgYzkt1x4Y+0zx3xXBst6
8GRKZexfvm1kqHRDEpOxns568DcXIPp7/IqiGNb3ztjVmCUPdPL9Ar5oXsSe
fllQsb2WB+x2afKGW9zYbvqzc2+082CJlZdinek85lWztvLBIQ+mqzyZ1+5e
wFgGbStCQ/Ogya9Cg4hKBEtb3PGLyc8DmxPPlE5pX8YwAqdHGX15UKSwEBxx
4QrWRXcoWLKZB/BjsBeeSGJPLrge1NPkQ5rYRhjz5jVsA51o6xbN//d+1u9L
jUth79Q9wsdV80E09rb4HM91jMGYzHzeKh/K7+zQRA9IYUmvfKW2/fOB2nN7
ZOngGiYVQElOmJEPap3O4R8SJbHWuKBhivZ8QKSG7vqzV7CHxfTJTEv5wHX9
J+XjDnFspf2z4/nTBRD3X6P3kZUYRrP7jREnXwCmKtiBvulFLO401+xtkwLw
r7tI40PBg0lwxBfc9SyAxJK/FgcD57AGcX4P3YQCMMz9vq4xw4Bpy6feM68v
AMq/fqsJZNTYwiNhHofpAhjtZ+MmSqXCnJ9nb7mfKIQPyoLsJod02BlP8Tp/
rkI4YPf2/z7Ngn0PLwz+Kl0In4XV3enuc2AiWVIGCXqFsLBoaOE7wYXV1JWL
5bwpBCvWK4RiP89jGsNAVPGtEJbOTikVqfNiM8u13c3lhbAt75RwS5gPq6Yq
Kb42VgjEj3wMvBz4sIjLWdHJ+4VwsWxILvc6H/ZCM8GbmbkIWEiTVjPe82Jq
LyNsvK8WwYHKqcwH+jyYYETQ/T/3ikDhfWRDySQ3drLSS9rUrgiOVqmVH1Fz
YVNTLheGg4qgRHTPLoqEAysjtqeWzy6CAAGJA+z7WSyUz/xPUWcR7NsQHlOQ
MGI2Ck+m+FeK4Gk1GDka02CKz7SaP1MUA+eR/sX2P6cx3gCl7FMCxXDF1fqV
rBQxRph744ujfDFEx1eU6awcorH+a25zxsVAa9++IfjuABXsXTLV9iiG/PPm
P6ULCLHAs7xqTXHF0MwQI1JYchKzwFivSdYWQ+HFcouI+tOY7BMazqSpYvC9
fqou9RwVxvnuFBkTQQkkkLeS/9igxg4SjtY82f9xsP/aPRVabKB5a2gXVwLX
rcYUOC7RYdlLC1XGD0pg4oWIp9gnOsyXcipp8GUJFKYQPFF+S4c9FRsMuP25
BIa+KGyyE9Nh0vfaHQsLSiBtmYFYkJMWY3Ws1ePrLwHiroAfOzPU2M7XYrmw
zRI45WVcHG5AhXWXZ4qQ0pSCjnQixq74H5Y2Gc/kIFIKDDwVGazOZJjHiQiC
WeVS4NhZND3jRII94Q2a03xWCgRUVAGRJoQYTt6rq8GnFB7KNriJzu4jBguX
oisppWD6U0dNq3QTrfvbRSU0lYJYrq+V3Mcl1JZt5sUwWwq/QiJyjFLnUEKf
nrUHSRmccXc2zyNcRm67mto73GUwNjoXp120gR6yKMFTmTIQF7qW9Qa3i66g
G/wDemVQeJm/48f9v4ha7xqV7JsyIMjuMY5uPkJL7pf28iPLgIK5epiygABr
iOeZ5CkrgxvUbJ8WvhJi0U1nm0JG/unVT3BPUBNhzovUWSR/ymBjWX9LloMI
0zxz6rM9Yzlsve+MvdVCiImKHr35LVEOV9ZfSN5jJsQoNLaM72mUg5MB0ZsB
ZgJs5sWCSv3zf4vhxMSjwbRDVP1l8qpEYDnkjy7rDBbso4iygXPxmeUANNJl
oZa76MVEGyl9RzlsL9vQfFjdRGpEtavvlspBiJL6Fo3OGhLkKR7cIq8ATZb1
WL+EeXRSLrPS8EIF+J4T39Sn+4WmzOIT+25XgG12g3CQwSgq8wv/ePNpBWj3
aL6ob+9HoVmBDnnvKmB7I0oxtWYQ2fR66p6PrQB8YvnJBtcfSHHn9e1P1RVw
UU1r5qPEL8TLbHeJeLICyCZkrQzWZxAhzozR7qgC/H74Tg5yLqCxx3rHv1gr
QchohZAqbgkVuGnO3r1eCXIh5cFvzFZQYJxiZ+39SqjwMWh493wVqWsrcTc5
VUJtLsOCdOUqoqFQdmgLr4QfAWHVAfhV1FOp3NpVVglBuKGdLyQrKMhW5Vz/
eCW8ttWVmuVdQnf5VG2Hjyrhm+qvfc2SefThWdKvFcoqgOvKrhWjM8isMek/
G44q2B8QOaub8QspcCZf3RSpgvGCtKQI9Ul08VXyE3vpKrAYurQq1zuMyPuT
fXbVquDPpQn/TZletCCckv9Svwq8fmRYAUMravVKmfj7vAp+ZkcLFs7UorSf
KWQub6uA6faE48ztOuSLS71M8KkKNpO2jf3NWpBFaOoj97gqyFFN5NAi7UaK
a6mexPlVEE+R6pL3vQ8JKqRle9RXgVUKPqgmbhBRxKWNnhqoAml92/C0xWG0
dJhG4jNTBdGhIjoRlqOoXSv90n+7VTAw/HV+g28MZWSn3/9IWg0l6vIfJjnG
kP/pjLfUTNWwMpYG1cajyNIoIz2YvxrSf9Y5aZ8eQcqVGYP016qBidG5xJd3
CAkzZxJ+lq8Gm8Y/5C5d/eiMbaYAi041tHQn2Pqc70UrbZn3IsyqIcnU/lYZ
6kIdvFlv2F9Vg6Ftqc1FuxaU4ZqVHOVTDbytZG8/ONQh/5GsXq6IapjAnme9
aCpHluLZh3Fp1VD5rW/wYX8eUvHP5uMrrwbFQCyrYCELicxlqyW3V8Mzr84Y
spRcRCWT80rgRzX8OJDeMhgqRmvhOfHpK9XwxbCeQEO6CnVt53ReOq6GuCvb
V9LxtShLJfdPNmUN/CoYSvbIrEcBybnc4hw1oJp7Jf7R20ZkfSJPqUCkBgr1
L1rGZDYh1Ud5DpLSNcB3oNTKcaEZiRTmRZeo1UArXQkh2UoToqLOb8Xp1wDh
7Gf3KrYmtGaWv13xvAbE7GyYWJoaUHdd/jnptzVQ+fiqesJ+HcphL5CvDa6B
UOVo79naGhTkWGB7K64Gask11FOwKqQuWNgoX18DOwY+328m5SMxj8L11v4a
MPnvj9NXnSxEM1l4VnmmBq5l9Zj4oUS0ca3oVtdODZB+sdU1jopCvcFFVuqk
tVDJfj/bVuk7ylsu+tLHWAvkRJKfpX7Fok+3i2s1+WshPyKOyHA8GdlFFy8P
SdaCV68l7ffMTKTxt5jxgXwtZPRbHE5r5yDxeyXS4/drQS+D7NEpjTxEl1li
rmtWC6RJptn1lflo61RpyJRTLQiZ+lHHhBSgfv3SSgOfWqDcOn7u1V2ACspK
53+H14LWi5xRGo8CFMpQRmuSVgv+FplJwTX56IV1GVooqwV3A2XeMx55SLOl
zNiivRZQKznTvYkclNdC5d03Vgu7a81foiizEXWrYQpuqRbEzWo2zxJkIMvW
ota4v7WQw9EcHhmdjNpaKZYpTteBdbzbo2SueHSxTe+MPUsdPPTMT6j4549n
W96l8Qt1QJ1T+mT352c03XZK7da1OlBT4JOgnghEMu0Pn6fL1UHiQ7rnvxh9
UVR7VjC9dh2kZASWkcj5o8N24vzXxnUwEL7z1MY+GOl0aA/8flEHRhvxQlqf
P6OijrRdJY86YItXnreyjUQMnQTMBSF18HfkT7pOWxSy7dSQYo+vg7ka3iri
ZzGoqzPpgUdeHUg3HSw8C4pFwl0Hziu1dcAVTFIYLxWHfLtUv2n21oGp78cq
ZtM4NN8VV1nxsw7k7zXtr/HGIdnuvUnejX/6UnXHlpexKK5bkegjYT0Q8Ul9
ZLKOQUQ9Udy7VPXgcSTq4U8XjXR7tm7qctTDOt/oR92lb6isR+5p46V6KLY0
Md9TD0csvRGel/D1cJan+/OaQxhy7F1LClOuBwfcPVI1y2DU33uz5fhRPexQ
KYHTb38k1vd50fhZPbRIv+VRue2JAvqWKLqc/+VTUlMZa3JFK30gLOlbDyb+
VVq7oS/Rnf5PKlHh9VBR/7j/79pLlNQ/Z30qtR5IQs96vjF2RScHcEHWJfWw
cHrFgGD8HTIcCMgdaq6Hrid63/7e8kbVA9N9MFwPZQziRVO8foh9UHInaa4e
QiY3riXyBiDnQV9G6r164DNS2I5QD0Qjg5OSL0kboPKE+LESYxC6OiSuM8XQ
ADGxk8aRtkHo05DXK3neBnB7sP7jvVEQ2hgai8iWaABrlXvzSRuBSHVYpIL5
VgMUa8Xkm3AHovThdxNuGg3gtfv0K+XJAEQ+MkSwYPBPbyqy0K3oh0xGBLnU
bRsg4uWpi5RcH1DDiOuNEvcGGEtOg5JkD8Q92mfIFdQAC2tmEa0n3iLXUX6P
D9ENUBHJH5YU54J+jDonbmQ1wGBexE/11w4IN9bVpFPVAIvNaRLZNDboy9j5
hZrOBkgyYO273mKCdsYcTwtMNIAr46KlqNJTpDHeJhi80gBEA2WT53bNUM44
h/LfwwbYltJa4TewQZQ/7KwM/msEJlHukWpre2TxoymglbURFgz8CtjPvkQt
P1hzLgs2gszU/kIjlzPin7DuDb/eCHp5NdIa1i7o/UTd1ok7jTC7u1IpTeKK
fk4wMVjoNMLr0i+KWg6uCCYtrvaZNsJPAhoXSV9X9G2yShv3shE2o2otqG65
ooNJOqc4r0ZI0w3s4bR5g3SmTMIpPjfCoFF/rPzQa1Q4VVZml9gI4w/d3lBW
vkJeFxno+Ir+1b9L6jy67oi0ba3Mh5sagTXljlHVlD3iL2uq8RluhIveMg7n
o56jPWIuFmzhXz9Cf9SeG1miJqVXNmv7jfD2zqQQQ4Ix+hLa1xRzugkMqELN
HH89QWYTQhz3WJuA4P3YDWp3HSTF7+lAKtQEq6xKqleMNBC5zWRHMWoCrSrL
x0dMd9Fo8TVeC+UmuF2ebkEypInSiIJfs+v+40tZtZboEXK+s9TXZdUENO68
DSbfniDFT7cE37o2gdXnKG1mZkPEOv7trURgE5j+PTiRyvAULfHsjcxGN4F2
ayx5XqExKrdUE/ua0wRsZbf35nhMkX9hirdibRNgMV/DW03M0GMC4qmj3iaQ
kNFuYmE3R8LyjySzp5vgSvIbSic5c3QUWPDRYLsJnuEKyil2zFDHCOUs/clm
+NbA2rksYYa+c5tiTQzNwHKY09HLaIqsLWpCnPiaQVuH/NF0qjGC/LPLgpLN
4OFjxBZL9BRRHdndnJBrBn9GKrUtQUM0JdsRHni/GRr7T82K4vRRzke+zRtm
zVCx3nDOS0YPuQ+5Kuw4NUPvwYO5qbKHSJ1zJDrJpxnWj36TvRS/j7jMLv/R
iWiGWT/j7KqZe6j27+/EyvJm+FprK+31QwV9uok/tulohhFZmcfcHxWQod9n
zfMTzaBkEKER23wLiQ+spw+sNsOr2lfquEZpRHzuDok3QQv0ju7bv95GqM84
7uF16hag8ORISjiDQ/FZh7nLnC3AtJZbr6SPoRd/NE9HibVAisvlgohoaSQr
k6WvfqMF/PH/naRxuokYfMhKiDVaIKc/5bWE3G0026tPXWjYAgbdmtkjQ/Ko
iLXMxNS+BaR9qjI9GRSRlxF91VmPFmiJebue/kcJaWdYMnaEtkAw0b3ziW4q
iH+30dI1sQU0vB4ElWqroj08Z4NYUQvMKMldYGlURc1eTmy/m1qg47aTFzOl
GjJjEWqTX2iBebZBxpdSaog8bcIp43QrZIxrPz+5r4pGtiR79FhbweR6mFpD
qSpKRUEXaIVawftNVTZYqSJnj0XXetQKf5Iq0kaZVJFi580hB+VWcNQwcqV3
UkGsTN8uXdRtBd+/188YVCmjZb1djzGrVshKFK0hJlJG/hvJEtKBrWCR5Hey
2lQRddJTBpP3tUJpoHBsSZscqvsdvWM53Qqt4X8n9ftvo6J8cZ3erVZ4pa+2
TD8oi2Lu6XBG0LfBXS5lbeemm+hFSHymkFYbZBQ3xA28BmRuJEkbZNwGNyTY
6/92Y0hPovXFjkMbvN7LqpFPx6F7JI9HdLzaoNn/oh9/kBRS6F9DlZ/boNOi
pF3CQxLh499Gcye3QfH8h6yuoCtI3J6BxKu4DcpKhrbft4oj/lvJJkvNbcDB
Y8XqJn4ZsdHj2lRH2uBcyAqtUacoovndcSl/oQ2Sl5F0VKQIOpn/JJj5bxsQ
7TypF4NL6O+7rZ3Xp9vhVLD0XFi6EFrT8NT5ebYdRu9nPupxFfznfxpnKq4d
2O1SktjwAqjuU8+c7aN2+MA6MmMnJICKDY0Uh561A05DdNTYQQBliO9l4lza
wfnZOemZWQEUS+xDG+3fDgT/SU0M2gqiz31sDiTf22HSS/d5HrUQ8ovLGjHN
bAfSIiLm0GIh5G53A+uobIcvCpRmXEbCyJzOlCRssh02TnKfcs67hPSm/5r8
XWuHsiCz8l5+EaSR59+mS9gBhCtNDc+eiyD5d5widdQd4NMpFfKoQARhGnnB
/FwdUKBL+ldySwTxbw3rrMt0wPP8JE36R//8+XTMWWLQAfq53ZSP0kXRTK9C
1p34Dgj7FlSWdkYMFdOGYuMzHaDkyuVIISmG9IIFHxCYdUL/XvopPzcxREpb
68C93AlfqFXCqgzEkMmLDBte+i7QKvdlYDsthhQNXvGVXu6CdwzluW5vRVHF
8BN3khtd8DTvpYb6JVEkoio3rqLeBQ7Ovwi4ukVQTIOw5Ncn//jytZEaUxFE
j+iDp627QLuQOwRtXUJeuX+XhV27oP19qrf5yUto/8JPuZcfu6BZ2D/9GoUw
+sGQefRfRhfM1asKih4IoIQ1ObOri10AjxpVp4r50IRAWdjYRhfExdcnrUvw
ISbjS/Vu+12Qu3a3tyiPF30Yp+doI+sGtoXNN33lPKiWyVvJhrob1l7K0irI
8aCDuwdODMzdQEMZJ1I6cB5Ztfzs1+PvhvYy4ic5x9zoJzSLpF7tBnEtxoy/
ktxIozDTZ1u2G9550613uXOhBqHQGbxmN/iIR2TrjnMiyThn6Q9G3aBcG8xc
J8eJUlgMIvrsusEhyiz3RD0HYg2U32V/1w2TX63vn1LnQP6kIuqmwd1w7pgk
8erEOUTgwpCeG9MNbgUeKs1S59C02S99uepumLPDqDaU2VGzVhbT+EQ3MMYR
2T/pZ0OP7+o+vMTVA2KhYTSK/7GjDeUzUW6GPSDpMvOS2OocKmv7XZ3yvgco
fudncotwIA+F8l+9CT3g2HqVNTmPA7HIWvDxzvdAqp1s238dnGi69oa8Cnkv
PDSjWHj9kAtlSJ81dxToBVq5WknneS4kg1oyWp71wo0V5n+j40bm4vxXrDZ6
YQRbaL9MxItEjhNkDan7wNZ3sLfQkRdtNfNo3RfpAx7dRyNLq7zIRZfb8YZl
H3xZZam9MM2HTm1zfBFK64OXmH4EjPKjwA/sJYwLfSDxdi2d5PMFFJfPfLBo
1A8Gnr3nPsteRIWTdFjVVD/omO8s+uxfQD1Bex+fsw+ACtZp8/rdBbRyc2zq
/IMBsHrJZXU4wY8O2DrIXV4OwOfmi24ELvyIfLfy8mDYAJgUhyfa0vAjnuTY
9959AyBzc57Nl5MPibmHZPzcGAAb0U8DqZG8CB54Dl6nHoRNe1oLEVpe9PA/
8wsrSoNwJ+kyq+fyeRRsI9au3jgI8vzjJldfcCGPUWF9mBuEcPq0QosGTuR0
S2BXiGwImgkt/kwwcCI95vOcZHeGwNUxQSDQ5RzSeMtRsGM+BDwfjA/qrrCj
28usd6Z9h8DkGWnYi31WJFxNb1/ZMQShHfmtfPEsiEuAhjx9dQhYGWrUYn2Z
EX3Ime9fqYbhrqdR0ydXJnTqmFzcS3QYiGmWmBXdGNGBCWmzvfowqP6sGTj3
kQGt9Zx4bGA7DN9pZe5bpNCjXziCTdVPw6BXlWgc1EuHWqj+sAoODENHHn3T
riotKmqMiPq9NQwrGQ2Ta1k0KMEFzn+nHYG9XtFePDsN+iQxnagtNgKkZqa+
XF+okfuSpwCN2gjI0l5obeakRo91OsXe+49AL82lmM6HVEiqiUFqr3UEDDq3
yNy/UaKN2Hi5H7KjoLwv2JIeewalvhHXqqsehfcrKpd4qSnR/rdl+gPZMWiK
Ej5frEmFFCoS+i63jcH2x8QSD3dqtKF0Iq/zzDjc5qFmdhekQV/GdYPN1caB
jHfoKskPGjR3wKQeOzAO71q+HCbcoUP5j4X7aqcmQFieuKqlmBl52ycNjgtN
QsGyZcifeRZUVHqtfthsEgqvVnu6MrCiGcLWnP7ESZiwv0+zJMOG6OUeRnVP
T4ImAZWkpC07osoierrDOwVvHnLxLGacQ+RMyQJnTafgmszz+H0NDkTsqrKO
T50CVmeqyJ5sDnQ0u11guDwFd4O13BlXOdD44sTBuMlPIHcOzzik5kRlq80y
WtM/Qe6Ze1LLAAdyoO0rx/H9gq97e6PlwRxI7OoPSS6zX6DG5s9ULcWBlnXm
cknTf0GLiwHdavg5lOSyIby8+gvOvBJd4frOjrYrfo58FZ0GQb/P3sdebEjm
uMdDznYaukNspb3vs6KxN7k/Ynem4U0AkYReFTP6PZdxomTxN+gLPskn8qJD
rMNHXrbbM//+v1DVtfgziF/U+63v8iyk81jyqPCeRM8/KJVunp6De6oZTxSE
SVD5L+pNnYtzwHiX1tVEihiph37Vv2A8B6m7BG2RukQoYvXx14D3c9AZfxm4
XxKiWTnunt3YORCkmnDOCCNAzn9TpRsm56AnVdZZpfUQl/bb6Xc14TwYxOdr
niU/wI11ynuXc81DA61CzYDOPo6ihEmo+MY8iETSeipX7eFQ3GxXnuE87Muy
iRJhuzhL/wK7rPfzgDN+kosf2sZ9c3zPlJYwD4IO31MlPm3hOvQ1yhIb5+Hr
++a0FYdN3JEit17s3DyoL3Xscn7YwKVcOEiuNlgAwpp7D9iY13H3TvZvTvxY
gLspA+Q+XJu4F6EDa2GcizAQKZ9IS7mNC+MdWlYxXISX4XEpcnS7uKKC4QXS
xEXICVtfvkD8BzcsOzpbOb8ITLLrV+417OPwUSk3qiyWYNFe//OR3yEu/s/L
71WrSyBiwERWa3iM2/GYyV8zXYaNBnyw8QUCJEt3t41jehmWR5aclZQJUHuL
58jNuWXoK34rqP6PNdzK5kyWlkGWfY3z5j82WOEhyd5ahqWZ4+g1JQLk2rSH
pElW4GDxQNtGkQCVOH/LfMK7AjYZueeRLAES/j0fFGOyAnIERdV6wgSIvsD1
/vnlFfDdJht9X3SMmy3JG+k3WYVVri6Y3DzCFVfOPfCcXoWyMM17k2xHuCEX
u+/TwmsQZyNkvkJwiOuN3Ap4b74GqvCOzinkL+7LD28dlfQ18Ao0ZXQr/oPT
PXfuPPPqGsgLPjKuCtrFlVEE7jb/tw5ban3hma92cCz7RK1OguvwJ65ez1F7
GzfQN2MzZroOBFcaP/zY3MBNtw9Zra+sQ+R1OlzM1gKO68tBJNGZDYg9O/5W
3nwOp2fI0UYrtAH3F2+YCm39xn27dHP/vOIGEHGSjsZ++4Ub2zfmv2K+Acd7
jm3mPlM4g74jy1TvDagZuclRGjCBW0gPyedI2gCuP3PlfCFjOBtPwYOQhg3Y
DZEaLuYewe3p1cqc/r0BUg9uiNFKDeG+OyyPn53dgAqNPEhnG8LJ+jO+FJzf
gMnKO9gk4RAuuNQ8U2l5Aw6zLtieaRvECTPQsQZsb4DMU4GnjsaDOKNWw226
k5twjPPw7i0ewPVInExi59uEKGnFwP36flwqufx/YqaboJam+Wbxaj9Ofs48
yGt6E7TnlJ4/ZRrEuZAVN4qYbQElo1Nc8vEILqXgFm176hbo9D+VRCbjuEGD
nsemy1sw/8tHNSpoAkeFMRPcXd2CPT/7ss1vEzgFJr1o3PoWcFaXaVGmTuDK
2pZ/UW5vgWNEjt73mglclASZacHBFiAz9eXzqxM4E1KwPUGxDRlZuMNl9knc
Xkq6Z+TFbXho6KRqd38Sx7LhldVtvA3uMQ4ye+6TuK1a0xyfpW0QVEKm7R8n
cMXNs5b2JjtAaN1zfidtDBd9SsxvdWoH8l65VB5aDuM4fBIelBrtQnq6VK3n
nz7cB+mi6YLJXfjWHx02dr0LR84nbPmAZw/oZxcacgVbcR8o4naPTfcAhEyp
Tuo34P4HPdh2gw==
            "]]}, Annotation[#, "Charting`Private`Tag$200778#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
lta5GJzWiAukTNo7ttkHW6+RbtsPjbj/ATWcQHI=
            "]]}, Annotation[#, "Charting`Private`Tag$200778#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
MoJc5iUeiUbIvkopq2y3iKgPLe6NSDdC0iiOy1liHo1JtYV/U2sEjpN7X1Y7
Z5BLn5PMtm0jPLJ5pdFPMoEU2Qaif3o1gjk7I3N42yhiNxTeU49oBDZv1522
d8Ooen8qoby0ETh/UD1QJfSggHu4f2ZtjSAzRv/WUacLvfgSonx5pPFIfxaM
/H7dhkR611J7VxohuJ4kiaO/AZGwPjrhSdQE1yJjPF661CCCfqzmLZom4OXL
LnHiqUJxGX+zl9iaIIZ8IZjdrQq931M+FSXUBE8a7+9oz9cgqTsZuop3m+B+
z1/ZY3wNiNGLvIjkaRMIPWCtighpRjPdujT5L5rA4Ol74dedbaiApcTgtWUT
rJ72Z/rY14E8XjJUMLs1QXXuyc1uui6kmvbmbFtQE9xc07TwZepG3Dv1b5wS
mkDLbNY+eaYb7eLY6oQKmkA7ARwbPhJQo4fthamGJvi7T77vuUpAYZ3dFsH9
TaC0zH1LUKgHGZ7nbXk43wTzZZSJ+nI96KaeG8fBnyaYPTFnffFBD6JIGbFN
O9UMfdt97baXe9DApkSXDkszNPo8Jm6cJ6Bk5HeVjrcZlrmnm48GLGTvtuBU
i5rhXX7ty78PCEi2/V6f1eNmiF2/fX1vrhuxMP3gv6bdDKVZbm9+f+5GSzo7
bkNvm0HsTOgLPFc3KkuU/+3j1Ay26/8dFJd0IZ/1RNHb35pBoqR/hk2mC2nd
Iv6yEd0MXcfiYaG9E/G5ak7GZTVDJ4q6++BxJ2pnOONPQWiGvGqXO+OiHahm
Knr7zWQzuGU1dOrdb0cFuSLq3ZvN0D5orRpH14ZilNTZIhha4NVnQqy+XzN6
HxiXzqvSAro9jsy9WB0yeilB56ffAskByv+Nj9cgHdHm99tWLXDzyzPHlx7V
SOmE1oC6Rwv8eW538qJQFZLpWUXlIS1g1ugQJDtRgXBxH6M5ElugSJLEIPlO
ORKxZDzhUdgCY/vK9iUrJYj7fqLBYmML8D8IoqXrKkIXGCRb5AdagH17rnVo
vgDRTrXx5863gDoL350bt/LRydzn/uf2W2AqJE2MvCYX7btubjucaoWdW/O3
0z7loNWn7urjzK0gusa7VOGYjaYuny+T4mmF9nvThU0ZWUfnl8KWLNkK0Ww2
tYyMWai9BvfpjFwr9GgTTyUlZ6KagK5Z82et0Ec6+tXMOBMVvngp22fSCm6O
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
Tk49eOR8hg==
            "]]}, Annotation[#, "Charting`Private`Tag$200778#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/NY/820IuXzyKJ6v/wMcsEHj
            "]]}, Annotation[#, "Charting`Private`Tag$200778#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/2e3AH9jmwj/D2HcFQw=
            "]]}, Annotation[#, "Charting`Private`Tag$200778#6"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwUV3c8198XRkRSSfGNJCTJTpLKfX8OIiQrGpSdnZQIKTszWdmJ7P2x9957
7733+hhJ6Of31/t1Xvfc5zz3nHPv+zws2m+UXpEQERHpkhIR/f9b9+Pq8mye
Js51ZPK5jlMFzpHG1GcvGYO7GzqPCqQqcMtanfi8ZDlYV3Jso3Itw8mO5FIV
ED2Fwj0LBTviIlyUO6loYLI6bOx1lR9bycH9ZUgsvMOlAxvtwl7KO3gc+0ab
cgKRPkQlZTcQnU/EKdTtrNL1GoE2a5EhT1EU7uOPS+4uyabg8OGW9NJ2EK7r
zq+zNvAWDDUvBRkMeePmY3LUb3CZg3UJbkNsyBF3eKYheZ7WAk6xMjh291vg
zn0c3v1J9AGuCiiWSIQY4Dhm1ySeLllB6eDzzTOM6jhM8Zj/6V4bmG15utS6
+AT3uJhuvKbcFpJr8W5Z9o9xBtc4eT4lfwYj5aDFjy7yOFwDE2J4aA/pk0bS
929I4ho/J0xZgAMYPPt38wYI45QFBTw6bjlCotimtovfFdzYQhE/D5cTPCDo
Ed8aEcQZ/ZToc2N2BhcZtZRTtmK4LeW2T9O0LvCIaqY52F4aZ0f5nA1OfgHm
/sM4BSZ5HGX5ZGMYkSusk9H7Rf5QxAVYmLz9ve0K8g9Fm4LmlHCXuXb+e7zk
Br6zZyz03zzGJY3blaaNu4Pb4aYXE+4xTjDwxCvKXg+w/L60qmGohCt76H9S
r8kTXOwteBIpFHEyxJcyK8q94MMTfYd7NnK47ty4Z5dyv8Kc1p0TZI9lcBom
/P+skr0hP8rslPy4BG6RpTC2O/IbbA9koHpNUVzhEgv7hYc+sLH9YNDw/F2c
fa3en5oaH5jTXtS4d04AJxGV3GwOvmB94pyoFw87jtJ2/SdLkS+coxUV7Xn1
H679yS3ztlt+0JlacB1lnMN9v2Ej+QnvB9e7lkLE+S/jVKnK6Lm4/GFA5ixm
X3kVxzx3bKU/1h+g8kJgWgknbqZCqvwLcwB0gpksywteXFL4V3/BsAAg/kvl
KfGMH2f2oVNvkvY7iFXOz7qv8uNuKf1318fnO7wZw7a8jt3A7XG/OIWdDIQu
0VubPxP5ceXkUeNLLoEwFviAgXOaD+cyOZMVQhQEX32rUp8O8uBkSjhdH3wM
gtRzJtpaylw46uA3qtvbQbA44hmn8YYD1/MumyfaLBhS50x5FR5cxYU++kOk
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
            "]]}, Annotation[#, "Charting`Private`Tag$200778#7"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
PYoMpPf/afhAEeoJ3QiQLD0zHDYR
            "]]}, Annotation[#, "Charting`Private`Tag$200778#8"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200778#9"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.571589, 0.586483, 0.], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwUV3c8V/8XJjSkMiLjY+89MsvnfU9J2SJJKglFSKJkpFJWSFYksrJX9t57
7z2yZX0ke39/fn/d13PPeZ/zPM85977uZTd6rv34GBERkQoZEdH/r/U/uJdm
8w0xJOiATi1FYh+orfx2UxBMVC/elo7KxJYedWXkp2gALrhy5rdjMaY2mkdR
SHQHvpXqOx8eVmLRn0ivBKcYQD3/zWvbbrXYHmNSkZygMZQsdNbtPWvAeP61
6yQSmcJ5heT/PPubsJv1m8t0febQv/jH6NlAC+b0g/mTW4oVrHl2TRDs2rBu
uRgqR3gBEyw+Jv+S27G52FwDcUFboBe/uIKJd2CH5xpT5mhfQXmFosiUQgdG
4zSyHUn0GpQfvxKJJunA+Gb/Kt5ZtIdrgk7Mmz1tGNIiCTzb5wifPBZUVv62
YLdK6MZrK95ArDNQLBo3YWa8AsLOKW/hW5IfuYJyPYY1suAZVd/DOm3ql/3q
aqzpbeLUK3ABh5dhvhokFZiOpIRXp9QHoN8c59r7VICNzReLCQt+hFDZ5JLM
5kzMPFKx35PNFVScLrNfVErG1nXanadp3WCzga2KeiURe0d+lwtOu0OfhX5q
Zk86Rl4x2RRG5AH+XX4UVdHZWNAryxdbGx7QEu631FGVj7EKbl64tegJTQwG
2hqqxVjy+Luy9PFP4FH4Tkj0TBkmGXzqMXmfF4Q80+XI3S/HylUDTz9p9oZw
Uc8BoS8VmAoxc1ZlhQ8wnmM2tyqvwHry4vWY8z7D1sYUh29IBfbQUuw/+xRf
QArKpYNsFdgCe1FcT9QXkORw40luLMOKFtl56FX9gIu46uPQYAn2vu7JTm2t
H1xw857udy3CFKNTWmzBH8yR1oDoaD5G/mYlkr3YH/qC+V8SNnKwDl0p23ap
AOhuc9YwmcrE9CnKGQQFAyHYq/rG4eUEjO0PCWEgLhDgUkxhs3E0NlOpVOHO
FgTSL2OI6ZlDseTwz4GSYUHwKePLXsRWIGb9uuvJJO1X4MovoPfx/YpJaV+4
5Of3Fd5lrbmeCg7DdoXun0Gng+E+YmG1NorGKk5Ejy+6BYNfzMJ4cH0s5jY5
kx1KFAI+xlTpkJyAqZQKeNxwCoH+xvccoX+SMMpvz/U3NkLgBk5Dx+lFCtZr
kyP80/obcPayikQqpmLf1XeItBa/Qew1jsLMp6mYIR/qOXwcCiRsZVlC8ykY
N8nHhNTxUMgO99Jq7U7GFkbrHfXvfYe/zXUPnsgnYRkFFBon+76DZHat+JhM
AvYqUIs972YYmH5ZZbMcicUuWQWvGzeHgbOY6MrxKzEYkfJwPdX1cJiYbMn3
343AajnZwsorwgH/0nrv8FYo5nVoYvXs8g9waLvsu14XiN0cTLrClPcDKMIb
P5xT+IzR5iyfbxSLgAA3tg2TWVdsyPfinF1KBNTm+zNIFL3HpNNiLOzEIuFX
vQdny+gHLLCZ6u+r3Eio7uC6fJfgiW2/hMJLzFFgZTPNdC3uC8ZDuu1Y9DAK
RH4x2NOMBmA6gb/kL8VEARPR0lNnva/YBw7Tw8LpKKhy56o6KxSCZWSyVMjx
RsM7S2PeJ5rfsN/Q51L4NBr8Uj9b/Kr+hlF0fFaQS42GOIz9eInfN+zSQ0Wy
wuVoWFXPk3tRHYKZLe/XyYrHgNOpz4w5lsFYsHOOZ4FtDLwPfvLmU1QQVkNh
qSKbFwNsntm2d18FYKthnBQF2zEwM4vNGZL4YZpFAV/ynX/CQeILOGfuhr1V
VtGSqfgJUWro1bTweyx1gJgm/1gsFH8aUf+2ZYcNmRb2SCvGQq7Mk6rIm9bY
yS3r4DyPWHjz5unM3/tWmLQ7n550Uyz8iGxw8le0xUxoxxnyKOIgSD/6kxar
AxYQGzIspRkHhvoKlY7db7GKi5o/cv3jgKj52j+vARdsuer4Q6meOKC58051
t/AjhtMuY8uli4f1VmUSY2I3TGXi1aTk3XiA6yZfKdLcMHtr4dicsHjouvjf
BEuVGxb/3/Rjyd/x0H1ThyhWxQ3r8Q3nzWFLgN+cfNV3dVyxYyw68xeNE0DN
ZKq85u8HTDztdEp2XAJsdYtRfRR1wQzlqy0vziWAm3OKub/mW8y32VEkWyAR
Ou5coRUZccBK9CVWJJ4lQk9JYO6kxCtsYX4+M+tXInhUZz8p8bDG6B2ibSVW
EwFnWXDtLmaGXT95VypLMgn+fnGNZ1w0xF6GUG6Jv06C+YaViTkZfSyGp6Eg
szAJpJPGmTvlHmAdue8cxfeT4O5m+f5bvDF2eE1GPhMlwx1NNbsDCzNMqGf5
QMwlGdimgU2W5RmmbxxfnlGdDJsfaU167K0xz9UHLmLHU8AmXqg3euwFludC
q5ChlAIR/r6iFqU22DRlK6mYdwoMu+GKG2lsMZoo17pfrSnA4n+a8dm8DXZV
VN5TlDIVTsektQ0o2WDWZWvKv7RTwaghCv8Je4FFqKecFv2aCoScM4pSRc+x
lhGj1vT+VFioWpxxfWyJ7VowfhFhTIMRCeJn03FmGN9e5830+2mwLOt8/GmM
Cabr9YlaJDINaisV7PzcDDFXhis9aRNpYDqbWB9FehfLStz+KsyVDoNeNDPa
zVrYuEzGnbQn6ZDbmPsxTVoZO1tvyiCclA5oI9y4kP8GJq/LOpy6mA6Zt3Rx
IlfUMfOZvnAhkV9wvArfZ8lwC/v20tcg1foXfHafi/R0voPVkVxnE8r+BXdv
hf65A/ewjYCDiZSNXzDpI83qIGiAUfx2qZhgyACeDpeUjROGWMQqqR9BNgNc
SiP3vvobYmInPB/u3DnCj7KcVHMNsUqm06JkrzNg6bZwV6e9IaYt5ntIGZwB
jHORfC8aHmLT16jacLkZILitG9h0zACzuxv0g68nA1SNOirx+fewk1YXnkmu
ZcA7OjkG20M97PuH7/JAnQmfmchPZq3exgRDmCnUxDPhFf4wuvSXNlaSEjV8
52YmWNi6JCzFa2AaFZwpxs8zAWnAlwAiJWy8J97xuW8mnBj41MrSfAWzmedX
cUrLhO+vJ6iMjeQw0sNUBo+WTDhr/uRmMoMk9pVabD5gMRNIu+ZrS49JYzy8
2QUR5FlQLnzwy+6pPFZwWdozmT8L6LoUxPMJVzCVm4V38pSyoH3vTvX1p4rY
iIk8b5VpFrDRkQbN3lPCrBzKN1vds2Ar15vFP04F++/z1brBuCwQK6npn5JT
w/xiar/O1GTBgNK1IoEL6hhHvtLjf1NZoPDStrXpqjqW09wseXAsG15EWQYa
1Kth18c1SE9xZMOhmbjag2xVbGC9s/v8lWyo/7wQe5deBXt66vZPNsNsYL3t
z6xJroTtMg/YCL3LBtry/P8OIxQxH4l7V2UjsoGM9IPHR8JVLOPeownNkWw4
k1BhWyhzCbtqPZ1xby8bSmWUFuTMJbEeV9P3pow5oJvY6HqbTgR7ErqgaSuX
A68r2RVfOnBjW2nPWN/p5UBpsbJogTM75lm1suz1Ogc4KOf3p2o5McZ+27Lg
4ByoNyBPjA/hx1IXNz/H5ObAWpdIy5WzYhgicnyQ3pMDDDP+Gd8pL2Id5w+E
itZywKQhQl4+WAp7xP9+v5Y6F0STLZk13GWwVTxJS6d4LmikP1f06pPFXLXd
w0Zv5sK+/FjBhLscRmd6ymL+eS44kdzPORcuhyU6+Vza8M2FGn3xC+psctgl
v3PkxOm58GVPIE+WTRZrjg0YpGg9Os/WV7mZIo3dL6RNol/KhfDiUv3hHkls
ufWbPdfpPPja+ILMKV0Cez/JpCQmkAcG1ZG3FtTEMOqtiAvyynlA+ZP5NK2P
IBZ7muPPDbM8GNhZYdh/xINJscXl3fLIgz2FD4apt9ixOkk+94fxeeBbfYgk
jRgwPeWU2xa1eVAlQlcbwE+NLTwQ4X49nQczd/tOjX0+i72xyVz/QJIPHktm
oNJIhZ31kKzx5ciH8OlQVuXTF7DIsPzA71fyQTXMbGy+FIeJZVwyjjfMBz2T
/I2GLTasqqZUIutdPvRJj8zmsXJiOoNwrCwiH768UzyYreLCZgnVnY2l+XBN
182RbIgbq6QsKpQbyYfbHI4apcY8WPjFjOik3XxAd6OY0yx4MDvd+E8MDAUQ
4DQfJ7nLjWk5hL/4JFMA/FKxPPsM3JhQeMDdndsFECGHWLkHOLHj5Z5Xnr4s
ALPyvvMPFTiwiYm3/IMBBdDtXRjoZMGGlZC+olLOLIC7d/sdI6pwWDCvxU5B
ewGccb5FL/+MHnuh8miCb7kASnWtb9Md0GBqz+40fqMohC6Zj9d20TmMx089
86RgIahlyzqc4juBEWcrhNorF0ILpWNkRRQRNtIr5zJnWgjapU8bu5Z3Ud62
6FM990KgTxpedPt3gPyZeLQaYgtB5jW/78Y1EswS4eRkqwthqWNPn17iJHb9
ETV74kQhqJ9NZ/rRToGxu548RU9UBIEWlaPPHlBi+/GHKx4sRSAQ9Z1bb5YK
62tcH9iSLwIHftbVWzvUWObSQoXpvSKQF9utSf1Kg/mcm0jsdygC3JBi0u9S
GuyJRL/fjW9FoHxi+7yAPQ125XarfX5eEbwoc+IjaqPGcPbVhry9RUB7S+90
UBMVtvm9UClkrQggNf7vM0dKrLP0l9gJ6mLoSVezv9p3Bksdj6N/LVYMVeP7
FvZ3yDF3knCiPxrF4Bss2C/67Tgmr+zZUeddDPbDfx4m5RwgOsu3BdLJxZDL
t//gz+NN9M/3ZVR8QzH8dejn8eFaQS2Z5p50f47y+T9mMnjMofgeQ2t3shKQ
TpnVoKiaQy5bunqbnCXQEL4laX/nL7rPqA5PrpZA6dreXtvWGpLGK/D1GZbA
xz2/hSm+bURlKEd5/V0J/Hr41F6rcw8tfRDdzv1RAt/EiCtmKw9RXRz3OHdJ
CZB1Moy8tyXCohuYGr4OlcCV16Em8jhi7M0iVQbZTgncGyN/7G9AjOmePfnt
1YVScDlxmXZTnhgTFz98NyNVCiTnpMo/lBNhFDrrprd1SqHtyiX+yMn/0Kzd
gmatTSmcUQmzLss/QJWh4zJS/qVAbWkZqE+7h8JL+ljjfpUCW0bZrhfdNtI6
Vv3XdakUHqkze8tY/UNC3IX96+Rl4O28SSZ1fAkdV/pVbsJfdvS/JKwY83wG
TZjHJfTcKIN62gFnf+4xVPI57Mu1J2UwTelfxNXch4Iz/F/nuJaBRZWqTc1c
D3rR7fGQ62cZ3KcUbrT5OIjUNp1vBFWWwfK7BUqPx+OIh+GlKOl4GTjS0Lhc
4JxGxPLmF14elsFnh8lfa05/0IiB4X9TuHJ44lLkqyO/gPJcdP/culwOHhjL
pxcaS8g/Vq29+m45kEXzeE4kE5C2njpng2M5tAQZKjbpLSNqCo3XLWHlQGXM
vHlJfhl1lWs0d5SUw1jXYIWECQEF2Gqy9o6Wg/NP5jG7qUV0i/em7eBhOQhS
z9+LaJtHXs8Sp5bPVQAMRRa7YH+QeX3imRdsFZB+/pvMLd1ppMKeJLMmVgEf
xMwvHxefQAJOSY9eXamA6Z7B/KHhYUTem+S9pVUBOdG/eByf9KIFkeRcB6MK
kIio6FX63YaaPZPH9mwqQNB/XLc9vBalTiafevuxAmrOv47vVa5CPvIpF4mC
KqD4p4/ZKGMdsgxOefAhtgKa25+Gl11oRWorKR6kuRWwh2KUufm6kJBKaqZ7
bQUsh60pMtzpRRSxqcMn+yqAalbhe+5IP1o6SCXznq2As35PLEhSBlHrnTTR
M1sV0GUUYvwpfwilZ6bd/XKiEh647NtknBhGvqfTP1LRV4LbK4cNl/ghZPU4
PS2QrxL261N6ZyIHkUZ5ej+tXCVo8ScxpVMMIBGGX8TflCshgfbFSghxHzpr
+0uQUb8SflNXfGgI6UbLLb9uh5tXwhveSauwuQ7UxpPxjsWpEurMPruEsrag
9PcZSVHelXAbhQT36dYh36GMbo7wStjkyvi6UVmBrCQzD2JTK4EWJzyTlpmP
NH0zeXlLK6H1poExv2wmEpvL1EpqrYSf+Q+5Lk1kIMqrWU6CvyuBh35+73lG
LloJy4pLW66E3HfP/MQpS1DHRla76H+VQMzReFWVvhJlaGbvZJ6rAnY6HFFv
TjXyS8rmlGSrgmvzwvlWtbXImiRHPU+sCoybm5ykZevRzQc5r2WvVEGIHMnV
oIN6JJafE12kVQUR5BpURpQNiJIqt1neqArchVUVNX3r0Yp57kaZTRWIcnE0
rbvWoc6aXNYrH6sgP61VOvi/GpTFkqdcHVgFpJwrTH2nqlGAfZ6tYmwV6OKK
Q86WVCCbrrwf9TlVcO50sbiDXQnSFsqvV66tgltr90hdsHwk4Z7/r7m3Cpwf
mfL9O5eFqMfzmTRmqyCXrXy30jQZrcoVKHZsVsG2qj37F7sY1B1Y8Fz7RDW8
8Mp9dlH5B8ohFIT2XKiGJmdO+fvpUSjoRmG1Ll81UArtur1ZiUMvowsJA7LV
4M/oGt2SkYJ09gov3FOuhq3+c9l7NhlI8nbRldG71UC90p3NE5aFzv8qsnho
Xg2jec6ZjCgHrZ8s/jrhWA0JDnpBPlq5qNeouNzYuxqWbE3oDDpyUV5J8fxM
WDUosXNKvm7MRcF0JTRmqdXQHe6aIK2ci+ysS/ALJdXQMPXM65FGDtJtKjG1
bK0G8yRTU/xsFsppovzUM1INrun1cn6qmYiq2SRZfqka1nq1tdL70pFVc0Fz
7F41mKiucBbUJ6OWZgoCxeka6HR8LNfvFo8EWgzPvmKsAcXPa6pM/DHIoyVH
dJS/BvBajuVFa2FouuWklqJcDdB0lww9exCErrbet0lTqoFU8uXG8e+fUVRr
RiCtXg0QGTNy9dV6oYNW0lxn0xq4F99C33PdD+m36fXN2NVAyfknB+YHQaig
LXVL3b0GRJ/2zkYOhSK6diKGvK9H/XQc+GMkI5Btu84llrga2AyQ6tKZikId
7Yn33HNq4OAFDhuXi0EiHftvlqtr4JxUH3cz/U/k03EzQre7Bl5aZpkyuPxE
8x2x5WWTNeDOiPkUOfxE1zu3x3lWa8DbVDtB8MRPFNupduwLcS18Y0+TIZOO
Qce6oji3KGtBUYhcjXAuGj3sWr/2kK0WnjCqavErRqKSLqUn9aK1EHtNWdX9
WDhi7A73EMVqYTWiU2ne+huy715JDNGoBevQqzai0UGot/ta038PasGSr16e
vNkPSfR8WzR9Vgt2xRriDMe9kF/PEkXHm1oQ+jr+OpPrI1ruARFZn1rQi2vx
Ksh2Qqq9QZpRYbUQfXDjweew1yixd876ZEothBUQWX1yckLH++QDrItqYaZt
5YxLugsy6fPLHmisBQHGXafF4+6osm+6BwZroek32RMVci/E0i+7mThXC5/r
2sbnrT6jN/0+F6i2a2ENotnkKPzQUP+4rMOJOhB+OJizd+iHZAYk9Sfo6sD2
F23uCx9/FDTg6aTMUwfDWCUZW5Y/Wh0YCc+UqoOfhxpEXC/90c1BsTIGxTqQ
6hxo5Bn0Q2mDrmMuOnVwY9omX3X4CyIfGiBaMK4DGeVi2wj7z8hsSIhD27YO
Csjds7SjvVDd0HuFog91QC1/Fsm+8ECcwz0mHAF10DLYNLxO5op+D79JWM2o
g7HamTXaXQckP9LRoF9RB5mHJW6UJrYodIRroaq9DtxP2v72rLFAmyP2pwXH
6oDtenhUy4/HSGe0RShwuQ4sCsRfRw89QVmjbBp7B0d8naOeSMEzdO73y+fG
Z+ohdKyT8biHDbL83eDXjKuHJy+m/e7dsENNv3FZF4XqoTUkrLbpgwPiG7Pu
DrtcD8RtnowzdG+Q21jNOolqPfx9c4vFnegtmhyjp7PUrwd3tnX213LvEIxb
yvQ8rQcRcpmL90reoYjxCj15h3qg+zpn8sbrHdofP+8Y61kPZ2/PC4Y0v0X6
E2ZhFN/qgW0pcHHY0xnlT5SUvEyoh9m925sfKp2QpwDded6CerifvP9H74YD
0rN9bjHYUA89tzxfZ7+zQ3wlDVXeg/UQQ90ZK+loi7ZJORjRQj3wT101D7pk
jRrUnV6s7NbDdlWwH27uKQoN7mmIOd0AZ+tvWO0wmSDzMWG227gGePkj54aH
vAG6xOfx+oRwA2Qc1B2Pua+LyF+MtxXiG+D7Ss/vanptNFwox2Op0QCKROrv
nynfQqnHAp1ZHjaAqLfFdkK0HnqjutTT8bwBrt08+PThuQFSC1IU+vi+AZ6K
rlJ8r3qEcKMRH6X8G0BLd8GWesoYLXFvD/2JboC1PuuEC5mPUamVlsT3rAZI
9vkR06Blinzzkz+pVTfAo3LqUsVGM2RARDpx2N0AM/P/hVZmPUUiyg9kM6cb
oIkmNuUhpTk69M/7YrzRAO8maWv4V56itqFzf2iPN8LL8OW5q4+eokjOp6iB
rhEOvVWXXtuaIWvLqq+OvI1Q9/Vr0ikZUwS5TAQh2Ua4/iGNJrjkMaI8fHlt
TKkRGMfJKGhpTdDE9bYw/7uN4Cf3+tSMlhH6MPBeZdOxEWYHt5UU/B8gbfah
6ETvRuAY9+4SV9ZHHOYXd/TDG0E2hO60t/AdVL03k1Be2ggFnUafG55roaBr
2H8v2hqByZni3p9QdWTy+Zsu11gjdPjFiu5mKCHJvn9pfX8bIXW/JEPr2jVE
yqpK9omoCTIYzXubQwH1mMbev0zVBJWX/tOds5BHcRkH2QT2Jkih7ehrt72M
7HZ0T0dJNEHA2IDCrzU8un41w0hboQnYg0uMd9muIDrvU0WkOk1g/mbnxk1f
BfSn24gq36QJZtNj5tgIiqgAV2L29FUTFMuyOm/RKiHPx7QVTO5NMPYy9Hj3
ljLSS7e60BbcBHKXpUNafFQR31a91fuEJtB6219W1qOGtjH2OomCJiAbFC5O
61JHjZ6OzDMNTcA6WkB46a2Bvnd2vwwZbIICRcXzVGSayJxRuEV5oQnw3xe2
5K5rokvG7pz7u02QMDKjx6OrichTxxzTTzcDo0aeiKm8Jhpal+0yxDWDTPdD
yg4iTZSCD+CnEW4GO+0zi09SNNAb98X3tfhmuPym6uGdaxpIrf3awGuNZuAx
qbjxp1sd4egjRAUeNkOFlIkPn5E6IhhuuY88b4Z75bdP18ypobKkm7993zdD
v8GPDw6P1JDvapLUFf9m8DGNJddsUUUGl0k+r0U3w3dawxZHflUk4np/Oi6r
GZr9b6bcd1BB7bTnAsl7mqHS3art5ZoSqpmJ3rSabgYOVmExck4lVJArqd+9
3gxSp8sLHJVuoJjb+uzhtC0guKZzPd5eEdl9jfslfKcFsi+TSnp/voIsHsvS
BJi2QGSS7dCMFyBDqWa7zdctoGKrTKinxJBK7wq+/FsLEPG58OjRX0ZY3Mdo
zqQWKEqT9BQRl0OSr+jIPAtbgKSmL/GihQziU0wyW2psgWThT9nMjVKImVa+
5eZQC5ASO1UbqEoi6pk20dyFFtALcL3wdFUCHc99FMiwd1SfgqwtvEwc7bmu
bzqfbgXdme52kQwxtKLjoT/J1Aq0IQrvaHxF0QwXY9l1oVZ4Qjq0dIdM5Ghe
qewp8q2Qs8khS1kjhNprMLdz6q3wLFnVeKxOENUEdc3ZPmiFXOZIduZTgqjQ
5LHawLNWEJl6bbvpKoDSJbd/yb9thX2bLcrciwLoJ6k3TbRvK5jtXH7LdlYA
fethfk0W2Qqeb+IYZikE0OfYjKGnv1qh1/p8yCafAPrwUgG1lbcCd3qiTes9
AWR3rS9aoqMV/igKm0VECiCL80/JQsZbIa+HccP8rwAynN4z21tpBSiu4iW7
IYh0cnxbHhK3gfGD701kPwXR0Y1APo42YPm4BbQGQugi140tH4k2SOWiz/tS
KIT41gf1/11tg9vsm+dYqYURddB/7EXGbXBW+i2GCoTRCZMAN5aXbeBYf8fF
4cif/Yvc8x9c20BwJmf5uKYImu1WyVCNa4Njb98RLQyIoEKaYDQ62wZsgQ8f
YyOiKH2KL+bKVhs0+pGccDknhmKyi8niT7RD8VetRHUJMeRza6LFiq8dIp/V
1956K4ZcOF+Kdcu2g63KydKYRDFkt3Y8SEa5HSI0xgTu94khw0Che0Tm7cDH
63DOQlgc3TYuLzNxbAfinxdIzuiII5WL2hyNXu2g1Yt7cmAnjjCSGTfhsHbY
qhX6fvhVHEl2v573T2mHBEEhyokMccT/k1x9s7gdqg9TbVzqxRGL7Y8M/ZZ2
qGIinK0fFEfUCmLny0fa4aMxehXzRxydoKl+zUlohz+re8oU/8SR46ekrmf7
7XCl/55e14Y42vyvnm6ErAPCgjvmyzbFkejly9dcznTA4sClmqE1cWRml/6C
h7YD2LvH70kQxFF0JntkM64DVr8YWPZOiqOhpaAWa64O4H0qEdnXI45o+E7u
0gp1gBQvK1KtFkdqxk68xRc7gE1g5K9Kujhyi1jWMbzcAfWU1c5/j/SVDT76
QKbQAWqS+tE6juJo63zvr2SVDhAuqBkIuSeOxG4qjWpqd0Dvj2tXBuTE0VPv
YvKNux3QssjwWppWHMXUich+f9QB0QJcjj0EMUSLpw2ctu6A0honbYMQMaRh
71nxyb4DDElw94PMxJBn9h5B5H0HJN4ZfBshI4Z2+SeVHL50gAjbf+yRkaLo
N92vwzPpHUBGndX1cUgYxa8omcssdkDQzJu/6qcE0JhgScjIagcsCD/3Y/Tj
R/SmorUuux0QGGLBW0bPj7xGadlaTnWCTmbBMyUJPvS8abLXkK8TxOkWrSbc
eVAimS7JcbFO+P4waOA4Jw+ahEaxFJlO6DqrE7NTyY108n95b1zvBO3hq+xK
J7mRbOybK16PO4GFclvuYx4nejH210r0WSdQv/pZd/YpJ0pmNA7vedkJpZOB
7MYsnAjnr7zF4toJT62XCh/4c6DbLSVcNd6dwDvB7XeowYF8T4hpPw3shP7U
YJ0H5zgQ0Vu6tOyYTkiQCGe59o0dyRV+GtJL7oSMn7LmVYbsyGZ9/8RhZieI
0C1yLAqyo2nzKSOlyk7gfm7jwN7Ehpjjdf0IDZ3wpqZXnu0HG9KdaCwN6OgE
hYuE7BQbNtR4J4N+dKwTKutMQxS42ZC8DM8j3rlO6Ca87K47ZEXpdOFJL1aO
+Fl4rf0sYEXsm1SrxdudQEeTZ0dkz4qCej0uHSfugm4jn5gSedaj9+XBh5un
umDDYUcy/zgrcgiybf5O1QUOFoUfWntZ0JLtPM0MQxcsm1iHDiexIINbD++L
cnTB1TMTJiUfWFCHRG+sg0AXHKfP7FM2ZEEK1KqEaokuuHOMg/LBVRaU969C
6uzlLphwZPncxseC+Dql3+opdIEi7b6mHQ0L+p6RWhej2gWnTHTOCB1jQWf8
OM4RbnVB43HDO/XrzOj98293ZO53wSKTcgPrIjNa1Tgb5WLSBQ/FtwXOzDAj
ExHXuWbLLhD9uhxtOsmM+s/sitG96gJXiq7mE1PMSIXw3MHQuQs8Wx/O1M0y
o5KWmcpkty6YdfCde0tgRiKp98g3PnfBmmRBIvkWM4r27tTGgruAVStvUZGE
BZ23uBH2KaILai78eXeGmgW5q5ROdcd3wU4IpybGyYK2+S8KsfzqgtzT+VZF
0izI4lTSS7P8LvgnYCv0UI0F/Z5jKc0q74LnWaQM50xY0M2GILKD+i5AnzLP
pTmzoKoEco0bHUf+PU2/zBzKgqQ83gf7D3SB/rg8k2IeC2K8bsnLM98FN2wu
BOhtsCAf7snn1v+6IDsNV0d7gRX9R6pXULTTBfmhJBPCl1jRdLWCsiZ5NySG
PMTYXI/24QqThb1gN3wcO68dTM2G2Nj9s6sudkNynqfZIi8bCiQ6sU8h3w1Q
+Xk2Hc+G7MtXfaLVuuFL7FsyS3M2dBXflN70rBuecHNmKjawoRwcbJ2364Z1
Km1x/3E2xLufiz182w3VcPGn0A4boiiO7ljz7QY1mfk81aP97pN1WMVldMOw
honGiUB2ZCHJJ/18tRvSNB9kgTUHwv254Si02w2PPJWrNLw5UFuoadk8cQ+g
Wo32mHgOJPZf/HUTqh4oNFt04/jNgdYbue/cFesB+pvyQmk3OdHbh5z2ClY9
kPfl7WyQIhcSpVYoIbLrAU6V8xF9j7nQeI0RUZlzD5wNjHvo7M6FFARiPGU/
90B5TcsP4kYutD5S2bIR1AO/jRLmOBe4UPyXCcrs8B6wdv22Y03OjU5usIUK
p/aAd+ujrDdK3KgwAUYXsntAdJF7SfIJNzLXN2RPLO6B0v4uktMfuVFLeWQS
R3MPmOtm+J8o4kb+XixFFxZ6YCx+mZOKmefIT3TY868HDigED1wv8qD1vw+u
Buz0wD2zs8SnlXmQ7u0fTRSnesGb4uy46gsedOJk6dkmyl64SP36znFXHlRQ
NKLtQd8L2xN/hbq+8iBGNtwwMV8vCG3IT0fk8aDmrsus5aK9cDWf/1tULQ96
43bP+I1ML/xVNlLJ7eZBIrJOCXJYL2Qq38gZHedBYwvfFzev94L4P7lURgIP
8vtRJJqj0QuFO+Rcz7aP+N4csn2h2ws6Wx94+47xorVju/kiBr1g/+LYsC4F
L4rNZdhffNwL9xhlHVfO86LbZnKQ9KwXdmMXdWNxvOg4013XJ696watvuN+W
kxcVtNo3cDr3Qumn9NeG/Lzo6ftvFBOuR3Gbf9UWIryI8WLBzQifXsB7CNwP
keBFLTP9QfeCeuHRya2VaSle5Pxta4A+vBfaL8oq6MryIhHVC8x9P3uBulKN
kyDHi8YOpB8FpvSC0W1d65RLvMgvQzfuZnYvuAt5XQg8wleM7ebPFPfCzBUf
mvij/FXaYOHmql5Y0eqxmJXhRT8bcl94NvXC0AWcpO5RPx2n3lzFrl4ol+7z
3hI/0iOysXNsqBccb6T9aBHmRfnj51HFRC9MfCaP7OfjRbu6Wp6680d+z12P
kDvSi1o/dy2t9IKVOVvp6JEfLgpNuI/bvfCyY0ewjpYX1RQeN2Ug6oNHqrGc
G2d40UkxhcxfJ/rAxfrsjCUZL1KNf7eneK4Pkv9tFYju86CugO0vNix9IEeU
PR75hwfRnZIaOsnTB5eTExe0RnjQ3XcvuCKF+2Cza8FGr4MHjVssFDTL98GV
Huccy6P94JrkITG61gfefj/03iXyIFM9Y/Vt1T5gFFW6uRLKg5avjUxw3euD
OTpBrS1HHiRRTC9UbNQHHaHjtgHmPOiV+G07LfM+eFzXhQu+y4P2mdvI3zr0
gd4o//MJKR5EvlV+sT/kKC5QLdr1hxtpPNt3fhbZBy0h0g57XUfPw5RsA0lC
H1DvO8TGlHIj+o7M+2J5feCvHpTwyp8bcSf9dPvU0weT/2K83lzkRmas4+2s
I32whkkSJhm5UepXHGPeVB9cWmbOGiXmRhIfvqZPrvYB8zHBjbA2LgT3PPov
U/XD6J6m+mdjLnT/jAX/sno/nHbgyRh35kSBLyRatev7wYHOxIzFix1R+ryQ
8G3vh5yXlwUUTNmRT3xGSGN/P3yuPx5qeI0duQ+LGMFcP5CEd6uEHLIhR0XB
LeFTA3C1KvKqjS0bMmTgYj+lOgBNrE+21BtY0OhFY/drtwZA3kN8cc6dBelr
xCy+uzcAv2zMLzNeZ0E6H9nyNi0GILfNdATqmNENAk512mcA+iYix2JbcUik
kvZVedsAiLrQMB/bYUQpwzpDu30DQDlczsleyYj4NgMx6bEBOLkaXj30iRFx
CFKTp/0dgHAHgwMWZkZE+/Vs5HfKQSB935a+psKA9s1ONL7SHoQWni4TypoL
yOHjdZFM/UHIu37SfP/rBbT5wy1wyWgQvA9Vkj3MLqCVLhIDY9tBiCIeGH9z
7gKakidauxk0CPoLbE1zJnSoiXIHJ9Q3CDnh3fv/hGmR++GE89DoIPSOqkVr
UNCiK0tNvz1nBqFsO0ROdvE8KqgPj5pZHwRZqfTbWcnnUfxb4IqkGYLfRBYp
V8TOIyNLfjd1piGgjNF1JKM5j5j1qWf3OIbgu3/Y+O1NGhQkNZ2gJzEEpVsr
42FlNOjDkocgtdYQUK/sGuXfpkFoyNqnQm8INESMaofkadBO/V2CleEQeDCv
73py0SDrn4K/mp8PAZGSmYvrBjUy0G+XcPMdgi2586NLP6gRo1JB4MXgIbBS
ipu/94ka9UpFr0/8GAJr9xRt7VfUSI3KNg+lDcGc3IPVLg1qdKmB7tJ28xH/
rb16qpPUaDP3v+/x3UOg49illrxFhTJ/zu3pDA/Bk+fWAzV/qBDfu6LSzIUh
+ObxreFNIxWatvzJYrg6BAIH2W/oi6lQpL7Pu7O7R/n8o30SaVSITtrgisWp
YWgVL24eC6BCXZw3YhiohiHTvNbJ2p0KfaYSI2mgHwZMt2bfyZEKkRKIa7n4
jvL1jG7+Z0yFKoYWuLtFh0EpfIT41V0q5NTQ7e4iMwx98zpXH2lSodWfcUq/
rw8D0c7Y3Dd5KpTu75vkozEMsQnv9icuUqGn716TX9YdhoiWH7vhglSI65mh
xfyDYaDn5Ett4KRC4/rKLSGPh2GEYrbHGEeFwpUkhK8/GwbD8qyLz2ip0B1p
Jt/1l8PgS1P4YeosFWqjImhquQ7DdzXmGioSKuT1X2/Gf97DkCf+mbb+gBIp
Esqo0gOHgVF9mHZ6mxIRDSfY3A8bBlUxawvTdUpU0uDXTf5zGIRdXQs1VyiR
fZ6DZGHyMKxMGEeFLVEiyVijr6ZZw5B0KqNUeZ4SrfirbtIWDcNXjdhUvVlK
lPJO8k5N5TD8orp7vH6KEkVRsXVfaBqGrt/3VMwmKFHQz9OaFl3DYJRYIGU3
Rok+SW01lQ0NA/7V7vbyKCV6Wz95nXpqGKqa5ao7RiiR2WIhKlw78mOBjath
mBJpn/OXNiQdAevd+Cr1o/iN6DdZ2RQjcJqNUZ/96Lz8RTORE7QjEPay7NSt
35RIvPZWsj7zCLTMzhNNHPXjuYPxpHOPgOUxQ+vGIz5M8wIxxCIjwK0X60U+
TYkonehYbkuPgKu6imvMkR6yM8e+J6IRiL18NejLkd7dCALt/vURCK7jXG8/
8uOv2KC/puYIfNR/Nf7oyK/pqpozP++MwMPylW8KR34O6mR82nw4AiF5NYa2
R363zYaRqZiNQFVo99u/+5So2t7D5Yf1CMyuLePziKlQAbntwYr9CMxQURJq
j1OhGBGVjZBPI6Cdr/6skIoKhVRIvVj0H4G8y5uroReokI82OwF9H4EPdvRd
JcxUyM5ue3omeQR+h0TJVwtQIZWy+J6LLUf1hy5pJNygQtjNgJsePSMw0SV6
8vnRfkpOOrcMjRzVb7BesLxDhViO365xIYxAuvQlZzKzo/1VJ8lpPzsKCVvj
Hh+9qVDo6MNAC60jfEBy7OsQFfJ9rnqu/O4olAkyneeYoUIfiGW8qY1GQa+O
/VXnXypkyX32Y6HNKLx/wXMykIwawbMSmxNBo/DlLzupuwQ1mtun1/7ZNwp3
w17dNvanRs+12Xvaf4+C22+aHsuj98VmAr/u/uwoWOUMsXklUSOyW5f0b2+N
wpYo5feDSmrEkXTP6AT9b1i1JLuRv0aN7t2OsLG4+xsq1Q/YD+/SoLY0zsCL
I7/BpVHu4ZrIeZRrINJTPTEGKoll+6sEWuToMa5lPD8GFDcPnmjt0SLICGg/
9m8M/DZkFnJO0qHZ904zbETjoPZR6ZU3Jx2y6Robf3huHD78OGNmf5cOfXqV
2D8qPA5LcV/OGNfRoYJiudpB83GgtTPXE427gJg6qF2TrMYhQvjR2P3sC+jt
9OJVB5txaNza6g6ovICunYmooHcch29i9t/pf19A7QbHSu58GgeuAbXaLxfo
0Sxxc1Zvwji4StBIafrQI1ql+1Gd0+Ng9HWW/dJbBhSUnre0NjcOYuqohvYL
AzpPSyVHRxiHU6w/vhFHHeHJ2k79jXH49Dzt+vEqBkT9RpRkmmwCKsVDBZ1J
GRFlxrEnmzwTkEzXTaT9nhH50T3IohecgEvcmnJ/fRnROef8w0uiE+BV0tCj
/4MRnVWxDHknMwHlLd6t4YWM6Mx0b8NJpQl44HryYeNfRkROnyTI9HQCgp6V
eeVrMyGvtyT2+GcT0JsqGChhwIROzTyoefhiAn5z7Qk4PWVCJ7OoH8Q6TEDX
atnJV++Y0Am1N77CXhPAvvmz+nQSE3LP6hvS9J2AnsBnrmtZTOg4gzivTcAE
cJP6ryeWHOHZmfK87xNH/lSfdG5nQqTvNf9hKRNgpch2rXmVCbnOJuGNfk1A
QIRcMfseEyJRJ/VyzZ4ADtWCG9dJcOgYYyFHY/EE0J7bnNmhxiHiHA4d7ZYJ
2DikUj0jhkPvGZ2jXnZMQNkjd8c+aRwiculfCu6ZgHoplYdW+COs4eM2PDIB
M8lpCeQqOHT4ZyPPhDABAzbO61uGOMQsy+0C/ybAlrTv8cRjHJL31FHFbUwA
q+DL0ChzHHLkyx7r3p+AXN9j8VG2OBRqP5n0i2gS2Jru/Zp4jUMFDVQvvUkn
oWSwfnjbCYc2zaxPKlBMwmHOF5LkjzhEWxjZxUI5CXGfBiSueeCQ5Kn28F2a
SXi8fYqQ44VDNknC4llMk2A55WbF6I9D/jv39z6zTsJezL7luSAcylD2qX3K
OQkaPzJMhoNxaHl+4S674FG9Tt2s7TAcOnOJketAZBK4WOyuqkTgkJCX8vKA
xCS8BH6wjcIh1SH7ghzpScAlmTXaxuCQuUDiB79Lk0DC5LqvGotDnxz71SzR
JPxHzr69F4dDiU3HLyhdnQQ4JTf8MQGH6hmlJzivT8I1SfraqUQcmjV/nPKf
8iRczr3Xy5SMQ2TFQa+G1SfBXHFFUCgFh7hO12D5WpPwsYRy/nwqDincWzsV
ePuIb8I14b4jbJTC0WN1dxLK5wwYrNNwKErVxYzn0SR0BxyzEknHodHFsf1R
s0lQpVVYu3mEGX2Q/1frSXgn2VQ4cJSvJ/SDW91+EuhNnPvqjuq9ftPyl+/N
JPCatoWTHuHglr1C0veTIN+tZ4Q74pOLE3Qd/zgJYauDKmeP+PZY6muUeEzC
D341x6EjPWsln+i/eU9C2+rMeZcjvdRnCidtv0wC9wQ9diweh8QfzKVqBk4C
caIfs8GRXzfTLrwWDJmEeT6J3qAjP58fXL9yImwSht0ZveOP/PZVtzs9FTEJ
zFiESeDRPFoIPZHf44/yxQbp/wvFoUU8qbld8iTc07qOvQ3BIXLfi5La6ZNQ
8beAbfBo3koiAQ2n8ibhd6p2OscXHDJ9WxkwUzgJsYSGBCofHHJvW7lfWToJ
jywnNkc8cajGSvOffe3R/KvSJE59wKGpsrfFOo2T0JkhbmX+9uj5OZfuJtY6
CXYpm+GJjjgEvygY53omQc5h2LbEBodK/jZevTM9CRSXh55df4RD2/6O393m
jvQEtoUJ3z/aV0nB1eylo30N8uUg6OJQir1PNOXGJJwPv0uxqYpD34k1iZrI
pqDI/xajlCQO9f387872qSk4r6HVNy2MQ1TXM37xnJ2C5oI7QVa8OOTpRfXw
I90UmHz+u0zJeDQ/mp5Sed4p2JY6fT7kgAll5brSWghOQURwag9ukwkt35F6
Fio6BWpjDOpvl5nQk/Bg3KbMFNg/S1Po/c2EdLjvOv1SmgJz27LHg6VMSELm
tyyH+RTcH8N2LV4xIatBX7+bVlNw9dGZyHoLJpTshM29tZmC+isqnseMmBB7
RVTIsOMUBBtUU17QYEKUysabQd5TYNozZVDJxYQI+nPZJ9KmQGGoIVCjhREl
vl0VIfydgoOzxJN/yRhR2ofMUyfXp4C8+sTPmW0GlOVuPc2xPQXZ+r8YqxcZ
ULHvcqge0TSs/zfAKN3JgNoiFkhrKKfBXVtx/FgYA9oomxz6Lj4NzdjYuoUA
A7r6X5e7ku005CtLfOC5RI9G3mX//rk5DRdX/d0OBOjQzFw6SdHiDMxPriqa
UVMj3OChp+3GLHyv+/rH9xQF4hP/9NGH8AceD58ZFtAmQ1olLuZ3//2B4Qk/
Jjk5MuR4w1GLZ+MPhFadYNZmI0OtDyxYK/b/AP6v1rvYZVJk46VevHZ6DtiJ
zeOavUlR6RTVmr7AHKCkl/pCDSRIO/i7Eb/pHDxZiov9oXwMObEHKm+az4GV
d9gnnMQxFJvqLVZtNQeVO31SiYzH0FbVm8P7dnMg+PmrzuwiMQr/a/Ddz20O
TtBd/Uv0hRj9UeLs2vo5BwvMelUt/UTozV7KlbrxOXjBFwOl84f4qgHuvJnp
OYjmD3jSW3SIP5kXKUA2PwfqZSQ/6H0O8UHWgTTX/s3B3at/+zhED/GpM44z
lcTzkDUqnXX39QF+pF35UynHPFyl0CneodzHc6RVH4zwzEPFiSRPxpk9vJkX
3mZfYB6kZQ5XbAr38OvXxO9dvjgP7438zNqM9vAURfTChQrzsDh77IxawS4e
H/unI8dkHq573I3Ufb6Dd3V5pNhjNg+/3pRZW9/YwTcZDBeuWc7DzA2HlW7W
HbwuQ3uMxKt5OOUfb+jcuY238s17meE2D2Z0Fsoustv4CHs3+tT4efCpObfz
g24LP337P5/m5HkYu0fcdGx9Ey9w0YF4MX0eCvVxu42dm/g8guUCf/48aJ+h
/eLuu4lvM9IpSaifh7SrFzwXKTbxh2qchj/n5iHe+8rYWdYN/DSNjfabpXkI
oXXtUifbwDcOVVy7vTIPzC/SOA4W1/FBZgb8J7bn4eR0qGd20Tqe3zV01fzE
ApwM/meR/mAdf1Z1blrh9AJIJ/fLRt5Yx69TyfTjzi3AI7au9jMS6/iyyJ7i
NroF2GU4S25xch2vU3zOTYJnAUyCitdvFa/hL30weH1aYAEg5OD+o6Q1PKty
2tNp4QV4YNgTsxOyhl/oU9EIllqAacqvxzrt1vDtP0LhudwCJB7ICtKYruFz
TOYklPAL8CSmQ332zhr+3arbhd1rC+BxeeCm4uU1vElhz6lupQX45jpB2iO8
hld5z7mforYAr29v6+2wreHPn60cf6CzAC5sqxxnTq3hd3vOdUvrLcBySCfr
4cEqfizMoPbc/QXA/05s9FpbxSfz7ydVGi8AmQHKdRpfxfutqIR/N12AWXBl
m+xfxb/KD/W1tViAiRMjXnPtq3j9t3Pv1Z4vAMnjf3++NKziQVHGltt2AezL
njAPVq7iuSncHx/aLUDUhsWx2uJVPHl3z51+xwX4KH7voU7eKn4llFMl4+0C
hDHcJ3hkruJ7DW3kP31YgJE/Z3QN01bxRbyVIkbuC1CUJXvxd9IqPmr5HPtl
r6PzSu5njyWs4t1yDWjO+y7AD8LVRy2xq3jzN2lkBP8FsLnOE4T/uYqXIldd
iAg9miev8jxtzCqe6Ntc283oBdjT2SP+fBSfMZCp5I9bgBh66afX4lbxTdzu
2ceSFmDMb6ri51H9jKWeuOHUBcjTdd5NTl7Ff83m/JaTsQAbRhabd9NX8Y6O
Nl6fcxbg3TjONSNrFW94pfLNk4IFuHUniSg9fxWveJLyOVayAH4nuaXwpat4
gXaDR/QVCzDHaB6gWb2KpwxOu/WvegG67r+MmWhcxW/c31dsql+AlffCq387
VvEVC6ECb9oXQD13JsT2aB5xmXO4290LINYcyTw5t4r3spc5J9K/ANXsmwrl
/1bxt4/3ro39XgDkFE9XQLqG12ONsz09tQBcOoT1pHNreH3ZV2vSf47qjZr8
O8O0hjcwp137/HcBKvQC1pguruGftN1evUy0CBeF0ufGj/bP7A+3jSnpIjCu
OIiuv1rDmxNt/gs4uQiqDQdm+q5reCuJ4H/zlIuQd8FTiSpmDW8X3LcSwr4I
t/66f6gfX8Pb/4q3ruZehPUl7hzKf2t4xwa7lWX+RSBa7avwJ17Hv92lW1GU
WISSsDFBUc51vLvBnb9rVxfhxvcfhm5m6/gQngGCpskiXOOmVlfaWcd/xxKf
OZktQlht5qPq0xv4cD17Qrzl0XlV8ePqLBv4KC96wsHLRRCj+jb8UWEDn7is
t5TitgiVZQ9mlH038AV5gwsnEhaBeG4Tl8u5iR+8PvynfH4RzE6H+z+6toWP
rSxc6CcswpOIBtt7t7fw1vLfCH//LQI49nteerKFPy5xe411dxEC9siD4jy2
8BLM7YfvyJfA0VHLnblxC++zVkULgktwL4HblPH6Nv6OVTS9nugSkKbv0HDc
3sZzzL9jsr64BJQOXnHHTbbxhb/l2aMuL0FEUtO5xy7b+NnGPCEitSXwj18/
b1W0jceikhUqLJeAmKx26RX3Dp6c6dP1AeslKDlPaOeX2MH3fTVVXnm5BEXK
5ql5aAdv6c2lyea8BHv5Pg36d3bw3+wi9N9/XgITLmGzRvcdvPG/Nw+++S/B
xiI2ciVgBy9iec8w4+sS/LQefhPwYwdf+4j+yfiPJTgu+ZCiJHsHv6oW8ALS
j/jIhhuI/t7Bl9Zbv9TLOuI7K8lmNreD97yq+do6bwmWSbAB+9UdPKsshXNU
2RKIS96U4Ti+i1fjdPckal8CYwsO86+Cu/i4HYfIir9LMC1LRnrq+S6e0kCY
LWBtCdToPtFdtdvFO1aNRxlvLQHohXHfdd7F3/S+EXP8vyVgUf8QxO69i9/F
0capnSVA3pz4U5a4XbyJSwM3CzUBdMs6KFRSdvHtM07xf2kJsI2vctLJ3MXH
pk8mBDATYPcfkeTx0l28BmQkDwgRAGwy3ce7dvEFscaCyWIESOYJ2CIb2MVz
nrqQ6iRJAPrfNnKnR3fx253OaSzyBKim8ajMnd3FG0mLi6xgBODKENC+t7iL
b/0+nV6pQIDjPxKUJv7u4mOMVTNMVAkQHhRE8mV7F0/RcCgmrUmAu89HL+Tv
7+JfC2VlnrhFALW/yeIVRHt4tQ367GR9AlCUvcPZndzDb7rP5q48PdLT//Xd
K7o9vOFiqHTVMwJYCpy3TGbYwzdrqucHviAAR0Z7USVuDx9Fn1Mg7UAAScez
st849vDkzqZyJ50JYF5kUXOHew//aoKxaPA9AaRNc612effwKskuxW88CcAo
ZvB7XmgPn3NWSl7DhwBFt6LIZET38Ky2cyWsfgTYjPQ7ayZ+9D1wWbOsKoQA
Ew+cfe2k9vAGUcewoDAC+MWyWejI7OEbSfPKH0cSIKmpeJ1Obg8f0YqrPJlA
ALlG8jEV+T28bfDHqpR0AjSpnF+lwfbwSg8XqjXyCFDhcHHQ9soenplPq/Zf
KQG2HuKvWyrs4VdX8uuCao/6z6r+O7y2hw//4NY41EMAT52TRLvX9/DXz99q
YZsmgMymgrztjT288TI3WeY6AXpSmPxuHcXfN2zjr5AtQ+GHoesBR/V8pYz0
P51ZhnH3xfNhR/1+xDTbddIuw+QgY8vVIz5cd4ncNhiWodyL6Pgafg+fek4q
kIFlGYgSg+e9j/gXvYn49YhnGWha7Ffsj/Rdudhd6iawDKp8e7mtR/ob5k+0
JIksg1BtyFMK6T18//8qrvJAKP8nnKNLFKKEki6SKylFw+hSjtIlR7qUMyUi
0Ve6hChHoZCSHAklyVlEkTNHrz1Szoqyu3bfd3cd6be/Pz//zDyfmeeZecbu
3K/RDSwssnTo32kgqpdMJl/RhIXJS87tttCfgB81DEljMxaGHg8b1dcV1Vd/
m/pVCxaGfFmqU7d6AoJ/BuplWrFw/aSW93lRv8Qf5kHDHhZemtxkOFfUT7k5
Cx3l7Vmomt2QM2vpBOgODsWlu7Mwy6P92jLFCXidvOTxx9MsdHs4bgnyE7B5
3/6CYR8Wfsxz3W4xbwKs3lU0Glxk4ZZAFz2t2SL/d/+OZE0EC7mM6lPrRfxM
t1kf0P+MhfTxZYn538dhtaTn9ZkFLByQKvs0yByHF2UP49a8YqEp/U+JnEgv
7zRmFfiVs/Czo4bRrs/j8FWM+VOiiYVXh0qfYNU4KBaHOqwYYeH4YU3Hxw/H
YbNd5KDYKAvd6w8NJD0Q6Ykff+47KXrf2ph0K0EUf0NWxINJFprlyz53uT0O
lm+aS2Wl2dg0kNH+QzQPQkqUlf9qsZFvXkwPPjwOP8uKGF/c2Xi7/sbJ8UXj
MNfpreur02z8EfPX5bfiOBhO1HFjfNgYJamn0Ss3DldNmFLWgWzkTjrpfp09
DqoVYibvb7Kx4ktjsdL4GNhW7k7Oz2Sj48vVL44zxyDA2V4j6hkbm21j4FjX
GKT+Pf7KI5+Ny3bXvrHpGINh8G9cUcxGdYszW6kGkR9+mzzx4AMbuyuu3fAv
HYPSd7+cbg6wsT9dKsggfgyyq6d57f3Fxk8LxqYMb4vmc41SkMofNiottYtf
FTEGgXU7kwp4bFwVfu8LETIGyW4Hhr3EOHj18zh6eYyB49miVXdlOZja+qf6
mMkY7PNB3YvyHEwpvBuwb/0YWJ5rWn9EgYNFUo1z1umNgbHfwDZNJQ4q+F8g
qpaNwaILCi4Vahy03KrOnTt7DGgh59MGdDl4cMc5y4B2IXy+PC3rkz4HM13U
Pe0ahVAfGpWfb8DByENzrq2sFULJ1YzKwA0cVN3tXBDzWgiJYZ1MaVMO5slG
uCYnCsHutqHSehsO9gqX5IfZC6EjlYy54cXBioMr4vqaBcCwMP8e781B/e3r
S/trBNAzGq2TfpaDu58Y0ttKBfBnu0bDWz8OVm9NMfJ/KgBJloOEMJiDj2N9
B+jBAthg+s7fM4qD6+K5ZzVWCuD+twjHPXkcLIMbWls8+fAonMh2LuCgXpxx
6j9nPmQaLBd4vRS9g87Me76XD4VhFfHhrzkY63oN2zfyoUGX3VRdycHjMXMl
7GbwYTLkgJlhCwfls9Ln2Tyk4Kia2opFbA7WnPSsj3tPgqGp3VrJUQ6yZVoa
bV6TIOUcbcrmcpCmv9B7MouE4gcT9h/4HDRrU2YaRovuhwW06HNTHIxwiMxW
OERChXSs4JPMKO6rML2X/osHyuPijUHao3jlcbB2vAQPiM4f5756jGLr7pYT
qktGYaCZdnaUNYp7braGrQ0fgiSp8qt9nFHM8+ws7HYbAmuL1Hsd3FF86rcr
4K7FEBRVHS9/zR/FOZPfc5fPHIJrr4ZnBE2NYoVKZSgR9guW3Z9MFZ/LxbvH
D92YFvETjp1c2jRfh4sS8qG59imDoPBY/LukHhez6XyTkyGDUN89MErpc/Fw
BjE9+tgg6B/KWUgz5GJt4dmVm1YOwr9dBi4pm7k4Zjhjk+yLAXiot218hTUX
BbVbg7e09MPXcTfNDV5c3KnxIKXaoA/Ou7ddWuzNRUmN3nZQ6QMZwrhN8iwX
R7fdcP0t0QemL2WCOny5uM380RzGl1545Paq0SeIi7an3WaIXeoFl86pM7kR
XPT+eDp9X1sPTJq718Td4mKl83Wp9ooeuFvQtjAomosTZ6d2hGb3QG1kRtXO
WC7a/WiOcQ/tgVXmlvI/krj4pl/8sYtBDwzn3Xu9NFtUj88OUyXwHa6q/Js9
6xkXHWISS92Vv4NKhPsRdi4XlTNX+vsIvoH1SZOZbwu4eH3NV++wwm+Qr9xr
7/SGi1xua3219jc4d1N78t5HLlrIP7JVW9sNUtQ92//quXjMyv3P0vndkH7i
X8bJBi6aBUZanKe+Qju026xr4eL5EJOkueVfwZC8kPb5CxdnVL6QmWH5FYTH
arbMGeTi+nUf56UHMCHtwki3yk8u+jabKJ1zYsKO2wsvag9xsWLPpE0SMiG+
3KvAZoSLfeqJM0bmMEF3gYJqDCXq58iJsbRMBpxqPEkpzODhibTetXm/6SDd
dztm5SweHrzscKb8Cx0KhSVrNkjxkIwurVOqosO0VTInDs3lYUzDl7C39+iQ
Evq65f4CHn7A77qZ2+jQvn5G9hINHkaJs3e6vqDBRWv9rXqreTiurt2snkaD
pS6O38zW8PDNR7cDy2/TwDsmX+G4Hg/19/fr8U/TYNZvuytPjHgY95mMb9Sh
QYHYFdWiTTx86rY5M2sJDeyUct/UmvDQR6tn74d5NHiy/d/IoBkPf58/Y13D
7QLTR1mOmjt5GJzhwSwr74LB4jZqoyUPM08/rbqb3wVRzRMxu6x5WPtQR/z5
4y6gj++p87TlYW+wXFRMeBecPyhcl2fPw0fd1+8sd+iCXKldMgYePJRrVfOV
mN4FyxKc3dS8eFgZKTWiNElAkrpvtbQ3D/dv+rPCmUfA9Y3J/j99eCh264mj
Tx8BR1xHulMCeViiEv3vzXsCOkfFNkYG8dD7pex/m8oJsPpvQdyFSyI8AWqc
H68I2HjXbMe+UB7O95Z2q31KgPz72PyZ4TzkHjDLDL1FQLhN5iwqQtSPm3WE
/Q0C/tHKTvTdEsW//+qi42UC/rD7F1Te4aHojBym+RFwIljo8yyWh9NS81Yc
PEMAfYZMY2I8D9vflz4bcyfg4+INl30TebjG5vPlsiMEbM6xpB+9z8MMlZfb
CAcCXhkeXWeTzENTkcYWHSTgkVX4T400Hr5rmk6bb01A0EXGnu5MHm52y4vq
NCGAI8nOacj+P39eyC7fSIBbjIRkyTMe3nxnxkwwJOBAlnZJXD4PhySqj4/o
ENBgYC4f+oKHh0eCClq1CDB/e/C0dyEPD7TvcSM0CND9ErJ0ZzEPZUqSt9su
I0DlT1bnsjIeXo5odXdYTMAsibbwv5U8bMvz38NRIoBaNL6ZVi3qf4xd5HxF
Avr0l48WfuChpvfeimo5AhKi6qoXf+HhgtvB+1tnE7Drl1dc+AAPp8KTF62V
ImDf3gWdr3/xUPXzLYVXcwg4XFal2P+Hh55K0tebZAhwXe51SHS3Yobjo8RL
sgT4RCneB4qHm5TXxr+fL6oH9Y7hOSbi6/QrLakLCbh2xFM16S8PQ94+LJJR
FeGNN6vM/8fDKrt9pv8tISCqTuHIBzESffX318ipi/Dpv0vjTifRrDsqMmeV
6L+n7uLsWSQe3aHx+vlqUf3ve/SqSZF46mp9bqc2Ac/EFZbbzCWRFXyBHreO
AD2joRoXWRLTrY3FVhsRUOT19mSQPIk/t58k+o0JqOx0z8xaQGLMJUX/ui0E
bJltavFWicQ1h2cZcXaI+ADzf3Uqk+hRqpcIVgR8zqxcLa5GonEOob3jAAED
gfJ5hzVIzExUKpkr4o9H3k8bv9UkWs35ffawNwGs3gpWxBoSH+p//dziS4DA
0k3/jR6JShyzdPUQAqQWV7yS20jinJDeDaEJBNzZG3tA05jE7Ofwg5dCgEKY
K2W6mcSueQGBUU8IWMKWNTqNIryqK85ovyRgbfWpso87SRyYd5Wu2UJAMWXs
1G1Jond9KlH7hQBjLdlJnjWJAkGIYlg3Adviy0B9L4lThTKxgSME2J+aVx3s
QGJ3lKO62rwuCJldWqfvSeIxIas7VKT3X2cUn8FpElsuZIfscumCvZ3noizP
kFiteWqWkXcXrEjT2nvSl0SFNSeXXLnSBZ8MUxiJQSSeD7+5tyO3CxSOXR6Z
iiQxpIpaGjqTBiEfmK1zokksmdrGT5tPg59aGwuV7pCY+/fl90E1GpRRnACD
eBJPSjWYDGykwdFbJ6a5JpP46MqudXmiefisePv85lwS22ct7g1l0kBBNZ2i
55E4OdOUJzVMg/+uTHX9KBDh2e+jUiSkga31m5RpRSQmnlLmVyrSgerVXGVY
QaKPtrfSwd10QBnpTclNJBaX5jTIldLhma+7SnYLiY1N9lofPtBhPq32b9Fn
Ed9+Zqbva6fDj/T/3rd0ivill3V8fJgOURvZVuLdJK7rm0r3U2ZAl0v7EY8R
Em8km6xrOccAWdNF0/azSRzxHvhtG8wAS6VjjzePkqiz4rdEwXUGVDSN9M+j
SNw6ZyMxmcCAR+tnexRPkhgm9mDR11IG0OfZSj2aInHhg5/tG94zQH44ITdi
GoW/nSO1Tjcw4PrDFazDkhT6HeJedGUwwH0m+klIU7hp0PdEkpABj3vDFEZk
KOyzVmn4+I8BjPLm18Q8CoUv1oe3zmCCtY+TMGc+hWSVl4SPAhP06QH/2apQ
mDlZqD2iwwSPV5VLjBdTKJXg68dax4T0aMmq5WqifMfjdRs2MUFhS5y4YBmF
NyuT1shtZ4LwWd7NVC1KdD/JPf/mwIS1N0jNm9qi/KH5gqIjTPA8atLgo0vh
zti7a1xdmPB1/ifpbQYUar+uS3E4zQRF1rx8HUMKPZyWTE/xYcLuers9CzdQ
OEvyY27peSZUXRqIHd5EIftHs+LNS0wYs1uzrtOEQtPIh9JGoUwwWOvbWQkU
ivclZL+/xoSMwX8LYs1F+cILzL0jmdD9bkdJ0FYKn/Alg6KimbDgQbTDye0U
2mv1N9+MYULEbpUUo10UvuvO3Dk/gQmT4jnfpGxE+EKjy2WTmXDmzQb1b7YU
Tjq/hytpTOjxqnV5eUCUXzOSd+oJE/Yt3Zd53Z5Cr+FPMlWZTNgQ4b1mzTEK
bQtKztJzmaDMDX/R5kYhUZlBdOUz4aD0B457IIXlSQ+W2IreMavE1k6LoPBZ
RdP5uAwmqOnIiq2KpnCj9R2L94+YkL9Orc0qlsLa75quHilMAGPdx+fuUdi5
02NBZCITmhDOJd6n0GxIP3tVnKg/tdscniVTyK+zVN92hwlOFtbmlakU6t5f
5m8exYRhGye5/scUhls59Hy9wYSZThdf6j6jcElAkVXaBVH9v4XeN38uyn/X
e3GtHxMSjodfOZBP4djlcdPGs0xY4Z64N6iQwucSVsVX3Jiwxf/16IcyCvfo
mPolHWRCpLCCTqugUN34SCXNlgltwbXVv99SqCx4O/LXignHrnbEytVQeHQy
9aDQnAkhd0bXOjeK4t34llOszYSP8mOLfJophI9VkRoaTJBJmCZ+rZXCrJPW
M0LVmZCSMq89u4PCotl0vSFFJpTm6PiSTAqt1lgoZv5lAFnjUXjrD4WbDS5V
LPrEgDkVTg7BLAp3tC6kZYj0tKzIZpoXh8LtUwWZahUMsM1Yu9uSpDBAa0ns
YD4Dnl8fG5o1KdKTS+rC8niRP9weoR42h48fWnKetjkygPiYHROqxUd3s1Vz
v/fQofTTzzP+7ny8PffMzpJvNCjiHjvk5MnHUjnuDiZBgxcqDDPz03zUO1/3
XLyVBtneTbIyPnxU5VSNH31HgwS5l4UZF/hYsHtTqfMjGvg5BPE7wvgYkJuQ
ne9CA50h6RCDp3ycPtp+QnGoCzTlw1yVsvj4MEtgye0RzWOTf7unsvki/b2n
3tG6QDV6VK3hOR9frv9+Tae+C6TWEtXHi/jopD6gtzezC34Gpk2PreGjzBnt
nNKjXfB4lkE0u5ePY96yOqp1on3K8KqY6uejwgIlBaMK0f58/vS3zA8+Kh5c
fhpF+6fedpGl9jAftcAudUmyyO8kTZvpweVjttix41Iif4WrW0P7xAUonbCn
J1fkD3p2nT7/ZbkAHc/mJ8Xu+gJLb2U6lZ8S4M1jAj3VOx0w3tawK8tNgLX6
b9zOXumADiW2UbyHAKuLtMpL/DogLNNIwctbgNaEkb6ufQeMVNc3KfsL8Nph
5+qspR1QJhyGoOsC9DhxQDha0A4HXfWWbnoiwCcHbA931bdBpHnJQHGPALd1
HHRxpbdCMUdi9tc+AYbnmHaw3rRCX9oeHbFBAVoNmxcFJrSC8dQPf6shAQY6
xBjF72+F4TLFmT2jAtSUJdPJ5hawNPRbPVtCiB2m62vGappBSkP3jNNKIXZH
asZTpY2wgbgYF6ohxMeGc99M3G+EEzc+FD9dLcRyJHYrBzVCWf/hf2wdIQY0
WVhkGDeC56NbMdc3CFEspochUdkADYuGCvMshBgtJW9dWfcJ+PWGXe27hJgW
0Xa4OOcTLAsMnRBYCfF6pk4OcesTBBELt22xFSInNWg8xvYTaMXv+ELYC/Ht
fmPt2V/rwW5L3NiEoxBXynx8bf+uHq6Odi9WdxbisGNATVd6PTD2+Lt6HRdi
YrpUubtnPcz4VxUZ4yLE9y92tV/aXQ8G+dIFr08J0fjpnvpag3o44mzfwXAT
Yk/H/FLzhfUQKZ0h+OchRN+Ge+/JiTr4H7HpeRs=
            "]]}, Annotation[#, "Charting`Private`Tag$200778#10"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox["\"t\"", StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox["\"Magnitude\"", StripOnInput -> False], TraditionalForm]},
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Off Diagonals\"", StripOnInput -> False], 
         TraditionalForm], 
       PlotRange -> {{0, 100000.}, {2.652478862077645*^-16, 
         0.2541435195808041}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 3\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(3, 5\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(4, 6\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(5, 7\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(6, 8\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(7, 9\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(8, 10\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(9, 11\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(10, 12\\)]\\)\"", 
          StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
PRUtFsqcvr13cwcqLPJDaGVpsf8DwxEvIg==
            "]]}, Annotation[#, "Charting`Private`Tag$200860#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/wPy7eSb
            "]]}, Annotation[#, "Charting`Private`Tag$200860#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200860#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
9mSMWt8x3YAfQSRtnP8HKAlk5w==
            "]]}, Annotation[#, "Charting`Private`Tag$200860#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
gZaQtQwS1fvPuFe80BURyncx35fh+cB3oYMRLyRz1cOLqGMZPtzvMdJs9UJ2
Z4iCNceWQcvgfKVBsRdK/GMfXfV7Gagz648zx3kheR/JuOP/lkHSLOXtEx8v
tMdImyhzZgX4DKYOg6y8kBzg0wa5VmD6w+Mr3ve80NWTFzLeCq7AJfWpy4lc
Xmi3613mZdEVQPhAYXkmLxSn8xiv+3gFlsYfKar89UTbHrMFa0Yr4NB5IeZV
sSdqeSJbFGS5AtrTA60MSUf9pM8vvm2/AhofZhQtgzyRdJprmaPXCrx1fntx
w9QTRbUxVp9IXoGJ8NxFi0ueSOL8s1bm6RX4J3I6IsDAAym6ls8bLq9Aq4/i
paCj/a2zeo0sZ3MFIoZv1AgLeCCXpl0kRrYKfjIiJZZ/3VGpY1S2Fvsq1Fkn
/Bj6dMTnZxYC4wxXoZHcroo2xg3RFrqosK2sgi3me30g5D0qqZx/6Tn9G+4S
RZ8nJXmHer5t+rubrEHfQsDTZXsbpHHlCtvF32sgVqP5JmPVBAliSrdI19fA
ViUeN1BsgijUP2G/CWug4ePGTvXBBBV+3Veu316DH8kNN3IvmKAzdIOfLA/X
4AtOlzJFzBiVUwbsNJ9eh7+/TmWqhRkihj3iFgeuddh1+f2jTV4PrdHfHdTj
WYdzrlsk3Yx6qEHYckaebx3CxUsuzMzrIiubsX/sgusQlmr1R9hVFzWvlQn2
3FuHRyMmZwNzdZDd3OsozsfrIOE7ZX+dXhv1985aDhutw6LgbbzjmDoqjRyt
XzNZh6CD87/uW6ujKN3+i2Rm6zB6e1rlLrk6Mtisr+a2WoduWibHEl41tEuT
SOXssA7Pc9LTWT6oIoZnOjksPutwwP6YZEvwBTpkeEl2+9M6GBq+HXrVqoQm
JxVUpD+vgwuTW/R5XSWUbiV+zDpoHbRf3/a2CH6ORANZntZFrEMq2zdd+T/P
kHrX2Jp+xjos3FnIOj4oj8TDBx68zVoHR7Iu+he28ohdqyPsM34dTG+9HHpK
K49W175Dcf463PU92tJpcsjpXJT/yYoj+8H8Ym2Vj5H24Jdppsp1UG+5f4mE
4jGSiPkkwl+9DiMUO+HuStLoLN+7cdX6dfg+fKeIc+cRinmixpfRtg7CN4Wo
bqpLILcLim5VHesgoyrNOVT5EBmOPR7s7VqHwRD5skH2h+iW+T2Xv33rcOLl
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
P3uxEAI=
            "]]}, Annotation[#, "Charting`Private`Tag$200860#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$200860#6"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.363898, 0.618501, 0.782349], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
qs7Y/wD6xn2c
            "]]}, Annotation[#, "Charting`Private`Tag$200860#7"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[1, 0.75, 0], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
bvgfMj2t+Q==
            "]]}, Annotation[#, "Charting`Private`Tag$200860#8"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
NKzBZMbMr9fXtJAw+et2mrk1+NxSJ5A+qYnU1u8S5OyswVOzJFmjSk1k23yA
+AjW4WAm8bR7uCYqtYrM+sCwDvmLb0UOJDUR268lv1itddhUpqKITtVAYlXl
bRwW6xDU5aA5bK2BtEK98etc14E9Vmli5ZUGin3J9WU2dR2MI8NzFjc+IopC
W/k7a+vw4Phy+3Wmf/19nOQadrQOzJP01k776ki0qKOEhPg39NVbeuo0qiOb
4hs3jpl/g3BXdW23qjpaKM0fHdD6DaR/xfJ+BKuhkqpFRee538B+vMT99PAD
6vux4+OouwHEGUquxJpKSPn27TvXf29AvzD3LtcpWTTYP/95THsTLGQvPZEf
fIlKIyYaNnQ34bBjg9ss5CWKVB+8TqC/CVt9jgX+Ci+R5k5DzX2jTfjpvVPa
PCGODq4kkH6z3AQ5EfJTjAti6MZrtRxa903wucL9aHj/BVLqmdzQSN+EP27x
nPo3hBF/6JDg18xNOHMFCyocE0IMH7pCvLM3IWVfwwA/Sgitb1RCcf4m/D0O
P8yhF0I2JJE+5yo24R4rsY7yfUEU/eode3rHJlCXlZvo8POjuY5hg831TYi7
FfKy5jcvCjlfZj+zsQm5a59yf33jReLPfwT2bW0CuwXlQyDhRfnVH8oK9jaB
2Y1/J/bhM/Q9b/ms5ckmaLw8YrA0e4LoQo9+nL60BYdf7HjOX3mMBgcmsrcv
b0ES+91l5WQu5EZWUzdHugVcRjTM3BgX2nJ3XGqk2IKX1VkDbrqcqMbmEpc7
1RYcMGE/Ozs4kIo6TfuV+1vQsOXEU2P2AJHHnJ7Ef7AFRRIMZPEVbKh5fG5z
l/0fn5M7udZZNsT+NuXqMOcW0PISvf0cw4rm/N2ZWx5vgcuj/TT2HRYU0q2H
Snn+rRf8M9MgyoL+vuBQi+DdAtWkEP4f+Mz//C75F09sC9hrjty8tO4hjbo9
FxvYgrDCUasnvUyok7csU0VwC2oNhtRVixmRvcWPGinhLXh6kKJnwMWIHhd+
6+cX2QK8t5KD30sYUOQDwcM74lvgqXQ6f2noLjqbQkRDKPlPL6Vc/QDFXaRP
1yG09HoLKlR8lxRN76DBcF/dtrdbYDGv68Z9QI8QhaxvhuIWRL/LI4uKokfE
RJNjn9W2wO/RCyNTJXo0dqjJ9Fh3C7q2t+omUujRxcGnPfgGW8CRE1Hac0KP
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
htyI4/f/ah/Ac0H3gIVbV9D/AHGZSZc=
            "]]}, Annotation[#, "Charting`Private`Tag$200860#9"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox["\"t\"", StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox["\"Magnitude\"", StripOnInput -> False], TraditionalForm]},
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Off Diagonals\"", StripOnInput -> False], 
         TraditionalForm], 
       PlotRange -> {{0, 100000.}, {5.85283261574862*^-20, 
         0.17463709246885825`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 5\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(3, 6\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(4, 7\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(5, 8\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(6, 9\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(7, 10\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(8, 11\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(9, 12\\)]\\)\"", 
          StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425878363120546`*^9, 3.842587847235633*^9}, 
   3.842588074978342*^9, {3.842588123312332*^9, 3.84258817022402*^9}, 
   3.842588208422208*^9, {3.8425882456274548`*^9, 3.8425884604108543`*^9}, 
   3.842642597934924*^9, 3.842643595047985*^9, 3.842643660651394*^9, {
   3.842643696651991*^9, 3.8426437715049906`*^9}, {3.8426438503185143`*^9, 
   3.8426438701002903`*^9}, {3.8426566612615323`*^9, 3.84265666992916*^9}, {
   3.8426567324847436`*^9, 3.8426567510188427`*^9}, 3.8426571331333027`*^9, 
   3.84265795619525*^9, {3.8426589456052947`*^9, 3.8426589739500933`*^9}, 
   3.842659750495966*^9, 3.842659994686627*^9, 3.842660835666727*^9, 
   3.8426608661242924`*^9, 3.8426610076383734`*^9, 3.8426610745284443`*^9, {
   3.842661155621397*^9, 3.8426612855880747`*^9}, 3.842661404677117*^9, 
   3.842661516009495*^9, 3.8426615568119173`*^9, {3.8426650490019083`*^9, 
   3.842665066841675*^9}, {3.8426651990407143`*^9, 3.842665216997856*^9}, 
   3.8426652491188836`*^9, 3.8426653644367476`*^9, 3.842665570437317*^9, {
   3.842665664042185*^9, 3.8426656840384407`*^9}, {3.8426657467115574`*^9, 
   3.842665766205903*^9}, 3.8432615745244694`*^9, 3.8432617454443913`*^9, 
   3.843261780206955*^9, {3.8432634551370983`*^9, 3.8432635400251617`*^9}},
 CellLabel->
  "Out[238]=",ExpressionUUID->"442485a0-448e-4060-8364-c1fa87587510"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
s5ZdhB3+3P4EElIX/jouQuKOJtz/B96yFKw=
          "]]}, Annotation[#, "Charting`Private`Tag$201068#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2627, 0.4313, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$201068#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
pzYjzAjetIUVV9K4JvF+/w8Wlvvl
          "]]}, Annotation[#, "Charting`Private`Tag$201068#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(P\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Energy In-Flows\"", StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{0., 99999.99795918367}, {-0.00004, 0.00004}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Left \"", "\"Right\"", "\"Total\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8425878363120546`*^9, 3.842587847235633*^9}, 
   3.842588074978342*^9, {3.842588123312332*^9, 3.84258817022402*^9}, 
   3.842588208422208*^9, {3.8425882456274548`*^9, 3.8425884604108543`*^9}, 
   3.842642597934924*^9, 3.842643595047985*^9, 3.842643660651394*^9, {
   3.842643696651991*^9, 3.8426437715049906`*^9}, {3.8426438503185143`*^9, 
   3.8426438701002903`*^9}, {3.8426566612615323`*^9, 3.84265666992916*^9}, {
   3.8426567324847436`*^9, 3.8426567510188427`*^9}, 3.8426571331333027`*^9, 
   3.84265795619525*^9, {3.8426589456052947`*^9, 3.8426589739500933`*^9}, 
   3.842659750495966*^9, 3.842659994686627*^9, 3.842660835666727*^9, 
   3.8426608661242924`*^9, 3.8426610076383734`*^9, 3.8426610745284443`*^9, {
   3.842661155621397*^9, 3.8426612855880747`*^9}, 3.842661404677117*^9, 
   3.842661516009495*^9, 3.8426615568119173`*^9, {3.8426650490019083`*^9, 
   3.842665066841675*^9}, {3.8426651990407143`*^9, 3.842665216997856*^9}, 
   3.8426652491188836`*^9, 3.8426653644367476`*^9, 3.842665570437317*^9, {
   3.842665664042185*^9, 3.8426656840384407`*^9}, {3.8426657467115574`*^9, 
   3.842665766205903*^9}, 3.8432615745244694`*^9, 3.8432617454443913`*^9, 
   3.843261780206955*^9, {3.8432634551370983`*^9, 3.8432635403774815`*^9}},
 CellLabel->
  "Out[240]=",ExpressionUUID->"9f2bc998-9dd9-4258-aaa5-ea2f76305b38"]
}, Open  ]],

Cell["Dynamics of the complete density matrix,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783657926859419*^9, 3.7836579428816185`*^9}, 
   3.7911637886560307`*^9, 
   3.8225233944169335`*^9},ExpressionUUID->"48daa436-d880-4ea1-b707-\
be90fce88127"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tassum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["T", "1"], "\[Rule]", " ", 
      RowBox[{"0.2", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["T", "2"], "\[Rule]", " ", 
      RowBox[{"0.02", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", 
      RowBox[{"1.0", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", 
      RowBox[{"0.5", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "3"], "\[Rule]", 
      RowBox[{"0.5", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "1"], "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "2"], "\[Rule]", "0.01"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7903728943154235`*^9, 3.790372953581931*^9}, {
   3.790373021807481*^9, 3.7903730282354245`*^9}, {3.7903730686244555`*^9, 
   3.7903730829501395`*^9}, {3.7903746481577826`*^9, 
   3.7903746521012316`*^9}, {3.7903749177956896`*^9, 3.7903749537216187`*^9}, 
   3.790375095043697*^9, {3.7942601530263615`*^9, 3.794260154971158*^9}, {
   3.794260263909217*^9, 3.7942603665960803`*^9}, {3.79426041313457*^9, 
   3.7942604192198567`*^9}, {3.794261815532322*^9, 3.7942618284919786`*^9}, 
   3.7942618968790226`*^9, 3.794272872428309*^9, {3.7942796130097013`*^9, 
   3.794279652643711*^9}, {3.7954088102977858`*^9, 3.7954088146801767`*^9}, {
   3.795408864303483*^9, 3.795408867635575*^9}, {3.819321780480033*^9, 
   3.819321805546974*^9}, {3.821491669900217*^9, 3.821491686948207*^9}, {
   3.827528552600561*^9, 3.8275285557397475`*^9}, {3.8277887155312986`*^9, 
   3.827788725508029*^9}, {3.8422937791594567`*^9, 3.8422937810277157`*^9}, {
   3.842294589200328*^9, 3.8422946279270663`*^9}, 3.8422949602559514`*^9, {
   3.842295230358649*^9, 3.8422952354356213`*^9}, {3.842587597949811*^9, 
   3.8425876497559137`*^9}, {3.842587688126021*^9, 3.842587701436894*^9}, {
   3.8425881612400866`*^9, 3.842588201762244*^9}, 3.8425882688098326`*^9, 
   3.842588314073968*^9, 3.8426435716659746`*^9, {3.8426603848149734`*^9, 
   3.8426603858196173`*^9}, {3.842660418873096*^9, 3.8426604200338297`*^9}, {
   3.8426608615720387`*^9, 3.8426608630430408`*^9}, {3.8426611494104495`*^9, 
   3.84266115077575*^9}, {3.8426611983689923`*^9, 3.842661274599606*^9}, {
   3.8426615835367384`*^9, 3.84266158435883*^9}, {3.8426652420629945`*^9, 
   3.842665243834159*^9}, 3.8426653596202946`*^9, 3.84266549229937*^9, {
   3.8426656536982675`*^9, 3.84266568006359*^9}, 3.843261273235171*^9, {
   3.8432634402005386`*^9, 3.843263532619438*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"ac358cf7-ad94-42a8-814a-85425aca25f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]LM", "\[Rule]", 
      RowBox[{"0.01", "\[Omega]conv"}]}], ",", 
     RowBox[{"\[Gamma]MR", "\[Rule]", 
      RowBox[{"0.01", "\[Omega]conv"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.795408418923833*^9, 3.795408419294843*^9}, {
   3.8193217398054876`*^9, 3.819321745290885*^9}, {3.842293831739999*^9, 
   3.8422938383890457`*^9}, {3.8425875369989023`*^9, 
   3.8425875469810357`*^9}, {3.8426604043691874`*^9, 3.842660405444062*^9}, {
   3.8432634420662327`*^9, 3.8432634431682324`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"c4eccadd-2bd6-42f3-a812-2890fdd11dbb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"5000", "/", 
       SubscriptBox["\[Omega]", "2"]}], ")"}], "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"unitassum", ",", "Tassum"}], "}"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamics", "=", 
    RowBox[{"NDSolve", "[", "\n", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "//.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
            "\[Gamma]assum", ",", "NBEassum", ",", "unitassum", ",", "Tassum",
              ",", "Jassum"}], "}"}], "]"}]}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Rho]", 
              RowBox[{"i", ",", "j"}]], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"init\[Rho]Matrix", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}]}], "}"}], 
       "]"}], "\n", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"i", ",", "j"}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "/.", 
         "dynamics"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "12"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPointPlot3D", "[", 
       RowBox[{
        RowBox[{"Log", "[", "temp", "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "15"}], ",", "1"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
      RowBox[{"DecimalForm", "[", 
       RowBox[{
        RowBox[{"MatrixForm", "[", "temp", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "\n", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0"}], "}"}], ",", "0", ",", "tmax"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8426601848363676`*^9, 3.8426603504560184`*^9}, {
   3.8426604473943605`*^9, 3.842660451814567*^9}, {3.842660536700144*^9, 
   3.8426606296986637`*^9}, {3.842660663192777*^9, 3.8426606650049553`*^9}, {
   3.842660702833701*^9, 3.8426607065814905`*^9}, {3.8426616215788937`*^9, 
   3.842661621657902*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"20dc028a-cb4c-4ced-9d9c-98ecaba23ab3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 0}, 0, 10204.081632653062`}}, 
    Typeset`size$$ = {1694., {391., 399.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`temp = Abs[
          ArrayReshape[
           ReplaceAll[
            Table[
             
             Subscript[$CellContext`\[Rho], $CellContext`i, \
$CellContext`j][$CellContext`t$$], {$CellContext`i, 1, 12}, {$CellContext`j, 
              1, 12}], $CellContext`dynamics], {12, 12}]]; {
         ListPointPlot3D[
          Log[$CellContext`temp], PlotRange -> {-15, 1}, ColorFunction -> 
          "TemperatureMap", ImageSize -> Large], 
         DecimalForm[
          MatrixForm[$CellContext`temp], {4, 3}]}), 
      "Specifications" :> {{{$CellContext`t$$, 0}, 0, 10204.081632653062`}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1761., {451., 460.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8426602018939447`*^9, 3.8426603513851166`*^9}, {
   3.8426604082782*^9, 3.8426604219473176`*^9}, {3.8426605402932396`*^9, 
   3.8426605950479555`*^9}, {3.8426606806525736`*^9, 3.842660736814787*^9}, 
   3.8426612776120715`*^9, 3.842661586659358*^9, 3.842661622409107*^9, 
   3.8426654946284866`*^9, 3.842665657469702*^9, 3.8432618048823934`*^9, 
   3.843263518314452*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"988613cc-e24c-479b-85c3-06fc74a02748"]
}, Open  ]],

Cell["Numerically obtaining the approximate steady-state", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842385592242155*^9, 
   3.842385610060734*^9}},ExpressionUUID->"e7acd177-771c-4a30-b29f-\
0bf8cfa3e592"],

Cell[BoxData[
 RowBox[{
  RowBox[{"varFunc", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", "\[Omega]1_",
     ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Gamma]LMs_", ",", 
    "\[Gamma]MRs_", ",", "tmax_", ",", "unitassum_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp0", ",", "temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"unitassum", ",", "NBEassum", ",", "Jassum", ",", 
         RowBox[{
          SubscriptBox["T", "1"], "\[Rule]", "T1"}], ",", 
         RowBox[{
          SubscriptBox["T", "2"], "\[Rule]", "T2"}], ",", 
         RowBox[{
          SubscriptBox["\[Kappa]", "1"], "\[Rule]", "\[Kappa]1"}], ",", 
         RowBox[{
          SubscriptBox["\[Kappa]", "2"], "\[Rule]", "\[Kappa]2"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "3"], "\[Rule]", "\[Omega]3"}], ",", 
         RowBox[{"\[Gamma]LM", "\[Rule]", "\[Gamma]LMs"}], ",", 
         RowBox[{"\[Gamma]MR", "\[Rule]", "\[Gamma]MRs"}]}], "}"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"temp1", "=", 
      RowBox[{"sol", "//.", "temp0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"temp2", "=", 
      RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"temp1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[Rho]", 
                RowBox[{"i", ",", "j"}]], "[", "0", "]"}], "\[Equal]", 
              RowBox[{
               TemplateBox[{
                 RowBox[{"i", ",", "j"}]},
                "KroneckerDeltaSeq"], 
               TemplateBox[{
                 RowBox[{"i", ",", "4"}]},
                "KroneckerDeltaSeq"], "1"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "j"}]], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp3", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Rho]", 
           RowBox[{"i", ",", "j"}]], "[", "tmax", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "//.", 
       RowBox[{"Flatten", "[", "temp2", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Rho]", 
              RowBox[{"i", ",", "i"}]], "[", "tmax", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "12"}], "}"}]}], "]"}], "/.", 
          "temp2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Re", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[CapitalTau]s", "2"], "[", 
              RowBox[{"1", ",", "2"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["\[CapitalTau]s", "1"], "[", 
              RowBox[{"1", ",", "3"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["\[CapitalTau]s", "1"], "[", 
              RowBox[{"2", ",", "4"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["\[CapitalTau]s", "2"], "[", 
              RowBox[{"3", ",", "4"}], "]"}], ",", 
             RowBox[{"\[CapitalUpsilon]s", "[", 
              RowBox[{"2", ",", "3", ",", "tmax"}], "]"}]}], "}"}], "//.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "\[Rule]", "tmax"}], ",", "temp0"}], "}"}], 
            "]"}]}], "/.", "temp2"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Re", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["EngyFlowIn", "1"], "[", 
              RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["EngyFlowIn", "2"], "[", 
              RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}]}], "}"}], "//.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "\[Rule]", "tmax"}], ",", "temp0"}], "}"}], 
            "]"}]}], "/.", "temp2"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "j"}]], "[", "tmax", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "12"}], "}"}]}], "]"}], "//.", 
        "temp2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Re", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["EngyFlowIn", "1"], "[", 
              RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["EngyFlowIn", "2"], "[", 
              RowBox[{"\[Rho]Matrix", "[", "t", "]"}], "]"}]}], "}"}], "//.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "temp0", "}"}], "]"}]}], "/.", "temp2"}], "]"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7753537106511436`*^9, {3.775354696927497*^9, 
   3.7753546987756114`*^9}, {3.775428022468929*^9, 3.7754280343304987`*^9}, {
   3.7754283417040205`*^9, 3.7754283466039453`*^9}, {3.775428461138793*^9, 
   3.7754284859393673`*^9}, {3.7754285707248497`*^9, 
   3.7754287140660653`*^9}, {3.775428798815893*^9, 3.775428807789307*^9}, {
   3.775428885123607*^9, 3.7754289198902144`*^9}, {3.775429168643715*^9, 
   3.7754291932662024`*^9}, {3.7754292387818403`*^9, 
   3.7754293443932076`*^9}, {3.7754293901354027`*^9, 3.77542939650432*^9}, {
   3.775429462436409*^9, 3.775429493769034*^9}, {3.7754296057267632`*^9, 
   3.775429614791603*^9}, {3.775429657006019*^9, 3.775429707263837*^9}, 
   3.7755344833521767`*^9, {3.783708328626151*^9, 3.7837084279718237`*^9}, {
   3.7837084635048327`*^9, 3.783708593429549*^9}, {3.7837162149202175`*^9, 
   3.7837162194700165`*^9}, {3.7837164597381516`*^9, 
   3.7837164874273114`*^9}, {3.7837175921555853`*^9, 3.7837176232251844`*^9}, 
   3.7837182532424307`*^9, {3.7837183085944786`*^9, 3.783718374103629*^9}, {
   3.783718802201745*^9, 3.783718805936762*^9}, {3.783719004498307*^9, 
   3.7837190169420395`*^9}, {3.7846027487904377`*^9, 3.784602755045949*^9}, {
   3.7879551315045953`*^9, 3.787955140857542*^9}, 3.7879551836320467`*^9, {
   3.78795747895417*^9, 3.787957481155241*^9}, {3.7879575982678833`*^9, 
   3.7879576105129714`*^9}, 3.790375422830477*^9, {3.7903758922662244`*^9, 
   3.790375895923444*^9}, {3.7903759377545805`*^9, 3.7903759676087365`*^9}, {
   3.7903760056140966`*^9, 3.7903760076716075`*^9}, {3.790376094611101*^9, 
   3.7903760967085004`*^9}, {3.7903766476904707`*^9, 3.7903766792550163`*^9}, 
   3.7903769385336494`*^9, 3.7903770027598925`*^9, {3.790377073052915*^9, 
   3.7903770746047645`*^9}, {3.7903777644212437`*^9, 
   3.7903777661595936`*^9}, {3.7903778049010916`*^9, 
   3.7903778144316053`*^9}, {3.7903778466713886`*^9, 3.790377883341327*^9}, 
   3.7903782939626284`*^9, {3.790378734307251*^9, 3.790378801513156*^9}, {
   3.790379110950943*^9, 3.790379119310584*^9}, {3.790379257436088*^9, 
   3.790379273153054*^9}, {3.7903885187170467`*^9, 3.790388574984623*^9}, {
   3.7903887002555037`*^9, 3.7903887032784195`*^9}, 3.790388762290086*^9, {
   3.790388992196544*^9, 3.7903889953461523`*^9}, {3.794267151730879*^9, 
   3.7942671547172346`*^9}, 3.794269480741638*^9, {3.7942705414583364`*^9, 
   3.79427054620549*^9}, {3.794270601355549*^9, 3.7942706060740547`*^9}, {
   3.7942742021063147`*^9, 3.7942742050591936`*^9}, {3.7942746764730377`*^9, 
   3.794274679968153*^9}, {3.794274978814254*^9, 3.7942749993266826`*^9}, 
   3.7946885928625154`*^9, {3.821492179357643*^9, 3.8214922406126056`*^9}, 
   3.8214923737001777`*^9, 3.821493310024704*^9, {3.827784978764124*^9, 
   3.8277849974626026`*^9}, {3.8277884747459717`*^9, 3.827788494402034*^9}, {
   3.827788751875087*^9, 3.827788784785903*^9}, {3.827788822261589*^9, 
   3.827788894760645*^9}, {3.827788930005127*^9, 3.8277890763477087`*^9}, {
   3.8277891077497463`*^9, 3.8277892547664127`*^9}, {3.8277903099529233`*^9, 
   3.827790463551649*^9}, {3.8277905282405553`*^9, 3.8277905586959586`*^9}, {
   3.8277907163508883`*^9, 3.8277908216172266`*^9}, {3.827792917657754*^9, 
   3.8277929728514214`*^9}, {3.8304960181414013`*^9, 
   3.8304960242331076`*^9}, {3.8423921022185774`*^9, 3.842392131829401*^9}, {
   3.8423921983644476`*^9, 3.8423922991298137`*^9}, {3.8423923410857625`*^9, 
   3.842392434688456*^9}, {3.842392467360116*^9, 3.8423924927089715`*^9}, {
   3.8423925269709063`*^9, 3.842392568565319*^9}, {3.8423925991100626`*^9, 
   3.842392783706294*^9}, {3.842395553866534*^9, 3.84239559597324*^9}, {
   3.842395647660386*^9, 3.8423956790993814`*^9}, {3.842395856505077*^9, 
   3.8423958966615453`*^9}, {3.842395929146905*^9, 3.8423960919273276`*^9}, {
   3.8423979051008253`*^9, 3.842397907485669*^9}, {3.8423998774501534`*^9, 
   3.842399877858445*^9}, {3.8424036700622973`*^9, 3.842403678923304*^9}, {
   3.842403907570158*^9, 3.842403913342809*^9}, 3.842404149277485*^9, {
   3.8424062181100817`*^9, 3.842406232122383*^9}, {3.842664458420185*^9, 
   3.8426645514667377`*^9}, {3.8426646354085593`*^9, 3.8426646430981283`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"fdb7d483-8ee0-4bc5-85f8-3471e63e5a25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"varFunc", "[", 
   RowBox[{
   "0.2", ",", "0.02", ",", "0.01", ",", "0.01", ",", "1.0", ",", "0.57", ",",
     "0.5", ",", "0.03", ",", "0.03", ",", "5000", ",", "unitassum"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842392501016676*^9, 3.8423925167834597`*^9}, {
   3.8423985394591317`*^9, 3.8423985785637054`*^9}, {3.8424041227854877`*^9, 
   3.842404127643037*^9}, {3.8424041616806736`*^9, 3.842404165399289*^9}, {
   3.842664558935582*^9, 3.842664580831089*^9}, 3.8426646558836555`*^9, {
   3.8426647598635216`*^9, 3.842664815621872*^9}, {3.842665464501464*^9, 
   3.84266546531326*^9}, 3.8426656267856936`*^9, 3.8432637729372873`*^9},
 CellLabel->
  "In[241]:=",ExpressionUUID->"6e7f15ec-a0c9-41a6-9d90-c8cc05ff79cd"],

Cell["Energy flow characteristics for different system parameters", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.77516851089515*^9, 3.7751685476613455`*^9}, 
   3.775534483351179*^9, 3.7946885928625154`*^9, {3.8277937373260674`*^9, 
   3.827793757831606*^9}},ExpressionUUID->"af05ae5a-c543-4bfd-94c1-\
af7210bfdd30"],

Cell["Energy flow under different levels of resonance", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830563614937607*^9, 
   3.830563653014323*^9}},ExpressionUUID->"3c9ea643-57ef-4cbc-bd7f-\
dd9eb90cac8c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Energy flows when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "82963c79-9bfa-4e09-9fc1-27fe16ccd5aa"],
 " is changed from below ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]],ExpressionUUID->
  "347f2fdd-e25b-4789-afa4-75aab7614fb6"],
 " to above ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]],ExpressionUUID->
  "2bbc96bd-ab82-4ac4-911c-89737a47760b"],
 ", keeping \[Gamma]s constant,"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783908449607541*^9, 3.783908455354002*^9}, {
   3.784608182289212*^9, 3.7846082053070126`*^9}, {3.7911635964968257`*^9, 
   3.7911636069399214`*^9}, 3.7911638142244873`*^9, {3.794442653811062*^9, 
   3.7944426545720263`*^9}, {3.7944430068452196`*^9, 3.794443033673576*^9}, 
   3.7946886885725245`*^9, {3.830563655478552*^9, 3.8305636953479176`*^9}, {
   3.842664724430175*^9, 
   3.842664728326209*^9}},ExpressionUUID->"32cd8747-610b-49bd-a3ea-\
6ffe6176dd2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", 
    "\[Omega]1s_", ",", "\[Omega]2min_", ",", "\[Omega]2max_", ",", 
    "\[Omega]3s_", ",", "\[Gamma]LMs_", ",", "\[Gamma]MRs_", ",", "tmax_", 
    ",", "\[Omega]res_", ",", "legends_", ",", "title_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempx", ",", "tempy", ",", "temp"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Omega]2", ",", "\[Omega]2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
          "\[Omega]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempy", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"varFunc", "[", 
          RowBox[{
          "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", 
           "\[Omega]1s", ",", "\[Omega]2", ",", "\[Omega]3s", ",", 
           "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmax", ",", "unitassum"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
           "\[Omega]res"}], "}"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"temp", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempx", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", 
            RowBox[{"tempy", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "3", ",", "i"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"temp", ",", "\n", "\t", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]2min", ",", "\[Omega]2max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Gray", "]"}], ",", "13.5", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(J\), \
\(P\)]\)(\!\(\*SuperscriptBox[\(10\), \(-5\)]\))\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}], ",", 
       "\n", "\t", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       "  ", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"title", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Red", "}"}], ",", 
          RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"legends", " ", "&&", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(J\), \(L\)]\)\>\"", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(J\), \(R\)]\)\>\"", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}]}]}], 
      "]"}]}]}], "\n", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7846053822554855`*^9, 3.7846054490795164`*^9}, 
   3.784605598651943*^9, {3.7846057057891273`*^9, 3.784605707326879*^9}, 
   3.784607105425058*^9, 3.7846071591201334`*^9, {3.7846072066515055`*^9, 
   3.7846072088704977`*^9}, {3.7846073485014305`*^9, 3.784607358678322*^9}, {
   3.7846074031942687`*^9, 3.7846074260451765`*^9}, {3.7846081647114525`*^9, 
   3.7846081698775787`*^9}, {3.784608241733886*^9, 3.784608244317532*^9}, {
   3.784608460626673*^9, 3.7846084847240143`*^9}, {3.785616705451291*^9, 
   3.785616706554267*^9}, {3.7879741603576355`*^9, 3.78797418085876*^9}, {
   3.787974471115717*^9, 3.7879744759128747`*^9}, {3.7942848432110443`*^9, 
   3.794284846100052*^9}, {3.79428538556993*^9, 3.7942853943046494`*^9}, {
   3.794285534414443*^9, 3.794285540581482*^9}, {3.7942869541667633`*^9, 
   3.7942870173720303`*^9}, {3.794441589763091*^9, 3.794441651719434*^9}, 
   3.7944417740124226`*^9, {3.794441858910409*^9, 3.7944418736340227`*^9}, {
   3.794442348966787*^9, 3.7944423594398193`*^9}, {3.794443129273974*^9, 
   3.7944431708748393`*^9}, {3.794449946979224*^9, 3.7944499565328584`*^9}, {
   3.794522656502205*^9, 3.794522667379118*^9}, {3.7945278354850454`*^9, 
   3.794527846646296*^9}, {3.7945278939421206`*^9, 3.7945278946995583`*^9}, 
   3.794688688573558*^9, {3.7946915190426164`*^9, 3.7946915294018993`*^9}, {
   3.795133645536869*^9, 3.795133698355662*^9}, {3.795133832624301*^9, 
   3.795133837410489*^9}, {3.795994461925544*^9, 3.79599446649432*^9}, 
   3.79599472865281*^9, {3.8225247594397745`*^9, 3.822524775481331*^9}, {
   3.830563701248141*^9, 3.8305639391967916`*^9}, {3.830564199040367*^9, 
   3.830564247784162*^9}, {3.830564294935762*^9, 3.8305643132517457`*^9}, {
   3.830564347745745*^9, 3.8305643502150955`*^9}, 3.8305644748004894`*^9, {
   3.8305645800347605`*^9, 3.8305646186642475`*^9}, {3.8305647303130684`*^9, 
   3.830564773735257*^9}, {3.841795043775676*^9, 3.8417951241977525`*^9}, {
   3.841795267893946*^9, 3.8417952721023426`*^9}, {3.842407217230354*^9, 
   3.8424072407056684`*^9}, 3.842407742816382*^9, {3.8424083474275703`*^9, 
   3.842408348282665*^9}, {3.842408488928729*^9, 3.8424085178997154`*^9}, {
   3.8426646993952756`*^9, 3.8426647111781597`*^9}, {3.842664743219805*^9, 
   3.8426647487483096`*^9}, {3.8426647871089296`*^9, 3.842664790465378*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"204fbcb2-2026-4d1c-a906-57f0e7e5cbdf"],

Cell[BoxData[
 RowBox[{"{", "\n", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
       ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
       "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmaxs", ",", "\[Omega]res"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"T1", "=", 
       RowBox[{"0.2", "Tconv"}]}], ";", 
      RowBox[{"T2", "=", 
       RowBox[{"0.02", "Tconv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
      RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]LMs", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]MRs", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"1.0", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]2min", "=", 
       RowBox[{"0.45", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]2max", "=", 
       RowBox[{"0.55", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]res", "=", 
       RowBox[{"0.001", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]3", "=", 
       RowBox[{"0.5", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tmaxs", "=", 
       RowBox[{"50000", "/", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
        ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
        "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmaxs", ",", "\[Omega]res", 
        ",", "True", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(LM\)]\)=\!\(\*SubscriptBox[\(\
\[Gamma]\), \(MR\)]\)=0.01\>\""}], "]"}]}]}], "\n", "]"}], ",", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
       ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
       "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmaxs", ",", "\[Omega]res"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"T1", "=", 
       RowBox[{"0.2", "Tconv"}]}], ";", 
      RowBox[{"T2", "=", 
       RowBox[{"0.02", "Tconv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
      RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]LMs", "=", 
       RowBox[{"0.02", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]MRs", "=", 
       RowBox[{"0.02", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"1.0", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]2min", "=", 
       RowBox[{"0.45", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]2max", "=", 
       RowBox[{"0.55", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]res", "=", 
       RowBox[{"0.001", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]3", "=", 
       RowBox[{"0.5", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tmaxs", "=", 
       RowBox[{"50000", "/", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
        ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
        "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmaxs", ",", "\[Omega]res", 
        ",", "True", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(LM\)]\)=\!\(\*SubscriptBox[\(\
\[Gamma]\), \(MR\)]\)=0.02\>\""}], "]"}]}]}], "\n", "]"}], ",", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
       ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
       "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmaxs", ",", "\[Omega]res"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"T1", "=", 
       RowBox[{"0.2", "Tconv"}]}], ";", 
      RowBox[{"T2", "=", 
       RowBox[{"0.02", "Tconv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
      RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]LMs", "=", 
       RowBox[{"0.03", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]MRs", "=", 
       RowBox[{"0.03", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"1.0", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]2min", "=", 
       RowBox[{"0.45", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]2max", "=", 
       RowBox[{"0.55", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]res", "=", 
       RowBox[{"0.001", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Omega]3", "=", 
       RowBox[{"0.5", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tmaxs", "=", 
       RowBox[{"50000", "/", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
        ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
        "\[Gamma]LMs", ",", "\[Gamma]MRs", ",", "tmaxs", ",", "\[Omega]res", 
        ",", "True", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(LM\)]\)=\!\(\*SubscriptBox[\(\
\[Gamma]\), \(MR\)]\)=0.03\>\""}], "]"}]}]}], "\n", "]"}]}], "\n", 
  "}"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7857028921184025`*^9, 3.7857030091050262`*^9}, 
   3.7857031252191353`*^9, {3.7942849169038873`*^9, 3.7942850013941927`*^9}, 
   3.794285072862439*^9, {3.7942855147958884`*^9, 3.794285518887411*^9}, {
   3.794441555530632*^9, 3.7944415556253767`*^9}, 3.7944417056701617`*^9, {
   3.794442436097172*^9, 3.79444243692293*^9}, {3.7945279010815015`*^9, 
   3.79452792114284*^9}, 3.794688688573558*^9, 3.7946932839715166`*^9, {
   3.7951336798561673`*^9, 3.795133680725828*^9}, {3.8225247938549786`*^9, 
   3.8225248317602715`*^9}, {3.830563946642151*^9, 3.83056414799172*^9}, 
   3.830564516376361*^9, {3.830564635531206*^9, 3.8305647125921535`*^9}, 
   3.8305648132468824`*^9, {3.841795141447711*^9, 3.841795165409472*^9}, {
   3.8424073034625373`*^9, 3.842407416927267*^9}, {3.8424078821779304`*^9, 
   3.8424078878545866`*^9}, {3.8424079182516336`*^9, 
   3.8424079207182713`*^9}, {3.8424079668534927`*^9, 
   3.8424079698185654`*^9}, {3.8424080896640425`*^9, 
   3.8424081330482564`*^9}, {3.842408229286085*^9, 3.842408250781522*^9}, {
   3.8424083998303423`*^9, 3.842408433936411*^9}, {3.842408707590107*^9, 
   3.8424087159620137`*^9}, {3.842471059575284*^9, 3.8424710659140396`*^9}, {
   3.842664840509945*^9, 3.842665006145294*^9}, {3.8426651042696915`*^9, 
   3.8426651445497503`*^9}, {3.8426657006799235`*^9, 
   3.8426657139183655`*^9}, {3.8426657821791515`*^9, 3.842665836004614*^9}, 
   3.8426661657303343`*^9, 3.8426665108713956`*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"438c9f51-6abd-4e98-83a3-bfd37e5fcb5b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxFlXtQVHUcxXdMxUeygIbPEAjFMiRIx8Gyk4EoPhBJjEElBkERHwsoaCIk
Y/lIV0E0CEUFJQWBWRkKEUGTR4myPoBI5d77u2Mbig98gGCFdr+/u7PdmZ39
Y2e/e77fc85nncJ1gZF9NBpNpPKi94ar9LQiruVIxhK2HRurjo5yF1rhXZR0
23b4TjgZ4qLSHrVi9R5rm4apu3AlZ+bPz3tb0VkQ/zIl+jvEp4/ou9hawJNP
Js1oKNyNsd8+WHjWQcCG+lenQgbpcTmBD8Rnjad1MQF7sV6ZtgUCJjr/Vehl
lYq3QyI+khYI+NDf9llabSp+nTt114wwAZ3n/ZzzLqYhdvqgluMxAh6/0IaO
qtqP0e6CS/8U5ftiaHvo6XTUOpJAAYus5qcbfj8And22i/U5An4a2uCpHfI9
Rirq3EoEDBwQYQhamoHqrglL910SkNO7osLpWibWtv2T//SmAL29daq0LAvD
bxm7P78r4OrwZTPtrQ/jl3paWED52LbE6tfZWH1+g7KxCDujpnzh4GN4q3iW
vHmYCDm/edY5jxxcoG1dROgPNPRWbMnFKlp3igi/Gy8exj86jqEkb6aITo3p
gU9qHipp3GIRmwNqOhB8EitX0CPCfWhjoHFlPmyDvUp/SxDRY+rSdV84jQq/
N/tM3CFiv9+V5Li4YkQq19NniNiRVDZvWpUBWreS7I6TIrw6wmILvinBWQcy
RET1vSLb2MxShNvQQBHvL3qkfTy4DDTN/pYIt4xpc8selEMxt2nTfRHOd3Kz
woIrEWa67nznpYhk7ZK9YyougtyYPkjCCV+r2givaijiFIMl+Lg1z+nyrkPo
ORIoYd2+P6+EWNVjQOEYchhDfHVr9SVGkLq6uRI811x3fOxzE4oZiiMSTMvj
j1o9aUb/lIPeu9dIWNjybFLyntvg8dsiYevloPUdrgw8LnoJsTpj8MHSu+D2
ZktYflkb7d3VBm5HsYQNpf3+KG58CH6+KgkndwY2zu73FHxdo4SCVceWTNY/
hypPQvPrdq9Jhi7wcR0SNLaTE7c6dEPDH4YRETWJnx7tRvOm++M9BjD02qif
Fzy9OT/chlm+/3U0BYSh0Dx/0d28QzWOzPL77/KFmUXfqyYayCz6G+eTQwzr
zfudqqNCMMv+SZiinJjB33yfQG4wQ5v5fq4edHGGyeb7/ptPAhm05vvfUNxM
jmZYY/bnR0WdIY7B1+xf4jC6ILP4G6DPWGe3jVn8H8cNYpZ8/J1MCzNMNOfn
mtKevEMMbuZ8nYihAjNL/r6i8xUybNsUyvPpzwPJYB9Tx/P7Dsk7zyAGqfnu
oXE1DB8/V/Ov8ooh0ypyXLbSj1zCURODx6VrvD8qvxj6hrTyfs0jnJgYag+a
eP9UnjGYRjuPuaP08wXhoIvBM7b8kqz0V+UbQ1RU91nq9zGqc38Z4RMMvP8q
72S4Xt/oQ3yYwwskw2dk5T7ih8o/GTc+WHaO+NJJdRovI6jsvTPEH5WHMoQz
b9SkK3w6QnWYKuNA633OL5WPMrJyK8MuFKRjNsV5lgzPl8M4/1ReytAO9OB8
fEbxC5aR1pPy8H9+yohNcCoivh4me6Nk+N5rd/FasNfMUxlfbv+iiPjsywsv
o72jeTbxW+WrDNjt7yG+PyF5u2R4NK3g/Fd5K0Nn3NhC/w9ZP9Ajw8bfPYH+
P/4Dsh8lgA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxNlX1QVGUUxjc0IGTMQBQFAUEERSJmMqJGTyYqilKCA1RkzA4oQqhJgBjg
rE5jKktfqMOHLKR8SrLCpnwfFIRAg0DQUO69740xEymXr0hB6b733dnpzjD7
xx3OPuc8z/Pbpcp9QVEmCoUiSvqjn7/cpM8AnP6t7KQr3MSkRs1iL24ALpS7
O8be6MCl2gPR3/41AOcTa294BbbjjYINl8eeDUDq5ZZJfUcbJnxvOztkLgf9
U4crFH6t6Pjlo+3VDhwkzClpN69vwfZEeSDo4/b62bzejPHStBTgQN3qfqxU
dxWXfBj5tvAeB4s/sfljyLcJ2wJ8jq+L4OC15oi3NLkN+Nkaizvn9nNwKTC5
8bRYi3Ze3DJTFQfeBQdH/DdW43UnKpCDOmwMy+J/wn1WR5s6CjiYpYwO8Cyu
wkWSOs9KDmrM7n6TXnIJmyfcw7++xsEeh0JhS3cFxj2YKh3p4eCZftFkX285
LuzvnAwelN53zjL3iCjDqx10YQ7Gk7wnhlQlGFv/ubQxD2a7eu/t9ixGm4ub
xEPzeeDbcGFMZBEi3XYZDxZV/ppM1yLcQ9ddzUNI3e/dOdFFaE3lbeAhlvPf
br6qGBvouBAeohbUWjZ+UIK7d9GHh8LppztfminFV8J8dT8n8pCvjqsPti7H
us2WJh7HeMi0SnKuyL2IUdL11Gd4iGz4Kq+yXYsve1aefVzMw9BYSsf0iUqs
dqCG8PDsXbuQ0hwdKufRgTyEB0euGrK8gnTagn4edmib/EKHa1Ayt/fgQx5A
l1bZF9aAEfd/db73hAfVOc0JVV0TUjfWWAjwwu389C7fZpTESQYL4PZdhlOB
5P/OWipQej9xZemIWQeal9tTh8FROeK3sqoTqbrWAAGeb06647ahByUzJEcE
yFD3K5T6PjRVnVp/8lMBlkyvqBHT76IcvxQBLOKHV9u4E5TjohYgs3ggTKMb
RNneswLUFOxSvDnxAGU7LgqwteDktQu3hlE+X6MAJoqV3i4vjqC8bqcAo7Zd
eVbqMWTyBCCmCaEe2gmUxz0WQKVZW3/IYRIV8kNg3OJI8juaSew7+HC5tzmB
w4b3ZSM925TzCIiG/z8cQwNCjPN3DBbmtDgR4/evkBcmsMWg73kvHUig1qD/
1jbqEDHuV9JKC0GM+6fCaunExHifINlgYryfmze9OIEZw32nS6lAYrx/t+Rm
Woykx+BPkaROe4AY/ftiPr0gMfr7vvrMXqujxOi/q2wQgbWGfDxNowsTCDXk
p0tqT2EOgY8M+Tq/nxaYGPOXTM9XTuC6nuUzUA4kgR+rWX5dqLx6AgPWLN//
0nEtBFxOsfwzXhHoi+32ov34geKol8CcFaw/jF8E/hxi/dpKcXKfQGci6x/j
GQFtcHwe7ec/FAcTBF6dcV5H+8v4RmB2KOt3Pq2zqQhcKus/450ItnEmMh+2
yAUSweEE4wfjnwhZrowv47ROy0XQBTH+MB6KkKwoiqF8yqN18BFh9AnjF+Oj
CKfss8co3/xpnDeJMFfJ+Md4KQKMMT6O0viFiRCYseB//BTh79uMr7nU3mgR
fB5NBVH+Mp6KsDOgVObzRrnwIiQ1HZH5zfgqQls447ueyjsuwsfZjP+MtyLY
veEm/z5kZ9FHBPvMCvn34z8hcF92
           "]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm]}, AxesOrigin -> {0.45, 0}, AxesStyle -> Directive[
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(LM\\)]\\)=\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(MR\\)]\\)=0.01\"", 
          FontFamily -> "Times New Roman", FontSize -> 14.5, StripOnInput -> 
          False], TraditionalForm], PlotRange -> {{0.45, 0.55}, {-4, 4}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxFlXtQVGUYxhkyQDSCRSUITeRi5gCJOhgMPaQgKF7R1IyMSK4JgpKhEAai
hsYYGiOKeEUFYxVRriGiIigiKCHL7ZzznfAS5YU7cRE633d21jOzs3/s7LvP
+z7P81sLv83e/tpaWlr+0ou+36+mTysmDRvqrX2QhR9KT5jZc614ud5z5qHB
C7DI2RKU/KIVdwaet7sjG/dOued3v26FlatN8sKjSnx/6L0xaww4eGYsNjQ3
vYQPdv+7snAKB/2G0MqfvXJwdxsbiK1dk+PGTruMrdK0GHBIn57fu1MvF5PX
b3QWlnNQGp3ONNa+gkovx8TPfDnkn3A7Pl5xFREu+qoz4RxaSp3un5yfh/ft
OSudOA72x1y/cI7Jx+2pVCCHarsUpYGqAJsVu8qqTnHYM6CvVKwtgqmkzjaX
A2nK2/3lQDFu9X7oc+Amh+ju+T2qmyUIfTaU1VnH4WH4Vs+O4lKYNNX0r2rj
ELbkrySDHWW4UUUX5qAa3T948MINfFcSKW3M40Wjw2UrnVuYeNFD3DGBR/PE
1zkBCeW4Tre14jFjYqm70q4CwXTduTwiVJHeBbp3YEzlufNI0A6es9SiCtfo
uDU8UvaNDFb9VI3AAPrwaJvyVvJKu1oYrfvk6p1tPNwiXCLMJz/EH4vGa8/c
y2PFqu5/Bhvq4C9dL+kwjzlexYGNNfV41zY3/dV5Hh6KedciDVQonEIN4bHd
z6nh3Kkm+BnSgTyel5k6+PzWCjptUhOPWN2NL4UeAZK59VHtPEYT9C7f+1uE
75MH01oGeBzxt3ZdaP4Y1A0XfQFNiqfGLmlPIYmTDBaw6iuDgtvB7dhQTAUK
CHQMCbuU+Bx62ebUYZwzfTs1uPsVqLoKLwGpRTFccm0nJDMkRwT0ffN19khx
N3TiUhbs3yQgrrmrctnFXrD4xQhY886YA5mp/WBxSRJwPm9f2KOAATB70wV8
ahLUmaM7BGbHRQElgY19L0OHwc5XKqC4ItzqbvJrsHVrBFi1RVU9Cx+BLE/A
kFm8cnjcKNi4VwKcgwothwJGocUegv0fB17vTxjFo6h2m1l6BPPUn1/orFvq
Z0gwoP7+zhAaEAJr9fzVbWfTyqcSze/PYAsTFKn1jdTTgUSj/8+l1CGi2S+z
ghaCYLV6/x8xVzoxQbz6Pt7MYKK53/RZ9OIER9T3Hc6iAonm/g8lN2NDCPzV
/pyT1OVsIRr/oifQCxK0qP1dkXQ4TLGL4Kjaf2tmENHkYzCWLkw0+amV2nM2
jeCFOl8Z4bTARJO/7fR82QTRvziyfC5jgSS42i/n15LKKyFI2SPn+z86rpzA
ZuzBZlMp/zKvCExc5X6cpjiqJxiXIfdH5hdBj68P69cSipMnBBtyfw0+LvVP
5hlB1+yAjhypn30UB70En8/2WUD7K/ONoKnGifX7JK2zjojOZdms/zLvRIwo
kzqMJD4sZgUSwUfZMH7I/BPhVmnJ+NJD62Qj4ttWmT8yD0U4RcZmUz4dp3Vw
FJHs/pjxS+ajCNXyRYxvnjTOHiLiNi1n/JN5KaLaL4HxsYvGb52IrjOTfn/D
TxH2iSt6KF+PUXuDROT19DvrSfyVeSqCuJj5BEl8XsgKL+KKiaLcQuK3zFcR
m3M/YnzvoPISRey1FRn/Zd6KSPPl4jdI/w9Hj9BHhMNtY/b/8T9oYDdi
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxNlQtQVHUUxpEUBRsDX2AiKiKaiEjKGNjOycJQgVBQh5EgQfCJiiSCihiD
ZuSQkQ9IBFsR5SEExEtADiJLhg+E1hjGvff+b4KEoKvSykuk+7//nZ3uDLPD
7OzZ75zv+347O2Svb5ixkZFRmPRHX+/dpY8G8p+ei7wanIvRNRffd+I0cDR9
aePz7Xk4uzBye/IzDXTY+hy2+PEa3lGuLOsd1sAlSI7brc7HqNNWozdO4OD0
GN07qk9+xZnHu9dV2HBg7LM/akVAIf5xQB4IBd5TIoIdi/BraVoscJCR81GY
u0UxztgUulzw4eDj1PC8paa/4e+eyxJXbOYgc/ZwoZtlCe5TmLVmRnDgObXP
eIt7KU534uxM4jlYc8Vj/aG4MlTNogI58ErNydS2lePeiQm1jUoOznrNPN3u
fx2nSeociznY3+DS3T1Yibd08788VcdBbvMLuyWqatzdOZTzsoWDjZot3X/d
qEHLtvt9fo85CL/pNNHnUC3ebKQLc/Bw/vWg1LybuKt6v7QxD2nKmLUHTW7h
lAIP8dBkHvakXawqOlaPSLe142HZPIXpwKIG3EHXdeFBd8fa2Nn0Nk6i8lby
8Nrv4qlc20a8Qcdt5OE71eaoY/F3cdtW+vDQ+7dvsGZRE1r4u5bcPsBD2bcV
0etmNGPV6neNHU7wsLf/cujS1hYMk66XlMKD6VAQmdakxvcci9O1V3lQVSuy
8ye0YoUNNYSH7Daty5CyDUPM6UAeIgL3Lcw+o0E6bWobD7B+Sae9TkDJXHVM
Fw/WnZV+z/8RcXPHA9tHAzycVwZsSLJuR+qGwkyA5getZtFpT1ASJxkswFdJ
WaR/RxcGVVKBAuw4Nd37TGIPjrtmTR2GviJhenSvFqm6Bk8BFl9efjyu6SVK
ZkiOCDCYPOnps8peNIk/+9nJcAF6T+Ao9wIdyvGLFcCudOH3R1L7UI5LkgBc
eGePcusAyvamC1DqkRGQMHYIZTsKBHCot8p/tPsNyuerEUBtMfdkXfIwyuve
F8DDSqGuiniLTJ70f9RA+avxIyiP0wpwzjV00+utI2gkPwTczH6o7Ts2gg9j
uuydxxFI0b+f+7LFO8ScGD5/dCcNCIHV+vnrH2el1c8ihu//QF6YwAK9vrdq
OpAY9P/pTR0iIOj3y26ghSBgr9//CLhIJyaG+/jKBhMY0N9vnjO9OAFn/X3f
5FCBxHD/ZsnNuJ0Etun9uSKpK4wkEKj37/BkekECLXp/1yal7JmYQAz+z5UN
IoZ8DMbRhYkhP01Se7LSiCFflyNogQnk6fN3kJ7vmnTPOpbPL+RAEqgfZPmd
Q+VVE0gcYfnup+PqCYy/kLGL5p/xikB7J+vHJYojNQGbBtYfxi8CH9awfnlR
nHQQ8PP/pnax1D/GMwIPYidMpv18TXGgI+BveaaI9pfxjUBXGev3L7TOJiIo
eirk/jPeiaByaLSmfFgjF0iEMeahMj8Y/0QYXcj48i+tk70IJX2MP4yHImwo
t5H5lEHrsEwEYRbjF+OjCGNHrZL5torG2UN6fxvjH+OlCHMCGR9f0fj5ixDu
9X9+ipBt5Crz9QK1d7sIKZnanyh/GU8l/QuG3CmfP5cLL0Kz9z1zym/GVxHy
HjO+v6DyEkWwNWH8Z7wV4dMgxRP6+3D+Z/qI4NbFfj/+A+l/aic=
           "]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm]}, AxesOrigin -> {0.45, 0}, AxesStyle -> Directive[
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(LM\\)]\\)=\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(MR\\)]\\)=0.02\"", 
          FontFamily -> "Times New Roman", FontSize -> 14.5, StripOnInput -> 
          False], TraditionalForm], PlotRange -> {{0.45, 0.55}, {-4, 4}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw9lQlMFHcYxQfU1RKsC3hQD1yqeIQaqi1uiSGPproWkGKlMVRMyyGiyKUW
j+JR7xjFiyKHF4JHMXgUwVixyuEuNyiuFJGZ+U9xiwYpioJyuPT/n9nuJBuy
2fDt+7733m9dw+OXRNpyHBdJX+xvbQ17WhCSkpiX4V2MjXfOjPfgW3CG79r+
ZlgJXK+tW3W0g753OxblxJeg+uyCG6/ft2BfRIi6tKwUiSnOQ5d+yENIaI7W
FpVh8p72b2+68Oh268vxN9xD5QZ5IOwMDXW9Jj3W02lbwKO2vjUoc2I5Ji1b
MU8M5LF3XtyAQ0wFyv21+78M5XGkpiEstakSa73t/spJ4DHR6YC3NqIaEzz4
qaod9PuevE1Pd6iFXsME8ljRnn388NM6xDvuKq46y2NA/eSTswn38RFVNyuf
vn/QWKLZ+wBl3TOWHy7lkearmxtR2IDYtv7cVw08bqn15Z42Rox7XPc2qJWH
ufZk7B8xj1BSxRbmkVU90yWsvxFrbv9ENxZwQR/AD73ehDFXFko/jxbQaJqy
T5fSjLts26kCQoMGr7fltGA1W9dTQFWeplD/TIATk7dAwIzYeH3zdYI/2bil
An5P4mquOv6NqJXsEdC82+xclNIKh2CvgooNAswTcvckeJlQ5Gtv675PQKDO
2d9B1YZIer3kNAFDppk+9e9/hlGz8k91XqTzx8YYw8a346YLM0TADo/I7BMr
OhCuZgMFNKyKLxjZ2Ak2bexjASHrhTkvPF+Bmmvc9FzAokmdl4KPdSHUdP/j
J70Clh3aG1DQ9xrMDW87ERuLnYOrortBxVGDRSzXqlc/benBD7eYQBHPX54O
Mfi9w4i8icxhGK8mZuku94KpM/iLsF/Y+0X8+z5QM6gjIs47GkIPeg5AtSP1
qwMxIgrGLg20Wfwecvy2iIj8oNic72uGHJdkEfxgnGOTZhCyvadEtAcmaz0e
DUK244qInNy2F08/43zk890Roekq6YmI5Xzkdeuo3uPhu33TOR9FnoiwQ8Nn
VBZyPvK4ThFV3UcvjSznfDj5IRg/wv703RrO59Gm59NmjyCosHx+6VVDQLia
INTy/9ujWUCIdf53redP3NMQ6/fPlBcmyLboMxvZQGLV/zCAOURALPv9ZmCF
INb9t8KTnpgg33KfJbLBxHq/6bPZxQlGWe47kMsEEuv9H1A3t0UTtFn8uUDV
XVtHrP4ljWYXJFZ/FyenxTnuIlb/3WSDCPws+ejbxhYm1vzU0/acP0Gs+TqX
wApMsNOSv83sfHkETrapmgiaz2/kQBL0Vw5v9aX5ncLk3SYY/HWMnO93bNw9
gpSUw3L+FV4RJLnapt6m/chmODIS7N6m9EfhF0HLL7FyvxYxnJgIai88nFtB
+6fwjMBFbZf0hvazh+Ggm8CcmvduPu2vwjeCyaphbja031mszioJ13IuekbR
/iu8k5BRr/DBTy6QhNHBXM/nlB8K/ySM+77fcSXlyxtWp2kSkv4xa10ofxQe
Sii1V/h0mtVBK6HaqPBL4aOEfw0K375mcV4owX2+SeafwksJ+p2XZT52sfgF
S8jcqlP1r/mfnxJ+3OIl8/Uks3eVhCHrneoZfxWeSui4kXOO8VknF17CZveD
Mr8VvkrggnwfF1G+v2Ty9ksoyLKT+a/wVkKirmztdFUJMjPYI+HMkTny78d/
3vo2fw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJw9lX0wVXkYx+9ml2p2NlFtK1pKaseaNsuosfZpkxRCaa01EjfSymu7bLvC
mLaMTFPRm+SlaFVjTYPaJvG7QiJJli0v55zfIW+hkpcNYc9zfuacmTv3jzv3
ud/n+X6/n2uiDt8ZOEelUgVKL3x/XIdPO1hHTQ/Ygob8WpZlsJZrh6zMHU75
OuXE5ObB/acH26HK/eVULF9OHl12uD081Q6FLm6R86ruk6jUpR96fsKB54+u
viX3KsjnR/t33FnOQe6+nviM6kpSEy0PhPu93yfu7akiP0vTDgMH2Rv1K0yX
VxMj7wBbwU36vuEb49zQh6Ta2SbpOz8O8mz9NXxLDYm0m/8sJ4KDkVP2d9MD
HpFlazlT7QQOPFYOrlfrPSZVxiiQg1HHgaSvuupJuN4RTe1lDnal+K7ujmgg
n0nqLAo5mFInjqqPPSUVo2t8Tt7nQC/PyPrirUYS2jN5faiRg/ga21j/D5rI
py31/3l0cuAfFmLMhzST8lpcmIOE2vCx45P/kgP3fpE25mGPyZnNrkXPyeIC
R/H3RTwMWtgOxKW2EoLbmvKglRWv9U1uO/kJ17XmwcjcwEyrjyf6KM+Bh+sp
abcniigpxXGePGTYBKU/0usgQfvw4cH9o2FzPrWTLPTaUPwwmoc/oner0zd0
kZJtH88xT+Sh1Ep4ZqfdQwKl6504z8PkquSA4MlessCiMON1Hg8tgvOeZIN+
cmc5GsJD76anuTEBg0StiwN5SGtJrHvV/JrgtCUtPIx2mJWOWA8RydymQ308
VD+krRtT3hK/roYVbeM8LKz70vPsxDBBN+zmC+Dosj66OHiUSOIkgwXo7+eP
N7ePEd+7KFCAGZtNiwqc3pG5+YboMIy17fA0/GucoLoHzgKEXTrt4Tw1QSQz
JEcEMHRpW+Bh/Z5oJ5y1Tw4RoOHJErdWtykix++wACVN47aZ26aJHJcTAgwt
+6GjzniGyPZmCFD4ovfFmuYZIttRIMC8bWebu79WaeTzlQnwJuriub2hKo28
br0AJruFV5svqDRMngD5JTMF9bdUGnncawEmLhhNL6xWaVTyQ2HgVk4WqVNp
mg/1ma2bS5XPbww1blfrUuX78cEYEAorZufv6ryaXmlMld//Ql6YKvqmm3Ag
heJZ/f9sR4eost+1B1gICqWz+8eCtXRiCo9n77NTNpgq91u9Di9Olfu+v44C
qXL/p5KbccFU8edPSd3Ng1TxL2YRXpAq/rqfOB+md4Qq/q+SDaJKPibicGGq
5OeJ1J6r6VTJV24EFpgq+fsNz5dPwWtc44f5dJUDSSGmUscH87sS5d2jEGjJ
8v0Ox1VScNvC8s94ReHvjGNW2I8riKMmCn6WrD+MX9I+aaxfLoiTLgpWtdcs
sX+MZxRUGjt97OcY4mCUQpC9pYD9ZXyjoLO3ay32OxvrrC2CT1nCOPaf8U6E
nkjGBye5QCIE6l6JRn4w/ongtcbhW+TLCNbJTARqWTOA/GE8FKH8HONTJtbB
RoSi7YxfjI8ieC9mfNuKcXYUQeck4x/jpQhHjzA+vsX4eYlg2XHjeY7CTxFi
oxhfL6G9+0WoXeop85fxVITohm6Zz1vkwouQvYnxm/FVhMah9K3I9zcoL0mE
l2N9Mv8Zb0U44G3jjf8PF9PwESHjFPv/+B8BlnbK
           "]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm]}, AxesOrigin -> {0.45, 0}, AxesStyle -> Directive[
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(LM\\)]\\)=\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(MR\\)]\\)=0.03\"", 
          FontFamily -> "Times New Roman", FontSize -> 14.5, StripOnInput -> 
          False], TraditionalForm], PlotRange -> {{0.45, 0.55}, {-4, 4}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.842664994511427*^9, 3.842665018203937*^9}, 
   3.8426651235445733`*^9, 3.8426651653076334`*^9, 3.84266534085627*^9, 
   3.8426657180205398`*^9, 3.8426657955559406`*^9, 3.8426658391114244`*^9, 
   3.8426661535668974`*^9, 3.84266648008113*^9, 3.8426668319760375`*^9, 
   3.843263357493743*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"7ba05393-f9c7-440b-8795-4cc1164296dd"],

Cell["\<\
Energy flow under different levels of resonance and different coupling \
strengths\
\>", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830563614937607*^9, 3.830563653014323*^9}, {
   3.830564864542782*^9, 
   3.8305648699592905`*^9}},ExpressionUUID->"45d59261-b098-441f-abd3-\
55ac200769b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEngyFlowsWith\[Omega]2and\[Gamma]", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", 
    "\[Omega]1s_", ",", "\[Omega]2min_", ",", "\[Omega]2max_", ",", 
    "\[Omega]3s_", ",", "\[Gamma]min_", ",", "\[Gamma]max_", ",", "tmax_", 
    ",", "\[Omega]res_", ",", "\[Gamma]res_", ",", "legends_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempx", ",", "tempy", ",", "tempz", ",", "temp"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"tempx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"\[Omega]2", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
          "\[Omega]res"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
          "\[Gamma]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempy", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"\[Gamma]", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
          "\[Omega]res"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
          "\[Gamma]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempz", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"varFunc", "[", 
           RowBox[{
           "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", 
            "\[Omega]1s", ",", "\[Omega]2", ",", "\[Omega]3s", ",", 
            "\[Gamma]", ",", "\[Gamma]", ",", "tmax", ",", "unitassum"}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
           "\[Omega]res"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
           "\[Gamma]res"}], "}"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"temp", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "tempx", "]"}], "[", 
           RowBox[{"[", ";;", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Flatten", "[", "tempy", "]"}], "[", 
           RowBox[{"[", ";;", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Flatten", "[", "tempz", "]"}], "[", 
           RowBox[{"[", ";;", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"ListPlot3D", "[", 
      RowBox[{"temp", ",", "\n", "\t", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]2min", ",", "\[Omega]2max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]min", ",", "\[Gamma]max"}], "}"}], ",", "Full"}], 
         "}"}]}], ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "\t", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Gray", "]"}], ",", "13.5", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \
\(LM\)]\)=\!\(\*SubscriptBox[\(\[Gamma]\), \(MR\)]\)\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(J\), \
\(P\)]\)(\!\(\*SuperscriptBox[\(10\), \(-5\)]\))\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}], ",", 
       "\n", "\t", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}]}], 
      "]"}]}]}], "\n", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7846053822554855`*^9, 3.7846054490795164`*^9}, 
   3.784605598651943*^9, {3.7846057057891273`*^9, 3.784605707326879*^9}, 
   3.784607105425058*^9, 3.7846071591201334`*^9, {3.7846072066515055`*^9, 
   3.7846072088704977`*^9}, {3.7846073485014305`*^9, 3.784607358678322*^9}, {
   3.7846074031942687`*^9, 3.7846074260451765`*^9}, {3.7846081647114525`*^9, 
   3.7846081698775787`*^9}, {3.784608241733886*^9, 3.784608244317532*^9}, {
   3.784608460626673*^9, 3.7846084847240143`*^9}, {3.785616705451291*^9, 
   3.785616706554267*^9}, {3.7879741603576355`*^9, 3.78797418085876*^9}, {
   3.787974471115717*^9, 3.7879744759128747`*^9}, {3.7942848432110443`*^9, 
   3.794284846100052*^9}, {3.79428538556993*^9, 3.7942853943046494`*^9}, {
   3.794285534414443*^9, 3.794285540581482*^9}, {3.7942869541667633`*^9, 
   3.7942870173720303`*^9}, {3.794441589763091*^9, 3.794441651719434*^9}, 
   3.7944417740124226`*^9, {3.794441858910409*^9, 3.7944418736340227`*^9}, {
   3.794442348966787*^9, 3.7944423594398193`*^9}, {3.794443129273974*^9, 
   3.7944431708748393`*^9}, {3.794449946979224*^9, 3.7944499565328584`*^9}, {
   3.794522656502205*^9, 3.794522667379118*^9}, {3.7945278354850454`*^9, 
   3.794527846646296*^9}, {3.7945278939421206`*^9, 3.7945278946995583`*^9}, 
   3.794688688573558*^9, {3.7946915190426164`*^9, 3.7946915294018993`*^9}, {
   3.795133645536869*^9, 3.795133698355662*^9}, {3.795133832624301*^9, 
   3.795133837410489*^9}, {3.795994461925544*^9, 3.79599446649432*^9}, 
   3.79599472865281*^9, {3.8225247594397745`*^9, 3.822524775481331*^9}, {
   3.830563701248141*^9, 3.8305639391967916`*^9}, {3.830564199040367*^9, 
   3.830564247784162*^9}, {3.830564294935762*^9, 3.8305643132517457`*^9}, {
   3.830564347745745*^9, 3.8305643502150955`*^9}, 3.8305644748004894`*^9, {
   3.8305645800347605`*^9, 3.8305646186642475`*^9}, {3.8305647303130684`*^9, 
   3.830564773735257*^9}, {3.8305648952560425`*^9, 3.8305649322056*^9}, {
   3.8305650645070114`*^9, 3.830565080795905*^9}, {3.830565212085184*^9, 
   3.8305653562502236`*^9}, {3.830565471678116*^9, 3.830565485600971*^9}, {
   3.8305655810004897`*^9, 3.8305655853355656`*^9}, {3.8305656404900527`*^9, 
   3.830565657479143*^9}, {3.830565710841158*^9, 3.8305657272094116`*^9}, {
   3.8305657604356985`*^9, 3.8305658433335524`*^9}, {3.8305659363739896`*^9, 
   3.8305659370966835`*^9}, {3.8305660128396215`*^9, 3.830566018358389*^9}, 
   3.8305661076293344`*^9, {3.830566357333226*^9, 3.830566363185563*^9}, {
   3.842408760333738*^9, 3.8424087609262753`*^9}, {3.8424089012693624`*^9, 
   3.8424089018399343`*^9}, {3.8424090881813865`*^9, 
   3.8424090897888455`*^9}, {3.842667084395174*^9, 3.8426671272562227`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"6d132784-637c-4b05-972d-968d3fac37da"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
     ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
     "\[Gamma]min", ",", "\[Gamma]max", ",", "tmaxs", ",", "\[Omega]res", ",",
      "\[Gamma]res"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1", "=", 
     RowBox[{"0.2", "Tconv"}]}], ";", 
    RowBox[{"T2", "=", 
     RowBox[{"0.02", "Tconv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Gamma]min", "=", 
     RowBox[{"0.00", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Gamma]max", "=", 
     RowBox[{"0.03", " ", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Gamma]res", "=", "0.0015"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]1", "=", 
     RowBox[{"1.0", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmaxs", "=", 
     RowBox[{"50000", "/", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]2min", "=", 
     RowBox[{"0.45", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Omega]2max", "=", 
     RowBox[{"0.55", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Omega]res", "=", 
     RowBox[{"0.001", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]3", "=", 
     RowBox[{"0.5", "\[Omega]conv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PlotEngyFlowsWith\[Omega]2and\[Gamma]", "[", 
     RowBox[{
     "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
      ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Omega]3", ",", 
      "\[Gamma]min", ",", "\[Gamma]max", ",", "tmaxs", ",", "\[Omega]res", 
      ",", "\[Gamma]res", ",", "True"}], "]"}]}]}], "\n", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7857028921184025`*^9, 3.7857030091050262`*^9}, 
   3.7857031252191353`*^9, {3.7942849169038873`*^9, 3.7942850013941927`*^9}, 
   3.794285072862439*^9, {3.7942855147958884`*^9, 3.794285518887411*^9}, {
   3.794441555530632*^9, 3.7944415556253767`*^9}, 3.7944417056701617`*^9, {
   3.794442436097172*^9, 3.79444243692293*^9}, {3.7945279010815015`*^9, 
   3.79452792114284*^9}, 3.794688688573558*^9, 3.7946932839715166`*^9, {
   3.7951336798561673`*^9, 3.795133680725828*^9}, {3.8225247938549786`*^9, 
   3.8225248317602715`*^9}, {3.830563946642151*^9, 3.83056414799172*^9}, 
   3.830564516376361*^9, {3.830564635531206*^9, 3.8305647125921535`*^9}, 
   3.8305648132468824`*^9, {3.83056488042362*^9, 3.8305648897057037`*^9}, {
   3.8305649450060053`*^9, 3.830565049861974*^9}, 3.830566425414125*^9, 
   3.8305666488319483`*^9, {3.842408677161581*^9, 3.8424086776479197`*^9}, {
   3.8424090053208885`*^9, 3.8424090268240376`*^9}, {3.8424091040317755`*^9, 
   3.8424091389714947`*^9}, {3.8424092572070503`*^9, 
   3.8424092877232265`*^9}, {3.8424094198417497`*^9, 3.842409431104412*^9}, {
   3.8426671390426893`*^9, 3.8426672243599815`*^9}, {3.8426672564023933`*^9, 
   3.842667257032465*^9}, {3.842667500234517*^9, 3.842667531990487*^9}, 
   3.8432660568378353`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"30387ef6-0ffa-48a3-85da-ec0351a36bea"]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxknWdYk8sSgMFesPcuWI6KvRdkVKzYe1esROw9iohG0SgaIRqJRgIIKAoo
XaQX6SJFQBQLAooVsSBSvRC/mdxv45/7nPfZMztz3hu/tjuru3H3oi11tLS0
3NppadWt+d/kx7V/XoLW//+ZlGKAvPy4WciByysg5OPBVal/Swz5XADDrpY3
3TZ5BCA3eDP/ot2ufbD6YU7xwtZLgD9eCN0XpWRnfRMQD+xu9Xlh4HFof7zH
fnn6ISaOCObnpz8ZUF9EvMuQV70bnLSCtqVXvvdTnmPii2HA1+Vd3DvaEn/+
pHRxvqs1XOm7OfdYr6vMvBIYlFhwqrebgvicMecmm7yzgfTrl9N6/HFk8pGC
bY8RBlOPuRDXP9u+ZorL4Pxi5SJtgRuTpww8Jra8GBTlQbzJM+c9E5vYQf4d
ndGb4ryY/OXgFpRsfnebL/FPfYc18uh6HQ46uu7YZhzA1KUAQ9f5PQfveEg8
4VCYQ+ch9mC0cenHzmkhTL1KWH35oMe1iRFwuHbYK03vyNH79UNFfc4+LjXk
cwFMDqg3s2fISIqD3otuhRlPPLQU+OOFUP3inO+Q/WbE0XvE6G7J9RsJmTgi
GBFcbVI/V0QcvX/bqNM3O/Y8E18M0eaXbYK/2BJH706jt6UF69gx80og+Z1n
h/jXN4ijdz3XjDpjAp2YfKTwMzPA1nKrK3H0/j3R/+Af0R0mTxlYBlTYKtrc
I47e13sP/r1J4s3kL4dmq97NPrTWjzh6T3m7cL94xQOmLgU0tIxWXncMIo7e
n/gGj/syIoypVwkOr35Y/qofCbpe+wS2XzW9I0fvEsfDayvjywz5XACOWgZm
w1eOpjjo/XlI4ZMBJcuAP14IV0I/fDBqvYM4eg/bM8bpytIjTBwR1F+xu4V2
/ini6P1EC3vF4z/WTHwxnE17UzXwjpQ4ejcftNRcv9yOmVcCA1J++IwYoCSO
3ovyDv30t7rJ5COFjIk7J1lsvkUcvTtuW57Yz/cuk6cMfJ289/09dp84evc9
aDZm0GYfJn85HBq9a1xLY3/i6N14haVPwKlApi4FKCV1/beWBxNH770SDLoZ
eYYz9dZ47yM1bfMqEpKcpgX8rNL0jhy9V9V/dd6iosKQzwXQ+lmHqUG6YykO
eh/zZUlAgmwF8McLIS5pW+WbJzuJo/fJdtanlwYeZeKIIOOFbrPFr08TR+89
nwUniGZcZOKL4WWiz9NZdpeJo/e9nbRedu50jZlXAtp7wnd8cXAgjt5d75uO
/GvizOQjhUaXOhSP3nebOHrvsPXlzzu/3Zk8ZbDJrT50PelFHL3/du8w2GKm
L5O/HITa979INwQQR+9TDTaUPnn4kKlLAaJRZqv6rwsljt67z2tf7u4YwdSr
hLObVreMio6Cg5c71lvW/JWGd+TovW5pcc8Us2pDPheA3STjc/Pbj6c46H39
7V4njNetAv74mut7mwYZezx2E0fveik/r/0dfoyJI4LJI3t8Pf/Eijh673vS
+9XMexImvhhKBkfnJ1peIY7e9V5/zJasvM7MK4EJy5WdF5o7Ekfv2Q8Hjnw2
x4XJRwpDO4Vbhdi6EUfv5YYTnF4t8WTylIHz+9/he+Z7EyfvCUt8lk70Y/KX
g1HnxH2rTjwgjt7TZxqdONQgmKlLAVOT3zWOTg0jjt6j9z5anGEeydSrhNd7
XpiNCY6GHrX/2F3TO3L03vjid9mtS1rA5wLwCD9w6quBAXH0fnJeRkXb2WuY
8ULYumnVgw6xe4ij9+3tfx+/8dqCiSOC271LJgV+OUMcvQtbOzTY28eGiS+G
ZRNftYswlxFH722LfYeedVQw80pgaPEXfftFTsTRu3ODLYOfLHdl8pFCjw3G
fVzi7hBH72mN3+3vnniPyVNWc1+VpRs0xIc4el/5LbHt1Kn+TP5ySLrWt7Wd
fyBx9B4wuCz/v00hTF0K0O8+v/fSMRHE0fv78IWlRaZRTL1KKOlT7jw79hE3
TtM7cvRetHvq2pKWdYDPBeB7ZlCDEQpD4ug9r3/R1IoN65jxQphR/cYzIXsv
cfQuHZ8492SEJRNHBM0/7Ty7aaaYOHq/d0h7UtxbGya+GLbtqzv4+JGrxNG7
1foho4pLbzDzSmB85ZfBS3rdJI7e+w+f8sx+9S0mHylEFxe4idq7E0fvwTcM
T88b4sXkWXNfN+bwfukAX+LoPS5hXGWuSQCTvxyKLg/0HFQ3iDh6176/pPPN
d6FMXQpovHS6/ai2kcTR+7TM6QndtkYz9SqhSWz6k7J3MbC/5qp/DDS9I0fv
J8sGdn4RVhf4XAAPtpkUTrsxiTh6t+11NuLBZBNmvBCO/Wd7pOTvPuLoPa6p
gaiL5wkmjgjMD7Yw3rb/HHH0HhVo2PBJgi0TXwydHa3s2tyxI47eD023LGyy
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
fHMhtPayv0zTO3JaP1+5f8SyvUOBzwXgG/u0wCd7C3F6P3/wSAefJSeY8ULw
bzDEIHTyJeLofWy3zoJdfa8xcUQwbqJe5MzLN4nTe5sJTde4lt9h4ovhdYst
1w8JvYmj93M2BV+cUwKYeWuu7yU2OjN0Qomj95dZCw0/94hi8pFCH8Udn/KJ
scTRe8uISx1/Zicyecog9sPe3PGVKcTRe24HHQvT9HQmfzlY615TPnqbSRy9
PzQ9e2XewOdMXQo4KHkR4HrnJXH0nisInLd/QC5TrxK8zbUe32+dB6Zba/9o
ekeO3ofPc1AMqhwOfC6A2FLTn9vOCIij90uNdBTw/iQzXggG6al/kitsiKP3
ldPXlMydp2DiiMB3reu1I2NciKP3y+LbJzxmeDDxxVC4rcnaeq19iaP3feva
Ru94F8jMK4HK6WH9XgWFE0fvO2eOnmeeEc3kI4WlFmHHK5bEE0fvk0ceOjhq
fTKTpwwGdemyfoBlGnH03mDu6W9pNhlM/nIoU+6ta53/jDh675lwu6zPnhym
LgU8OtNgwvshb4jTusqh5466XXzL1KuEF6erOwZfzodWK8b5xR/S9I4cvZ8d
Z9B6mPZo4HMBNJUaNN5hu504es81PXBuyq1TzHghjHp1adKw41Li6H1owfUi
ZZg9E0cE40UjWuvXvUUcvd/f0f2Vwft7THwxfK6e+dw/2484rbt4c8fisFEw
M68E/nSYpF21JZI4ev9uULjOOiqGyUcKU88cWDjNP5E4ei8+3PZ6r56pTJ4y
GGwecdp86FPi6H2pwfvVHc5lMfnLwf7DhR/Ter0gjt69yz6tNi59xdSlgHtH
5v8yr84ljt7bVTyz+dI2n6lXCdVd7ljtGfcOgmfp1NE/q+kdOXr/0br6xLvb
44DPBbDDfHgL5ya7iaP3KWFbrp1wsWLGC2HVnJGJpgZXiKP3BT/OWbya4sjE
EYGJY6lE0NONOHov3WmQIfnhxcQXQ0JL/2ydggDi6H3wGpc5plWhzLwSiNv8
/u0D/Wji6H1C48HPC0rjmHyk0KDZYmGsWTJx9P7zdnzGzsg0Jk8ZXPVuumdO
10zi6P3JyyEGtyKzmfzl8LVhxtELNX9vI0fvTvFpP6s25zJ1KcAvcHFVuwt5
xNF7i63jG4VHFzD1KmH+9I6zWzUohC0TagvS9I4cva/68UYsaGkIfC6AsEST
D7sv7iWO3rcOX9X/+/uzzHghtPEo7thl2FXi6P3ktfr1V79wYuKI4Nv8q1o9
T98ljt5P/a2e29Hbh4kvhgeNv414OOshcfTe6caIIadsIph5JaCYNrjbimEx
xNH7s19jzrQQJTL5SGGKS7H1OqNU4ug9qtfcNB3lUyZPGUxyKV8ZOfsZcfT+
Tvk5ovm0HCZ/OZgNKOnnYvmGOHovmO3skFD6lqlLAUNbfNcuMCogjt4F7xbf
UN54z9SrhLp93w2dXfEBWgzysf92W9M7cvTup2N3/tyDycDnAlg65pigSf5+
4ujd9HDzgyu3n2fG1/zex29N0z0gJ47ec4qMPxt4OTNxRGC1v9PuDQs8iaP3
7xUz93bw8GPii+FvkGzFZ+0Q4ujd2uNgofnWKGZeCRxuZh7c8Fwccfous846
+fSeZCYfKbR5k/fph046cfR+6MwqkV14JpOnDI7se7lKP/45cVp3kdWz739d
XzP5y8EmfYRy+vK3xNF7UVv52HmB+UxdCrAd0E06uv974ujd49HDZaFOH5h6
a+7n2+/I2ND5M/fPmt6Ro/fTfqf1t2pPAz4XQN6Wco9zNw4RR+/yTQs6uS2+
yIwXgp3Xp55ZzRXE0XtZpxahhumuTBwRdM8/O+vGNC/i6H2k6bSzXnUfMPHF
oLAWRj4YH04cvd//vqKyvdUjZl4JzJm3+M33yYnE0buHXtXqLLNUJh8pXNef
NRC6ZRBH7/FPWvS6OCybyVMGXSdaan+/8ZI4erdsajn+h1suk78croc2ckrp
kU8cvY8bbHq0/913TF0K+L50Yv5Nww/E0buFbFyH7RmfmHqVcHLIlpuKzV9h
Y8vaC7+md+TofVw9Nx3dZrOAzwWw7US259vQI8TR+48GW8S3F9sw44Xg/DIl
F9opiaN3/RYv6s1c4MbEEYFl8AhD5UAf4ujdoMeimakPHzLxxeA6cuiPwccj
iaP3GXN1AjppxzHzSmBzgfJXj5rfNXL03lHbZOuGzelMPlL4WdlntK9lFnH0
3tQqMGm1Vg6Tpwwql3Wel5j1hjh6T1ylP8hPmMfkL4dnN3Vefuz2jjh6n2+7
LXF3aiFTV819nSJlxjurT8TRu3J7u+EpI78y9SohXbDbr1nWN6i96rd/rukd
OXrX8pvUqX+becDnAhjWYcpm3Y0WxNF7ZH6riYNnSJnxQnja/8uEinRH4ujd
ak7ZotWT3Jk4Iuiy4FKh7XY/4uj93WnjDWt/hTDxxdBuqyz7rH80cfS+dL6d
04eiBGZeCfwNHtj0gyyVOHqfs1f5Z4tPBpOPFOS3n6RdMHpOHL2PjdfJ+2/8
ayZPGew/t/vnsMi3xNF77MOG831EBUz+crjrc3j83qWFxNG77sbS7ssGfWLq
UoAyf1lS/79fiKP3v5IvjcwivzH1KmH1/tfDv4z6DgE/qzKEHzW9I0fv5wxC
fcYOWgR8LoArlmctLqadII7ef/r1bjTD5gozXgiL13Tv6fPtJnH0fsYgp9eW
8HtMHBEkFrcc+7LdA+Lo/dzc9A0Nt0Yw8cUwr9+KcOelscTR+8n8B57apsnM
vBK4vvagScOEdOLo/WZ7k+NGW54x+Ujh4u/S327Cl8TRe5MGYad7l+YyecrA
/P5ev/FZ+cTR+5fdeaMuJr1n8pfDrpMmzavjPxJH7+2OLQiaGfmFqUsBybn9
LvS88404eh9nmnV154TvTL1KmNPt290V0h9g8i5VL6dM0zty9P5ml3BkoN4y
4HMBCGyNF3xdeIo4ep9e/CrBeJYdM14Ie6+s/fHpkCtx+nve+78o3yPeTBwR
POww9sq62UHE0fva3+uW7fOPYuKL4dg8OJFyIoE4et+TPa/bw0epzLwSeP1f
3cU3NmUSR++jtGM6aF96weQjBcv0SSZzOuYSR+9/20Vkf2+Xz+Qpg16LsrJG
D31PHL0/qjutjuOyj0z+ckh628Z24ZEvxNF7A891ZiHnvzF1KcAsZpgkGL4T
p33QF7fdHef2g6lXCaskZ+b6lf/k8nij4R05evca5eO157/VwOcCWJwq6eM2
/Qxx9H5KsKT9+4vXmfFCMB1pPvOu2I04eve4V7RkcX0/Jo4IvDZfkJsODSNO
+yKXtSpqdiqGiS8G3X2pLpvmJxNH709OfDY5aPiUmVcCLa91ce11NJs4ep/Z
OW+u6dTXTD5SSL5eJswzzCOO3tMX5665dOIdk6cMBnSc3M7u6Qfi6P1Et8zH
Tfp8YfKXg1bi33SPzd+Io3ejDr0+Lp3ynalLAVM7iZqNDftBnN7brPw2d6fu
L6ZeJRyO6Lgi0awE/OJrB2p6R47eZzkcN54WbwJ8LoAFig6hrqnniKN3ieV3
veozSma8EHw9vYfvm+NBHL33/Ljv4u3/HjBxRFCaOLhO0tFI4ui9bmKHF0u+
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
C6MmxMy4Xs7kKYOFy92S3jypII7eZ+5cOfLBk0omfzm8c2+3+KJzFXH0PnPn
nWMHllYzdSkgotXydK3Pao7ejxh5OZ/c9pepVwmf518cMyTzL6iW1d/T9I4c
vXeV564LzbkCfC6A/lM8Py6y8ieO3jO9Xg4YWjeBGS+Eu71PRwU4ZxFH73nZ
K+Vu1m+ZOCL4dsf79K9FH4ijd/maI+FD6n5j4oshUPI1vJP0B3H0Xv1oeu7H
CSXMvBJoHircefpIKXH0fm1P4rGURWVMPlLYL3y86EtmOXH0bmvYPVK7dSWT
pwzapWe8tm1bRZz6lNr86TvmYxWTvxxc3PyLBl+rJo7e661wH5Wp/5epSwGL
vi5v9/uWmqN3t6LFw2821JrEr1cJzncKvxSM0JqkWn4VpukdOXoXpge/haH2
wOcCGLcobH5iQChx9D5kVVSIT34qM14I24LOedrdeEUcvT+TfzFIaP+eiSMC
A0j5fXjvV+K0L/J84w3KTj+Y+GLYm2KVfL5uCXH0Ptlp3LC6u0qZeSVw8Xib
q0s2lxFH70aLsoLe/Sln8pFCj+LmpRaGlcTR+5h5lrOuTKti8pSB7dFfIbZd
qonTc9y4dn8Nk6qZ/OXQql7LnEVr/hJH732FWwTLM/8ydSnAakT/sXbd1B7R
+6UzxuJbM9Ucvff8Efl7006tSarPdE80vSNH78u3z88wb+sKfC6As8e+L/b/
9Yg4et8x4b7V2i9ZzHghvIhcUS98QD5x9H50yNHyheM+M3FE8HvCuxbmK78T
R++t29Yb0knyi4kvhlE/ZcUmg0uJo/f3nS4fks4sY+aVwO6l5wzzf5YTR+/T
Hvc2vjujkslHClPDonfXWV5FnP6ev7sp89KwaiZPGZT02Dd7eb6ao/eeewyb
rj34l8lfDhvvdnt5oEjN0bvyw8WPef3VvtB70r3dQ92XqDl6l5ywWtr2iJrT
e9qrG0/PkmtN+vc6R9M7clpf93ig2+KEe8DnArge5rXs7vZk4uh93JLXN+/s
es2MF0Lo+L5v1v8uJI7eBW272a/rWczEEYFwZoJlzv2fxNH7DKU7dJH9ZuKL
YaHen6a/3vwhjt4fmBY2zvYoZ+aVQKKWeZBZh0ri6H3SrjKF0+gqJh8ptHi2
f+2GrtXE0btRa//0VlnVTJ4yyF45ZFfwzr/E0Xv3qkzZh09/mfzlcNS5tNWN
/mov6L258m3R4aVqjt6Pbe/c2f6omqP35DlVS8yuqzl63yBp2C/BX2uS6rL/
TdM7cvS+tWWT+sem+AOfC8B24LL2yxc/JY7e/36f8cI1JY8ZL4R3iT8d9LW/
EEfvDh4efV81/MHEEcE4getDq4UlxNF7PcOoOhM/lTLxxWAQObK++fcy4ui9
S36TgRvPVjDzSsAxLPF0/bhK4ujdbcoa15xHVUw+Uthed5egxKaaOHq/ntHn
zYPRf5k8ZbCvj1WvqDA1p/7zt48djeqg/u+P3k8ueTpKa4aao/c7Bf2Xvt+l
5uh9gKDJtCwbNUfvFVVrPIo91Zz2SZXY3m0WpzXpn+hcDe/I0btxn97FpYsD
gc8FUP5lIxRfyiSO3lPdvca33lzAjBdC8w1Ow1vc/EocvQ/6uu7q1fAfTBwR
bFp3qaNXYQlx9L76kI1Md8MfJr4YkqsVy57MKyeO3rUDFfe+pVYw80pg7oxJ
T3drVxGn/TIp+iMa/6pi8pGCzr0J93Y/qCaO3jMMjYzPLfvL5CmDiJ+PvHY/
V3P0vkzv8sJOvdT//dH7aIltls8CNUfvq19baRkdVnP0bnj4c6iuXM3R+4pd
OldW+ak5eu/cSEcZ/lhrUqbwY01kTe/I0fsW7vfO5wKw4X7vyNF7Ffd7548X
Qh73e0eO3pXc750fRwRjud87cvSuzf3e+fHFMI77vSOnddTc750/rwQcuN87
cvR+m/u98/ORgoD7vSNH73Lu987PUwa7ud87cvS+jvu98/OXgyX3e0eO3t24
3zu/LgX0437vyNF7Ofd759erhHju9373e/rcjS01vSNH7yu46zufC+Aad31H
zl7f+eOFEMJd35Gjd1Pu+s6Po76+I2ev7/z4YljAXd+Ro/cA7vrOn1cCj7nr
O3L2+s7PR319R85e3/l5qq/vyOm+jru+8/OXwxHu+o4cvbfgru/8utTXd+R0
zgh3fefXqwQT7vpuWTtdR03vyOm+jruf53MBiLn7eeTs/Tx/vBByuPt55Ojd
nLuf58dR388jp3OFuPt5fnwxjObu55Gz9/P8eSWwh7ufR87ez/PzUd/PI0fv
F7n7eX6eMijj7ueRo3c97n6en78ctnD388jRuwN3P8+vS30/j5ye47j7eX69
6vv5JTX/8qOemt6Rs8/vfK5+fkfOPr/zxwvBjHt+R84+v/PjqJ/fkaP3NO75
nR9fDHu453fk6B2453f+vBK4wD2/I2ef3/n5SEGXe35Hzj6/8/OUwSXu+R05
eh/KPb/z85dDa+75HTn7/M6vSwFnuOd35PQcxz2/8+tVP7/3V32o0/SOnH1f
x+fq93XI6bsM976OP14Id7j3dcjR+1vufR0/jgiKuPd1yOl7HPe+jh9fDAHc
+zrk6L2Ce1/Hn1cCzbj3dcjR+1XufR0/Hyns5d7XIWff1/HzlEEb7n0dcvTu
w72v4+cvh5vc+zrk7Ps6fl0KmM+9r0POvq/j16uEm9z7uuqM2gu/pnfk7Pt5
Ple/n0dO+yK59/P88UKI497PI2ffz/PjqN/PI0fvD7n38/z4YnjIvZ9Hzr6f
588rgTzu/Txy9B7FvZ/n56N+P4+cfT/Pz1P9fh45+36en78cCrn388jR+yzu
/Ty/LgVEce/nkbPv5/n1qt/PP51bu6NC0zty9J7FfY/jcwHc477HIWe/x/HH
C6EJ9z0OOXoP577H8eOI4CX3PQ45el/JfY/jxxfDGe57HHL03oz7HsefVwKH
uO9xyNG7Bfc9jp+PFBy473HI2e9x/Dxl0JH7HoccvU/lvsfx85eDCfc9Djl6
n8t9j+PXpYBD3Pc45OhdwX2P49erhFzue5xbbG1jek3vyNF7Off9nc/V39+R
s9/f+ePV39+Rs9/f+XHU39+Ro3dn7vs7P74YIrnv78jZ7+/8edXf35Gj90/c
93d+PlKQcd/fkbPf3/l5qr+/I6f9sNz3d37+6u/vyNF7Jff9nV+XAky57+/I
2e/v/HrV398tYNS6oFma3pGjdzm33obP1ettkKN3Mbfehj9evd4GOXp35dbb
8OOIYBC33gY5er/KrbfhxxeDJbfeBjl6X8mtt+HPK4FEbr0NcjpPiltvw89H
Cn7cehvk6P0Pt96Gn6cMnnPrbZCjdztuvQ0/fzmYcuttkLPrbfh1KSCfW2+D
nM6T4tbb8OtVgg+33maRCmh6R86ur+Nz9fo65Oz6Ov549fo65Oi9Abe+jh9H
vb4OObu+jh9fvb4OOXofyK2v488rgVxufR1ydn0dPx8pdOfW1yFn19fx85TB
MG59HXJ2fR0/f/X6OuTs+jp+Xer1dcjRexi3vo5fr3p93X+1YVdpekeO3u9x
62n5XACtuPW0yNF7Ibeelj9eCEpuPS1y9N6JW0/LjyOCHG49LXL0XsStp+XH
F0MUt54WOXpfyK2n5c8rgShuPS1y9G7Crafl5yOFOtx6WuTselp+njLYya2n
RY7eh3Drafn5y2Eqt54WOXr/wK2n5delgEJuPS1y9F6HW0/Lr1cJLbj1tJV3
al/oaHpHzq6f53MB3ODWzyNH7zJu/Tx/vBD+cuvnkbPr5/lxRNCFWz+PnF0/
z48vhtfc+nnk7Pp5/rzq9fPI2fXz/Hxq/p7n1s8jZ9fP8/NUr59Hzq6f5+ev
Xj+PHL1bc+vn+XWp188jp/e03Pp5fr3q9fNpejllx800vSNH70ncfhk+r/m9
c/tlkLP7Zfjj1ftlkKP3rdx+GX4cERzj9ssgZ/fL8OOLIZXbL4Oc+phx+2X4
80qgKbdfBjm7X4afjxSk3H4Z5Ojdk9svw89TBl7cfhnk6P0Ut1+Gn796vwxy
9D6C2y/Dr0u9XwY5ep/K7Zfh16uEQm6/zC3Fo55e+zS9I6fvcdz+OD4XwCJu
fxxy9G7D7Y/jj1fvj0OO3ntw++P4cUTwh9sfh5y+y3D74/jx1fvjkNN+WG5/
HH9e9f445Oz+OH4+Uqjm9schR+/HuP1x/DxlYMTtj0PO7o/j56/eH4ec3R/H
r0sBq7n9ccjRewy3P45fr3p/nHnb2hVYmt6Ro3cfbj8sn6v3wyJH76e5/bD8
8ULYxu2HRc7uh+XHEYEPtx8WOXr35PbD8uOLoRe3HxY5ek/h9sPy55VAa24/
LHL0PovbD8vPRwpPuP2wyOk7LLcflp+nDAZx+2GRo/eT3H5Yfv7q/bDI2f2w
/LoUMI3bD4scvbfl9sPy61Xvh11QU03rU5rekaP3XG7/O58LYBu3/x05ep/B
7X/njxfCfm7/O3J2/zs/jnr/O3L0vobb/86PLwYLbv87ctoPy+1/58+r3v+O
nN3/zs9Hvf8dOXrXav9v/zs/T/X+d+Ts/nd+/nJI5va/I0fv9bn97/y61Pvf
kaP3Htz+d3696v3vfVQbKjS9I0fvZ7l+F3yu7neBnPrbcP0u+OOFsJDrd4Gc
+pxw/S74cUQQz/W7QM72u+DHV/e7QM72u+DPq+53gRy9O3H9Lvj5SOE81+8C
OXpvzPW74Oep7neBHL1/5Ppd8POXww6u3wVy9N6G63fBr0sBj7l+F8jR+1iu
3wW/XiUYc/0u/s2n6R05etfm+tvwuQCGcv1tkKP3R1x/G/54dX8b5Oj9NNff
hh9HBF25/jbIqQ8519+GH18Mbbn+NsjZ/jb8eSWgFfKvvw1ytr8NPx91fxvk
bH8bfp7q/jbI0Xs819+Gn7+6vw1ytr8Nvy51fxvktC/y0r/+Nvx61f1tUlT/
uqZ35Ogd+1nxuQC2c/2skFN/G66fFX+8EFy4flbI0ftArp8VP44ITnD9rJCj
d+D6WfHji+E2188KOXqfyfWz4s8rAVOunxVy9N6J62fFz0fdzwo5em/G9bPi
56nuZ4UcvSdx/az4+av7WSFH7wu5flb8utT9rJCjd0eunxW/XnU/K5c9tQeI
anpHjt5Pcf3r+FwAb7n+dcjR+3Wufx1/vLp/HXL0Xs71r+PHUfevQ872r+PH
F4M9178OOdu/jj+vBOZy/euQs/3r+PlI4QbXvw4527+On6cMenD965BTnxOu
fx0/f3X/OuRs/zp+Xer+dcjRuyXXv45frxJEXP+6I7XLrzw0vSNH766V11X9
Kvm85vm91wFVv0rk6L1Hhx6qfpX88UI467BH1a8SOXrfsqOzql8lP44I2tkf
1B6xwJM4ev/QZZaqXyU/vhgcVto/1a4TQhy9j4/416+SP68EPIOLLzQ/F0cc
va+9u1vVr5KfjxT2275v+1snnTh679XX4sKV8EwmTxm8tYnv3Df+OXFaR71X
T9Wvkp+/HCbHjVT1q0SO3icb2an6VfLrUoCD/r9+lcjR+yPvPO1wpw9MvUpo
U0fWc1PnzzBP1dhO0zty9D7xqtfipq0Mgc8FsOO/46r+tMjRu2v87oAWhWeZ
8TXe3et0qu1Pixy9u6/qWnnmhRMTRwTDrbtq1/anRY7eh/fql9XM24eJL4Yr
1t9V/WmRo/cjX2O8ttpEMPNKQK6MubRkWAxx9D7U78DMqpOJTD5SCFx1y2aL
USpx9G75JkKvqfIpk6cMnjSK2BY7+xlx9F7Y74uqPy0/fzn4WP/rT4ucru9O
N1X9afl11a6zOmX53qiAOHo3GdOumeON90y9SqhIaJg/q+ID9Kp9nROi6R05
enfsJeo1zm0c8LkAusz5erKg6W7i6H18z8r4PBcrZrwQevVfqupHjRy9N1vi
oupHzY8jgtGdS1T9qJGj9wAdY1U/an58MbzbfE/Vjxo5rbfJ26XqR82fVwJL
31o8D9GPJo7ezZz/9aPm5yOFKcNDuiSbJRNH78aWSap+1Pw8ZfBSL1Cwsmsm
cfR+3mioqh81P385OCRnqvpRI0fvdw3qXanenMvUpYCzr/71o0aO3tOLx6n6
UfPrVcLfK+1U/aj/1P7bjzS9I0fvJ/p1VvWf53MBnB49RNV/Hjl69/sgCvZy
PcWMF0LAFRNV/3nk6H1trouq/zw/jghchzqp+s8jR++TS1ur+s/z44uh7i3B
1RvZfsTRe/ennqr+8/x5JRBh5rO0/tZI4ui9Qjtf1X+en48U6mT86z+PHL33
MWw3qV/PVCZPGVy2/dd/Hjl67xX+SdV/np+/HMrOBzSs7T+PHL0LG31W9Z/n
16WAnAsLVP3nkaP3lLHZqv7z/HqVcPnyJVX/+eTHtX80vSNH7x723qrzJvhc
AOndTFTnTSBH71eyS1qde3+SGS8Ej7kFqvMmkNP393frxe3nKZg4Ijiv66k6
bwI5vaf1dBq3foYHE18MjaNbqs6bQI7e3+2fkrnsXSAzrwSatk1TnTeBHL1/
sxqmOm+Cn48USkObni9fEk8cvX8e9u+8CX6eMjissJ7W1zKNOHrvsfaY6rwJ
fv5y2HosLuNS/jPi6L13m7uq8yb4dSngqPDfeRPI0fvIC9Oa3Lr4lqlXCea6
dWQhl/Ph5rTaTpaa3pGj98BpT1Tny/C5ADqPTVadL4McvXse/3e+DH+8ELIz
tz7oMuUScdontTrHtPZ8GX4cEVRMfqQ6XwY5eu+nXby69nwZfnwxlGRYqM6X
QY7eP5lkq86X4c8rgYlpGarzZZCj91arH9T50SOKyUcKefXcVefLIEfvEdWK
C9rPE5k8ZfC05N/5MsjpvAmfRqrzZfj5y6FzjJ1b7fkyyOm9jdGT6bMGPmfq
UoD7OAdz/5rrAnL0nqrj2nPfgFymXiWcPv7vfJnDtcNeaXpHjt5HJF1UnSfF
5wKY2urznY8nNhFH73YFRrqp6RbMeCFMPFcvrvY8KeTovXCwi7L2PCl+HBGY
HDm8tn0fJ+L03mb3PtV5Uvz4tevntxkWtPUijt4XNXutOk+KP68EKt5sUp0n
hRy9H39joDpPip+PFGz+3FWdJ4Wcru/Lt6jOk+LnKYNxBl9fPl+STBy92zpG
e3+dksbkL4eE/jdU50khR++v432PLO/9jKlLAXrRK1TnSSGnvoWf77o+SnvF
1KuElyd2qs6T+lenpnfk6F1WeFt1fhyfC2Du5Firl/s2EEfvytly1flx/PFC
qCywVp0fhxy93314X3V+HD+OCMI7TXX+luRAHL1fGmemOj+OH18Mf6pWfqg9
Pw45evczXas6P44/rwSefO6pOj8OOXpPv39YdX4cPx8pdNwQpzo/Djl6z24H
qvPj+HnK4Fxfd6s5ZYnE0Xt+/X/nx/Hzl8PXpm7Tj1ikE0fvFUGXVOfH8etS
wAPLX6rz45BTf9ow7XZS6xymXiUk33o6Ov7Da9BVNb7R9I4cvdvVKds6908f
4PMa7+O7Rn6ZvZ44es/ZesDzabmQGS+E+eUi1XmRyMl79jCv2vMi+XFEsPn5
3ixjc3vidH1/99Dj1wUXJr4YjJID1tSeF4kcvctyjqnOi+TPKwGl9SeH2vMi
kaN3cWGe6rxIfj5SOFeUqTovEjn1q9zhojovkp+nDNace686LxI5fZfJ+Hde
JD9/OXw4/e+8SOTovfjcv/Mi+XUpwPpGyo7q41nE0Xv/xs3rbjz2nKlXCd1b
NjH/5fwSftceC1+i6R05eh9S9UV1PiyfCwA8Wr+2aL+GOHpf/2W66nxY/ngh
fG6w+lLIizPE0fv5pjO67L0uZeKI4Pukl3G+exXE0fvBDh+P1p4Py48vhhX9
XB0HSO8QR+827dxV58Py55WAXtoS1fmwyKmPWRfX3SsHBzH5SCEr0kV1Pixy
9P5gxeEnrkuimTxlsLwyTHU+LHL03iHyo/hFmyQmfzmYd/t3Pixy9P4oQGgo
GJnO1KWA8L3/zodFjt79wq2Ns5TPmHqVUC3z+DP18gtIqj0mukrTO3L0ntji
reo8aD4XgHyKh+o8aOR0X9fIp0dVg4PMeCF0tbZXnQeNHL17HwTVedD8OCIQ
fyk7X3seNHL0Ps8y3vd3shMTXwxN++VMGPr0NnH0XrAn7fGc/HvMvBJoXH+T
6jxo5OjdvcHtM3orApl8aq7vy3upzoNGjt67nO+iOg+an2fN3/OdDVTnQSNH
7xP+DrbV75DA5C+HXs4PZd0Mk4mjd9A2Vp0Hza9LAaLzF0deWvCUOJ0LXPjv
PGh+vUro0aB+H23fbHCsPTa2wVsN78jR++Wjpjf2resOfC4AA/kJ38ysZcTR
u7xioer8d/54Ieg3N64eHX+KOHof0SJS/8E4GyaOCDoJmqvOf0eO3juubXr5
gLMjE18MIXGNB/wdf4s4es+7mulQe/47f14J/M17mVc9xYc4eh/fVJpm7BjA
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
hiTxzte862l/18XhzdfGr/u+o6fCcNrXH1V48zVw3nW24+TuhSjjx3vNWPZa
ZNd93nwNvJvO15dk48pE9t5FDn2d1sCbr4HzrsvpkTTruy8FSQjLvwF5/Zw3
X6N/Ol8HzF1U5704Djn0teAQ3nwNvIrO18qlGZP/K05nxWNCDDp58zXwJDpf
d5nWlSWpPUOO+0xK8+Zr4B50vp6/UEI1+l0JK35zYvAfb74Gbkjna/eEeoNd
3yuQQ19XDefN18CV6Xw9tUppSlV0LWu9tmRfD2++Bv7/Xw9/S+/32RNZ247Q
wBvv0B76WnY8b74Gbk3n6x2b9WuHyTWxdHMk64bz5musE27dORHPCIVnjYKf
kUNfd/fy5mvg2nS+9p01V7yz+htLZxdidI43XwNXofP1qrtuwvIbviOHvu6g
8zVwOTpfT1w3MWz2t1ZWXtzIQnXefA18PZ2vB4gXiqw2bkMOfb3EiTdfA19E
52vTlri0wuZ2Vh49yQhp3nwNnJ/O10cLKw2KNnQih74+4c+br4Hzrpd6kcGF
wvoHtLpYefcm3nS+duP+ff73fO1E718vluJfOFEUOfT1xhW86+HAu+fy5msP
V+OG2+rqLHst8u4973o4cMNi3nwtsCAh5Vm+CXLoa8eNvOvhwI3ofF1aLbVF
IsCZ5d+AiPTwrocDXy/Cm68NZcfkjZvmixz6em4t73o4rpfO153i2p2/z4ew
4jEhc+7zrocDr+LWpykR1u0eZlsThRz6+uA63vVw4Il0vtbYaT5ntvBTVvzm
5OpN3vVw4B50vp79a6TqEY8M5NDX2uN418OBX6Hz9RyPWbtyrPJY67Ul/Ja8
6+HA2X0NXJnO15tWvrvyULwI7XE/Qy/e9XDgd+l8vTxEQmqJ4EuWbo5klQjv
ejhwazpfa4fPOrZHpwI5fl/4Du96OPCrdL5WXGRSUj27mqWzC1HL4F0PB65N
5+sxRaPPr/2vDjn09U96PRy4Cp2vn5+/rvvuyTtWXtyIjCbvejhwOTpfJyvk
fMk89h459PWwYbzr4ViHdL4e0PRAbqbgR1YePckKHd71cOAL6Xx9//UUg+yX
DIe+Hryadz0cOD+dr03l/1x3MPnGyrs3OUOvh/Ouk0Pe47jzdWpn0Qbg0Nen
vHn7riM34/EPhSxO+9p+Jm8/duR0vh6yuD+Hvh74mrdPO/AkOl9LVvfn0Nej
dvH2bwduSOfr/D39OfT1xve8fd2Br53N4wkf+3Po6590v3fgvZQLz+vPoa8f
0n3ggVdSLhvWn+P5mu4PDzyBztcjs/pz6Osrl3j7xgN3p/P1nsv9OfT1M7qf
fP/8su9zvaX38W3Jlyn97aGvtW7z9p8HHkK5F6c/h762TubtSw/8LuXvU/pz
6Ot7Yrz71MCtKJ+5qj/H79TQfeyBX6U84m5/Dn3tQfe3B36a8quq/Tn0dSvd
9x64Cp2v66/159DX6XQ/fOBydL5OntSfQ18vvMK7Tw18HZ2vRQ37c+hrZ7p/
PvCFdL4WsOnPoa/r6b76v7lz99+6beTN13dqi5/ZhvAjh76OSNSLn+w7G/lV
Md58LV8eYWF5WYFlr0WeKAstyY5QZvzT+Xq98y+xYLHzyKGva4eqmI3wuIQ8
oYI3X3efTt3HUTNh+Tcg20NGJC37YIbcwIA3X4vGnb+R8dMWOfT1saraoNwJ
DsgFrXnzdXbs4pWZUq6seEzI29GE+7wZ8B46X08VrfgidtAHOfT1hDXui5VM
7yN/Q+dr2TWP9koN92fFb040izQ65559hDyeztc95rNOrIsPQY7XzQwdbx47
Gorcjc7XY7vMBIZsi2Ct15bUG0nV7paMRM7ua+BJdL4+cyPK63VJDNrj3+G5
x9yXfIpFHkLna91hN1ITuhJZujkStQMXuM+bAfek87WMU2r+s6ZU5NDXzpKd
3OfNgFvR+bo8yC5bfFEmS2cX8szE8rBCG8MN6Xyt/CR1sWBWDnLo673aG0us
/XORn6bztbqm//70jGesvLgRq0WBW0bEFyBXofO1/5X3TdVji5Dj+xqDjglt
cmb4djpfTwyaGDxMq4SVR0+SrWl6Wqmb4evofO0S+nTX6G8vkUNfp4nznjcD
LqLHm6/n2tYoTLn3ipV3b9L7eGmggAzcJ60jP21483XnyJjaXoOBDKd9LRcv
Tmoe8yHnXWc7TqoFhpiembiRZa9Flr1I8G+slEPOuy+mQ1YFn7FpnqCGHPpa
2XMV9/lw4D10vt4hHbw2o+siy78B8So7GNI05yry+CLefC0s2i6ucMIEOfS1
8+3wlr7nw/G4a3nz9Sb9i2+8M61Z8ZgQO19v7vPhwHn33UzJ1uqdTYY2zsih
r/NbI2RnPXNl4qTz9VKFtOTHNZ6s+M0JZ8yO43xh95C/ofN1tNM0tZnivsih
r788luY+H47rovO1sd3BYs0Fj1jrtSVpwY7c58OB///3r+vo/T57ct3RXWVJ
RQjaQ18PcVV4X5r1BHkSna9XyT0N+h4QztLNkYSNN1w7QCESeQidr7M3FHfz
HYhGjvsWagUfapWIRe5J5+uNe++MkLwYz9LZhQyYffxS3/PhwC3pfC1Q5TNW
clAycujrXfsNuc+HAzek8/Uym5kCgzhprLy4kdH7BnOfDwd+ms7XRy01p6fI
ZSKHvs5OW+5393EWchU6X9e/LjZdsTOHlUdPEqJUW7SrJBf5djpfLywpdR/o
nI8c+lrR8t7dyesLkK+l87V/664gD8FCVt69SYY+7/nwE9y5+2+f3uPN12+d
sxcUJ7/bCBz6moySsz9vNAjtu4V58/Wmz9tVY//MJf3ttciWzP/kg6QJw0t4
83Vufn23eqI8cujrcZyEG3s/qTLcgjdfZ81O2/qq4QTLvwGZKFLKfZ8LOZ2v
32jK/JkXr4cc+tov6BtRm2iM/HADb77ONN74snqLCSseE1LArz5k8t/+Q76K
N19vKpV6JTPdCjn09fl90yYWTXdguBlvvj5zeqSfv5MjK35z8lAgp/xc1h2G
0/n6VA7fkWOX3ZBDXw9ds6Pl3H4vhtP5+qZkrXyL/D3Wem3Jk3Pfb7877ouc
3ddoT+drP+OgK6KGfmgPfS2TPaK2730u4AV0vn5sxNki1PCIpZsjGbd3YmPf
+1zAk+h87Zn4ffCGshDk0NdZRg+473MBD6bz9chjHZ4hS8JZOruQMFF1uTmn
IpF70vla5ptBzJctUcihr0ctjOS+zwXcks7XIsEu+1fej2XlxY1ISle//qKS
gNyQztehed/rIjUSkeP3iY6Hc9/nAn6aztfekY/GPtBJYeXRk1wddeDCkT1p
yA/S+bp1yd1Tq78yHPpaae9y7vtcwLfT+XoJifmcpJDJyrs3SW8X5L7PNbZv
++TXVZSrkjM7pqqnx06l30UCrkM+vq8apCK1nX4ni7EfFNEiqHZsKovrkEbV
NytD6mUJ97RYVEV11icX9/14FnD8JNoDT22LUVssznDuz9DfPtqoZXrg9GdT
lj2HRGrNcU5pskFeR99zXDdN6FzuW2dcF/hZJDdPxtbODNcFfnxmqopONbJF
P7K0bgcZSXwReX0f+Sp63pl+bWvOnAv+uC44bm3POeuCyS5oP5v+Pfn1wfGN
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
mPrB9xE6tswR+lmLHOxT3kSf2mNXTxL7HofnMHUlXZdrV6CoSHq479szXFhi
s9BJkf0sex0y/YjYkYWa18geqjPofy2AdG54lIv2UCejv5d+qq5zIPZ9jzfa
MX7uzb1js1b7OuoJebn0W7L8dlkhEeY+oMb4sb9R0rt4kSP6h/xKNR8oc3EI
Ilepnpiv2+nT4l6WsOLhkKMpBuU7P0ciB/0VLQKe8K1JQg75KqpatsE/rQI5
rFdUrnOTl2Ie6gbxfG21PX30cAjaw7o2TL1iriVRhLpBftUy+X/09FahPcS/
vHl9nrPMS9QN4p8/QsXJMT8KdYO8i9zna0sKf/tP/KU0ftATf9+G62dfLWLW
C/HIfhquFBBejXpC/Vz/1PE5ppWpHzhuaKpjl4VBHXKwf5pgnPVydQM52fd4
jitTV6K5o0xMlx8gD/sut/sx3PjcQaPNYsosex1SJ59l+1LJmO4Hwej/LiFZ
WnLDM7SHOlHJqdWPuO9E1nNfNGL8DF9QICrxxRj1xH0G/A8v1xhUTLjbEHky
fn7uVrpJWp3QP+Q3QkJ3wQOJx2Q+1RPyNWfcYfOkpJeseDjk7pDOVK1f0chB
f8cleRNXLk5BDvlq8v6cOk6mEjmsN32776f1gwtQN4hH/c6+9WWKT9Ae1jW4
wTs0uqUYdYP8zsn0mba+pBbtIf65W16sUVQrR90g/tJBd/d9+BmDukHed5pc
LWyWqv8n/s80ftAT1ttY0XqXvGbWC/E0pG/pfLHzLeoJ9aPMF7A114+pH3xu
aml+UfmMd8jx/axlie3nhr0n47k3Dpm6mlJ1qbeao0J29f2ZH8XwIT3P4+wz
DrHsdQhnu7/iOVET8oDqDPrXV8x+O0G8EO2hTsIMQ63MHrgQ7vY1YYyfxWVZ
819UmaCekBftgdNqbpSVEO42IyGMH/E4cTXbgXfQP+R3Z37PyUULw8gLqie+
v3x3QkPMh3JWPByif6j5xMADccjxOkNXkLLAzjTkkK/q8tnCCwRrkMN65Trc
x1cLvEDdIJ59Cw0mShwNR3tYV3aEt7jM+1LUDfL7PsxOVfNGHdrjc8WdiSeG
/f07CnSD+PkdvjY/N4lH3SDvfI5bZvD/fvdP/HU0ftAT1lu5L6dxZRSzXvx7
8l2BmXlzHeoJ9RMpnu2eeYOpHzhuxj2Vk+ktDcjBfpG340PPwR9ovv/n77SF
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
mHf9A3LQU0x3YvxA62bkoL9UzO01mdd6kEP8QypfrpmS3Y46QDyixsHbL21s
QHuI/6D0QKW3E7pIM9UB8nXb/1Zv0IletIf4D6xzawlq70YdIF8HWwZl5M79
9U+c0qw48Tnk8ZfWNYX1oj64r9Tze9bSGYwf8K8mekZGKpjhYG8/6UPREoPf
hLuNhxeTd5X/qupdbT3pfiP/cx5c+y37eMg9lr0OuTZNT39YZQJyfA909WZF
zdxCuq8IY69UrmXd6P6U7m/D6Jn8VUjo7bBuuo8N40f3k+WSiIVF6B/yMrTn
dc4OlUbCPV04MDqverRcYMPxn6x4OGRSXr2U3dSvyKFO3k5oXvFDpBU5vnf2
5HqGYVkn6gDHvX/1it7mtA9oD/Ffzdt3adDbbuQQT924sfnxN3tQB4hn2J+Y
X+OcmlEHyFe1WlqnzlImL1AP288eXBVb2Iv6QPxq9dpvpucx8UOdkLuGM4YX
/UJ9IO91pjkBjuGMfzjuLWL8aL0Pw8F+TOfBc3Xb/9B9bJh6mPnmtAGfiy/d
J4ThA/munUqLesiy1yFtAa9ffKlPQz1B5+faF95bbutGe8i7e/jGqcumv6T7
hDB+ur4cCZRrzkA9Qf8/5YPHCMT9pPvSMH5GR0xMi15Zhv4hj2531BUG//lI
dKieeL+seOj2gNoeVjwcYjKz7EXFyO/I8TkN/eUVeg5tyCFfkfZdwms+/kIO
67VvlYu4E9mNukE8TtndHxrLvqI9rMvkUPvIzos9ZDPVDfL73F1s3ybz32iP
+yAt1Xz1tbQXdYP4M62v8lXtb0XdIO/1qwYO0R7955/4o2j8oCes15NzZ3rJ
0na0h3iuTbpoXPH0N+oJ9dO8VCC1xoDxj98r8b358OQphoP93rrSouXtf+g+
NkxdjXC7JXjteSDdJ4ThXvECw9ODQln2OiTpW/iek3tzUWfQ/0VlqdqClp9o
j8951h84r6rzhu4Twvi5MC1RY6zqM9QT8qLsOqWKiPTSfWkYP4ECTnMtWirR
P+S3dJXPwo9CzWQa1RPyNeP8jSsls3+x4vk7Nz3e5ups+wM56P88ZMe0k6Ud
yPE6w7rJfzY++40c1ptwpSFPXq4HdYN4QnaLNphafEd7WNfiWdtmj0zvJV+p
bpDfca9jzq/cw+QFn7tbNlVtwvtfqBvEn/Z9y+/i3DbUDfKeFFGTLJz855/4
l9H4QU98vyya776AaifaQzxTj5387WT4B/XE5zZJ3sVZYwdsAnt8X6Nz6WWh
IQwH++crpKPqJQds4u1jw9SV6e07/COPR9B9QhjeaDly5JuhMaS/vQ551Vs6
9XBkEeoM+m/Yf3T1UZletMfrnAZdPzwk6+g+IYyfw89NlfmLS1BPyIvk7fuH
5Xf9ovvSMH4+HfLWb1haj/4hv73fQ1x9hVtJOtUT8mW/lW/zf0K/WfFwiN/g
5+Mla9qRg/7riyZOHpbehRzyNVt34+gjen+Qw3qzzK0VjP/+/Qm6QTyqPa6f
Tzf9QHu8rxTlNGd75i/iSnXD9/u8lt1Y+oHxD/F7mnw72xjzG3WD+JNzZ09L
rutA3fD7HbaVfE/nMvmF+IVo/KAnrHfg4S+Vp0W78bgQz1iPb/9X15XH5bS9
30zJ7JqnuEhlHkPCKTJPmechY8IrMiazeqWSBhWRZiXRXFIaVVRKigwlU9KA
iEqq3/327vVsTp/f/c/6rPucZ6/n6bzn7LP32hbvm8hpQk/0j3PG4sDrc3h8
XDckpbb1DIHj4Pdurdn61245Tdn0Ku+rz4O3n1uiFcH8RjjuWNxneOD1e8Lf
fIkQt7LnNsHmKekM/bUal2TcmVxDfPSJ3YHwnlcTPzAfEh5ns+blNXJvckhP
1OVRzI5Llcq1zJeGx7H0/rw24GYBxUd9i3Njdw/eXi7sZHrSvNCrKaXN8mtF
+UiFufmPPaURFYRD/7X2O1peU/9FOOrVuyb7YmFRHeEY7z6FFRb/GNSQbsgn
8odyzx1uP4iPcfns6+SofrhW0GK6ob7xY3KT/AbyuiD/70k6zR/PqCPdkP+g
EWul3bZUkm6o+04vb6t/lvI4yL8Pyx96Yrzd7kUkyx3j46X3vn6jWtiOkdOE
nuifWXdvmB44zOPjuvebHjvTUo/j4B+205Y/aCOnKfO94X0ledW2zWW3WOFv
XCJMVzDcsvDwK9KT3u9UNnaMelFDfPSDb9bZYQ+DP5E+0PnZOeurp4NqiY+6
+F4tMQ+q+CF0YTpQn1TuPPdrfZ0ovlRwOV7d5FVpJeH0vWPV0o2FfasJh87r
rxsbxXXl40X+zwP/7fK2gudP+xpKHrg/fVcrFLPx0j6Cgi5KzrN5HOQ5ceEu
m+grvB+gf0dVt7DYfZz//+VD6+4qvaOqdOQ0oQN9l7GVW9jMkfMRX1+5x7y8
4xyn9VErzna44SWnKTv4NZ/qe6hpdPf9H+PZ+hOOu0286FoQEyf8zZcIc/tt
XNVyyGvmb8N1i1ljrKnds5b4qPu90Z7lVouKmf8Mj9Ml7uX9qDZ5zMfmj/nk
WP/EjhW1bD0GjzOzmfmrfaVFFB99ssEj/WBr059C/ePDd65/iu+Y0iCPOlE+
UsFuQpefFcurCKfvMg+cVmwzqCYc49JL+vL4rVIt6YPrxgx28d/Z+Sfxkb/B
AcH4t3ydcJHpQ79T7uNChRVcf+RpYqrUNTS8jvRBntt6375p0quK9KH5yf7J
bq3P8Djon2X9bBd2/+/3C7rRPtlfWmc6rOTjovc+t7Zvlq2S04Ru6JO5V2K+
Gnvz+Lhu2o3x6wOlHAffZsSZdXP95DRl/jC8f3ax+4ZsnQzHR1Rt3f80757w
N18iaLP7CXSG/icU7a6faFRLfPSDN7ufyAbM47j1Ld99YdALQZ/pSfPhritW
Rn+vZf8/j+Pvtqgk5FEhxUd9b7D7D/REvX4OXhsZ618nykcqXGX3H+DQ35Xd
f4CjXuvY3ztwjPcZu/9AN+Tz3ESab3ivnOLQ+nB2X4JuqO/Pn8cL2y/m8ZH/
BHZfgm7IP2a4Qb85UytJN9T9u9+5FmdO8zji/KEnxlswSt7DNPcX5Yl8zNh9
DHqif1JL5pw47Mvj0/c+dh8DTudLsvuYzDeJ91UJey6SrWviuKXKz8unr4YK
f/P5cxF0hv7nbLtYjbWsIT7NT7LnIpmvEY8zyWyH8ql9WYLA9ERdsrLnOlv4
1LJ1PjyOkW0Hx8VP31N88XMR9ES9PP9d2M7+TJ0oH6kwhz0XAaf1Kuy5CDg9
x7LnCuDi5yLohnzMsp723OT9jfji5yLoRvtNRie4fZ7A6yJ+LoJuyH9kz2NX
5cN+km7k49rkZ3cVQx5HnD/0xHjtW9pOnZBWRXmKn4ugJ/pn9crUpJ6uPD6u
m8iei4CDb8Sei2R+RLyvTNh7n2xdFscNix1mphXcFv7m8/c+6Ezn1JyvbJsT
+Zv49P2FvffJfJZ4nMp05+7tVz0SOjE9URdtvYl9z3WpZeu4eByfVy8umxjn
U3zUt4a990FP1Ete8lvq37tOlI9U8GTvfcDF733AUa/+7L0JuPi9D7ohn4jI
+TM7DvtKfIxrO3vvg26or7506qMHbXld6Pxl9t4H3ZB/k+h07zr3ctINdW87
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
AzUPt/dLIz7iTxbSUiZVJREOfm2b3OfrNFKZbxLvk87JaZfuXRzOfG/+mDcw
bzdKudlwEV8iuEwIHvVJbR3h6JPiki67O3kdEFrUT+D+cX/bMLks0Hst87fh
/JLjsdYndh2gOPR7N32feVstG+ZrxHXWCVeZvbMwQnRdqTDPs0vsx8+XCae/
x+ft9m0PcyMc/TC6un9pM01/Gi+uWxvnq3bnqjXx0Q+6Cy/1r3EPJhz5ZKsN
UPF3u0PjRT5HfbY+nbCI50P+Y1GBw30XRJMOyLPDN4Oc7FM8T9R9qqm0nXZp
HOlA54ZYdi7plZNCfNR9dc4Ubz/TRMLBf1Z8sqrwzEPmY8Pr26H/+CHzMoYw
vxqOf8wY1W2dzhARXyKYVtrId3q/mnSj+/YUx8RotdvEp/e+D29vpQ/eL+TV
+4TwON3i2o802rKa+dVwnTtNORs0vG8w86XhcTLlSjtUVeyj+KhXl/uLYzYu
sCY9UZcDYcmpxfPuiPKRCroti7eVHL9EOH1f1hxy6GuQK+Go16l2d+2zjkYR
jvEajZYu+xZ4i3RDPsEzPJ6uu3aB+OSzMS291utgEOmG+o4dUJTepG8c8ZH/
g48eRuaq4aQb8g9a883Oo8SRdKN1d7mLWn0tvN8g/+Msf+hJ80U91H7nneLj
RT4RKnsbDciMJT3Jn7Nd9Oalg3j/4Lqf+6e9SR7Nrwv+sokbS3aUJzO9eF8N
qRgY93PpIOZXw/FBu7+pbH8/UMSXCCrOugvvJ64knaG/c8XYjePP+BEffdIx
8E17mzRDIajeJ4THCcwyqcxYspL51fC6FLQcHvHsZyDzpeFxmvpMGXjwqiHF
R31zv6qURiy9QHqiXqHnj37plRsmykcq7Irv7LlO1ZFw+t56rq1rh/suhKNe
ad8utXqad5dwjHdElL3i9iZ+pBvymana5MCD81bEx7iiV+S7/1ofSLrR+Wvn
ltpEdoglPr1H+DUOTcsOJd2Q/5WICGdTNwfSjdbdvd26I8IzoUH+KSx/6Inx
KnQSVD458PEin9Lt/ZaHpMSQnugfhXEDPXq58v6hdVk55S961sUTTudFppQd
lDuTxHxseF8tmXU6waGXKvOr4fhyc+NLFmEqIr5EGG9hebfqyXLSGfrvOd4/
qKjYl/joE+H28Axnw73C2XqfEB6nddnRnbq7ljO/Gl6X32N6O2h+DmC+NDzO
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
ri0GJ1Urzfxp3R3GNVLjcVX75SEN1l+FsvVXiEM+D+omo2dPjWf14PmfzHl8
euS8JGEUm+dHfa8o6Ix36LSE5ueR/9aRma96KRsQn/ZFRvo1M51mR3yMa1hF
tzAVgyv03YrWtxhJtfu+v97gO0Is+44APvLPSSp7E7T1Lj1HoT+L/t2Y4ZnS
T4RLBMtf963Uhy0mnPYdJ5btu5ItIRz9GWipEfql7JyILxVa3H+s5/HRlnCM
y/VLQht1DyfCMa7Oci07XnlynXDU68ypXv+s6tTwOXMWe84EDh1UjJa88fAL
JRw6VBxz/Gm9mOtA58DOq35TMb7hc6Yje868xJ7rSLcm+0Nzfw0X4f/psi3X
68STdYRDN9+Te6xqlh8kHLod01yvtSfaRsSXCopN3NxOXnEiHLplKmrkaGm5
Ew7dVvnvbtcr3J9wmudhz7HA6dyfFX2rUvUiCKd1yyb7j4wdFEM4zZ9EG9js
OMV1gG7X2fMtcDrPdMDinDErU4S6+v+4bnahS1u+0ZokwiXCmqbvg0+e1Cec
3gf7Gx7qM+4U4dCteOfa6d1NnER8qRCw6Xa3pfoehNO+BserNU5ONwmHbjbs
ORk4dHuYXB4/qHMM4XSusZmiiVKPBMKhm7vup0/WXsmE0/kL62XP1cCh24TW
yZHGsY8Jh27Hzs080u5dlrCFPfeS30VQfL1/1N+4ROglX9D1RfNDhEM31Um/
X2p/tyQcuvUt3LLYVMNLxP/v/tPl9vzSy/6EQ7e2b6x9bAzCCIduW5euWPU/
vybg9H1hRQ+jbi8eEg7dono0OTA9JYNw6JY1V/Y8D5zOOR1YFxOQmEM47etR
WV7vjwQcummHzOiv0f6NkMKew6Fb7pzO55Le6IpwiRCx0rvo+jgp4dBt4rr8
g3f7OhEO3dard/C9fi1YxJcKumsd1kQMjCYcus2wvTVZbVgi4dCtoOeb2tDa
J4STb9KO5x9rDJ4TDt2asPcU4ORrtNctZHT1W8Khm7rb5OG7VhQQTj7GLTV7
b477RDh0287eU0ay9wLoNurkwC35Ew+JcIkwfcCCXpusLxNO761Jc7TCV90m
HLo5Pv0pr2mYLOJLhS9mXz/dP5hJOHS7Enhn8QiNF4TTfIvBPrWU8QWE03Mm
ew8CTvvsUkuHHYv/Qjh025M+ITpf8Rvh0G2DdbuguQPKCSefUvZ+BBy6Fbx+
f2uDXYXgwN5T6Hul7u2CxakOIlwiuHVzmZXvF044dNtRFhVok5NKOHS7dNx3
1r7J70V8qeCsGe7d9GMx4dDtXIjP87YXyginc23YexZw6LZqdcTsPYZVhEO3
riXdJnzoW004rWuKVtpvZPSbcOiWyd7LgEO3dhku6VlbawmHbmpHjp3q1bVO
qKm/73HdvJpEd9//MV6ES4TwvhtXtRzymnDotne0Z7nVomLCodtsj/SDrU1/
ivhS4dSELj8rllcRDt2uP3Basc2gmnDoppv05fFbpVrCoZv+AcH4tzzPn84L
M1XqGhrOcdKNvQ8Cp/2Vbm3fLFvFceiWemP8+kApx+mc1hFn1s31k9McVZ8H
f7+YsTFmUJHTZeFvXCKolG4/tL/oDuHQbWOY7Jxu4NBt3e8xLiXb3ov4UqFo
fnB8aHUx4dBtPTufGjitCzVJGbtyfgXh0K3jvrjzjbdWEQ7dprH3XODQ7S7r
N+DQLfXHy+5NTWsIh267vZY+6r++lnDolsvec7f8dc7dOqF1gt8Fg3FGIlwi
dNSWnX8HnPYLm/VaP1Pen3DolhjpMFo1K1nE/++5V1V2Thxw6HZzg1tR6N4X
hJNPrGr8oA2zCwiHbu/YezRw6FZVO2mS0oMvhEO3SnZ/Aw7d9qWeLjvZt5xw
8g/5yt6vGU7rDyeEVUedrxAc2Xsu/Z2ycyj+xiXCbPuR899FSgmHbhHTDho0
N3MiHLrpSGTnOPzNlwqlueZm8QeiCYduUxQqozNXJxJO836+svd04NDNeNEZ
U6PzzwmHbjM6BHXsbPGacOhWy35PgUM35cXsvZ7h0K359lqfIw8+EU6+Z7Hq
uzSGlLLfWa5b8V2Z/+ffuETIZz6fwOnvtFjm5wkcurWcJvPh/JsvFUanyfw2
gXPdZH6bwKGbaSeZ3yZwOj+rUuarCRy6TTki888EDt2usfkE4NAtnPleAqdz
DabL/C2B0z5H5m9ZW3/f47rtr9X/EX1MEOH/vS94LJ/TrPUOwmlfhp7MNwY4
dNuUsXnH4gAnEV8qGJi7fflm4kE4rYuQyvxSgEO3k69iqldr3yEcur3sce+H
rVIM4dCtkM2TAKd5wh2TMy3+e18ADt22xa1P/vw8jXA6Dy7pVGb31MeE0zkj
bJ5E9nzCv8fdeqXXYm+fkSJcIhiz/ZjAoVuC2am92ZYHCYduuZN/qjR5ZiPi
SwV/tm8ROHTr5+L3r9pid8Jpfunc90el9/0Jh27mbB4GOPkZjjeenHMkgnDo
tmipUf37KXBaN7srRJpvGU84rc9n8zPAoVuCn7pTq20pwmbRumgHti76b1wi
nNkx5om1xWLC6e/UtunnNgN2Ew7dnrJ1xX/zpYLt/O/r7KpsCYduXf55tz0m
xIlw8ks5IpvnAU6/p+ltnaao3CIcug0Q7Lbo3AgkHLq1GxhUPx8CHLrNTZbN
CwEn/+TJNwb5CjGEk0/jl9rjA7vEC/8HplX+Jw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
2YTeEccI7N9+yf5rnsYOX7oPwLZ4t9vxXxxX1n98Z3ynrDfYT+CYZrDjO9hx
7Wjdds5n7O+wjWI9+pD7bAuAj8XVz2f/fw7kQvDpwG4JlWnm5x4J1QktzLfT
7YR09tE/YJeE9pj1BN4C2ZKnc665l2xPnvaYce/T7jzt+6LOCr5T4A2Qz8Fv
tzurXEYiaBOikFN52rd4KE974w75+S9IAL//ynogX/viWAa5b6rQ5r9AHk5I
d3ZCnPvfRiW0/5F61OGeroD3N3Lf44k87UPjPrWv/e6J683p9h67PzShvXOM
L/khu8/9ddTjPjHuefs5T/vxWDcfy1N93h/P3wKHA3/nO89TffyFdX50XvvK
/v5if792WjCdN1vez9OeuT0O59d2i/Xvfuv+l37v2w7NPmQeZJ6y7qfWP27/
vrb/x//HTYaTbcajCPcPwHHAo8AjEB4oOxnPecCnHK9TtjMxIT4tof2KP+Vp
f+D9Ce1vHG7+B/NsQvsY871PlemRk680mez0vC+hZ5pz7+NEp+ewhPYGts/X
vsBr0bd4EngDsJH3ezczHwVeDdiJ3wpArrP+/cC6wKe4nxEyz3i/eVP8NoP6
ReKjwasXKU24h/Zx52HGl2lwj8sOy8gcSAi/LbIOfw/ny/wkyyhwbkLpOd5p
eNI6jOtZju9Rp3c2pLTLS8S/UYf7dOnvYb8junkG/Am3+/vt7uiEOMvyaOd/
hmGkyzj3mvL9F7i8jE0oz7Ae2On3ftTmP/xPmA/Y/Z3OY9TjvtAv87Tvsa/L
PuejWBY2uR6Yn9De6XfM852XuMf5r/8p/3wugjydUNwXA5+FxMBfNP/TeYlh
P9dlnvufiwPfBb4GOR/8A2DJfNUDJSCvOq34Hj+ElIXZJwntf87zPttVqNu/
RN3eLaN916H/2S9Nt1YAX0ho7+hsc4Z3aULuc0/4mwn5F3DYGkNqMC85vCVs
znCGnWf4vjOQYn7vfOeljGFz6mRZ73Puh2J8gW8kZM48sNxpxXSjOxc4Dy1L
aN/6LRnFPekwU586HwFXBxW2j4Dv4/lC8DVMEzxXZXrarzT4WzZnmq+0ftzv
aG1QabUG+GFQ+3vp5kV+t/+9Yz7zHewOav880537ga/x3l3u+702X/urizne
FfO1T7gK04BtDt7XZeBfsM6GNAT/Dvgp1+jANwJX4/lj4O2I+2dBpQvN18F8
PbAjzD8JKs/web3j+KbdZNw3AzcHlVabgsrn37heujOhdrBPQnXvBy4bxRze
i/Ol85PrN763+pDKzud/uP5kPcW41PJv1GGdx/CUZ5gZL0gF8M+AKxH3bdyD
g/B/AP4VeHfwr4PS5/Ne7t8B3xeU+3S7Wb72Rzd2ntzOPihwB3BHQtg1o7Sv
Yb1qtlPdblxqd/ZD9yrgAeD+hPzpCbvvp5VnWQbJN8C8U0bhzzj/8L3Qfe7r
Zhj4zQLj82Fae7YPwHxvQn7tMm8K/lNCe7kvAd+Z0Pcmk/P13daYfNXbM/PF
ibMgLfHb08Abga3y9e1Y93x9B8bvywYY7zO/2793s9AOv926NV/pcku+vtPq
b87f6uRr338dP7fyb9c6DQfaPt3nN2gT8vVdWxl/L5Ys0jdog/P1rdnF/qaG
bVl3h2mEwzjQ7pyH3+4ClgNOtDl/L8nvx4DFi6TD78uiwMpOK7aDjRwHho3f
MjBs/N4tF9IhP+vfg71/T+jbur8S2mPP9Of++ar4rTf4WdbvZ7/yivQdxK+s
08A7g4dt3sVhoHlz8ONs8yFXgu9hO5OQOe1yDz/DwO/gDrpc87uAm52mDDPt
Mo1P2S7z8G6Xo+tdlg4lxOkX+eX5qisOu575zvwmx5fpMwT8Qqd/L/BifkdM
+0rAqXHNOzbhWSvAYuy/eA2T85uljJeav5HW780yMitt81rmNGuX0FiG45R2
bk9Zn7Av/S74tcAJQc3T3gucFZf9RcCpQc2lP8S1tbjWTbj28SjnOVnu4e+0
uOw1zWhOn/P/XCN5Mi57zTOa773I5owX53sfsJvUnxFXn6pjvtJoaL6eyTNO
K+aHIkhb55mU8zPTk99UMn/yG8wBLgt8l/y+8vZ8fbtxLmQY+EXmXZx/yjp/
81sz5u3x4JcAQ0X6BoR5IORyknQYevrd3ZCvvHqHw9kO+HdC5u38G78pGZuv
bzIZL4aBebePzfk748K4B4v0/SbzPL9DecD6Q10fDHC8fkiizHC+MKnvOlke
S7hf2tl5lHmK39M97PrnMZdffvc6h3VIkczm2rxekb5XZT58PF9pMtcy0TqX
47cpwPr+Vm+E6w6aD3ddwbaFfWm2L/9wrgZ4BtgDv30APrJI37e+CN6F83nI
w2+C9yvSt5Yf5uv7UOq/BN6N6Q35G270R176C/hWvp7/DKru/QN4R5H8GZDR
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
+wDbbI/xXek2npx14cJCtQfE580fh0wqVPvwLPLSHOBLwPvg7vU0B7YoVHvW
0nUv27Gb/Ezzbn6m+TWQG90Osm1qC2kF3gZ4A6QR+LXm1GfbR/3W4O1SWlO7
kusYiO9ZBZpf5Zwh5xc558q5V87d5vk3nqtcUKCzo/ltDufi+hZJ95Tn4rcW
6Uxpzk+ebbt0k2dH063viqRDtzmv/iXkNOcBgQ0RrgaME9sRzjkDxwJ7p5Q+
rYE93e6wfekO6Vio9q4bpD34rSmlD91gO9TbbSLbvn5OO5p3Sqk9HWI3qX8b
sCXbFPj5eEbuXwfzVnTT/Qe2s9dB6oM3sl8N7d/XaYX3Mdjt4D7DAOAemDez
O81TimNjtoEhuU//6H5j8KbWae/wMH3iBVpf+Bvp9Fe++tClYac831FI52lz
nplndH/i+V7ORZcs0Dx5EBKDXgVgPCQdmnEe/lNIpkDz7QHrch6Z52NzHv5b
4MYinaH9njnn8DnHvimtddfRiO9JPFeE+Qn389nHLwcpFVI4zmc9HNKYiPzC
kMJ2QUjjB44nOGZinDgOqWAh51iEaxOM9z7Of3vO/4jDzzltzrFzDjtVoDnt
M+Y8Z3xPkdJtbZF4wu5wLfIs589P0kqboax/8FshzLYUiZ9boHUQxoNpxHWR
v/0ekjYrtDnnrrkWWmjzX825FnvI729VkdZYuU5K/qfzf0mnP+3xnHauvfIc
6Q9d7raY032uyX5v9xiW1S5HjCM5/eIaLvuW7D+2LdRYjGNPjg3bFOo3mjcp
VH+T/c4XC1Uvsa/Hvtj8QvUDZ9t8gp9p/izrtJT6huxDPsa+Hfi8lMwfAV+S
Ut3H/iv7hzPwPLhQfeCZNufv7MvyfOwp5sP83LxQfVf2eYeGNG4aAqwH+3XA
6wKfTEn/Pvc573TdSc6wPep6k/1L9i2p/0ChzuKebT3q1E6pX8B+GsPJunqu
48W+NPvMiwoV7uctMx3+F/HbZOu/5rgvBi6kffBXgM+5jzrf5vcVqu86yW3D
E3STesAVwFlOo0XA1yHzwJcB30wpvEzbQW5P6MaclPrz04DPpNSvftr6i8E/
SqndYZ+Zfe+XHZ9VDtsC8Pfs1wN+j4wXw/VGSv0ptk+1LeQtXade43rwspT6
uuxrkbMOrwO8M6R+Wj/eXcg6HDgDZa1WSmYzM+q31YDUZJ0eUv+vN7BbSH3j
riH9Tj328zi2Yn6oDqwGOb9QfVS6fxXDA7wd0hT8emATSDvwm23O/N7Ddunn
5W4T2rnMjOH6JvNoSM/tXF4odL8e5Ku0fp+D8F8M+yUK1Scnr8a4pBT+K8G7
A+u7jWb7S07zq1Iqj23tZju7z+cv00pbtuMDQmo7BobUD2ZevaxQnHg5ZFBI
/Xjq1C2Uu3TzGtgfAbPZCOdu3m0M/ih4r5D61z2BX8C8P3AWzHvYPs1ZBq93
OaQO+93sb7O81AK/Enh3SO0X/SCvXig/Gri/0T6lOoZ1zbWQyTGkQy7KS0x1
DsvhEuYpng3KM09iug+a99ceAT4Y0F3PD/D+vaT6v5OA0wO683Yaz8UP6A5b
ct4xzTuCeZ/svWnd/3wirT4h+9qcd+L91LxTeILdZL/0GeC+sO58/o13ISbV
V1yYFOe+lCme89nmfukjaZ05l8iIZ+XozKi1Sc0tvZXUGXe8I4jn2vFMOZ7v
F4nqbiOey/0VcFtA9+zw7DnOj3GuhHMjvGub8f4jrXuRqJvKKJy8O5t3avOu
53OydT8y5+E5v881/Slp3dmYwz5eUnP/+UndNcl7CXnXI+/45n3RvNOZe064
Z+BvtBWPB3Q3Ne/75l3Gj/KcvrTuROYd0HzmusA1BdqjwnTOhvnesO55nAA+
PCJ/uQZxPnAs73LK1p3QvI+Y9xvzDmLOi3Kuket3vJeZdw/zrmHeDc17h/Mi
uneSdwPyTkneCzk+W/dEMo5jvD5S4PBwLWBJQPcP8s5I3sFU4PMJy/usvwzw
EH8D/573C3iMxvfLMxJ5B/sam3MP2KCk9iC9BD43qTMSecd6PtyZldZ5h/GM
7k/k3ZG8L5L73zjPz/nndQHdb8WzFFcHdLck7zTkHYgrgeGMzirkGe2864r7
i+YUaH/amKTWBPpxzsx9bt6Tcgv3okC3aVrrBVwDGGH9eS4jXJvmGsU04BXQ
rQ25CHIb7NQB3pmWO1XBu6Z1Bzrv9uad7LzP8ZlshY/3J07O1p2hvL+S94e+
HtBYaWeB5hL3B3Qu4wGeLRnQmY3kHMdxjMT9e7wXjGdBJqO6C6ykz47jnVN8
D2dndNdVxOcocuz2YYHGxX2T2uN0U1L79yYUaC8T7+JkWAoy0pni99U9qbWS
tkndick7TcdEtN+J6zNcr18W0P2N7wR0NyjvnuTdnbR7v9Oc91fyTsbHIrqX
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
OL80KaQ1Ge7r4HzCWs8J3B/S2innah4JaZw4K6S9B1zH4XoK5084jlsS0j4B
rrOMD2m9iWsoXM8aFdK61T0h7T3gOhfn9EaGNNdH8/1prf1xHLovrbnDeV4D
4v4Q7jfgWVU8a4Znp3CdiGtsl6a0Nsc5Me5z4LwT58GmeO6R8wecf+P61DDG
A27eFdKaF5+53sc9ElxP4v4Hhn0udNZwHRBtx56Q5tM418a5Ne7z5Joi13Mr
prTWN43z4Wmtm03PyJxrvlwvezf073W/WctYPiBng68Naf7qY49/OS/E9Hs+
o3mnN2H+eUprXlwT49oi3f937xrMO4W0P457xriOxvVMrjVzTzL3zXJP7Ao8
nwe/PgfeHNKeqw7AvpCLC7WuyXTmvh+u4XIvIn+fmtFeKe435p7e20Pab8X9
zO1C2uvVNqS9UuvNuR+Je4CXJ1UncD8S9/F+EdR5VyyzdYK6S7E266ag7kG9
zedj8Ft+3sfNMzdOw+xOhCErpG/jskO6i413o/Iuy9uDuieIdnm3Ke+suTGo
+0B5bxDv1OY9pzSrDXcWpXV/D+/E4dkI7/ibPp7XwbMy6B/v3OR92bxniOdO
8H75wpDO+CUOzuiexLLQ6R3TPXG8W5P3p/MOIN63wru2eU4Cvxnk3fQtg7rr
jXdn8j4d3jXJe3R4ZgjvH+cZHbx/h3f08V4k3uXKO8F5/05OSGcbMO7ce8a9
3NzXzXt8eLce76xcGNJc7nPMv0Hdcco7mHivH+/i4z19C0Kao6DOLs/ncg5n
YVrvoQbvigpp7nEO63OYV83VnexXsb3gue50B+ZVwAfAfD45zCpz7SOoOyX5
zHsqy+Xq3krukVvn9USmP+8gquW+FueZn2Kawq2Subpbs1dMdzt24L1Caf0+
n2dBcAwI834x9dk4B8U56kuDugfyEmDNoO5/J+e+Mu6f4F7r+V6L4b64XkHd
Vcg7FvM9/uA4hPs/swu1x5Vm/C3P45YiSIJ9zLTGYhyb10/LHtewslM66+ZY
Umdc0x2eR00dznVUBR5Kan/71qTcKLLbZYx0n+cwc88r923S758LNZ9C3b8K
pcMxVJbHUdxXzH0t3C9B3TyHu3Rac4MJ4IlCjeM4nuP+E+594F47unGmUO7E
HY6EhX6dZp2e1li+LevatMbdHPuXgvyB30sy76Q1LuZ4//K0xu4cm5/HdAEv
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
Nnz3uqgvCRuVd8J/4CconA==
           "]], Polygon3DBox[CompressedData["
1:eJxMnXf81+P3/1/v/Xq+9iqVKDNZaSkjM7vISFkZEUKJbCrRopIQmdkzI7Ii
QpnZW2b23vRBfo+7x/nebr8/zu11rtc1n9c417nOda5z1jhs5F4j6lOp1KPZ
VKpRv69VU6mHW1KplwRvCn9WcLfwKwSLhM8vp1I/NCltcyq1QHhNcKTCewkK
wu9RmsuV9q5Iv1tG/ynt3YJdhNdUzyDVc6xgFeEzK6nULYrbTHHntEql9tR/
kxV3omBb4ScIbhK+QHCe8DGCe4QvEUymLNU5R3X/L0mlRih/X/13puKOFGwt
fNVaKvWn2rJcUC98ZSmVGqz02ws+E76+0gxT2jMifbPKO1BxowQ54V+pXd0V
t7PgF+GXq713qr2zBZOFV1TmDyr7XUFG+PtKs57S9hH8JrxBZe4ivEfkX1fh
I4QPEKzO96iMS1XWHYJzhZ+jOp9W3fNog/Cs8jwqfCHtEb6x8hynvIOj/37X
f1sK31OQVfg85XlBaT8WXCm8Sf/tprhDBK2E1yn9g4p7SFAvvElt/lRtXyFI
C++hNKOU9kBBR+F/agzfUdz38X2Xqsy3lPdbweXC1xScKHyIoCQ8pzx7KO/h
8X3/Ux/vqbhhMT+OFtwtfLFghPAWpemntIcK2gifqj64Tn0xTTCx4vbeoLTX
C1IZz88FassFwq/WeF+kMt5U3CLB6cK/0/+9Ui5zpfCi/jtccXsIWoRvojpG
KG4/QVvhmyrNAtX1iKCX8FH670bFPSyYKHxZjKeqTb0l/Cz9d7fwxYIJjG0u
lTqoTvNDsLXwIYLjhA8W7Cp8U9V5juq+TLCZ8GnK85jyvi6YHv3D2ukj+FX4
jFgPFwlOEX5D2WP5u+B+4XU1z+UXBV+qUS+qTauprG6CN4XvrzqHq+6Bgu2F
L1SeP5T3k8g/XnXer7TXCk5jbtBmpd1FsF3O481cXiz4UfhHatOWTR5D2ve2
6lhHeTcXfC387LLH8l3BJOFbqYy9VdZRgm2FP6E0+oxUp+i/C1XnE8LnCk4X
3jXnvjso6v9WdezU5DX4s/DLleY5pZ0vmCG8G9+guOMEbYWfnzVtuOn/xkt5
NlPc7oLvhJ+gyqeqL6+N+fSBvumpFs9pvu+3kufG5pF+qsp4RGXdHPSG/qfv
lsZ6WkP/Haa4/jFfU4Kdov+/1ffVR5j1kxH+TdW0lDX2vfDL9N/TipsX9Guc
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
/bdhi2nAasLzqv9p1V9U+W1V/vNK81ydv5nxY72y9q+L9fJOzmuV8hbn3B7q
+l39Wyf8r4ppy3cKf8Xdc959OTrm94U57613x/f11py5jfUU8+dD5flGeRHK
fSb8qpz3LmjU1cJXVBzHN/8r/LuK6/5Y8IXw1wQfCf8twsSD02e0r63quBBZ
VtCjfVhzatv6gm3yzk9ZLwiWCn9Y8HyzyyT8ccXf9rbgJeGLBW82u83PCz9R
ZQyu95w8R3hZ/fua+reVwmspXFX4/bTXYHuFewjWFV4WrC58VUFJ+DoRZkwY
m7UF7YRXuANR/tb8p/Aqgqzw39U/VeFXVKyvt4No4SR4B4UfgP9XeJrCDUrz
m9Jm6p1+nGBovefs2cLb5H2W+kNpWgtvzLts6iDMemNt7RffVxI0C/9JaRLh
/8uZtvB9hK8UnC78CMEE6B/fVG8a1xNam/e3QSO7k7aYShU0NisaxM8VTQ+h
T+0i/UH6jhfpe8GQjOkTtIo+7EXZ+sav1T8dFe6q8HLBg8KXCj4XXuPOLO3y
OhEWJMJ/VZsLwn9Sf/3N3GGMhReU/tm0x4SxKSJTU/gf+CXxP4eqjX+orTm1
+UjhIwX1wr/Tf0cLP095jq73njVT+L/qn1+UN13v+koq71WEy6xvlTdXdS5U
3a9xphK+odKsVu89aaugvz2F7yoYKvzuinlJ5uB96JdUPDefFDzAeUl9NJ84
wV7wQMozrN571nGxX/WN8Tw27/TPKu1znLm4s9B/+9d7TyN+hGCfeq+Z/fPe
L7szV6N9g9hThG/IHip8y7zXFun7Ct9E0EF4D8rMe4wYq56xnxwi2LneZbL/
9hFswNqM8i4WjBI+UXCT8Ksq1reFV52svtw1+qdjlM9+xt51uOAY4XcKJgk/
IfJTH3v9gfyXd37atgt7gPDD8+7rnhG+KdYTOptzhI/Sf/vW+5sPje+nrQMj
fCNrjLqDfo8RDKk3T8b+Mixv3oA1eKTwIxjjeu+xjO++QZ/o8yF58wPwBtCY
o4U/qja8qrY8Krhd+CN580bMt1uET475R/7RrC/WUL37mO8dn/faHBD9w/kE
edvtwe+in4ou4f3xvdA35krfqJ81xFpijfYW/ljwc+w5t+fMj8ErXhX748ta
E/tqfWwreE54Z+7AtY8WtF7maP5/oP8OU1x/wQvC1yzoDKey3xK0Ef6E/ttN
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
3ZDFactmVwjeEb5ZnMfQ8eghvFPoEx2Grh5303nXRZ1P5/2mkLeko9N+a9hT
6bu1WMdro6r1vdCN6hph1iO0hD3mYOGDat57thAcFPsPti02iXj0o9Atuyrq
OzHt+v7hzCp8G5XZR2UPU/suVPtWE/wv7TtK7irRV0GXpUd8z9EZ67J0FhyF
DDfx3XqWO4HEMm50JR9JW/a9r/Ls2eI9YT/GDx2uFu8JB8T+wF6wU4R5z8fb
SWQ8ewjfv+qzEHvCIVXrYKKb/XDaupnH6xv7pH2mPhT9euX5pMF3/v2L1pm8
Gvlb2rqUq/MmLO39Y2HeOgPodjyXti4B+hzoEjyTtu4N+kPcjd6ftm4pNPoI
4dNSpt3Io9AleDvayx59dNp7Knv30KJ1JXhDuKfwMdy1qK9KyNQT02BoMXfe
jwtvpzp+TFt+fZ/CbwnuqPcdxKd529fA1gZ72mB4R5X5i8r+QLBN0fcVyK7n
Rvq9qj4LbiHYKvZD9oK2kZ/7Ge5SHqq3/sXDSnNDi9fktcLXVnuKiefPc8wf
7nwaXef+8FqKT9DhVfzivOkHvMLkWH/Tq97L2UMvFr53zW/bewv2Ff5Z3rLt
GwWvCd9eZX7YYBq3I2cpld+i8mcr/knklYLr660z8qrwrlXrI56kuXiJ0n6s
/x6o953PJ8LfyHuvZc99D9mG0vyatg4kupCbqo7XG0wTdy5a/wxZ/2WCh/Ne
H1u2eA5vV7V+AroNV8R40Sbadm6kh75Ce9+I8hblXRZlPpC3/hu6cJdGeFW1
56e0v+khhc/MeC3sLDhL+LqKryamQdCidRQuJb5Du7rm+yju2m4TvC/8zbxp
28IIo1/D2N4Q/fWi4Lp699FLUV/3FtOcM4R3VPmNiefcbNZTwXePyNi53zxZ
0FPhXQWnCH8m472NJ/vzM75P566POz/u23g/u5z7rJj//8Z84w6P+/g+8X6X
NbQXdxGCiubXPwqfJPxwwf+Ef8Z9J7IywTvCvxfsK3xQ0fg7kR/+mLse7nzQ
b9216LW3IvIPZo0KfzfyXxj7J+N3vfDt9P3HJT7fTSlapoBsoY3Cs4uWT/Vq
9BmD831T3G/T3+gf5BR+R/hTgkbuJvK+r3k7wkcV/W184ynCd1X5kxOfP8Yr
PLNo2QMyiCtoX5xneoU84nbBZsLXjvgxRfP+7OeUt5vKOy+xzA3ZG/pP9P3y
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
UzJ+Ozw54/B17EEZn3HXabEvX86+R2ZsC5LzNeds+ou3KesL/szaXuRWLbZp
Tx/hD5j8a8MfZJwfXoQ02JPEvn7vFsvEJmTs74G9sD78O7Af94s49vYZafvn
WCN8UmyFrZgG64j2Ed6IDxrF9cJnBP5jBF2Et8OnQ87vMaFnkwX7CP8pxv8S
lbVS47Ui67eDG/FGKuv5VWuwTy9obCnnuO0ErfHPksTca7AeJTpA6E71Sqwb
hA4Vvrt6JtatQqexW7QVXcfVVUZvlbVWtHdDQd+6aHPO/BC80fEZyzpGZeyL
eaP4jzDx27fYPzM8H/b9sCV4WfQX/juYo7wrxqYg9kgriW0N4t+ZvPBQ8LH4
P+mgtD14r5PzHT22id5JfHffVv/1rPMYEN895DWnZMzb5nKeC1sLijnzqNg3
xNYgvOt66tMjUrZHzn6LPbI59bZ3WEt8Z8xd97zEd8kbZi1LQmZXzdpmFfbk
sS2PLask67M/MpVVs7Z/hW0sbM1jaw95C7Kr3SO+IBiQchvWzLo97P17Rhia
tU5if23QMvRV0L26ILEttytDX+n8xLb3Ns3aH8hBgrWRjwkOSJnH6Cj84IJ1
kVvivrt11rIMZGZts/YXA73Apwz+a/B/jO2i2YKbEtsAw1bXOYltg00J+/b4
L56as/9sfAHj0xnfzrwpIT++k3lrMi1n3yS3C2YKvzyxr2T0pWYntg9bqfN7
M96dYU+/XaNtvPHN+Cv+z7dznf1Dkx/dhHsb7W8ZnSvsRV2aWBcLe13YMhuR
2LYi8iZkQ6sLVhHeoWr7spkItwl5IvKuQtX2c//z/S0oVe1PDNk6NAT/3MhD
kb23i/RJ1bJDZISrh7wQ+VMuwl2qXittWiyPGxD8IGO2VdbyP2SDyODT0T7a
yhrapGoaf0zGNBva3zvodYeI71w1LURmhr9y5HN8C99UjvbRFu4PkG8yX5mL
m4W8asPYD5Cp4S86lbXsmTnUnLV/eOJIg39o5K/IIluifO5DuFthTqdjfjOX
t4ww8ki+nTuP5qrvG2gLbeJ7uQ/hrmOViG+f9VzmjiGTtXwQ2d+6MR4PpW2P
d0rY2CWMvd1rwkYvNs+w13ZsYltoZ2jOTKyzb5TmVvaP9mCjdWLQe7whsa80
bPBcn9i/NP64Z/JePWcdE3T3bkuse4KOIb7Orkqse/iyfjdtsg4UelRLE+ui
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
           "]], Polygon3DBox[CompressedData["
1:eJwt13d0l+UZxvFXTSDsLVOoDJFCDViLIEEts44AWmX2nMpQZCMbW4YEEIEg
KBBAEMImhD2UYVgWgihDGVVGAJEhtkeG51RZ/TznvH98/7iuXPd9P8/z/t6R
h7v0e7nv/VEU7UEi+hSNojoPRFG9AlFUF4tKR9EN3hxeN/p1JBWLoisloqhi
viiqVDCKHsIhuf/IzZDrKNMJt+mrcpXlqslUx//oY8Wj6I+G5crsw+d0op6r
1L5G/x3Z+l0tFEUF74ui9KQomoLf6PsLR1FV3of0B5ggd9Gc99WmqmuFFbyD
paJoQ/4oyjJzJc7SfczebO5tmVthttx1PYvpl6HXLCTqv6Gkv1lzK3WpOCLX
Rv0L+qXRY3AmnIt+1eWS6brIr+6mtcy3lqb6N0Ee/a39NTD3G/pr5Kh9Ve08
3g36Jvby7lhLZWuZZB0TMT7M4JXmDaEH4xSdYy1LrCXdzClhb3IJ1l1NbobM
dLzHOym3R26BzHx8z0vm1eH1pfvhW14ra8mwlkvWcRl7eHvksuQyZGbhPO81
uaVy+cJeMYAeZ266uTvN3IU59AB7rusMGurVAEvU7nIGVdR+QR/AZ7y1zmu3
82uqVxN8TPfQc53cNZmf0Z6+Z89V4t/BZLwb1mJGJTMayaRgIN0fybwn6fpY
LHdLbQW1Y9S9g5/olvbW3N6GmjkE38mlWt/OBL8PdZuwlZdUxG9F7RfqDoRz
5Z03Y5IZzWVaYDmvuFyim+i0zBlUoc/r97R95MmcwW65X8wuo98wmaE4S1/V
b7p+7WU64Fc6jx/FueEYq7agnvd4h+kjmMHL755ZrbaLus5YxVvlDHc408b2
lYIMerv9LrbfSfRk5Ml1MKdsfJ8/jjfpRDN+M2Ov/vvC/SV3Qm2O2hnqpmMv
fQgbedn0KlwI52m/W51fVrj/whmqLaxf5Fy+1usbzOT91/X8nfXVVPco7tLb
rPErXke6A47LZfNyeI3opzCDfs6cFuYOp4fhpNwpM9aZUdTMIpjLe9pa1llL
Bj0TNemBzio/ryfdC6vlXtTvOf1G6TUSp3h/4tWLZ7yNZvR3Zqwxo6C6AvhI
7gxvPa84XQzzeN/yVvOS6PyYE+4ts3eZ+yn9CbbxWvK28bLpldjM22R/ufbb
xszW+JrXVG6zXKbMAjwR9iW3R655WBsW0s34n8gtklmIJ+lW1v28fbwjMxqn
9cuS/UxtQ7oBptHDnEthtYPUDcY6ubd5RXhD6KFYzxvJK8l7hx6DdHoICvD6
0v2wVm40rxQvjR6LqfR4lOOl01PCWdFzUJv3Hj0BG9Vut56D1vc3a+uEE7xP
eQd4belXcZS3mbef9zL9Er7hbeV9yWtPt8MxXpoZD8YzJobfAp3iXOrHz/Gx
4azpvziv7XKrwz0UrpPa53k5vPXhTPAp76zru9H1LU2Xwnzem+7VeX7mnfy+
O6IT3QuZvG50V4yUu+x3XsH6KphZEQd5feUWy/WU6YHRvO68ubwOdPsAfVFt
ebXl1JXHV+H5x58plyrzIlrSJ6z5ifgZux+5dH/+ErneMr3CM1DtT/pV0a+G
Xo/gFj1Abplcf5l+SJPrwsvgtaZb4QV6m54VzNip/y5slzvEe4yXE57r4azo
JNejgRl/0L8ODssd4SfHtTtCLd1bz4VmvKH/6xgV7i1+itxJme+wM7zPebXi
5+lZnKPXm/G5GS31b4El9Fl+Y7nTMqfCGsN9ztvhWm6kN2AL76Y911BbT93j
KBRqPQMnxu/uZlgmd9g1X+ya37C269hCn9SvoRnHZI6GvcjN9t7L9OzMkfkM
03jHZFeovUPfxl76OLJ49+i72E9fs5Zq8Vk9hoTw/WFG9XjG8QB9UHaR2mvq
fsYmurPaZXJJ6gqE9xk9yD7qxe/Gp7DUWi7wHzSjpEwpfMkrpj5Bv5PhuwKV
6A5ymfE30h10pweHZ3T83k/EfrX73Der42+LzHC/0UXU36ffUb2OISNcc94S
3i/0TWyjX9FvbvyOv45/yQ1yfiOdX6bMwvCe5x2VXa72Vvj2w276BFbx8qlL
xGy5DLUL1G4P/TGVN4o3gbeZ/iR8P9Ij8C5vYzg7TKIHWstWa0mwhweQq3a3
vayI33kzcY7XSW6h3F0z76EnvV9ujdxCmUX4Nz1ezw/MmK//x3iLLmfNhaz5
Cv0jkukU13Ot3+QMvaajGt3Ddavpuj1C10BH+rCeW+J390Rso89hH285vSy8
f60v3ZwMc1fovxz/pNtY4yxrvqLXj+E7O9zTvOz4W+8iUunv9cuNv5VX4Ae5
MtZYwJp/0OsiHqXLoiDvEn0Ztek6qBznLoRvaLUlefl4eeEbB1XpJva3yX7n
m/kx6tJNzX3W3N5m9gr3IT3MusfE+8hCun75eNXjb/SZ4duY19XZVHVWlfSq
GL776XP2UtpvvKhexfCFXGM9G5nRhe4cnnfhWwV/jr+B+6A+XQs1ed3o18O1
VHtPzxXxt1m78K7m/ZVXMr5GNZHJ68WrzUumHwvvYN4l3lRea7oNssK3KG9x
/H/Ki+Ga0N3xCK96+A2gLZ2KIvHeHgrvfrXPWF9KvL6u+D09zvusrDOdJDM5
3Av0M+G5yJtNz0IturN+D+tXgS6P5+kRsiXkRtGjw/uRzuc63XLOueG5hA/N
/cHzOTH+fk7DON6vvPK80eF5HX4L9FtY6jnel+6DMXLDXbc0uZV0drgHeWN5
k+Pn5I5wPcP/C+HejO+ZBeG+lJvGmxvfqxvwPu8NMz4yox3dFq/Q/7DuovYx
zB6Gh+d7+J/O/mbH38VdkSAzCElyvek+WCPXQ/0C/bro1RkjeHnOYIPfbkmZ
EuG3Gn5rcrPkXpJpg1T6vN9aGb+14q5FCRyQ+z8p5yVd
           "]]}],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1AtojXEAxuGzuW5ss2GKMkNuU5SNYbNhw4RYm6KsTMZGc5m2uU5RU8hk
ikwhZIpcx4a5TJTJZApRpk0oikIIeZbas9/5ems75/+dc2JzV2UWBgUCgeF+
tTeYi6GBQAe9pB21RjtpZ7pwxXVXvaohWqt+At3oznUXYXpDw/WmRmgPbnkc
qbc1Su9oT23QXtqbEaSQRT5b2Mda//RU+9/lCe/4TaQnfsg2RCcyl6VsYA93
bce1lke08oMwL/aTbaCOYxaLKWYnR4j2Ai/rA17zlRCH058U2xidwSLWUk4V
y23n9R4v+Uwnh9mXvbZRmsYCCtnGAc5QZ7+jz/hIkMOPJo5WW6pmU0AZlVTT
3RnWazPv+UOUmzaUBFuSziOPjVRwgjpy7E3axk/C3ehBJFJum625lLCLo9Rw
ztaoLXwj1HnGEE8GM9jkxk7XjTpN12u6lmqaTqXY4ym6TidrkaZqCpNY4zpZ
V2uSFupEncB4VrpO1AIdp/k6VhMYQDe+e35veMgVqjz3Y7qbUpYwh/EU2QZr
BL+cx1sec42ZtpO6l00sI5NkhhHb/p7Wv87/A0+5yWl+uH/7dSsrmM9kRtJk
66PBfHLfn9PAWU7aDup2VrGQdEbTj832zvrF++wV97nAYbJsO7SIHDKIJ4Y4
W6h+875uoZEajhJs26Ul5DKbRAYRzgtn+tPnqI0m6jhBBefa77fmMY8khhJF
ue2Pz+17mqmnmkpybGVaQDapxBEd+P/99A+Y347G
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0FtojnEAx/H/lBrvDmwmpxtbG4qsDVd7HYtoszVlOZW9ik2OjS2unNrr
BhuusLVd0ZaV0NbWFG2RC9tEVrQ1ORURNhHhs4tPv//F8+15nv/c2MHSAwkh
hEFuTw7hFj30MsQwP/lFWiSEdBayiLW8mxbCOruTcqo4wjnOc50b3OcBL/mu
eTW+jJKYFMIkMsmigCibKeMQISOEw7aWOA000k4HAzzlI5+YmBzCRe9J1s10
nkUe+RRSxG72cIKTXOEqd8af1921T+hjhNf85g8ZKSFMZzG5rGeeZoMtJ0Y1
NdRRTwut9NDLEEs0w3aUMSKpISSRTQ4rWMkWtlJFm/9apYs7n6WJZjrp4hnP
+cwXEqe4XzLZqMuyBUQppoRK9nKaMzTQSDvbNB22j37e8Ja//GPGVHdMHvkU
UqEpsjF2cYzjXOIyN2njIY8Y4bH/Oqobc/5BSloIqcxnAatZw3Z2UE0NdZzS
1dsWWunmHi8Y5CvfiKS7X7K5oMmxUZZTyib2sZ9a4jTRTCfXNF22nwHe84EE
3z6B2cxhKcsopoRK/gN+wXsN
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0GFk1HEcx/HfjD24unW1JTZLMS6jGJfRg9VlFONyOYpltFaqcSmVcfSg
jKtFWY4elHFM4jQmMY7ROE49qC3TKJ3GMhpjtWWMXg9ePl/H++/nDg7cOJut
CyF85W0khCkqVKmxxBbbNO8IYR9H6OQ0v5pD6LUDDHKHYZ4wxmtKzFLhO380
NfuXTSI7Q4jSTpxukpynj1uMaur2hpB3P2KcItOUmWeBVdZoiIbwTNOoaXXv
J0EXKdJcZYj7jPCCcd7Rqpu2n5hjiWW2CY3+B1roJEEvhzQpe4nLDJNjjAIl
JqlQpcYrbzyq23D/I7orhBhxOkjSQx/93GZSc1Lz0P2YIhOUmWGBRdZYJxLz
Xdo5o4vbbk6QJsMQWUbIM06RaS5oyvYz8yyzQtgdQj0ttJGgixSz3nhNN+i+
Qo57FHjOJFNU+chPPmjuajbdW8T2hNBEB4fp4RT9XGSYHGM80BVsiTfM8J5F
vrHOBtEm3yXOU02HPU6SDOfIcpM8oxSZoMwPb3ypm3N/YYXf1Pu9gTYO0MUx
0mS4zn9EWHra
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0G9k1HEAx/Fvx5i6urpaxLLqwThGMY4jWh2jGKcxijGtJdNqlMZx9OCY
1h/GMXowHccirUYlLmMsjkvUKseoTOMYxbhaGevVg5fvx8/v/fvyO3zh2tmr
20IINV5uD+EFFaqssMomW+zfEcIBjtHJGer7QuhxDjLEGFkmKfCYWd5Q4St5
TYNf9gbRaAgx2knQRZrz9HODu96PtIRw+/+mSIky83yixk/Wad7pfk1Mc9A+
RJIUGXoZZoQ840xT5BWturLzPUusUmeLyC7/gVY6SdLDQ/cldBftS2TJUWCK
WeaoUGWFR5qk5rf9l1gshDgJOkjTTT8D3OSZJq25Y9+nxAzzLFBjmXUaRHf7
Lu1kdAnnCU7SSx8jjDLOBEVKlHntvn7dB/sjddaI7AmhiVbaSJIiw6JmWDNk
XybHLaZ4wBzPqfKO77zVjGn+2JvE4yG00MFRujnNAINkyVEgr5tyPuEpCyyy
zBcabBDb67skqLlvUtdln6KPc4xynQnuUWKGeb5ppjVL9mfW+EGT5820cYQU
x+mljyv8A+XmfRE=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0D0oIGAcx/G/t/M2UKejGCjKFcVwA4UoisFAUXeDYnB1QjIYXFEMBoMr
CmVQKIrBYKAoBoN06hSD4YZTFIPhFIWP4dP3qd/zLE9R90Bbf0JEDPOBfCpo
5CsDTNCeFjGvmxxywR2JHo/acrWMejr4wRgrtlldZ58/3PDCqe1jYkQpNbTR
yygzPNpXdZff/OOJrKSIwvSIYq2ilR5GmKbZtqw7nPCX/2QmRwzZCvULLXQx
zBRLLNq39ZgrHkhNiSjgyFapTXxjkEkWuLNtvd/hknuSfGgenzIiyrWBTvoY
Z44N6uwHes4tr+SkRnzmu61W29/P/OQXa8zY9vSMa57J9mclVPMGsUA9aw==

        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0G1klWEAx+G7xtha7dSpKI3NGB3FUVkcxrSpjLJmWsZmZZpWTmJqKmMs
RVqaxRhLMQ5jvWhKpTItS8uYppUxpqZljKZx9Hr14fK/v/w893MXHDtdlVwR
QpjiUXYITxhjgjkWCKtCyGQz+ewiwUHm14dQbY/TzAXauUkvdxniDePMsqz5
atP8IZITwkZixCmngnoaOUvGhhAu2mt00c8ALxjhIzMskSZ7tTv4TkRX4FxE
glKqqSVJC1fo5A4pnpGnG7bvmWKeRTLWhJBFHoXspoRKYprDtolTtNFBD308
4DFjTPD5f6/5Zn8SckOIsont7GQfBzhKE63c91/luuvO3aQYZJhRppllmV9E
It6XGId0cbuHvdRQxxnOcZUb9DPAc+o1r+wkn1jgO5lrQ8ghnyISlFLFSc0R
e4Ik7Vyml9sM8ZRxJpnjnf9q1f12XrnOndlCnGIqqKSRZtrooIdLuj57j4eM
8JYZvpDmL9Go92UbXZodtoz91NJAC+fppJsUg7zklua1/cA0i/wgy91zKWQr
JZRRQx1J/gHXRHr5
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0HtoDlAYwOGzDWkXbLPSMnetZiitubRINlokvpZsLQy5NLZJaYhWokXL
rbFWokXLUmtLjQiTa/RJMtZCi9ZcEsmttXj2x9P7dup3Op3JGysjFTEhhNdc
iw/hBlG66OcbsQkhxDOeaeSykFV8GhvCWnMrOznAYc5ynjau84QXfOC35os5
QExiCCmkk00OS1nJBrZRTZ1mWFoIx+31NNNKJ4/p4T0/GSQxKYQzmmTNVHsW
eeSzhnVUUc1RTnGRK9xigu6B+ZIePvOD4aNCSGIimcxnMRFmaErM7VRSQy2N
NHGVm0Tpoo/L3jhPN2iPGx1CGhnMZi6FrGYT5eyjXVOgOWlvoGXojHs85S19
/CGM8b+kk01El2MuoZBiytjNfuqop5lW7rBe88h8xRu+8ouRya5nClnkkU8R
971xh67cvotDHOMcl+jgNs/ppp+oZq/mn31ESgjjmMQcFrCCIrZQQQ21NHJE
12S20cFDntHLRwaIS/W/ZDCL05pcs4DllLKZPRzkBA200M5der3xgq7b/o7v
/CXBeSrTmckillFMGVX8BwF3eqI=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0GFk1GEAx/Enp6Paam01enG6LEU6jV6cxlHMjmUv1spYomUstTbHSI1x
lGJMpXQcsThOexGXo1FNSynGsRezyzJGZRpRTOOkT9zH8/N33//D/8ClkTPD
W0IIS8xsD+ENFaqs8ZvIjhDqiXGYJKfo5seeEM47LzPCOHfJ8ZQSr5hnka/c
1vyhZkfqQmgiRoIkabrp5yo3mPT/rXtDuGfnKFJijnmW+cYGod6Px5pGzUE7
QYo0vfSTYYwJHlHgObPs131yLvKFdTaI7gyhgThHaKOdHqbcd1R3xc6QZYI8
BcrMUqHKd55pTmj+2tFdITQTp5U2OjnLAMOM8ULToXlg55mmzHsqrLDGJpEG
35cYCXp0SWc7p+ljgFHGmSRHkRJvee2+i7ole4WfbLJtt3fTQoIUac7xQXNN
M2SPcotJnlDkJXMssMwaFc1NTWj0bvbRwnFSdNHLIBmyTJDnjq7gLDHDRxZY
ZZ0a0SbflzjHqLrvoa7D7uICg1wny33yTFPmHauaKc3n/5tf1KjzvJlDtHKS
TvoYIMM/6O96rg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwt0D8oIGAcx+Gf898ZDBRFMRhOUacYDBRFGBQDxeXSDTfg0BkUA0UxGAwU
xSAZKIrBYKAoBlc3EMoNhhsoisFgcI+64enT+357l7eo50drf0JE/OQjhVTQ
RPf/+2m+pEUs6w4n3PBEqsdTtnz9TD2dDDDJlm3xvRxxxQOJHyIubblaSi3t
9DLOPAnpERt6wDl3vJGdGFFi+6TVtPGdMebez7Z13ec3f3klKyli1FasVbTw
jRFmWWXNvqdn3PJCZnJEEb9sldrMV4aZYYUX266e8odn0lIiCijMiCjXBroY
ZIoltmm0H+s1jySlRuRRxpCtTjvoY4IFNlmyHeoF94T/zKGEGv4BDww7/g==

        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0m9k1HEAx/Hv0T9d3VprxNI/jiOZxlGJMWbGGFeTcUxFnGp7cBpnjTim
Ii2nKI7ZHsRlRGWcltJy7EEcY7UYZ2NqGWMPlmn16sHL7/Pj3t8vP3fi6kCq
PxJC+Mq7vSFUqFJjlS12RkNo5BjNnKOTi/w6FMIwGXuQu4zynBJvmOELi6zw
2+9H+GNH9zmbOM200kkv18gyxK7GEB5pHttjlCgzwxyLrLHJ7v0h1HGEBl3c
M0kr3fSSIUuehxR5wRQfOa575r55e5k1ttkTC+EwJ2nhAl30cFozrrlh58hT
oMgkU1SoUuMH5zUvNX/tWJ2zSdBCG12kuc5thnlAh67gOcEk01SYp8Y6W0QP
+L7EaeaS7q372u0UaW4yyAijjFGizCeuaN5rvtkrrBOpdzZNxEnSSjeX6ddU
NLfsO4zwlDFeUWaWOZZYZZMhXeRgCPU0cYok7XTTR4YceQoUuaeruu+1/YFZ
Flhmg21iDb4vCc7wRLOg6bB76GOAHPcpMMEk03xmXLOk+W7/ZIMd3mMcJcFZ
2kiR/v9/IMs/7Sp8TA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0n1k1HEcwPHvKU6rXbdaylI5YtMY60HjiKW0lLJxKmXpSLHqSFNpLWLV
VKLsKLF0jFgWaZTOYmqaIk2PM8p60MNRSmnp4bU/Xj6fP37vn6/v75dIZxr2
REIIz8kXhTDIEG8o8Jfo5BBmkWAhSdaSolAaQitN9oMc5RwXuUovAzziNR8Y
8/xx/tljU0KYSQXVLGcNW9hOM4c5SXSGd5s5uslzj2e84itjTCoOIc48SjXl
Zg21NLCZXTRzjDNc4gq36Cehu+CML+zv+UIkFkIRs5nPEpaxng1UaXKa3fYW
2sjSyTVuMsgQo3ziF0ldZGoIJZRRyWJWso6t7GQ/rZymTtNhdtHDHe7zklG+
84dY3P1SQTUpXa8zrhrfaSTDAdo5S45u8twlrenTDNs/8o2JJSEUM5dyaqil
nk3sIKPLmEc4wXkuc53bPOQpb/nMb1o0E6b5bsyhiqXUUU+aJlpoI0sn7brH
znjD3s8DRnjHT8J090sZlSwiqxnWrLZvZBt7OcQpOuiihz4GeEJON2IW+EHU
O+IkWECSFaRoHP8f2Md/dMZ69Q==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0H1ojWEYwOFni7BhzrElWTSk1nykNdGQGhoSszAtWVuixc5SLLKOpJYl
H7WsRWpZq6WWpbbVYiTfTaLptJBoTbSRiGbh2h9X911vv97nebLKYzuqkkII
CXpTQuijnyG+kpQawhTmsIA81rCN3YykhxDnkP0kZ7jMNW7SzVNe8pEvjPJH
E6aGEGE2OeSyga3s4wA1xDnP5IwQGsxW2rnLYwb4wA/GSJ0WQpT5ZGiyzXwK
2MleYtRwlktc5wa3eTDe6q4444D9M9+ZMN2RmcsiVrKOIvZwkGW6KjNOHU00
c4se+uhnkGHGWK1JTgshnUyWsoJCtlNOJcc5xUU2aRrNNjq4zzPeMsgv/hGZ
4X3JIZddui73KrSXUMYRTnCOBlppp5dHvKZC98Yc5ieTIiGkkUU2+RRQTCmV
VGuqzdPUc5UWOrnDCxIMMcJfajUToyHMYh7LWcUWitnPYeLU0UQz9bpX7tVp
f8hz3vOJUZJnel8yWUIe62nUbTZLqeAotVwY/0YbHdzjCQlaNO/Mb/wmxX+j
LGQxa9lICWXEOMZ/6l96dA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0HtoDVAAx/FjWZg9mI3SsoZIrZnSmrBILUbSaLQhbUjKzKTW8phboiGS
2qxbUkOrm1pumpSuRxqLrlC3jMijNbFFIo/4/PGp36nzPX+covq91Y1jQggp
EhkhJEkxzFfGTgwhkxnMoZxlVFPLSF4IbTTaRzjOBS5xnVs85gUf+cIf90+Q
lhlCHgWUUMZK1lHPblo5yoT8EM5qOuweernHAK/4wA/+kZ3lXaZqOjXFdgWV
bGIbzbRyivNc4RoJ+pmljWoH7c98Z1x2CDkUMY/FrGADmynVdGua7AjtROnm
BrdJkmKIEZZqYpr0nBCmUcgCFrGa9exgDweJUKWJa7rsGHEe8IQ3DPGLtEn+
gQJKKGOjtk9bZdfRwAEOcYYOeujlLo/YrkloXtuj/CRjcgi5zKaYCiqpYQv7
NP2a/fYxTnORq9zkDs94yTCjHNYkNeNzQ5jOTBayhLXUsIsmIrQTpZuT2ufa
PvshT3nHJ/6SPsX/Ukgp5XRqBjVr7K3spIU2ztFFjDj3GeCy5r3mrf2N32Q5
5zOX+SxnFXU00EwL/wHbfnyt
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0H9k1GEAx/HnGGWr1dVmMcayOMbYFEtZHGNsiqOcrMZYimk5ijFNG+MY
lTiOjTEdxXGMpTGa0o/VKC3LWEplzFYbY5Sl1/3x8nyO7/u+X09td1/ieiSE
8Jm50hAWWeYX2+wtC6Gco8Q4TZwLdLJZEcIdbtjDpBlnkifM8oEl1vjNrufT
lOwL4Qg1NNFMBwmu0MtthiitDOG+JmvnmeIVC3xjlb9E9ocQpZIYVboGZ5w2
OunmFgPcI8NjCrxgnjrduPd9sbfYoazcf3OMes7QSpJLNGoealL2CKNMkGOG
ZyyyzDqbtGjymj0HQqimlhOc4hznuUYfgwyToV035iwwzTzv+cEa/yg56H6p
oYlmkrqn3tdhd9FDP4M8IEueKV7ytviMZk7z1d7mD+XRECqI0UCcNi5ymZTm
jeamneYukzxilucsscIGW5Qc8h26UmcNdTTTQoIkvaQYYZQJcsWt++R9M/YC
H1llg8hh90s1tRznJFnNiuas3c1VBhgiwxgFpnnNO3Kan5rv9g67RP2uop5G
Wmmni57iHdDPf0e3e28=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0W1ojmEYBuB7WcQ7s9l8tVpba5JFixZtiWTRIlqksUxvs0XaGqslwjRq
PlZSy6yWWmYltazVmkRvSZYhjbGWSSTCGiLSON4fR+f14z6frq4nO1pbWpMQ
QnhJbFYII4wxyU8ikRBSyGUpa9lAGXuYTA/hFHXmM5zjKtcY4C7DvOJL/D1T
3p9lelIIGWRRQCFb2c5+ajhJE61E5oXQLnvoY5AnvOMjU0ybHUIaC8hjoU6+
LKaECio5wnEucZmb3OIBj8jV67DjuPkHv0lO9m2WsIz1bGQ3FazQ6dKpNzfT
Qifd3CHGCGN85RuJc9xUb6bMJIfVrKGUnRykjkZO08bm+H6yl36GeMYHPpOQ
4r5kkEUBhZTpDdhxizlKNcdopJV2eujjIUNU6cR03pp/8ZfU1BDmk0c+xZRQ
zl4OcVivQZ7nIl3c4B73GWWcCb4zY67/rZMks1lMEevYwS5qqaeZFjrp5oLe
CzveNj/lOZ+YIDHNfckkh1UUcUXntc428z4OcIIm2uigl34Gecwbruu9l3/4
R7pvLGI5K9kUvy9RqmngKP8BKdN7Ow==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0FtoDmAYB/CXLGsHs9kYN+tbM4ms4Wa2HBJZc4hFDjGHzCSmzSSRw2cu
ZCY3Mlu7kZncrK2tRaLJDRsiljVNJBHNEJHD77v49X8u3n/v+z6R7ZVr9o0K
IfTTkxDCAIN85wcpiSGkMp0ZLGYJmyljJD2EKFXmM5zlCle5zR36eclw7Dxx
SSH80xkrs4hQQCGlrGUvlUSppYGkjBAaZQed9PGY93xgdHIIY5hIJnlM1smX
xZSwg50c5RgXuUQb7Tygl1y9Zm8cMv/kF2njQkhnJrNYyjK2sJVq5ujVyDrq
aaGVu/QwwCBf+Ep8SggLdRJkNjkUMZ91rGc/VZziNE2siL1PdtHNE57ykU/E
jbdfsohQQCEb9W7610pzORUc5yQNNNJBJw/p4zW79N7I3/whIzWESeSRTzEl
lLGNgxzQOSTPc4Hr3OAe93nFECN8IzEthBM6yXIq01jAIjawiWpqqKOeFlo5
p/fCv26Zn/GczwwTP8F+ySaHeRSxist6q+Vu9hClliaa6aKbXh7xlms67+Rf
gjszmcJs5rI8tl/KqeAwR/gPUX553g==
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2142, 2122, 2123, 5350, 2124, 2125, 5351, 2126, 2127, 5352, 
        2128, 2129, 2130, 2131, 2132, 2133, 5353, 2134, 2135, 5354, 2136, 
        2137, 5355, 2138, 2139, 2140, 2141, 2143, 2144, 5356, 2145, 2146, 
        5357, 2147, 2148, 5358, 2149, 2150, 2151, 2152, 5359, 2153, 2154, 
        5360, 2155, 2156, 5361, 2157, 2158, 5362, 2159, 2160, 2161, 2162},
        VertexColors->None], 
       Line3DBox[{2183, 2163, 2164, 5363, 2165, 2166, 5364, 2167, 2168, 2169, 
        5365, 2170, 2171, 2172, 2173, 2174, 5366, 2175, 2176, 5367, 2177, 
        2178, 2179, 5368, 2180, 2181, 2182, 2184, 2185, 5369, 2186, 2187, 
        5370, 2188, 2189, 2190, 5371, 2191, 2192, 2193, 5372, 2194, 2195, 
        5373, 2196, 2197, 5374, 2198, 2199, 2200, 5375, 2201, 2202, 2203},
        VertexColors->None], 
       Line3DBox[{2224, 2204, 2205, 5376, 2206, 2207, 2208, 5377, 2209, 2210, 
        5378, 2211, 2212, 2213, 2214, 2215, 5379, 2216, 2217, 2218, 5380, 
        2219, 2220, 5381, 2221, 2222, 2223, 2225, 2226, 5382, 2227, 2228, 
        2229, 5383, 2230, 2231, 5384, 2232, 2233, 2234, 5385, 2235, 2236, 
        5386, 2237, 2238, 2239, 5387, 2240, 2241, 5388, 2242, 2243, 2244},
        VertexColors->None], 
       Line3DBox[{2265, 2245, 2246, 2247, 5389, 2248, 2249, 5390, 2250, 2251, 
        5391, 2252, 2253, 2254, 2255, 2256, 2257, 5392, 2258, 2259, 5393, 
        2260, 2261, 5394, 2262, 2263, 2264, 2266, 2267, 2268, 5395, 2269, 
        2270, 5396, 2271, 2272, 5397, 2273, 2274, 2275, 5398, 2276, 2277, 
        2278, 5399, 2279, 2280, 5400, 2281, 2282, 5401, 2283, 2284, 2285},
        VertexColors->None], 
       Line3DBox[{2306, 2286, 2287, 5402, 2288, 2289, 5403, 2290, 2291, 5404, 
        2292, 2293, 2294, 2295, 2296, 2297, 5405, 2298, 2299, 5406, 2300, 
        2301, 5407, 2302, 2303, 2304, 2305, 2307, 2308, 5408, 2309, 2310, 
        5409, 2311, 2312, 5410, 2313, 2314, 2315, 2316, 5411, 2317, 2318, 
        5412, 2319, 2320, 5413, 2321, 2322, 5414, 2323, 2324, 2325, 2326},
        VertexColors->None], 
       Line3DBox[{2347, 2327, 2328, 5415, 2329, 2330, 5416, 2331, 2332, 2333, 
        5417, 2334, 2335, 2336, 2337, 2338, 5418, 2339, 2340, 5419, 2341, 
        2342, 2343, 5420, 2344, 2345, 2346, 2348, 2349, 5421, 2350, 2351, 
        5422, 2352, 2353, 2354, 5423, 2355, 2356, 2357, 5424, 2358, 2359, 
        5425, 2360, 2361, 5426, 2362, 2363, 2364, 5427, 2365, 2366, 2367},
        VertexColors->None], 
       Line3DBox[{2388, 2368, 2369, 5428, 2370, 2371, 2372, 5429, 2373, 2374, 
        5430, 2375, 2376, 2377, 2378, 2379, 5431, 2380, 2381, 2382, 5432, 
        2383, 2384, 5433, 2385, 2386, 2387, 2389, 2390, 5434, 2391, 2392, 
        2393, 5435, 2394, 2395, 5436, 2396, 2397, 2398, 5437, 2399, 2400, 
        5438, 2401, 2402, 2403, 5439, 2404, 2405, 5440, 2406, 2407, 2408},
        VertexColors->None], 
       Line3DBox[{2429, 2409, 2410, 2411, 5441, 2412, 2413, 5442, 2414, 2415, 
        5443, 2416, 2417, 2418, 2419, 2420, 2421, 5444, 2422, 2423, 5445, 
        2424, 2425, 5446, 2426, 2427, 2428, 2430, 2431, 2432, 5447, 2433, 
        2434, 5448, 2435, 2436, 5449, 2437, 2438, 2439, 5450, 2440, 2441, 
        2442, 5451, 2443, 2444, 5452, 2445, 2446, 5453, 2447, 2448, 2449},
        VertexColors->None], 
       Line3DBox[{2470, 2450, 2451, 5454, 2452, 2453, 5455, 2454, 2455, 5456, 
        2456, 2457, 2458, 2459, 2460, 2461, 5457, 2462, 2463, 5458, 2464, 
        2465, 5459, 2466, 2467, 2468, 2469, 2471, 2472, 5460, 2473, 2474, 
        5461, 2475, 2476, 5462, 2477, 2478, 2479, 2480, 5463, 2481, 2482, 
        5464, 2483, 2484, 5465, 2485, 2486, 5466, 2487, 2488, 2489, 2490},
        VertexColors->None], 
       Line3DBox[{2511, 2491, 2492, 5467, 2493, 2494, 5468, 2495, 2496, 2497, 
        5469, 2498, 2499, 2500, 2501, 2502, 5470, 2503, 2504, 5471, 2505, 
        2506, 2507, 5472, 2508, 2509, 2510, 2512, 2513, 5473, 2514, 2515, 
        5474, 2516, 2517, 2518, 5475, 2519, 2520, 2521, 5476, 2522, 2523, 
        5477, 2524, 2525, 5478, 2526, 2527, 2528, 5479, 2529, 2530, 2531},
        VertexColors->None], 
       Line3DBox[{2552, 2532, 2533, 5480, 2534, 2535, 2536, 5481, 2537, 2538, 
        5482, 2539, 2540, 2541, 2542, 2543, 5483, 2544, 2545, 2546, 5484, 
        2547, 2548, 5485, 2549, 2550, 2551, 2553, 2554, 5486, 2555, 2556, 
        2557, 5487, 2558, 2559, 5488, 2560, 2561, 2562, 5489, 2563, 2564, 
        5490, 2565, 2566, 2567, 5491, 2568, 2569, 5492, 2570, 2571, 2572},
        VertexColors->None], 
       Line3DBox[{2593, 2573, 2574, 2575, 5493, 2576, 2577, 5494, 2578, 2579, 
        5495, 2580, 2581, 2582, 2583, 2584, 2585, 5496, 2586, 2587, 5497, 
        2588, 2589, 5498, 2590, 2591, 2592, 2594, 2595, 2596, 5499, 2597, 
        2598, 5500, 2599, 2600, 5501, 2601, 2602, 2603, 5502, 2604, 2605, 
        2606, 5503, 2607, 2608, 5504, 2609, 2610, 5505, 2611, 2612, 2613},
        VertexColors->None], 
       Line3DBox[{2634, 2614, 2615, 5506, 2616, 2617, 5507, 2618, 2619, 5508, 
        2620, 2621, 2622, 2623, 2624, 2625, 5509, 2626, 2627, 5510, 2628, 
        2629, 5511, 2630, 2631, 2632, 2633, 2635, 2636, 5512, 2637, 2638, 
        5513, 2639, 2640, 5514, 2641, 2642, 2643, 2644, 5515, 2645, 2646, 
        5516, 2647, 2648, 5517, 2649, 2650, 5518, 2651, 2652, 2653, 2654},
        VertexColors->None], 
       Line3DBox[{2675, 2655, 2656, 5519, 2657, 2658, 5520, 2659, 2660, 2661, 
        5521, 2662, 2663, 2664, 2665, 2666, 5522, 2667, 2668, 5523, 2669, 
        2670, 2671, 5524, 2672, 2673, 2674, 2676, 2677, 5525, 2678, 2679, 
        5526, 2680, 2681, 2682, 5527, 2683, 2684, 2685, 5528, 2686, 2687, 
        5529, 2688, 2689, 5530, 2690, 2691, 2692, 5531, 2693, 2694, 2695},
        VertexColors->None], 
       Line3DBox[{2716, 2696, 2697, 5532, 2698, 2699, 2700, 5533, 2701, 2702, 
        5534, 2703, 2704, 2705, 2706, 2707, 5535, 2708, 2709, 2710, 5536, 
        2711, 2712, 5537, 2713, 2714, 2715, 2717, 2718, 5538, 2719, 2720, 
        2721, 5539, 2722, 2723, 5540, 2724, 2725, 2726, 5541, 2727, 2728, 
        5542, 2729, 2730, 2731, 5543, 2732, 2733, 5544, 2734, 2735, 2736},
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJx8m/c31v//x0UaohCS5J1SKUJWCPeGBi0VDSVKUkpESRIZ2WVTVvZK9rym
TWSmuAYuswgRUlrf1+cP6PuTcx7nOtc5ndvzcX/c7h2kr9iesuTm4uLKEOXi
4iF+7jamWcnsoyOz5LKasJMH7nu981jziIGyq3Iif/bSMczODgx77IHxH46J
KsR8xS9m5oo9dKw6UlWi8MUDPk5TJxJdGRBY+9f+miYdgVm6JsXXvRD4V/OB
uycDNXoX/G/K00F1eLN6vYEPso/y3136lIG52/JxlyXo6BhX2vfRIAAzvC9C
90cz8Ndgf4gJDx1nkq8EPVUJRoDSnkLZVwzwxFU87f9EA7NMb8pzUxgcpcvH
wmkMdNWfauNqooGr50qvyt1IGAR5FT/uZMD9g5lHTzoNRhtVNI+ZROPt27p7
hycZUKo+JH/DnYaK656PYuLjka/etNGNj4mP/Eubk4xp+GUcd4qXmgjrm1v+
i9vOhMmNBuVEGRpM5Pkdlt9LwfktDrkhx5mI9PCl/JygQjW9foPso3RcVAuM
ynRkIuHOFrsj+VRctnQeWcPKwjfbZZZKyUz0v95UZnubmF9aHJAenIOU3G9/
dTqZOF52ymrxZio8Vu0ZLTiZj16B0Y/r+FjIVTN/19RJweCB3gNmAYWQV5W6
MK/Hwjm+9GrXRxTk7GmNPzVfDCdOVvTiJyy8GQ0l90tRsPRq5RWVqDIE3o06
YtvIgp41M4pSRsa7o24awbfIcOWaijMXZeNf3JtX+UwvENwNzgi/OuDuAbtI
k0k1Yv7x/H6bAdBRl995xfi7BwxslULoBPehtmu3mzToOGR//ue6AC8o/DVR
myG4HxBhbpCQo+NAsmDU73Af3KRrcv8luAcIifsfFKdDckDXwLcqAHt5ekRb
Yxj4frRokTkXHfcEB3W3+wajuTJN4dxrBnbdXdzSNUSDyB9W3a7IMDyU6DIN
qGTgzLFni3bX0vDMp+bQDvEo6DUmzFG6GXjILyTulUjD0y+Td9NXxuCskhz3
9FcGEvTX3p51osFcq8am+dlLeHj9vlwoyMTV00PBO47QMHDqOPfTk0mol681
11dmQsbnYQJnDQ0emcu7tmxPxYYbUj3jZ5lQOuv1NayXCsGJbfKzZzNgHVAp
Me/ORLbeDe3ZeCq2T5Hnwvpewa+uTS01j4k2+68hNeeoWN7p52hVk4vOX6v6
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
vlS8O1LxvomK9xlUvFdT8W5FxfuFYfEuRcV7FhXvoOJ99Ly/jvdH1P1eOML9
PvVv3u8e1P1eN+x+V6Tud1nqfi/4h/f7Yup+nzHsfv9O3e/jh93vo8//n/c7
43/ofreg7vcB6n4/St3vv8dx7/dk6n6Xpe73x9T9LkPd77/+cL8vou73Xup+
96fud5dh9/v3P9zv/zufvzxCPn/9b+bzyv+hfN6ayuflqHy+l8rn+6h8PpbK
539f/Z/J50OpfL53WD6vSeXzh6l83oXK5znD8vkiKp/PpfL5NVQ+v4/K549S
+Xwklc83/iGf5xuWz7v+w3z+/7X6vW6E+p2Xqt+VqPo9kqrfjw+r3zdS9fu0
f7F+3/4v1u8uw+r3BKp+n0vV745U/X6Pqt+lqPr96d+s33Oo+t2Dqt/1qfpd
nqrfjaj63fkf1u//tF+XMKxfJ0P167aN0K8bQ/XrCql+3dd/sV+XRvXrBKh+
nQLVr3tG9eu8qH7dVapfJzWsX2dP9euyqX4dm+rX5VD9unn/Yr9Of1i/7hDV
rxMf1q8zpfp1bVS/jk7165b/oV83GPB/9ut+/6FfZzWsX7fvD/26f9qflxnW
ny+h+vO3qf78tX/Yn9ei+vPZVH++herPe1L9+aC/2Z8PoPrzhsP680yqP7+O
6s9/+x/qz0dQ/fmpVH8eVH9+B9Wfd6b687lUfz58WH/++3+4P/+n97gi6j3u
xj98jztLvccZDnuP20G9x2kOe48zot7jMoe9x22g3uPODnuPCx3hPS532Hvc
KOo9zox6j6NT73E51HucP/Uet4R6j/P+w3tcN/UeF0K9x0lT73HLqPe4Fuo9
zpt6j9s/7D1OiHqP66Pe46So97hD1HtcDfUeZ0S9xx2k3uPuDXuPe029x7kP
e4/r/sN7nN2w9/fb/5ff30up93evYe/vl6n3d71/8/19/Qjv797/off3Hur9
3f5vvr8bUu/vIcPe3/dR7+9l/6X39386b5P/N+dtzKh5m7R/c95GmZq30f2b
8zYmI8zbVFDzNuXD5m0OUvM2S4bN25hS8zbaw+ZtvlDzNhnUvI0MNW+zfoR5
GzNq3kaHmreZ9od5m6Bh8za3qHmbbdS8TTI1byNHzdscpeZt9Kh5m59/mLf5
b8/XTabm60z+S/N1TGq+zoKarztPzddJU/N186n5OsM/zNcVUvN1Z//mfJ04
NV83+f/T+br/PU97b4R52lZqnraLmqetpeZpFal52tJh87Qd1Dyt+bB52toR
5mn7hs3T8lPztM4jzNOuGWGetn7YPK0yNU8bPGye9hs1T/ucmqftoeZpC6h5
Wqm/OU8rQ83TTho2TztmhHna4yPM0ypS87SzqXna7dQ8rRI1TzuDmqc9Qc3T
7h02T1tHzdPOHDZPu/EP87R/d37efIT5+R8jzM8b/835+Q1/c37+JzU//+u/
ND+fS83PO/4Pz89r/Ivz86LD5uf3/8P5+T/tyyz6D+3LOA7bl1lK7ctU/Yv7
MrzUvkzjsH2ZxBH2ZUb9m/syH6l9Gau/uS+jN2xfxvsP+zIB/+K+TCK1L5NJ
7ctsoPZlZlP7Mh3UvkzPH/Zl/tv7cfuo/bhOaj+OTu3HTaP24y6OsB+X/y/u
x73/N/fj9Kn9OG9qP07qD/txy6j9OCVqP+7xf3g/zpXaj5Og9uOsqP24jdR+
3DNqP67qH+7H/af3YROofdjWP+zDPqb2YReOsA+rM8I+rOYI+7Dp1D6s3bB9
2Bn/4j5sOrUPK0/tw/6m9mF/UvuwCtQ+7FZqH1b7v7QPe4nah9Wl9mGLqH3Y
G8P2Yav/4T7sSPvvOdT+uzW1/248bP/99gj77zzU/vuJf7j/voraf++k9t9N
/rD/Lkvtv2f9P77/rkDtv28Ztv++hdp/r/mb++9jqf33fmr//dY/3H//p7yL
Hop3cYjiXbygeBdjKN6F3x94F4so3kUzxbvY9T/Eu3CgeBesEXgXB4bxLjQo
3sW5v8m7sKR4F03DeBf6FO+ibBjvYsYIvIuFFO9i4zDexbFhvIseincRTfEu
fv5N3sW/yrc5QPFtPP5Nvk0oxbfZP4xv40fxbcyH8W1A8W1k/ibfRoHi25z/
v8S3OUjxbRb9h/k2Cym+zYN/k2/zJ57V8RF4Vob/Is+q9l/kWWEEntX5EXhW
FSPwrH5RPCs5imdlR/Gs+imelfvf5Fnd/ps8KzOKZ6X9N3lWthTPKoHiWfH/
gWfVSfGsEiielfE/5Fn9U37dQYpf9/tv8uusKX6dyz/k132l+HUMil+372/y
66T/Jr/OjeLXXaf4ddl/4Ne9pvh1FiPw6/b+l/h18hS/7i3FrztI8etGdXD5
dVcpfl3WH/h1MyleZd8JLq/yYieXVynLv4TkVcpGCpC8ysPGXF5ltRqXV+lh
cpHkVa7y4fIq9yhyeZWnp6SRvMrHCVxe5Yu6VSSvcsvCapJX2Z7dRPIq1Y64
xXtHpKGr94XdtU1RMNxTNL42nA53OpdXeX4Hl1cZPZ7LqxS6auVkvioVZ1yM
Jwp9TYCU9QVmUxID7R1cXuXiIi6vsreTy6tcvP/YgMD8ZCx6L1ynvi8HO/qE
n2aChVW37pO8youpHJJXaSVqSPIqFywNvWtvnIBQF9e7QUKlcAp4KJWi0YBH
JaUhym+I73+sun7uMaJO9PnOmKnEhuejK0dW88bjjljJJHmeasjZnep4Z8NG
ZDuXV9l1YTPJq7TL4/IqpQ25vMqP7TdJXmXoXi6vMrTEleRVsnsmkbzKQyFc
XuVXilepYs7lVbpRvEqdR8/9BH6k4ujouUf2dbMRHKriNcSr3CTh0j89JhNl
Tqxl33gaIVT8evRf8Sp/ajJ1ST6tu8o7AXk7WJmXnBji00Zu4/JpQz+3kHza
b/FcPm1m1kOHIT6teNunlswr93Cg0c94iE/LWzCO5NMWMd+TfFqeSetIPq0M
n9OebZvTUaK7g1fkVDBcHtatDV9JR4AHh+TTzgoOI/m0b1bRSD5tpp686Wzl
NLCkD/j1ZcdgXmT8ngM/6GB+2E3yaU/lZpJ8Wiaby6eVdjW78To0Bb2hkfb+
3Skw6d9q7DefifiIm0YRIcloS+/+7eiShakGHxWG+LQ3GmPM9lol4cSPUZyg
0DzkBTjX6Sex4OlWdK1sWSKk67IY43SLUGlu3Gb3oh6RzvQD1fHxmLDedWfj
9bfw67ZmtGQ1INP+rcOtkDgs8Jp89v3FSqSppB4c4tOKnuPyaSvec/m0GkVc
Pm2QEZdP+62fy6dNyuPyaa2ucfm0d/i5fFqXw1w+rdIu7fjAPYk4ssZ7w9LV
LIR2GesO8Wmnez5jHjhK1DUlh+lDfNquZC2lIT6t4kbXBN2HaXBds6nsjTAH
G6t/G/4Vn/ZSvJnSEI9aYuDJ/EJRO0gaclSGeNRXeIRnT5fMgL1ODe3iZWfc
a57J/574nRaWlkxL7k9H/vaUPqWHd6EU4rD71Gsath3TJXnUrSHlJI/6xXMu
j3pHRg7Jow6tmEXyqOXWfCJ51DUuXB51s9w7kkddr8zlUbNeXCV51J1Fy0ke
tZWgHcmj5kvYT/KoX1obkjzqc9pcHvVLRVuSR/1E8jHJo958LovkUSfqvmMZ
iaQgW6fLI/BzBgbqz69Xuc1Ea8tLkkedMjaL5FGrLuLyqJvinnkvJuoCp6Pu
9bdaC2D5WC9ylyxRF9xbRfKof1RtIHnUa0yekDzq7evvxG8XjMfk5690breW
w7KHtp53NnGOX7g86reTJ5E8arWbXB71C7WVJI86ccUOkkftf4nLo54dKrxj
iEdtoj26fIhHXdxXXjTEo+YT4PKoq3q5POodJlweNf8mLo+a6cpL8qhdpbk8
6jsmdSSPeorYFZJHbaHw1zzqwuNc/nwdp4fkz8835fLndfq4/PkPTf0kf976
Gpc/P3nKFc0XP9OR6+Cp6lXtgY/feG23vyDqetnZJH++ucmM5M/T41pJ/vwm
Oy5/fuKrXpI/nxzH5c/Xfv1E8ucHN2+YO8Sf3z/GiuTPHxCWIfnzWXWzSP78
Ficuf17qzruWKT9T8RPWnuanYyF2XevcKUkGeEuuk/x5+wBJkj+/NpPLn+9q
eLR9xeUU5Bq9mv1Vkcgfb4qMS1vPBP31MZI/360pSfLnrSI0Sf483YDLn18d
zOXPZy7h8uc3Tep7KqmaiBqvifmOYkWwOTFmjkZIPXr0ufx55c9c/jxtgMuf
v2IeS/LnY3UNSf68byWXP//xp5PyEH/ew0Bx3BB/Pv7QYYMh/ry7KJc/f6WJ
y59/XsLlz9PNuPz5vUv2kfz5+3Zc/nzzNC5/fsbCTyR//rotlz+fFDiH5M9/
HlAj+fN9ngl/yZ/XjOf6JqRtub6J+iVc30TVa65vIlLejvRNbAvj+iZkK5x1
8sZk4J6+b3WcpAfsDl87Ro8k8rpFXN/EsmWipG9i73Ih0jeh921yKtMuHTPu
7Lr2zSAQC37YvIrlpWN8swXpm1B8LU/6JtSvcH0T9yPPvuZJTMOR0s20uGuR
kJ4n8FMzkA4ntjnpm0hO7id9E55XB0nfRK/2wMnlbqkYlTlq65Q7cdD4bdK9
9ioD1iISpG8ibNYU0jfhG7SP9E0st2shfRPCRptJ38TayVzfhIvQqvNDvomG
WcXXer/mYPktR98h38TB5VzfBI8K1zdhSfkmWjKvntz0JAF3HTOwQ5H4Dqw1
lT05rQE0DXfSN9Fisob0TUQ8fUn6JmwkG34P+SZqLSxPxlRVQjzivvaQb0Jg
Syjpm9AtjSJ9E4uquL6J+gNc3wT9Edc3scaA65sIHpTUnXcjAS3rAhYeraah
MryR9oSo404E3Sgc8k1s97D4rryfiQ/xTYV/5ZvI/h5L+mWWpXuTfpmt/ly/
TJ4x1y+zRW0b6ZeJreX6Zfwpv4x6N9cvI075Zexmrdy75l06pHu6tXO3P0DA
KX6NUaU0eLleI/0yV9zFSb/M9KhDpF/m9PVI0i9zKH+Q9Mt0J94j/TIdG5eQ
fplDOStIv8z0vELSL3OF85z0yxRoMki/zO6j2qRfhvejI+mXmef0lvTLSG1T
Iv0yhS5epF9GQKGA9Ms8dHQi/TKFppfmx25LweU3Y49c352OO0Jf3507woSB
DtcvY5rnSvplVCdtIv0yanHJ2iYnkjBYx3Lu6MiDqfgcQdUCFgxsuX4Zp9Gx
pF+mW5rrlwn8vpb0y/hPu0v6ZfiL7Um/zLbVL5KH/DIXFrbFD/ll2pK+qA75
ZXh/si6Xvo/D2Nd28S1BVei/0ochv4y7sdGrdOJeUPgwSvYRcS/cM7Ua/ZG4
F+anetHpAgkIdP/i1iFeh9glDVlDfplHLVy/TAmD65ep/oNf5tEirk9qwiNT
0icV2MX1SZ3yyJAc8kld9uPLV1VzxMXYEzZDPqkBA4v1KwSIc6f7fS35fRua
Nt9MFJ/Q8D0rg/RJ1U34RR/ySaWES5A+qXOn35A+qWBjX9InpRttQPqkJDdf
mC+7Mx1Sb2z93zQ8hkmTVqvpMjoKmDKkT8pjQQDpk0q440/6pPK8Fq5tsEmD
57EtcoFWz9C/daL9jzw6DDwqSJ+Ubmsw6ZOS+8j1SSUK+5E+KbHYl6RPKv3R
YtInteYp1ycVPkaE9Enx3+D6pPiYvaRP6iyvKemTinl8ifRJhS/n+qTMjXtI
n9SZFVyflILt/q299Yl4q1Hf5vGuAEprB2qrltUj+ODYn7ZpCTgUFSklRytG
WHp34dLRDTDQ7SB9Uqrld0mf1NTbJaRPquuYgfaBwDjY2QT5bz9Qifc+0WdF
D7KhXPmU9EkdF9cjfVJfGfGkTyq968LuIZ+U9NvnG8861eBA9g/1IZ9UqgrX
J8X76NeYIZ+U5gelv/RJtVP+uGcGXH+cOuWPO+/5/eiQP66icIe6W60DQgQT
tw754yp5bpH+OAXjdNIfp23C9cdZSd4m/XG2KtKkP64nieuPu2fG9cdFLOT6
425t4frjzIUOlw/54/i71o+d2BEEhyaNmCF/3IbYR6Q/zmC8BemP65UYxR7y
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
UynDqospH09f74CUfVvq3ZR8DEzCJ36sDHs649N9AjqQnFiT3DUnH++FnKd4
jSuRomLsPbSkEwK1sRT9ijx0W8VkdG6owjH9oeWduzoRaPu7Pog7D9USudUL
aqrxQHljh+GbTpTZqb84VJ0LNq2wNRWJNbi3XF31zc9ObLflPej7Nwcyv07f
l7OvQ8Wyl1Yaj7pwT/q9T2xBDuH39nkfsqjHDotPN5YXdcGr2WhnQHc23lv5
ndXZ8R7nMwxjHsp3I2afjNK+Z9m4fOhzemLhe6xdXDiySLMbDexXPIJqsmGX
8vVCoEAjcif65KrNurGdjHv2/4i7eh5rbv2DAGtu/ZI0a259F8mNFrH4FZL/
TmbNs0vmuszOsx9PYs2zT5JcNo/F9Ujed89Ju4LwWStL/a8/X+eLgfnJcfQE
OjpIXk/yLyRXSGbNv4et5Jydf6e+EZidf5cmuZMIi5eSXNixfhvTmfBTzol6
koZh6Jzsq8vkYoCf5CdcWLyf5OpHrGfn5edmbpidl2+VYc3LK5E8k+TdJOeM
uWD/N5eKCS+h4JH7CVg0rLFkXxjhp6JZvP4hi4uQ3NHPfHa+fur9yOx8feHk
9Ox8vTnJ7zew+BuSc6Vmca73puCiY7n6qsfZyFLuSVKzYWI0hcX/kLyM5CGr
RWfn8d8+mTM7j79oleHsPP5//h4E+fz9ANbzkuTznfc+zM7vL194aHZ+f6Ce
Nb9fSnIbkk+RPPrAF9WZuX4vnTnbvv18jSWnwotn5vrdSP6L5LIkH9rAmvf3
U2XN+1eR8/5vSM6/k8V7Se770/DlvqhcTN6lPzVQroXCVI39taVdMCP5g3ss
rkXyiVqv2f0A7Z5qs/sB9g9mzO4HeEtyKS8W1yP5gXepu2b2BrinPryc3NiA
Y5udOWf2BhiQvIrkBiTf+i1mdp/A4TMJs/sENDJZ+wQOkvwJyTVJvvAMa89A
QBxrz8Bvcs/AKpK3k5zdkMUFH+UtkniQi8tcHAoXCR2KC6kQjWbvgTTJ00me
SvL5xjePzuwlWFI7d9XWU+2QZj4On9lLUHzVd5yP0F/NkxzzXEyc8boogE3I
gQ5Jl4iaK0RevaD5WbcH1RmHFbIfahF59ZM7B/M7CZ2Nkdze16/lhb/XBu9P
Enmy87KzKdlLitB9s/PJl3JvJIlWxUsTebKg2/7N7N3EuZMKfH1dPADR1yRe
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
365L8gA5Fr9Ccm1yr7sfudd9HbnXfQvJ1f1ZfCvJ//Wx9r17k/ve95L73ntI
viOHxU+S3IvcA99D7oFXIPfAXyD5UD2La5P8PrkfXqCQtR8+hNwPf5jk+ygs
TiV5N7k3/ia5N16H3BufRPLOEha/SfKr5D55VTHWPvk4cp/8f51rBfL5HnHW
883k84vJ/fOW5P75Y+T++XdOLH7mLIs7k/wquZf+hBhrL/1eci+9OMlPi7O4
LcmVyX313uS+en/y79S95N+vs8i/a78jeR65x17JnbXH3ojcY29E8rseLB5G
8mhyv73GJdZ+eyq53343yUdJ3kPyp+Teezlr1t77VeTeewrJy0m+keTryH34
aeQ+fDlyH77O/9mTX8fiqiT/Re7J3x/B+jv1HvLv1xLGLD5I8mMkLyb35xtr
sPbnd5D78z+TnGMviw+R3JPcq99I7tX/Te7V39CcZWepXoQdCpTzFeFOSLVR
qwwm4s4ufihwpt+MJhu8cqbfzEA84tlMv5n2FVnthG1FcBHj73hl6IJl3xPS
DzvT0fiV6jfTb9YjuDFtpt9sicPUz5l+M21uupKcZBG2fiv9ukXME5z6Z3mX
PKGjdM2htWpiRbikVlMmaO6FY9l5TTP9ZlHTRTtE2IrQWKk90KXni4GnK3Yv
TqKjd943/5l+M8aVUprGUT/sfHRrxDODDivx4W+KLTQojr1aKq8ciNESvs6D
RB46naTcIEOc9xdWNbyx5k8htE8vfKbf7MzvSLfFEcQ9cPfvyniVF7hQwS49
Z4yOpL1js/1mzt9iZ/vNalYGzfab7bWg1x48TcOWB38DJHa/BGMiYI6GJANB
8rHeC3VoMOXe/zVeOhJRGVfiNygwcFaLV3gVPw2itRtFb7+KwfB+/hyD0wxc
8z+3KnqaCi2XpsNyha8gMlhwItqMgVVsPz/Wp1PxoyXBidaYAFOH41vqIxng
a7ov3RRMxeLMt3PXCyfBf38LT1ImAw7hsfIJGlRE54xTxi3S4D2Hktc3ykCU
eEvJTL9Z1Y+1ijP9ZtPplLr/rd/s1ZvVr76XU7DFv+h151gmdv79lNlxmIkf
z1/5ucVSYCWjwMOozcK66ge75S4ysSt8rqSlMgXi4saPP3zLheKLcTGpfCZe
bd4w22+mayw6229WtuLgbL/Z9qHRfUlPCsGr9z7g9S0KXK7kLvNXaMfgUdfZ
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
u1sYnybqTO89N1yTHoR79ly1DKKOgJWxfQPhE8zHzXt5NlagwtJ4pxrhE7rX
Jyg4LKUh95ud4q+tUTDUF73SStQx2ck8UptGRQR9wtJW8h5aDyVm3vxKx5ez
3177DJIQOHroscndGlxsX2gV+ZeJrJSkoW2mVNhOcB+ueJoOz+rBusKtDCwy
v9qh852CgdLCjtBFOdDYoCCe6MLA/TSy4uLnNRgVmFwsPlALWvvmu5o1LFDv
Nqsp/CHjlWFZt7dzCdwX5GkdlWHi2aRqyyciV1Zs6H2zbOwedoyam94icuXp
DXlLl5wkI9tOVTV/sAIeanJLRVKYkLz7W6VuQQ3G8qte05saELhyzPG3GRt+
MkE3T+SQoM8Uufz1DQlTJH3xjRIsuPo5CkQeouL+tUNTz3dkwG33q0fh8gzM
RuTIkEWrkV7CXh33vRnzSa7ltFn2//i/muNfO8f/ZucW19JJCqytn5+y0suB
x88LZhNuDEhvGLj0YbwaX9wO3+UWawRPXKaxkgPRr8q/O9lLVWHf+7Z1Rxza
US7RvPBr2TDy7gdUOryqwv0QW2fR+hbojfm+7ZYdRk+A28Kexkrs3ff5gh6t
A8tZ/LufzgwjcU1f4TFCV7U/dvlsWO2PZ39zT0jdoGPNrJnqfgJPWCsX+Xet
Pwydk+UUCHzUP2DJ5u00KJ9d1oE3QRh4d/1ObTgd5tZlIXocMqRFFS50qpWi
pqOrPVSDCYm3+vVafIQPNzhn8Hk4CgrPh8RFson5ohNXULiNBs9kMb9zXMHY
JDhzcm0E0feiGvze7CdDg1O0/I93JZSshIQFC5jIo/UdTOCloY7L/MeuhdG4
lBKcl0jUIb1Kt7ufSMXXfJHonbop2Jph3Trxi47unomo2SQSKgI6U38eIkOm
/UBSHpGXT196au2sS0VRT5r4teIMvJ2wEtyjwsDdc8VnXo1QcN93aaP+vlz8
PcenPe8WAzde0jNbg4j5Um/7I+VbHV6NXZylT7Ewu1KroWKADBerT8+/hZci
+YRWD88+JgYLaPrxUVQkp0qYRMmmYkQyu+3ZPAb0RhIfbN1C+C5FkfO8B6qQ
fHU5t0w9E1EDW7smHhL9oYnwomubsKRZ/KR+Chv+JeErD9mTYFsSF/W9nIKq
43oLWSYsHFolFilJ5IiHuwKlXoo8xPqCJSEJRI44zpI5ZlRYBffwZyWKfq1Y
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
o9upWY9M5tHVacN8nIo3WfXxugAlXvZSThwasu1/NDilE/XDw2f8vvMCZJus
zt3dR8OUpEblpIMC1BrPDDR5IsD0aJpaUCYNKvJvv/+2T4fr2sGECJ9MmMl5
fbU3YoN/feMWFedkaC52Z9jFfYT/zd+HjF9zoV/149CFL61wECtfk3KJD8p6
+d1P2+hoGJyyRLOFij6J8xPcj/Jwvbk3ZNiCh46bV/S1/IjPXd94ypICPmZF
78vVMacjBoVimnvqoAGPI9flOmBbskr0cygH1S83ti7pIn79QL11zBAf/RaT
l4m212O2zdLh2JlsTO2fvKTmRieCV9+PT3BiYw2/tf/pLB683Wttb13uwvdZ
18Uli5hwrS48SrvahZzU3VccNgoQedycnmVVDx2F6TyfRW2IvGXutusWH8wB
ax/HWjpo05Ao6Cf61aC92TM/8tEeabfypiYdEjVJGgu28jG5+rHLt8MCGOlF
9/fL1sP35CdlHOzEe5kj6ROnCDB+8FD23Kx6bDLLj9n6iY+xfTP6064I0KSu
rxLSQhMaT3mRbKDUQSI/3tntoGQrgPWqxMjAqfVoWqP16yLx/b0+4LT+l68A
e6p7L+9KpqHF8pJp3UwBYqUr1CVvEX/+0vXCCTQaFDumDzXECTAUKnYrJFiA
9ER+8YxQGq5eD35+RZCGHxKuBS73suHjoH5jbRQb1OL43rCl6Vhmn/z8mHEW
Mu65WSx2Z8NAtN/FkpuMI6+Zrc+t6xETv8Kd84HAhwPX+J0n22BD37hi0JsP
VdffS9dk0OGR+15csikb1aVt/smyTegpaPlI3UR8/4o6K268T8aZuDwvbjQN
BzXYs3ZkclFWl7P55ZwOJJp0Kp9h8XFg3B6XliV0rBR/G7Lgdja6tLluy7/w
ILsy2vbkNh5ydevDq04R50/aVELWsQORDZrO77Zw4PLjgcFHog4N1cj1RE4T
QJqvnNqSWg/XhA/XX25owOCyn4MDCZ0ouk1LkprPhui4OZlGRH5KfEtbdSKk
CzfqwqSP32NC0nKTRt7VNmjF32tZSOQ3u4ieHW1JdHyjnf1853Yd4iw9bqiu
6IAI3yot6DEHV7tEHpSt78C2EiufGC4fp1tZxxwV6DgRWHTlEXEflj/Z2PLF
QYDqofsvpMUJfOv6RTDBrxO5JUsMNskKMOlMfWBOdD38pNr7ep6z4cNVLPAi
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
QcpdGh8mMyIRvoqOfCFze8EdpWavmHxwZ38Ns/zdjIEHo+dvEyPwMO+LXf2D
TmxPuLrw/iwBVnRxLJbG1Qt9dwhf+WZZcl4VtA6LZNHpbfDg5zzRa27EoxFz
+wXk3D7Cowlh5V1IPoBfe40FaFnx+NKYzUSf+z/O7YW9J8acXxwpeErFQcsr
rM69ARD1NV3mOMCAJ/meeJd8TwT5nnihl7ZgB3FOVbc2sjTXdIJ5Z5zZ2372
3++MlSPeGS8r4Gr3nQxsPS6f8y0oCVyT6XrNbiwcEHG27bbmYmirkkjvxi4Y
yOt97FzKgv3Bl3UxpRSoRizwc5lbDL/sF60x6/95Z6wm3xnbyXfGbYVxw84a
zXh09BhTfjwfWep2HZVVjP/5nVHYu56w90cx79OVE8tScOnQ2fOfxFio6mlw
2Csn/P2xjR8Vc3VTG6RtuBWMe3yoSyfqnCylC32X7NisaCLtno1uFSn3lZ1/
dMKtrWoGPKjskdnsp9KBea0qnJIGPngugoZVC4W/S1qP3nSueFEJhtRWnL5m
0Yogv1XXZ7zjgjbiXTKYfJe8cepsiivRt4d1r/RNmkfU6xT2srbQegyR75Lt
5Luk1b+8S0aN4DPsIfkMzJORoi5UKrLF+u88oT+DuM9TlaQG4XyG//IWBkfw
FvZbFGz9tTATfToeP6O14pGQcZ/1ZRwLddrhVM7aNFSoODQnjs2Dcj1rw1bV
f/gMwSP4DNdI3gJ9BG9hO8lbyCZ5C04kb4FO8hPKSX7CPZKf4JyTtpSdloyw
t1Iiiwn88dyqeToziyuUnyCMh+C7aijE9lAqHj9ssLYez8WOyR1f7hF5bCnJ
Q2gleQjPSB7CiVluL37F5kEzI6Rx85Vm9NhbdVjL8ITyEzpIHoIeyUPYT/IQ
2kgeQhXJQwgieQj/5UGpjuBBecsnVu9lUcFKeF8mHeYDF7GE2BvFwnlQGxd4
r1aeTeDD2Yk/4r+34QUcKKIFjUJ5UNrGb6/+8MvEw/wxDx5qRMPcyk1sQhIT
TC3LOBD9yvQkaU/zmA50l89tjuE2oGuhiOfSLem4qv8gZvQTKhxXqZxLsBXO
g1IJC50e/KYBB8smqQ7lEf36uMrVA2PZ/zMPShiPKJjkQVFG8KCUO76LhXKS
kOnQNN99fy1+GQ0nH3MSzoPKtrnaX9nAg+bU6J9XMrtwd6rM6iOWwnlQTvOL
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
pm8i0rD3/Kj8MzdyMKXKa9d5DvtvH+BXI3yALZ6PmX7ybR5EQ+ZLj3NvxqEm
BUGJDA9KQnyABaQPMJv0AeaQPsDCfM59U7e5HluVhaJPC8b0GHpihZdVzpmb
wn3OrfMay2UdU9B3q/g3v+UDVkTwjC5rEvGSPucbR/ic7xjYOTntNxVrI7PW
H659hOXfx/lsi2UQWLBfZ0JsErIXX5xRFFSD1oOj7bmHCHz7+GRJUiAVkot/
0nIv+iP/3jt6ep9wn3PxbSe8XWKSAccZAxl+NEw8OmHs/fR/fM43kj7nXv/i
c15K+oQf/D/6nHfZvnu+73QmbhwwrX13IwZrUs4c965lIpb0Ofcc4XP++ptx
9AILClanlrzV1m1A0tbVbaIm//ic943wOc+zenGi4FQGFlz8zuQRuOz6kXr5
Gi8WNqin1smLZSDXPdjjPYFHaacMuCsc//E5txoRv39s/tFBpXRo2YjMKfHM
ApXNLi26JtznPD/1kLGHcw7EZZ5J6BxpQozX2h2X1gn3OXcgfc5ZI3zOg33+
2uMwOs3pP3sc1Er+2uOwzeXLebE1WYgzPfMj+IsHVi2l3gXxc5Hwv/Y41DZo
/2ePQ+nlv/Y4TIwqWHNnIwXTw+/c5YwqheTsCc+8X3Kw2vWvPQ6rWu3/s8eh
YPnh/+xxyNaX2VsrmoWzcd90syY8wrPXK/SmRTIwwJ3xdJJUMs5MeJXxoaMK
sfWvl16R42LFrD0Pbryjwszz7ixm6nMYb2y6Mb+LgZ1Xj42OvpKJY3OKXzb4
v4N6XkSOXxETCu5iCZ80khFB2yhxJLEO88L41ywfc2ESSUmM8s/A6c/J1yYo
JKErd2/7nz0OPZN4Df6X0rE67U2wo3QmBr0UNubqsBHd8dcehG9O2/6zB8Gj
4K89CHErZor92eMwSm27dbBGCXQ0353+s8dh9mFlpc6ATJQ3Xdv0fDAKIl3x
w0oJTPAG1sr+2eNgeV4s8M8eh4XtW8782eOgrJCzpCQvBQ41edJDnUyceOmq
XiPLw52SoWV/9jisNXU/L3GwFpzHIW5/9jjYHa0/r5+SgXCmzS6RA4kImzZ9
drAFCy0pgZt28yiIqD9o+8uyEZ076nR7LvP+jr+bjP8GGX941IyJjx6lg3J7
uJFxJwP2HWmbmerE/Vr71x4Htci/9jjsif5rj4OagaHhvioqJsfstn5E4EuR
7k9WwZYEPnf+a4/D1Jj5/9nj0C/4a4+DWaGZbzUvHRvupab/2eOQNPvDsz97
HBbpT8j+s6fGaJHyZk6SBwJ07j75s6cmn63x5Rjx8w3nNWAX4gHL3llftYif
J91++mHVhCyc4B1VOz7bC5Eflqf/2VPzRkN1VVg/BZov55fbXCtC8twHDqdk
OUgee4L2Z0/N/pdxXCl7PzB0Zqn82VMzt4m285d4FiwmcXYNJD3E+cNsyqNw
Bl4s3S4tOpCMOUEKG4vuVaDc+F0lx6uR+FzWXNyRTsWENMWWZep+MInfHTGW
6J9eZyd5/tlTI1q5ZJq3ZhQavaWf/9lTc6Nj954TpUkovuT2o2NiLfr2hHw/
6EDUo2C9mj97asLOS1ZXGb/H1YItCn/21PgeaVu2tyEdRqpqrcG2aRCNj7vp
+YuFmWf/2vNS/+WvPS8bS//a8yK6IyX23KJUPFePn3exqhDjaxDA7W+ASYZJ
RVxeJmi//h9d5x1P9f/+fzSJSiQRDaVCJUWyHhmRKKWhVEKlUkolZFU22SJE
9iYj+yxkhayEM6xKRmVGUer3Un0/f7xvt9+/1+3crh6d5+Ncz8fF8br7JrW8
TcXIiZAdOSEMRHvrX2++VYjVfkmrvvbVoyDzdu8cpyaOJPximXIhivJshJY3
d+CCo4M4z5ce/Bzs7dntko91kVURK3qbcelIkVX90R4YNQ3UOU6SMdJ6LWpn
fC4yvmdenpFiglT31MdVqwg3KKb0X1MsPNI5quOr3fs//W3/0b8hNDl9yTAJ
olFPVNnGi3FlydSg+jATp/r/cmpMlf5yap5n/OXU7O58n8JJ7C9pfAJJmrd6
oH157eqtdsS9fCV92QNiX3CKD1DknOPUJPEHzXFq3vjkar38QPjwzuqozKvd
uJZ0vmyOU2Pj9XbnHIdL1tfyyK6brijD6Mgch8vqcJxvCFF3/nnZUNXIFSoe
Y4NGRH39wM3wwaU0LLJNMr7T5gszjaM5mXFE7lom75YQVIywvQ+/2xpUIu5b
R+R0Sicyf1lcnONwiR559Klx2RPwXtdImuNweff03LRYTszxlwWSpg98wfRn
2xgYS4fmWg07x5pC1L7hXi2XW4fFWgPlItNd+LWUnqVeTYVIVJny5a5Q3Ffd
NKbSTodg64Y/HK6Npz794XC53/zL4QrMsDUSKiTOa1jEZ9S1GeG0NaXlKj2w
2vWXwxWUq/CHw2WT+ZfDVRUq/4fDlewY8IfDFZSs+4fD5TT5l2PVyrPkD8dK
+cFfjtVHurTPHIfrxtnd0+GUChysCObZ7tUJel/ru7G+OS4SxvVHkhFfRbnq
78DArYRbdw9IF6Fc2LwrU7UWHfPsRuc4XGK+qf5xFcT8FO+ZFRlrg+C4ba3K
S8Jv7UWd7RYFWOKoJ+u6rwnllBGr29+6sauvor9KkoJFBXJCuetz0DVQoiq+
gInns9tdr5ALcUOtnutJPQMlN5/6qK3u/Z/+N//R38TdvrdfmYySzLB7AyWF
UMqLK8h4wUS9wadXcxwusynHvjkOV8pJstYch4uTpLjvaDlx7xtLnDTr6YLA
/rbA7Va9EDBUvTvH4YpbM+wwx+Falum5bY7D5bf3L4creuNfDpdj8V8OV2rt
X86g0YbRP5zBaam/nMFt7IULB/hoIH/zt6KV+KBIobx4XjQdayYLZo4IlYB/
SZkM9e5L2G1e2Hhjfyda+/Na5niCZ7inrOOYIejRvNnr30TsBZPq1+rti7CG
1MDykX2FX1oZh/yJe6eIyv6HD5huoVgwxwc0+OD0hw+4VO6KjNbTAjQO+Sfk
dzfiMXVR1pq2bqg2s6tqHqBgu4BWyjGDbEhzXKYqjzLQRA4+8tGajI3ulNdb
xAtgdfOa2Rwf0P5G7h++XuFhoz98vYiWv3w9hkjMHz4gzXDiDx/QT/svH3B5
bhx/elsRPCKzj/SPVyNWm1U2xwGc7U+7L3G6AFwrBwsbNd6CrDH7dYTY71w4
atfNcQA/sDY9kU98jfkntqfOcQAPB9lVDKkUYvsg+827HcTesZpnRS4xr+z+
6cn/jx4hV63kOa7f4R/j0nNcv0k79M9x/Th4d+Wt2F0EjQmWzINUFhpK9yi+
VuuFrOpfrt8N97I/XL91W/5y/eIl/nL9bmzy+cP1e1n+l+v38R+fVOf5Xz6p
wj8+qeZVjUt3ibru06BjlRMu4Dn/mfnrIR3sL/ednOOTfvxiWBdc/ghX539U
bHxKR1jRA2pFQAkiR+vFtzaX4XxrR6T7MAtnm2i1NXQq9k/JKRs0PcaFkvTb
c3xSu6fZvyxX07BnovST7oNHiIjMWfM1go4rS/m5+wWLcc5wKKZkUTVOTWuc
1eHowreVAq3iTCpSnMpMH6Q+xoGmE7HJNXSkhlglH+Cm4qGdfHljQyIULpy5
ccOYgcU6V27wXyzEaKV8LkngNZylalRfqXXDt3Jkk/YdCq7FPl1Uo/Mc3Yfc
tmU1MXBydOVUZR4ZWSpOpVU38iBgVL/Y+iwTFWZ7S+b4pO6Ngw1zfFIFKR7z
OT5p4eKzQ5YixJxcHKCygZmAH0E7e9uPMXAn+kjyHJ/0ttTy9tKhSuin2PrO
8Un3v19MVpzOx37e9w72VW/wa2ff2TgH4hzXfHOPHStE1sRFhw3r6uDZk+I6
zOiCPL9urZ4LBeaRfizJK5loi34n8qWCAeszpwK+viZy1w+OjeoC7TibPrnK
vqoHHap+f/ikA2YKf/ikaYk5f/ikgaOXOD7TyDj1XfHw07V50Ow4z3PgOBMX
R5uOfuie+zmGS5QDkcee3rm1b45P2pckyl+ZW4gVL8kG25IY+GIzMj24shff
jv3lkz6Ru/iHT5q98i+fNJdf16PtZCE+Cs2y1e2hI7P17OjvScL/J/5yjb9G
Vf7hGotL/uUap05aKe4h6mGa7y6U1bggXjw3wZKo54r/5R1X8v/lHV+q+cs7
nm4xk9sxTeSJ4Lx4c6NSWI8wqoZiWeBsMlqr+I4KM/93LVd7gkFG0Pc53vE8
cpOujAgNrJc1r7+neaMqX7NJhujDIOs8NY8vxp4HltuGhCtx+urpVemRnTDJ
mPfY5j0V4ts2tetSglGT41HrW04Hj7T3Hz5ylBvn1jk+8jdF4z985BmK97tG
/iJICy9aIR9fi6qvJ1JEy7qQw/+Xj8zn4vaHjyz/+C8fedOXv3zkXJ5Vf/jI
Mq0Of/jIETMqf3jEyfyBf3jES+tc//CIM0wuZusJkPD63quoX19omNGrW+Lj
w0JHzbrVV3ZTkbdoe+jU43i0nNl88ZcaA3Vsd/SrB4sh05h3auWGCrQEvjBa
crUTWfEe5p7x+XilGlkxbNkCN123Ne+MerBcj7xsjpt8+ZtSYvyHGuiK71Ro
v9iFdd035r1MpkBil5KGg2k63O9N9G9PY+CrVN1bkysF+Lr1iLjVw7cQvNq9
Vz6+B5H/9Mf9R7+N4Q2zHUS++sRbedwoMRdMv+ufd21jQirgrfUcZ9lKMejD
TYEWKFj/FpvjLHcJWCd7EvmNbYf15vGWDrwUfCW2h5iHujvXClTJFmCdvtqd
8sJWaIwVxsxxlp3EXzXNcZYXXS6aPOneDvN7VUfnOMv6pdvpc9x2MdFmzsp0
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
     "],
    VertexNormals->CompressedData["
1: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
     "]], {}, {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"", FontFamily -> 
      "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \
\\(LM\\)]\\)=\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(MR\\)]\\)\"", 
      FontFamily -> "Times New Roman", FontSize -> 14.5, StripOnInput -> 
      False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
      "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
     TraditionalForm]},
  AxesStyle->Directive[
    RGBColor[
    0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 13.5, 
    FontFamily -> "Times New Roman"],
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->Large,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.45, 0.55}, {0., 0.03}, Full},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.643258446800182, -1.8934310278317197`, 0.9370718895920523},
  ViewVertical->{-0.22512998827289035`, 0.16126614694348165`, 
   0.9608900656319909}]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.842667241543908*^9, 
  3.8426674573454847`*^9, 3.842669250605667*^9, 3.843265674399*^9, 
  3.8432681705086503`*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"e23dd3ed-53ef-41af-81a0-de443f537928"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2498, 1397},
WindowMargins->{{2488, Automatic}, {Automatic, -4}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.4 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "H:", 
   "OneDrive - Monash University", "Research"}, 
  "Custom Notebook Stylesheet.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"40f46dea-c5df-44bd-86f2-ed406d6a2be5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 707, 17, 122, "Input",ExpressionUUID->"19bc9419-a259-4b95-9793-c5f14aae470f"],
Cell[CellGroupData[{
Cell[1290, 41, 194, 4, 127, "Title",ExpressionUUID->"df2f513d-42f8-4682-9ed3-7c6f063f0c69"],
Cell[1487, 47, 810, 18, 110, "Text",ExpressionUUID->"1229f72d-8b55-405f-8acc-885540b92bbe"],
Cell[2300, 67, 194, 4, 87, "Section",ExpressionUUID->"8256f38f-83da-4593-81eb-aa553b70723e"],
Cell[2497, 73, 186, 4, 40, "Text",ExpressionUUID->"b4ad0846-f57e-4812-8233-08e272066d52"],
Cell[2686, 79, 347, 9, 65, "Input",ExpressionUUID->"37c1b27b-c65d-4fd5-9bad-1041d6cffba4"],
Cell[3036, 90, 250, 5, 71, "Subsection",ExpressionUUID->"ef83611a-5a8b-491c-93e3-b7689289b4f2"],
Cell[3289, 97, 336, 8, 40, "Text",ExpressionUUID->"2f4fb805-b245-4178-9d3c-93f3159b2ced"],
Cell[3628, 107, 315, 7, 40, "Text",ExpressionUUID->"ed93ad81-8969-45a7-828f-5a46feacd2de"],
Cell[3946, 116, 1561, 49, 74, "Code",ExpressionUUID->"2b55960f-589c-4197-93a1-602cf2b5a8dc"],
Cell[5510, 167, 870, 27, 108, "Input",ExpressionUUID->"7ffc7def-e443-40f7-a063-be9af5fdb10c"],
Cell[6383, 196, 874, 27, 112, "Input",ExpressionUUID->"1f79d20a-423d-495d-a956-8101bc70933d"],
Cell[7260, 225, 926, 28, 108, "Input",ExpressionUUID->"48a2d7ab-9414-467c-9935-4fa9975fbc1c"],
Cell[8189, 255, 405, 18, 319, "Text",ExpressionUUID->"be56f688-0964-4302-b9bb-719f0e844ef8"],
Cell[8597, 275, 600, 12, 40, "Text",ExpressionUUID->"39d0b36c-8425-4c3d-aae5-5673ff92f7d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[9200, 289, 4155, 143, 125, "Input",ExpressionUUID->"2d79f8b7-2b01-4f42-87b4-61b7e9576174"],
Cell[13358, 434, 256, 5, 40, "Text",ExpressionUUID->"1a1a4deb-03a1-4b0f-9263-4385261ac6cd"],
Cell[13617, 441, 1515, 38, 122, "Input",ExpressionUUID->"b19d99e2-4cef-40f9-ba8a-71cc7cfbc37f"],
Cell[15135, 481, 311, 8, 40, "Text",ExpressionUUID->"9d87d23f-744e-44a2-a1e2-c922236b63cc"],
Cell[CellGroupData[{
Cell[15471, 493, 909, 22, 93, "Input",ExpressionUUID->"478248fe-4674-4fdf-b06a-fb51797b7f5d"],
Cell[16383, 517, 5313, 148, 503, "Output",ExpressionUUID->"3cd7de25-2f8d-4d1e-ba81-3de09ad0caf4"]
}, Open  ]],
Cell[21711, 668, 267, 5, 87, "Section",ExpressionUUID->"28d5d770-f371-4948-8ae2-5735899eaa18"],
Cell[21981, 675, 1483, 37, 156, "Text",ExpressionUUID->"69389f51-d5b5-4516-9ae0-04329595ae9a"],
Cell[23467, 714, 2458, 77, 125, "Code",ExpressionUUID->"c808d86d-2fe3-40ea-b831-97c8eb7d1554"],
Cell[25928, 793, 1096, 18, 40, "Text",ExpressionUUID->"4f16174e-a0c6-4223-a792-e86a0b814102"],
Cell[27027, 813, 1354, 43, 112, "Input",ExpressionUUID->"9be341bc-bdc3-454b-99b3-5b4ea5966ef9"],
Cell[28384, 858, 1192, 17, 40, "Text",ExpressionUUID->"cef78387-f830-43d1-89f3-c45e6108b29b"],
Cell[29579, 877, 1758, 48, 112, "Input",ExpressionUUID->"3009589b-9897-4760-aab0-119f536a348f"],
Cell[31340, 927, 349, 7, 40, "Text",ExpressionUUID->"99bb7f63-ca00-4952-b454-c6c31daafec8"],
Cell[CellGroupData[{
Cell[31714, 938, 800, 20, 93, "Input",ExpressionUUID->"27290db5-7cd3-4ac4-b8e2-ae9d7424f456"],
Cell[32517, 960, 2779, 65, 471, "Output",ExpressionUUID->"e7cc855c-7e94-431e-ae96-5e64e3cde3af"]
}, Open  ]],
Cell[35311, 1028, 200, 4, 87, "Section",ExpressionUUID->"5b15f03f-8ba9-496b-bbde-3c982bc4ff4c"],
Cell[35514, 1034, 615, 15, 63, "Code",ExpressionUUID->"842c021b-5895-448e-b366-3e59de25eb49"],
Cell[CellGroupData[{
Cell[36154, 1053, 456, 9, 93, "Input",ExpressionUUID->"bc656a36-1b8b-42c1-a411-61f8009fcf6a"],
Cell[36613, 1064, 6159, 172, 503, "Output",ExpressionUUID->"3f68ddc2-4975-4b5a-90ec-d620567914a2"]
}, Open  ]],
Cell[42787, 1239, 277, 5, 71, "Subsection",ExpressionUUID->"d3731827-5772-4af4-8d56-faec4bd18752"],
Cell[43067, 1246, 334, 8, 63, "Input",ExpressionUUID->"f6a78a16-e87f-4884-8219-81d88c297d23"],
Cell[CellGroupData[{
Cell[43426, 1258, 281, 5, 60, "Subsubsection",ExpressionUUID->"2aed4a0f-b197-4338-b2d0-92d5bb47581c"],
Cell[43710, 1265, 252, 6, 40, "Text",ExpressionUUID->"95dd61ca-0e8f-48e9-8b40-f4193c9253fa"],
Cell[43965, 1273, 1771, 58, 65, "Input",ExpressionUUID->"7ea8f086-5ca0-446a-a107-86e9196667d0"],
Cell[CellGroupData[{
Cell[45761, 1335, 1129, 28, 151, "Input",ExpressionUUID->"b4cab229-6754-48db-ba8d-7afab628ff4b"],
Cell[46893, 1365, 13682, 460, 702, "Output",ExpressionUUID->"3ae25fd4-6e60-470f-a767-cc3f832fcbb6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60624, 1831, 331, 5, 60, "Subsubsection",ExpressionUUID->"97ca4c2f-89ee-4735-9883-40db15f423fc"],
Cell[60958, 1838, 252, 6, 40, "Text",ExpressionUUID->"12640f31-ca32-40af-a233-bac6896b3840"],
Cell[61213, 1846, 2631, 69, 65, "Input",ExpressionUUID->"b927b931-a6d9-4ac7-a30a-d60d64234c1f"],
Cell[63847, 1917, 1036, 21, 93, "Input",ExpressionUUID->"baa81494-da5f-4c5e-8a19-c61bcc5029fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64920, 1943, 223, 4, 60, "Subsubsection",ExpressionUUID->"278941ac-83a2-48c2-9436-4716049cdfaa"],
Cell[CellGroupData[{
Cell[65168, 1951, 7889, 167, 731, "Input",ExpressionUUID->"d1433650-efdf-41cc-bc8f-b9e099560a62"],
Cell[73060, 2120, 6925, 127, 1507, "Output",ExpressionUUID->"ca9562f6-0fbc-4f6c-8ba7-2eefab39c402"]
}, Open  ]],
Cell[80000, 2250, 360, 8, 40, "Text",ExpressionUUID->"e6f9d14b-78ea-4859-bc0f-6b74263a718b"],
Cell[80363, 2260, 187, 4, 87, "Section",ExpressionUUID->"ec0927c7-36bd-4c50-9237-8bcf452c40d9"],
Cell[80553, 2266, 229, 4, 40, "Text",ExpressionUUID->"408dad37-17cd-4b58-b76f-f3253f54901b"],
Cell[80785, 2272, 769, 17, 65, "Input",ExpressionUUID->"ebb1d11f-dacf-457e-83e3-b522eae8b09b"],
Cell[CellGroupData[{
Cell[81579, 2293, 376, 7, 63, "Input",ExpressionUUID->"30f4a0fc-c29e-451f-8b0f-7638c484b44c"],
Cell[81958, 2302, 15907, 476, 395, "Output",ExpressionUUID->"4e42e54a-644b-47be-9a65-15b4edc804d0"]
}, Open  ]],
Cell[97880, 2781, 454, 7, 87, "Section",ExpressionUUID->"c892b235-b07a-4020-bcc2-6eca9464fe5e"],
Cell[98337, 2790, 979, 29, 40, "Text",ExpressionUUID->"41e0e8e9-4d27-4a91-8a06-48fbfc98245f"],
Cell[99319, 2821, 683, 18, 81, "Code",ExpressionUUID->"d94e06c3-4ecf-43be-819d-111b5371e3d6"],
Cell[100005, 2841, 363, 8, 40, "Text",ExpressionUUID->"608e341b-9ee7-476b-8e37-b481621397de"],
Cell[100371, 2851, 859, 24, 81, "Code",ExpressionUUID->"e5bde381-93b7-41d5-9db9-e5ed3d057781"],
Cell[101233, 2877, 224, 4, 40, "Text",ExpressionUUID->"54ddb463-0eb1-4ecf-8764-88c05adc74fd"],
Cell[CellGroupData[{
Cell[101482, 2885, 187, 4, 87, "Section",ExpressionUUID->"72385dd7-9d82-459f-9cda-67e8dfc26220"],
Cell[101672, 2891, 200, 4, 71, "Subsection",ExpressionUUID->"f4614c64-0ed1-4cea-88be-1a91779d653f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101909, 2900, 384, 10, 64, "Text",ExpressionUUID->"cc8702dc-7024-4407-b79e-089c00ab9780",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[102296, 2912, 2226, 57, 86, "Input",ExpressionUUID->"89d9ea27-56df-429f-acc2-7569b8eba157",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[104525, 2971, 1551, 41, 93, "Input",ExpressionUUID->"3fc8d827-2adf-4d05-9c1b-d6de5989deae",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[106079, 3014, 2569, 66, 92, "Output",ExpressionUUID->"2300a300-0a8f-4839-b36e-8f15c2345e55",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[108685, 3085, 621, 9, 71, "Subsection",ExpressionUUID->"72eaf14e-c094-444c-b5bf-08f8c48017fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[109309, 3096, 3414, 94, 284, "Input",ExpressionUUID->"41e18cd7-c025-46fe-87dd-d878f1ec0ca7",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[112760, 3195, 520, 12, 65, "Input",ExpressionUUID->"2ced1de6-58e6-4715-9ef4-b0b8416d2be7"],
Cell[113283, 3209, 3058, 59, 352, "Output",ExpressionUUID->"faaab86f-dcd6-4c50-8ec7-efc12e95bf91"]
}, Open  ]],
Cell[116356, 3271, 298, 5, 87, "Section",ExpressionUUID->"7a294b1e-9022-4698-a77b-7a2ff2fdddda"],
Cell[116657, 3278, 1018, 29, 40, "Text",ExpressionUUID->"99ac85cd-3fff-4404-8222-fa26c6729724"],
Cell[117678, 3309, 683, 18, 81, "Code",ExpressionUUID->"7501b610-2267-4c05-a130-39be7dd16ee1"],
Cell[118364, 3329, 363, 8, 40, "Text",ExpressionUUID->"beec2ea7-4535-4d89-80ef-f0fef53c8e95"],
Cell[118730, 3339, 610, 19, 80, "Code",ExpressionUUID->"9ebdc39e-500b-4ac0-b483-269cb5ee9bd6"],
Cell[119343, 3360, 543, 11, 40, "Text",ExpressionUUID->"23a678ee-376c-4906-9038-d144cce4f2a6"],
Cell[119889, 3373, 505, 10, 64, "Text",ExpressionUUID->"f641c1b7-3a42-474b-a31b-2ebcdbfc61d1"],
Cell[CellGroupData[{
Cell[120419, 3387, 663, 15, 63, "Input",ExpressionUUID->"04193726-ba82-4a1a-b18b-efa8270ef006"],
Cell[121085, 3404, 13553, 458, 702, "Output",ExpressionUUID->"313d3347-84d3-4ecb-a0a3-094825179a55"]
}, Open  ]],
Cell[134653, 3865, 398, 7, 87, "Section",ExpressionUUID->"66f17df7-53d0-4d8a-a9d7-6e3ec18917c5",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[135054, 3874, 278, 7, 40, "Text",ExpressionUUID->"0e8a3bfe-f924-466f-b3fd-b46f05b082c0"],
Cell[135335, 3883, 200, 4, 40, "Text",ExpressionUUID->"167ac6fd-5762-4375-9ac2-d6658663baeb"],
Cell[135538, 3889, 900, 19, 63, "Input",ExpressionUUID->"fada4882-0c08-4b9c-8bdc-ae1399a2f91a"],
Cell[CellGroupData[{
Cell[136463, 3912, 298, 6, 40, "Text",ExpressionUUID->"fc9e3fbf-d381-4682-b93a-b6f1b1c91286",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[136764, 3920, 922, 20, 63, "Input",ExpressionUUID->"d7437b97-5711-4844-a301-4af545ae371a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[137689, 3942, 317, 6, 40, "Text",ExpressionUUID->"704d33cf-43a3-4b1d-8347-d14488739ceb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[138021, 3951, 8442, 231, 789, "Input",ExpressionUUID->"81668e02-c4ef-4850-b36e-7b30023cf5d2"],
Cell[CellGroupData[{
Cell[146488, 4186, 517, 11, 93, "Input",ExpressionUUID->"88ab12be-ebb8-40c9-821d-5ba94b0311fb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[147008, 4199, 4711, 108, 69, "Output",ExpressionUUID->"6eef152d-62c0-4eaf-b3d2-279b101b64ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[151722, 4309, 2238, 31, 69, "Output",ExpressionUUID->"6f8b35bb-3a79-4374-9340-cdf2a22b6e98",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[153997, 4345, 254, 5, 87, "Section",ExpressionUUID->"3aa884a4-c778-4801-9bee-8f93851cef10"],
Cell[154254, 4352, 222, 4, 71, "Subsection",ExpressionUUID->"d8905ed1-d650-491f-a405-a8519c9cb09b"]
}, Open  ]],
Cell[154491, 4359, 338, 8, 40, "Text",ExpressionUUID->"fcb81107-9b78-4ac5-af38-484b98f0f3f8"],
Cell[154832, 4369, 619, 13, 56, "Code",ExpressionUUID->"f3217fe0-091c-4cfb-acbf-f2ee58bc3318"],
Cell[155454, 4384, 572, 17, 44, "Text",ExpressionUUID->"cf1c4b72-586b-436d-8975-14491f916b16"],
Cell[156029, 4403, 467, 13, 40, "Text",ExpressionUUID->"3146605b-3c97-456f-b4d0-5325520c7a3d"],
Cell[156499, 4418, 1283, 32, 114, "Code",ExpressionUUID->"b2ad4195-d4b6-4f95-a21f-d65859f137e2"],
Cell[157785, 4452, 729, 20, 66, "Input",ExpressionUUID->"a04d84a2-29fe-4da1-a633-5c7f4eec41f4"],
Cell[158517, 4474, 436, 12, 73, "Subsection",ExpressionUUID->"aece2b54-393a-4b29-a705-a0373a141bd3"],
Cell[158956, 4488, 591, 15, 53, "Text",ExpressionUUID->"d1f24bcb-a8af-49b7-8158-67cbd63e6865"],
Cell[159550, 4505, 3421, 94, 325, "Code",ExpressionUUID->"1302c405-113d-46d9-8b1e-704d452528a7"],
Cell[162974, 4601, 481, 14, 48, "Text",ExpressionUUID->"15c82146-91ea-4f2e-b9f5-75d4de63a6f2"],
Cell[163458, 4617, 2846, 78, 122, "Code",ExpressionUUID->"87e49ffd-5263-4748-968b-cc0bd7b7a4fb"],
Cell[166307, 4697, 606, 12, 64, "Text",ExpressionUUID->"a0458861-9e58-4b7a-b524-55cfaaaae085"],
Cell[166916, 4711, 3801, 102, 228, "Code",ExpressionUUID->"ea4f523b-6546-45ba-973a-98df3b4d57af"],
Cell[170720, 4815, 801, 19, 44, "Text",ExpressionUUID->"22b9606e-9f31-43f5-8c1e-66e1cec84a10"],
Cell[171524, 4836, 2202, 53, 57, "Code",ExpressionUUID->"fa332d7f-0b7a-40ad-b08d-8ccd940e9fbe"],
Cell[173729, 4891, 661, 18, 40, "Text",ExpressionUUID->"e2c33991-86ad-4914-a471-d21e0b863128"],
Cell[174393, 4911, 3980, 105, 240, "Code",ExpressionUUID->"f1b3c663-48a9-4413-af42-99a9595850db"],
Cell[178376, 5018, 990, 32, 40, "Text",ExpressionUUID->"b19f3704-6f03-4f9d-a6cc-eab0d1886017"],
Cell[179369, 5052, 3572, 99, 223, "Code",ExpressionUUID->"35e91b25-fe10-48ee-bdfc-ad70244e56b3"],
Cell[182944, 5153, 457, 9, 40, "Text",ExpressionUUID->"e2380069-7477-4a14-9153-ad7f0488237f"],
Cell[183404, 5164, 1873, 43, 99, "Code",ExpressionUUID->"9f10d803-57a5-417d-9803-e40c49769e18"],
Cell[185280, 5209, 247, 6, 40, "Text",ExpressionUUID->"71e735a1-7b24-4e3b-9ccf-faf19577a0b4"],
Cell[185530, 5217, 657, 19, 66, "Input",ExpressionUUID->"5f878fce-3b97-43e7-8df9-01a2f0d2af8c"],
Cell[186190, 5238, 3284, 65, 107, "Input",ExpressionUUID->"2707836b-98e1-45f3-9a0e-99e6d207fbec"],
Cell[189477, 5305, 264, 5, 40, "Text",ExpressionUUID->"f8089b16-c8f4-4062-9483-40848f122731"],
Cell[189744, 5312, 8663, 212, 444, "Input",ExpressionUUID->"c34cb650-8f0e-4c87-ab68-140ad14f5d5a"],
Cell[198410, 5526, 507, 13, 44, "Text",ExpressionUUID->"02c58f0f-81af-4a2c-ae26-824ca607ef4b"],
Cell[CellGroupData[{
Cell[198942, 5543, 1236, 24, 63, "Input",ExpressionUUID->"24363a42-b6da-4e7a-8ef4-063a21bd1649"],
Cell[200181, 5569, 61885, 1143, 685, "Output",ExpressionUUID->"9ae18ea2-30bc-42da-8636-912d5704bb79"]
}, Open  ]],
Cell[262081, 6715, 329, 6, 40, "Text",ExpressionUUID->"08795b87-bcca-4db5-b4c3-649cc555fac0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[262413, 6723, 62837, 1128, 711, "Input",ExpressionUUID->"033a1471-f08d-495a-9483-3a672b4def9a"],
Cell[325253, 7853, 226, 4, 40, "Text",ExpressionUUID->"9ef077e4-e1c4-46cb-91da-dd7937a8bb82"],
Cell[CellGroupData[{
Cell[325504, 7861, 297, 5, 93, "Input",ExpressionUUID->"a80f1d88-9ff4-4ba3-a284-963615a48d3f"],
Cell[325804, 7868, 256, 5, 69, "Output",ExpressionUUID->"6319354c-b89f-49a8-a66c-85c69ee9ce51"],
Cell[326063, 7875, 254, 5, 69, "Output",ExpressionUUID->"e2872438-8bb4-4428-b8dd-f9cdf0885849"]
}, Open  ]],
Cell[326332, 7883, 203, 4, 71, "Subsection",ExpressionUUID->"6b0f201b-7dc3-40da-b3b8-b17277d7bd6e"],
Cell[326538, 7889, 528, 13, 40, "Text",ExpressionUUID->"d474b1ab-b4ea-4c88-8a01-4b3994dbd69b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[327069, 7904, 4572, 129, 228, "Code",ExpressionUUID->"f093259f-a47b-4c21-bf02-0300f25ab0d4"],
Cell[331644, 8035, 3932, 99, 266, "Input",ExpressionUUID->"97075489-4df1-4bfc-931b-3d1b4c350b81"],
Cell[CellGroupData[{
Cell[335601, 8138, 1103, 26, 64, "Text",ExpressionUUID->"494c7efc-43ef-46a4-afa1-563d3c0e1058",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[336707, 8166, 1743, 44, 59, "Code",ExpressionUUID->"8fa9fb71-e449-44c1-a8f3-921d94c21219",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[338453, 8212, 1726, 44, 66, "Input",ExpressionUUID->"6811e453-2291-41cf-a785-bab542f8fb03",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[340182, 8258, 334, 6, 40, "Text",ExpressionUUID->"4b13f800-46f2-4960-9288-d07ed83e9952",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[340519, 8266, 1916, 48, 325, "Input",ExpressionUUID->"1da1b8db-6fde-4df6-a7e2-c93a68280bec",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[342472, 8319, 4004, 105, 387, "Input",ExpressionUUID->"5fc1dfe0-d655-4dbf-9ba2-5f36ea2a39ff"],
Cell[346479, 8426, 84622, 2565, 479, "Output",ExpressionUUID->"810c9a4b-d35a-4986-99ca-ed67e3fb6d8d"],
Cell[431104, 10993, 84625, 2565, 479, "Output",ExpressionUUID->"12cfc1a9-1a05-48fe-a987-563fcc9cdbb5"]
}, Open  ]],
Cell[515744, 13561, 379, 7, 87, "Section",ExpressionUUID->"c8331f47-d9b4-47f9-b68f-52c22c921d37",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[516126, 13570, 208, 4, 40, "Text",ExpressionUUID->"8daf6a8a-67cf-4e28-8adc-2de41762d449"],
Cell[516337, 13576, 6766, 203, 395, "Code",ExpressionUUID->"ac686f90-f79c-43f1-af3b-a93570ba1b23",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[523106, 13781, 521, 13, 50, "Text",ExpressionUUID->"a0ab26d2-f459-49c7-86cf-f63acac6bc89"],
Cell[523630, 13796, 210, 4, 40, "Text",ExpressionUUID->"e1012fb0-fee0-4691-8698-8ab8579dc45e"],
Cell[523843, 13802, 1830, 44, 144, "Code",ExpressionUUID->"5dd02c33-2e37-4ead-be58-22fed51da8f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[525676, 13848, 218, 4, 40, "Text",ExpressionUUID->"3db8293b-1885-4058-9cbc-cc60eb035428"],
Cell[525897, 13854, 10328, 325, 678, "Code",ExpressionUUID->"7a2ea7d2-0cab-477b-96fc-06c97ad4434d"],
Cell[536228, 14181, 773, 21, 53, "Text",ExpressionUUID->"a4270a7a-82cf-4317-8d2c-2e582cf75994"],
Cell[CellGroupData[{
Cell[537026, 14206, 290, 5, 93, "Input",ExpressionUUID->"ed933aa8-948c-40c6-9ed2-464a666c181b"],
Cell[537319, 14213, 2501, 61, 471, "Output",ExpressionUUID->"af594788-e1e0-421d-abb1-f931cd5fb974"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539857, 14279, 815, 21, 115, "Input",ExpressionUUID->"8bd297ca-cb57-4d15-b467-47218dd25da3"],
Cell[540675, 14302, 5965, 153, 481, "Output",ExpressionUUID->"03f99a86-051c-41e1-8263-fdae700ab364"]
}, Open  ]],
Cell[546655, 14458, 1332, 27, 64, "Text",ExpressionUUID->"d12345ec-9920-4667-8115-069a98e8a418",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[547990, 14487, 3093, 81, 125, "Code",ExpressionUUID->"78943e17-36e0-4bca-9204-5a5203a106e8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[551108, 14572, 3195, 79, 134, "Input",ExpressionUUID->"9fb6fead-bc08-4b69-a857-9642ac648b79",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[554306, 14653, 328, 6, 87, "Section",ExpressionUUID->"bf534a59-194c-46a1-af9e-fce3a4b1db9c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[554649, 14662, 1123, 32, 53, "Text",ExpressionUUID->"c08220fa-7869-4dfa-8a4d-b63d90c26f14"],
Cell[555775, 14696, 1952, 50, 63, "Code",ExpressionUUID->"69760eb0-03e6-4487-86e0-af841d78aed2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[557752, 14750, 373, 7, 40, "Text",ExpressionUUID->"dbebf0a7-5633-4c16-8820-e8f101ea46ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[558128, 14759, 630, 14, 65, "Input",ExpressionUUID->"83104cd1-dbbc-4d6c-8b00-801a0de7ccf9",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[558761, 14775, 610, 12, 40, "Text",ExpressionUUID->"2ea50a03-a001-45f2-9db1-392ad739af91",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[559374, 14789, 2870, 62, 144, "Input",ExpressionUUID->"292a179f-85c2-4758-a655-1341d6a73322",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[562259, 14854, 9512, 242, 159, "Output",ExpressionUUID->"4fc3a0f0-74c6-41e7-b647-023b5c9e0e4e"],
Cell[CellGroupData[{
Cell[571796, 15100, 2531, 60, 238, "Input",ExpressionUUID->"9716bba7-3bff-4436-81a7-814be125e558"],
Cell[574330, 15162, 9525, 243, 159, "Output",ExpressionUUID->"1ec75923-4f32-416f-9906-13557718399c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[583892, 15410, 442, 10, 40, "Text",ExpressionUUID->"dc2e321e-1839-4c9e-a020-9d58352f662c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[584337, 15422, 711, 14, 93, "Input",ExpressionUUID->"4ad20e3e-d7e8-4762-a4c7-71075765a89c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[585063, 15439, 25469, 754, 395, "Output",ExpressionUUID->"4b918bca-725b-4d4f-87f3-ae350db271bd"],
Cell[CellGroupData[{
Cell[610557, 16197, 500, 10, 40, "Text",ExpressionUUID->"f946bb26-4305-4cc9-abc5-f02955803958",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[611060, 16209, 1672, 35, 66, "Input",ExpressionUUID->"be38bfd9-0d97-4fd5-86bd-6f99ec5e1509",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[612735, 16246, 1859, 36, 66, "Input",ExpressionUUID->"d5c7deb4-3231-459b-bac7-f09b8cc2bd0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[614597, 16284, 318, 6, 40, "Text",ExpressionUUID->"9767735d-b9d2-4ac7-bf1c-778efe8ce8b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[614918, 16292, 1261, 29, 151, "Input",ExpressionUUID->"9bd8fc79-eafa-49a6-ac55-c94f7af7cb9e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[616194, 16324, 35682, 968, 485, "Output",ExpressionUUID->"22cebdd3-ed22-495a-81cb-20bfbebabbcf"],
Cell[651879, 17294, 9462, 243, 159, "Output",ExpressionUUID->"c2d2f8fa-af67-4275-806d-bf08f4aa937d"],
Cell[CellGroupData[{
Cell[661366, 17541, 441, 10, 40, "Text",ExpressionUUID->"6bd0a43f-a3b5-49fc-8af0-66db89596c19",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[661810, 17553, 2428, 52, 180, "Input",ExpressionUUID->"c2b7798a-6d32-4369-be85-64f34d113092",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[664253, 17608, 18692, 507, 293, "Output",ExpressionUUID->"6c8428b5-eb08-4f30-bf19-dfd17d87bd93"],
Cell[CellGroupData[{
Cell[682970, 18119, 342, 6, 87, "Section",ExpressionUUID->"8879bfd5-63c9-4c06-a8e5-c801877593ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[683315, 18127, 477, 9, 40, "Text",ExpressionUUID->"ee7e573b-a197-4565-a281-2ef25585fde6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[683795, 18138, 835, 20, 100, "Input",ExpressionUUID->"d15e8e76-aa81-46b6-b6d5-2621a6dfbe4f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[684633, 18160, 1865, 51, 93, "Input",ExpressionUUID->"8dd7c247-f48f-448c-98ec-eeab0694013b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[686513, 18214, 2666, 54, 533, "Output",ExpressionUUID->"1fb2b75a-948c-46f2-86b7-43759bb55dd4"],
Cell[689182, 18270, 301, 7, 40, "Text",ExpressionUUID->"e7e8fa86-07ba-4de0-a3f0-72c865ae9b93"],
Cell[CellGroupData[{
Cell[689508, 18281, 1294, 29, 81, "Code",ExpressionUUID->"344da48f-646a-4854-b02a-5bb88c761205",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[690805, 18312, 3672, 103, 193, "Code",ExpressionUUID->"4ceadb6f-017a-49b0-9590-8f9584c79067",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[694480, 18417, 628, 12, 40, "Text",ExpressionUUID->"4b4d74ff-fbdb-44fc-9f71-c0d7c63205aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[695111, 18431, 1282, 28, 61, "Code",ExpressionUUID->"4e2dfc07-3a9a-4472-bca8-2aaf1df1a5ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[696408, 18462, 227, 4, 40, "Text",ExpressionUUID->"145a4b21-8fe7-4854-881e-e22c3f1ae275"],
Cell[696638, 18468, 1684, 42, 99, "Code",ExpressionUUID->"7bfc6fba-ee38-4f61-8707-41027308d1d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[698325, 18512, 694, 15, 66, "Input",ExpressionUUID->"5dd8d5e0-9b6f-4aa4-a213-87eecac598ad"],
Cell[CellGroupData[{
Cell[699044, 18531, 5011, 132, 416, "Input",ExpressionUUID->"d928ad55-1899-48c5-b639-f65de9a9e557"],
Cell[704058, 18665, 4813, 139, 152, "Output",ExpressionUUID->"d2ebd6c3-9bce-40c9-ab68-f7c6a4b68a9d"],
Cell[708874, 18806, 3985, 108, 122, "Output",ExpressionUUID->"e9a7d050-073a-4201-8b55-b79effdd6342"]
}, Open  ]],
Cell[712874, 18917, 725, 16, 66, "Input",ExpressionUUID->"02d2ee10-9464-4b41-aa14-2b51c54ca5bd"],
Cell[CellGroupData[{
Cell[713624, 18937, 3145, 78, 354, "Input",ExpressionUUID->"d5cb83d3-d87a-4bf2-9034-1a0a95370d10"],
Cell[716772, 19017, 1327, 33, 69, "Output",ExpressionUUID->"f6cc0127-5d2d-4557-8e60-2bc8c5bc5e05"],
Cell[718102, 19052, 1327, 33, 69, "Output",ExpressionUUID->"0d617bbc-491f-49bf-ae7e-c4909870cf68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719466, 19090, 271, 5, 87, "Section",ExpressionUUID->"b9a8c2b4-5816-4842-b7ed-a84a10948677",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[719740, 19097, 734, 18, 88, "Text",ExpressionUUID->"667262fa-e272-4dbf-a1e9-91f0fbbf2ce6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[720477, 19117, 1056, 32, 64, "Text",ExpressionUUID->"f87b0cf0-8983-4e68-b6d9-ec74b88f4c74",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[721536, 19151, 522, 14, 40, "Text",ExpressionUUID->"c9842949-74ab-4b4c-9b3e-53389a9f8af8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[722061, 19167, 998, 28, 56, "Text",ExpressionUUID->"756b362e-f63d-478f-9162-a1feff4b3f49",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[723062, 19197, 664, 19, 58, "Text",ExpressionUUID->"0dac00eb-c071-4b35-8a97-6e0c85e9fb58",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[723729, 19218, 624, 17, 56, "Text",ExpressionUUID->"72081ed7-9968-490f-bd59-87f85f614356",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[724356, 19237, 949, 28, 62, "Text",ExpressionUUID->"0a4284b8-48e8-48dd-aa21-ae340ecdff06",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[725308, 19267, 312, 6, 40, "Text",ExpressionUUID->"78e58b2e-71df-4699-9610-975118ec7627",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[725623, 19275, 692, 18, 68, "Input",ExpressionUUID->"d3ca9179-4996-43a8-910f-fec4ad15e266",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[726318, 19295, 1130, 35, 294, "Input",ExpressionUUID->"ac0a3550-25c4-47e1-aed4-7c393a16a6b6",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[727451, 19332, 364, 6, 40, "Text",ExpressionUUID->"598c6a90-11d3-46e5-8fc3-edd150b6c3b4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[727818, 19340, 596, 13, 63, "Input",ExpressionUUID->"bbc2eec7-d1c8-4a29-87fb-3c50fded81fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[728417, 19355, 669, 17, 180, "Input",ExpressionUUID->"d99498e6-0d53-4413-a9f3-414d99ff73fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[729089, 19374, 601, 11, 64, "Text",ExpressionUUID->"f283ec5b-8afb-409d-b7ca-104fd5bfda3d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[729705, 19388, 455, 9, 87, "Section",ExpressionUUID->"fbfb67c9-2a33-4bda-96d9-052185ea3e71",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[730163, 19399, 297, 7, 40, "Text",ExpressionUUID->"f26ccbf3-5a1e-4923-bbc3-b6a3c565ab91"],
Cell[730463, 19408, 2234, 45, 63, "Input",ExpressionUUID->"cf4abcbc-253a-4206-b2cf-1790201863eb"],
Cell[732700, 19455, 2288, 46, 63, "Input",ExpressionUUID->"4c85975a-f815-42c7-915c-dda3318c99e4"],
Cell[734991, 19503, 2184, 44, 63, "Input",ExpressionUUID->"00f1899c-7a1b-46ec-bbd6-01fae8378702"],
Cell[737178, 19549, 349, 6, 40, "Text",ExpressionUUID->"576d9b36-fdc4-46b0-849c-50468dda9ae1"],
Cell[737530, 19557, 712, 16, 63, "Input",ExpressionUUID->"b39fe54b-7c79-467e-8c67-e1835c241f95"],
Cell[738245, 19575, 664, 15, 63, "Input",ExpressionUUID->"80be7725-1bb4-4e48-8f72-a98823add088"],
Cell[738912, 19592, 514, 13, 63, "Input",ExpressionUUID->"2867abef-e347-4ce1-8da4-8fc841123015"],
Cell[739429, 19607, 510, 13, 63, "Input",ExpressionUUID->"2ae9dcec-e1b8-4695-9cf9-77837e97bc9a"],
Cell[739942, 19622, 289, 5, 40, "Text",ExpressionUUID->"7deedac0-af58-47c3-b656-1186c451e4bc"],
Cell[CellGroupData[{
Cell[740256, 19631, 671, 18, 93, "Input",ExpressionUUID->"0a794838-4f85-4eb7-ba10-67d9656a4f39"],
Cell[740930, 19651, 3396, 71, 352, "Output",ExpressionUUID->"0cdfd5ab-e638-4312-bdf7-b9c0f9c76468"]
}, Open  ]],
Cell[744341, 19725, 446, 9, 40, "Text",ExpressionUUID->"e342fcef-c56c-4e29-a1a2-3b86ccce5d5b"],
Cell[CellGroupData[{
Cell[744812, 19738, 1058, 29, 152, "Input",ExpressionUUID->"1cc4eec2-2a49-4f48-ace2-cd6ebab4513a"],
Cell[745873, 19769, 19553, 321, 371, "Output",ExpressionUUID->"9ea49945-ba1b-4e7d-a37e-2bec0ddeb029"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765463, 20095, 22697, 605, 2497, "Input",ExpressionUUID->"649f84dd-46f9-4a19-a39f-1d8eb38138bc"],
Cell[788163, 20702, 220085, 4067, 389, "Output",ExpressionUUID->"cac58377-5740-457e-bddb-0d753f0aec78"],
Cell[1008251, 24771, 633447, 10976, 417, "Output",ExpressionUUID->"442485a0-448e-4060-8364-c1fa87587510"],
Cell[1641701, 35749, 38124, 701, 368, "Output",ExpressionUUID->"9f2bc998-9dd9-4258-aaa5-ea2f76305b38"]
}, Open  ]],
Cell[1679840, 36453, 317, 6, 40, "Text",ExpressionUUID->"48daa436-d880-4ea1-b707-be90fce88127",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1680160, 36461, 2761, 52, 63, "Input",ExpressionUUID->"ac358cf7-ad94-42a8-814a-85425aca25f3"],
Cell[1682924, 36515, 716, 16, 63, "Input",ExpressionUUID->"c4eccadd-2bd6-42f3-a812-2890fdd11dbb"],
Cell[CellGroupData[{
Cell[1683665, 36535, 3588, 100, 361, "Input",ExpressionUUID->"20dc028a-cb4c-4ced-9d9c-98ecaba23ab3"],
Cell[1687256, 36637, 2480, 51, 959, "Output",ExpressionUUID->"988613cc-e24c-479b-85c3-06fc74a02748"]
}, Open  ]],
Cell[1689751, 36691, 221, 4, 87, "Section",ExpressionUUID->"e7acd177-771c-4a30-b29f-0bf8cfa3e592"],
Cell[1689975, 36697, 10917, 229, 478, "Input",ExpressionUUID->"fdb7d483-8ee0-4bc5-85f8-3471e63e5a25",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1700895, 36928, 792, 15, 63, "Input",ExpressionUUID->"6e7f15ec-a0c9-41a6-9d90-c8cc05ff79cd"],
Cell[1701690, 36945, 384, 6, 87, "Section",ExpressionUUID->"af05ae5a-c543-4bfd-94c1-af7210bfdd30",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1702077, 36953, 221, 4, 71, "Subsection",ExpressionUUID->"3c9ea643-57ef-4cbc-bd7f-dd9eb90cac8c"],
Cell[CellGroupData[{
Cell[1702323, 36961, 1103, 27, 40, "Text",ExpressionUUID->"32cd8747-610b-49bd-a3ea-6ffe6176dd2e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1703429, 36990, 7197, 147, 586, "Input",ExpressionUUID->"204fbcb2-2026-4d1c-a906-57f0e7e5cbdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1710629, 37139, 7445, 145, 1050, "Input",ExpressionUUID->"438c9f51-6abd-4e98-83a3-bfd37e5fcb5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[1718089, 37287, 50662, 1038, 383, "Output",ExpressionUUID->"7ba05393-f9c7-440b-8795-4cc1164296dd"],
Cell[1768754, 38327, 316, 8, 71, "Subsection",ExpressionUUID->"45d59261-b098-441f-abd3-55ac200769b3"],
Cell[CellGroupData[{
Cell[1769095, 38339, 7479, 152, 498, "Input",ExpressionUUID->"6d132784-637c-4b05-972d-968d3fac37da",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1776577, 38493, 3268, 60, 325, "Input",ExpressionUUID->"30387ef6-0ffa-48a3-85da-ec0351a36bea",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[1779860, 38556, 477500, 7870, 498, "Output",ExpressionUUID->"e23dd3ed-53ef-41af-81a0-de443f537928"]
}, Open  ]]
}, Open  ]]
}
]
*)

