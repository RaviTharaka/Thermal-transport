(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2027854,      40105]
NotebookOptionsPosition[   1998903,      39690]
NotebookOutlinePosition[   1999599,      39712]
CellTagsIndexPosition[   1999556,      39709]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"BlueC", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.2627", ",", "0.4313", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PurpleC", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.5411", ",", "0.0784", ",", "0.9607"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RedC", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.60", ",", "0.30", ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.824417204382346*^9, 3.8244172267302313`*^9}, {
   3.8277982674557447`*^9, 3.8277983077204013`*^9}, {3.8308102903497305`*^9, 
   3.8308102943609886`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d671af8e-fd56-41b7-b27b-8ce6d7646568"],

Cell["System Hamiltonians", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189700819807987`*^9, 
   3.818970088321248*^9}},ExpressionUUID->"15234ece-b67a-44b4-9977-\
d6d04d5fba83"],

Cell["Identity operator", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189702934168277`*^9, 
   3.81897029971469*^9}},ExpressionUUID->"52f34a4c-5b7c-4764-8409-\
5795a00667dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Id", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  TemplateBox[{
    RowBox[{"ve", ",", "ho"}]},
   "KroneckerDeltaSeq"]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189703012247114`*^9, 3.818970323550434*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e29d5f8c-c6a1-4da1-8094-202cdb6a20a1"],

Cell["\<\
There are two subsystems A and B, each of which are two level systems\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189700981360054`*^9, 
   3.818970123231248*^9}},ExpressionUUID->"9bc403c2-a914-4e24-9516-\
cfc1eeac6172"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HASep", "[", 
   RowBox[{"veA_", ",", "hoA_", ",", "veB_", ",", "hoB_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[HBar]", " ", 
           SubscriptBox["\[Omega]", "1"]}], "2"]}]}
      }], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"veA", ",", "hoA"}], "]"}], "]"}], 
   RowBox[{"Id", "[", 
    RowBox[{"veB", ",", "hoB"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"HBSep", "[", 
   RowBox[{"veA_", ",", "hoA_", ",", "veB_", ",", "hoB_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Id", "[", 
    RowBox[{"veA", ",", "hoA"}], "]"}], 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "2"]}], "2"], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[HBar]", " ", 
           SubscriptBox["\[Omega]", "2"]}], "2"]}]}
      }], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"veB", ",", "hoB"}], "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189701640325994`*^9, 3.81897029020043*^9}, {
   3.818970330689107*^9, 3.8189703757622843`*^9}, {3.818971822661066*^9, 
   3.8189718310700417`*^9}, {3.8189797802992377`*^9, 3.818979795059928*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0df9b3ed-d030-497b-98e5-628c5438c928"],

Cell["\<\
Eigenstates,
|1>\t= |e,e>
|2>\t= |e,g>
|3>\t= |g,e>
|4>\t= |g,g>\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189703948075004`*^9, 
   3.818970454485376*^9}},ExpressionUUID->"0bf11d63-e5b0-45c1-a58b-\
531739e6c096"],

Cell["\<\
Eigenstate mapping function, maps overall state (1 to 4) to subsystem A, B \
state,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.773698707838093*^9, 3.7736987156213007`*^9}, {
   3.7745556034403844`*^9, 3.7745556135964556`*^9}, 3.7745568178008423`*^9, {
   3.791163634247059*^9, 3.7911636438743353`*^9}, {3.813020849796363*^9, 
   3.813020871418713*^9}, {3.827353787219006*^9, 3.8273538015884066`*^9}, 
   3.836259005549654*^9},ExpressionUUID->"a24cab13-9e80-4840-a8e6-\
6daaa770b362"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EmapA", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "3"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "4"}]},
       "KroneckerDeltaSeq"]}], ")"}], "2"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "1"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "2"}]},
       "KroneckerDeltaSeq"]}], ")"}], "1"}]}]}], "\n", 
 RowBox[{
  RowBox[{"EmapB", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "2"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "4"}]},
       "KroneckerDeltaSeq"]}], ")"}], "2"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{
        RowBox[{"i", ",", "1"}]},
       "KroneckerDeltaSeq"], "+", 
      TemplateBox[{
        RowBox[{"i", ",", "3"}]},
       "KroneckerDeltaSeq"]}], ")"}], "1"}]}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189704897404613`*^9, 3.818970574089013*^9}, {
   3.8189706380076923`*^9, 3.8189706645496674`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a44f2f14-deec-4899-8469-cbc377bad219"],

Cell["Matrix form of the two Hamiltonians", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189706697441363`*^9, 
   3.818970678451008*^9}},ExpressionUUID->"4bd21f33-a9b7-4df4-b8e7-\
83bde066680f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HA", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{"HASep", "[", 
   RowBox[{
    RowBox[{"EmapA", "[", "ve", "]"}], ",", 
    RowBox[{"EmapA", "[", "ho", "]"}], ",", 
    RowBox[{"EmapB", "[", "ve", "]"}], ",", 
    RowBox[{"EmapB", "[", "ho", "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"HB", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{"HBSep", "[", 
   RowBox[{
    RowBox[{"EmapA", "[", "ve", "]"}], ",", 
    RowBox[{"EmapA", "[", "ho", "]"}], ",", 
    RowBox[{"EmapB", "[", "ve", "]"}], ",", 
    RowBox[{"EmapB", "[", "ho", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970688997239*^9, 3.818970793620942*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b1673655-73c4-4177-9c6a-c4cf352e42bf"],

Cell["System Hamiltonians in combined system matrix form", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970767713512*^9, 
   3.8189707841096783`*^9}},ExpressionUUID->"a277fe82-d62b-4ad1-beab-\
4d37cb169933"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HAMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"HA", "[", 
      RowBox[{"ve", ",", "ho"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ve", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ho", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "HAMatrix", "]"}], "\n", 
 RowBox[{
  RowBox[{"HBMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"HB", "[", 
      RowBox[{"ve", ",", "ho"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ve", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ho", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "HBMatrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970800687973*^9, 3.8189708560102053`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"db3b643a-d4e1-4e7a-9676-1eb89c0c3321"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "1"]}], "2"], "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "1"]}], "2"], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970839569666*^9, 3.81897085627324*^9}, 
   3.818971838714955*^9, 3.818971988448552*^9, 3.8189773958246365`*^9, 
   3.8189797992614603`*^9, 3.818981677933005*^9, 3.8190547441175604`*^9, 
   3.8213982197555914`*^9, 3.821483693348214*^9, 3.821491288634159*^9, 
   3.821499517682109*^9, 3.821499819412489*^9, 3.8273538140100837`*^9, 
   3.8273795038174114`*^9, 3.8273813085880384`*^9, 3.8273828083190966`*^9, 
   3.8274395852622895`*^9, 3.82744407395179*^9, 3.8274533015455213`*^9, 
   3.8274701672147474`*^9, 3.8275241497530823`*^9, 3.827783699750085*^9, 
   3.8304949081555867`*^9, 3.830496232115302*^9, 3.83050064526492*^9, 
   3.830503769103429*^9, 3.830563367295791*^9, 3.8308103007593985`*^9, 
   3.830821910045643*^9, 3.8308263302673993`*^9, 3.830826561343196*^9, 
   3.830828943714486*^9, 3.8309844530246267`*^9, 3.8310025491197653`*^9, 
   3.832304479395897*^9, 3.8363485590244503`*^9},
 CellLabel->
  "Out[12]//MatrixForm=",ExpressionUUID->"b3dd2986-7d3b-4a03-a9ee-\
64a115707a00"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "2"], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"\[HBar]", " ", 
        SubscriptBox["\[Omega]", "2"]}], "2"], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970839569666*^9, 3.81897085627324*^9}, 
   3.818971838714955*^9, 3.818971988448552*^9, 3.8189773958246365`*^9, 
   3.8189797992614603`*^9, 3.818981677933005*^9, 3.8190547441175604`*^9, 
   3.8213982197555914`*^9, 3.821483693348214*^9, 3.821491288634159*^9, 
   3.821499517682109*^9, 3.821499819412489*^9, 3.8273538140100837`*^9, 
   3.8273795038174114`*^9, 3.8273813085880384`*^9, 3.8273828083190966`*^9, 
   3.8274395852622895`*^9, 3.82744407395179*^9, 3.8274533015455213`*^9, 
   3.8274701672147474`*^9, 3.8275241497530823`*^9, 3.827783699750085*^9, 
   3.8304949081555867`*^9, 3.830496232115302*^9, 3.83050064526492*^9, 
   3.830503769103429*^9, 3.830563367295791*^9, 3.8308103007593985`*^9, 
   3.830821910045643*^9, 3.8308263302673993`*^9, 3.830826561343196*^9, 
   3.830828943714486*^9, 3.8309844530246267`*^9, 3.8310025491197653`*^9, 
   3.832304479395897*^9, 3.836348559031456*^9},
 CellLabel->
  "Out[14]//MatrixForm=",ExpressionUUID->"995c261d-3bcf-492f-88c1-\
d8df54083bfe"]
}, Open  ]],

Cell["Interaction Hamiltonian between the two TLSs", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970880030694*^9, 
   3.818970898054384*^9}},ExpressionUUID->"49fda821-4793-4a1e-baf2-\
394757c5b469"],

Cell[TextData[{
 "Interaction between the two systems are of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", "int"], "=", " ", 
    RowBox[{
     FractionBox["1", "2"], "\[HBar]", " ", 
     RowBox[{"\[Gamma]", "(", 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "x", "1"], "\[TensorProduct]", 
       SubsuperscriptBox["\[Sigma]", "x", "2"]}], ")"}]}]}], 
   TraditionalForm]],ExpressionUUID->"bfe11c07-a7c9-44dd-ad74-0fb2ce92007e"]
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818970939321921*^9, 3.8189710018231997`*^9}, {
   3.818971137306467*^9, 3.818971150011942*^9}, {3.818971194958247*^9, 
   3.818971232771535*^9}, {3.819056757584648*^9, 3.8190567675412273`*^9}, {
   3.8213976301840677`*^9, 3.8213976301840677`*^9}, {3.821498996717906*^9, 
   3.821499005721004*^9}, {3.8214997841057086`*^9, 3.8214997841057086`*^9}, {
   3.8273547537695084`*^9, 3.8273547641343107`*^9}, {3.8273550314509635`*^9, 
   3.8273551040333834`*^9}, {3.827355147297969*^9, 3.8273551738923316`*^9}, {
   3.8274440774345827`*^9, 3.827444079233782*^9}, {3.8308219316293626`*^9, 
   3.8308219644429555`*^9}, {3.8308221178176556`*^9, 
   3.830822125253399*^9}},ExpressionUUID->"5fc54701-5055-4f64-87d5-\
245181042ff3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hint", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[HBar]", " ", "\[Gamma]"}], "2"], " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", "1"},
         {"1", "0"}
        }], ")"}], ",", 
      RowBox[{"(", GridBox[{
         {"0", "1"},
         {"1", "0"}
        }], ")"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189712762745843`*^9, 3.8189713014734964`*^9}, {
   3.818971384771183*^9, 3.818971487482233*^9}, {3.818971519889882*^9, 
   3.818971521520049*^9}, 3.818971662635478*^9, {3.8189716970208645`*^9, 
   3.818971701886032*^9}, {3.819320362566039*^9, 3.8193203649138813`*^9}, {
   3.8214989994762278`*^9, 3.8214990043008347`*^9}, 3.8214997812030773`*^9, 
   3.8274440831540318`*^9, {3.8308103135910993`*^9, 3.8308103257914915`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e39f3744-f3f6-4edc-b130-03c7b1208656"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HintMatrix", ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Hint", "[", 
      RowBox[{"ve", ",", "ho"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ve", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ho", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "HintMatrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189714932131577`*^9, 3.818971513190312*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a189e330-87c5-4daf-9fb2-d0cedb31d837"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"]},
     {"0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189715137397537`*^9, 3.8189715238263674`*^9}, 
   3.818971704047289*^9, {3.8189718373137684`*^9, 3.818971841868544*^9}, 
   3.8189719905735826`*^9, 3.81897741256462*^9, 3.818979805109293*^9, 
   3.8189816780281086`*^9, 3.8190547469605694`*^9, 3.8193203661665597`*^9, 
   3.821398224504603*^9, 3.8214836976505394`*^9, 3.8214990077832203`*^9, 
   3.821499520959218*^9, 3.8214998194988775`*^9, 3.8273549429126434`*^9, 
   3.827379506429026*^9, 3.8273813117555127`*^9, 3.827382810410681*^9, 
   3.827439588114257*^9, 3.8274440845414915`*^9, 3.827453304175724*^9, 
   3.827470169765249*^9, 3.827524152812223*^9, 3.827783703289849*^9, 
   3.8304949174893885`*^9, 3.8304962345158806`*^9, 3.8305006453499026`*^9, 
   3.830503769220961*^9, 3.830563367379628*^9, 3.8308103275324864`*^9, 
   3.830821913849243*^9, 3.8308265647935553`*^9, 3.83082895250216*^9, 
   3.830984460667426*^9, 3.831002549242676*^9, 3.8323044820920353`*^9, 
   3.836348561684613*^9},
 CellLabel->
  "Out[17]//MatrixForm=",ExpressionUUID->"5568b1c4-5b65-472b-acf5-\
dd5e43156047"]
}, Open  ]],

Cell["Combined system Hamiltonian", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189786431707296`*^9, 
   3.818978651182397*^9}},ExpressionUUID->"8ba8a6a7-ed95-43cb-b770-\
bdce56c58a0c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HtotMatrix", "=", 
   RowBox[{"HAMatrix", "+", "HBMatrix", "+", "HintMatrix"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "HtotMatrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818971719356063*^9, 3.818971750208635*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2dfbd488-f988-4924-8087-0d82c78417d0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"]},
     {"0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], "0"},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.818978682077876*^9, 
  3.8189798067170305`*^9, 3.818981678115515*^9, 3.819054751102762*^9, 
  3.819320368019446*^9, 3.8213982266219387`*^9, 3.8214836992024107`*^9, 
  3.821499009078828*^9, 3.821499523444483*^9, 3.82149981956478*^9, 
  3.8273551882358713`*^9, 3.8273795082434235`*^9, 3.8273813133547487`*^9, 
  3.8273828118008947`*^9, 3.8274395895874615`*^9, 3.8274455993049345`*^9, 
  3.8274533063647847`*^9, 3.827470171151713*^9, 3.8275241544636025`*^9, 
  3.8277837051730285`*^9, 3.830494938236069*^9, 3.8304962361143417`*^9, 
  3.8305006454273024`*^9, 3.830503769304037*^9, 3.830563367437723*^9, 
  3.830810334840728*^9, 3.830822141888217*^9, 3.8308265673037357`*^9, 
  3.830828956790838*^9, 3.8309844685387726`*^9, 3.8310025493447685`*^9, 
  3.8323044840910587`*^9, 3.8363485629842205`*^9},
 CellLabel->
  "Out[19]//MatrixForm=",ExpressionUUID->"0df32765-a93c-48e0-8787-\
56a58ea06703"]
}, Open  ]],

Cell["Visualize the energy levels of the combined system", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8214837084313936`*^9, 3.821483732570406*^9}, {
   3.82735681900805*^9, 
   3.8273568562095785`*^9}},ExpressionUUID->"b02a746f-25d4-4db0-8d3a-\
83197855c130"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", "=", 
   RowBox[{"{", 
    RowBox[{"\[HBar]", "\[Rule]", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.821483757704315*^9, 3.821483764181883*^9}, 
   3.8273813193863916`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"da31ad8c-2523-4582-8c10-df6d88225e29"],

Cell[CellGroupData[{

Cell["Bare energy levels without the interaction Hamiltonian", "Subsubsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827356868873045*^9, 3.827356883413703*^9}, 
   3.8273610699545774`*^9, 
   3.830494957915609*^9},ExpressionUUID->"31f87d67-043c-4a02-9754-\
5d67d21efa8d"],

Cell["\<\
Function for shifting the eigenvalues from Mathematica to our representation\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836352255365159*^9, 
   3.836352282129157*^9}},ExpressionUUID->"4d0da22d-57f2-4d29-a8d4-\
e3a304f06e98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Shift1", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "1"}]},
     "KroneckerDeltaSeq"], "4"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "2"}]},
     "KroneckerDeltaSeq"], "2"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "3"}]},
     "KroneckerDeltaSeq"], "3"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "4"}]},
     "KroneckerDeltaSeq"], "1"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570361704245`*^9, 3.8273570931968136`*^9}, 
   3.8273571490099325`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"51d966da-8a9d-444e-97d2-7770d2d7ef39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HAHBEVal", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"HAMatrix", "+", "HBMatrix"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Shift1", "[", "i", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HAHBEVec", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"HAMatrix", "+", "HBMatrix"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"Shift1", "[", "i", "]"}], "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HAHBEVal", "[", "i", "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"HAHBEVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570111683946`*^9, 3.8273570344061985`*^9}, {
   3.8273571723112164`*^9, 3.8273572333769093`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"2484735b-6b0a-4693-bcc7-07606b3649b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"1"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827357235012607*^9, 3.8273795155882125`*^9, 
   3.82738132232773*^9, 3.827382815797269*^9, 3.8274404685664787`*^9, {
   3.8274456109144316`*^9, 3.8274456137852583`*^9}, 3.827453312502881*^9, 
   3.8274701767968397`*^9, 3.8275241650433683`*^9, 3.827783709156357*^9, {
   3.830494963186015*^9, 3.830494968584754*^9}, {3.8304962386369658`*^9, 
   3.830496241735606*^9}, 3.830500645524202*^9, 3.8305037695057487`*^9, 
   3.830563367579111*^9, 3.830810348416936*^9, 3.830822152487404*^9, 
   3.830826574093032*^9, 3.830828964728593*^9, 3.8309844769564323`*^9, 
   3.8310025494985685`*^9, 3.8323044903692274`*^9, 3.8363485719101534`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"9118461d-9672-481a-a734-2293a5166ad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "temp", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HAHBEVal", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           "unitassum"}], "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"Plot", "[", 
       RowBox[{"temp", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<|1> = |ee>\>\"", ",", "\"\<|2> = |eg>\>\"", ",", 
           "\"\<|3> = |ge>\>\"", ",", "\"\<|4> = |gg>\>\""}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"None", ",", "\"\<Energy\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ",", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}]}]}], "\n", 
    "]"}], ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Frequencies\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", "1.1"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]2", ",", "0.2"}], "}"}], ",", "0", ",", "3"}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273568873571672`*^9, 3.8273568926490884`*^9}, {
   3.8273571088386097`*^9, 3.8273571406931243`*^9}, {3.8274456398012085`*^9, 
   3.827445643780323*^9}, 3.8309844887244053`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"6343c475-d89a-419b-b0f7-2cf6f1198032"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Omega]1$$ = 
    1.1, $CellContext`\[Omega]2$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item["Frequencies", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]1$$], 1.1}, 0, 3}, {{
       Hold[$CellContext`\[Omega]2$$], 0.2}, 0, 3}}, Typeset`size$$ = {
    563., {139., 146.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Omega]1$$ = 
        1.1, $CellContext`\[Omega]2$$ = 0.2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`temp$}, $CellContext`temp$ = ReplaceAll[
           Table[
            $CellContext`HAHBEVal[$CellContext`i], {$CellContext`i, 1, 4}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`unitassum}]]; 
        Plot[$CellContext`temp$, {$CellContext`t, 0, 2}, 
          PlotLegends -> {
           "|1> = |ee>", "|2> = |eg>", "|3> = |ge>", "|4> = |gg>"}, 
          AxesLabel -> {None, "Energy"}, PlotRange -> {-1.5, 1.5}, 
          Ticks -> {None, Automatic}]], "Specifications" :> {Delimiter, 
        Item[
        "Frequencies", Alignment -> Center], {{$CellContext`\[Omega]1$$, 1.1},
          0, 3}, {{$CellContext`\[Omega]2$$, 0.2}, 0, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{622., {221., 229.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.82735714234387*^9, 3.82735715286939*^9}, {
   3.8273572496780205`*^9, 3.827357260394065*^9}, 3.8273795174697547`*^9, 
   3.8273813243073616`*^9, 3.827382820570547*^9, 3.8274404701076593`*^9, {
   3.827445636841024*^9, 3.827445663124242*^9}, 3.827453315163675*^9, 
   3.8274701780169477`*^9, 3.8275241661474185`*^9, 3.827783710397732*^9, 
   3.83049498052602*^9, 3.830496242908986*^9, 3.830500645618287*^9, 
   3.8305037695958295`*^9, 3.8305633676528196`*^9, 3.830810350139563*^9, 
   3.830822166375208*^9, 3.8308265793946886`*^9, 3.830828973824682*^9, {
   3.8309844828432074`*^9, 3.8309844897713113`*^9}, 3.831002549670724*^9, 
   3.8323044926987762`*^9, 3.8363485766436696`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"6bb063d8-1ada-43b6-84ac-e1558deaeb7c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dressed energy levels with the interaction Hamiltonian", "Subsubsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189771189484262`*^9, 3.818977129152385*^9}, {
   3.827357280255584*^9, 3.8273573089068537`*^9}, 
   3.830494986561661*^9},ExpressionUUID->"dc95a792-61fc-4cdd-8792-\
a5081b45ef22"],

Cell["\<\
Function for shifting the eigenvalues from Mathematica to our representation\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.836352255365159*^9, 
   3.836352282129157*^9}},ExpressionUUID->"e3c4f946-992e-4440-8b7f-\
f1166b2d042c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Shift2", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "1"}]},
     "KroneckerDeltaSeq"], "4"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "2"}]},
     "KroneckerDeltaSeq"], "2"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "3"}]},
     "KroneckerDeltaSeq"], "1"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "4"}]},
     "KroneckerDeltaSeq"], "3"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273561300311756`*^9, 3.827356210602434*^9}, {
   3.827356346767085*^9, 3.8273563490676003`*^9}, {3.8273564797786727`*^9, 
   3.82735647994188*^9}, {3.827356519771364*^9, 3.8273565365493455`*^9}, 
   3.8273573126510105`*^9, {3.827445719262355*^9, 3.8274457205004845`*^9}, {
   3.8308108592255774`*^9, 3.8308109172439175`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e4fe9f1a-2c51-4812-935c-d838fbd45ae6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HtotEVal", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "HtotMatrix", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Shift2", "[", "i", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HtotEVec", "[", "i_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"Eigenvectors", "[", "HtotMatrix", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Shift2", "[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HtotEVal", "[", "i", "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"HtotEVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818971764653781*^9, 3.818971788563111*^9}, {
   3.818978989230052*^9, 3.818979086209076*^9}, {3.827356353535863*^9, 
   3.8273563611109414`*^9}, {3.8273573167310705`*^9, 
   3.8273573181036353`*^9}, {3.8273709824565067`*^9, 
   3.8273710001995745`*^9}, {3.8274531304296355`*^9, 
   3.8274531325019846`*^9}, {3.8274558842386456`*^9, 3.8274558877160344`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a0fee1d4-72d4-4c06-8615-0e0216dcdf9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox[
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "+", 
             SubscriptBox["\[Omega]", "2"], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
            RowBox[{"\[Gamma]", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{
                   SubscriptBox["\[Omega]", "1"], "+", 
                   SubscriptBox["\[Omega]", "2"], "+", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                  "]"}], "2"]}]]}]]},
          {"0"},
          {"0"},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{
                  SubscriptBox["\[Omega]", "1"], "+", 
                  SubscriptBox["\[Omega]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                 "]"}], "2"]}]]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox[
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             SubscriptBox["\[Omega]", "2"], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
            RowBox[{"\[Gamma]", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{
                   SubscriptBox["\[Omega]", "1"], "-", 
                   SubscriptBox["\[Omega]", "2"], "+", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                  "]"}], "2"]}]]}]]},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{
                  SubscriptBox["\[Omega]", "1"], "-", 
                  SubscriptBox["\[Omega]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                 "]"}], "2"]}]]]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "\[HBar]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["\[Omega]", "1"]}], "+", 
              SubscriptBox["\[Omega]", "2"], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Omega]", "1"], " ", 
                 SubscriptBox["\[Omega]", "2"]}], "+", 
                SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
             RowBox[{"\[Gamma]", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", 
                    SubscriptBox["\[Omega]", "1"]}], "+", 
                    SubscriptBox["\[Omega]", "2"], "+", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                   "]"}], "2"]}]]}]]}]},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", 
                   SubscriptBox["\[Omega]", "1"]}], "+", 
                  SubscriptBox["\[Omega]", "2"], "+", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                 "]"}], "2"]}]]]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "\[HBar]", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox[
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "+", 
             SubscriptBox["\[Omega]", "2"], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
            RowBox[{"\[Gamma]", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{
                   SubscriptBox["\[Omega]", "1"], "+", 
                   SubscriptBox["\[Omega]", "2"], "-", 
                   SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                  "]"}], "2"]}]]}]]},
          {"0"},
          {"0"},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{
                  SubscriptBox["\[Omega]", "1"], "+", 
                  SubscriptBox["\[Omega]", "2"], "-", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox["\[Gamma]", "2"], "+", 
                    SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["\[Omega]", "1"], " ", 
                    SubscriptBox["\[Omega]", "2"]}], "+", 
                    SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"],
                 "]"}], "2"]}]]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189790774282813`*^9, 3.818979086697451*^9}, 
   3.8189798099212375`*^9, 3.8189816782015777`*^9, 3.819054759736882*^9, 
   3.819320376768308*^9, 3.8213982283858285`*^9, 3.821491389593707*^9, 
   3.821499021116802*^9, 3.821499528853346*^9, 3.821499819964589*^9, 
   3.8273558993348103`*^9, 3.827356361552221*^9, {3.827356522069271*^9, 
   3.8273565381213694`*^9}, 3.827357318649453*^9, {3.827370985956895*^9, 
   3.827371001007744*^9}, 3.827379520572918*^9, 3.82738136881509*^9, 
   3.8273828242804966`*^9, 3.8274404728948383`*^9, 3.8274456780136337`*^9, 
   3.827445721836054*^9, 3.827453133204158*^9, 3.827453323145821*^9, 
   3.827455888309248*^9, 3.8274701805822787`*^9, 3.8275241698876333`*^9, 
   3.827783714110231*^9, 3.830495008346348*^9, 3.830496246493086*^9, 
   3.830500646055685*^9, 3.830503769948142*^9, 3.8305633691581717`*^9, 
   3.830810356150445*^9, 3.8308108658724313`*^9, 3.8308109195489655`*^9, 
   3.830822175997469*^9, 3.830826601838578*^9, 3.830828980348694*^9, 
   3.830984513240879*^9, 3.8310025506305976`*^9, 3.8323045027727923`*^9, 
   3.8363485879794316`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c9223c16-e282-4e14-98f6-7813ddd387fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "temp", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HtotEVal", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
          "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"temp", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |ee>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |gg>\>\""}], 
            "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "\"\<Energy\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\n", ",", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MatrixForm", "[", 
            RowBox[{"HtotEVec", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
            RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
           "}"}], "]"}]}]}], "\n", "}"}]}]}], "]"}], ",", "\n", "Delimiter", 
   ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Frequencies\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", "1.1"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]2", ",", "0.2"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Interaction strength\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]s", ",", "0.001"}], "}"}], ",", "0.001", ",", "3"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827355603232938*^9, 3.827355669467285*^9}, {
   3.8273557113823776`*^9, 3.827355737222215*^9}, {3.827355800881668*^9, 
   3.827355804369137*^9}, {3.82735585304399*^9, 3.8273559287870626`*^9}, {
   3.827356567028713*^9, 3.8273565687679257`*^9}, {3.8273567277478313`*^9, 
   3.8273567333024764`*^9}, {3.8273567694879036`*^9, 3.827356799783552*^9}, {
   3.8273569865835686`*^9, 3.827356991000369*^9}, {3.8274456858398604`*^9, 
   3.82744569095747*^9}, {3.8274559102008457`*^9, 3.8274560279337187`*^9}, 
   3.830495027081698*^9, 3.830984520008239*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"1a23ea5c-df5f-47e1-bb68-2d002f2a2906"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Gamma]s$$ = 
    0.001, $CellContext`\[Omega]1$$ = 1.1, $CellContext`\[Omega]2$$ = 0.2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item["Frequencies", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]1$$], 1.1}, 0, 3}, {{
       Hold[$CellContext`\[Omega]2$$], 0.2}, 0, 3}, {
      Hold[
       Item["Interaction strength", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Gamma]s$$], 0.001}, 0.001, 3}}, Typeset`size$$ = {
    617., {250.5, 146.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Gamma]s$$ = 
        0.001, $CellContext`\[Omega]1$$ = 1.1, $CellContext`\[Omega]2$$ = 
        0.2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`temp$}, $CellContext`temp$ = ReplaceAll[
           Table[
            $CellContext`HtotEVal[$CellContext`i], {$CellContext`i, 1, 4}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]]; {
          
          Plot[$CellContext`temp$, {$CellContext`t, 0, 2}, 
           PlotLegends -> {
            "|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |ee>", 
             "|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |gg>"}, 
           AxesLabel -> {None, "Energy"}, PlotRange -> {-1.5, 1.5}, 
           Ticks -> {None, Automatic}, ImageSize -> Medium], 
          ReplaceAll[
           Table[
            MatrixForm[
             $CellContext`HtotEVec[$CellContext`i]], {$CellContext`i, 1, 4}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]]}], 
      "Specifications" :> {Delimiter, 
        Item[
        "Frequencies", Alignment -> Center], {{$CellContext`\[Omega]1$$, 1.1},
          0, 3}, {{$CellContext`\[Omega]2$$, 0.2}, 0, 3}, Delimiter, 
        Item[
        "Interaction strength", Alignment -> 
         Center], {{$CellContext`\[Gamma]s$$, 0.001}, 0.001, 3}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{676., {306., 314.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273565454989624`*^9, 3.8273565696078124`*^9}, 
   3.82735671309622*^9, 3.827356800554018*^9, 3.827356992243243*^9, 
   3.8273573275837464`*^9, 3.827368168227627*^9, 3.827379522619734*^9, 
   3.8273813775669837`*^9, 3.8273828267336326`*^9, 3.8274404744359694`*^9, 
   3.8274456916651573`*^9, 3.8274457227015276`*^9, 3.8274558971062417`*^9, {
   3.8274559698898797`*^9, 3.827456028453546*^9}, 3.8274701814830985`*^9, 
   3.827524171439283*^9, 3.8277837163165874`*^9, {3.8304950141738415`*^9, 
   3.8304950289829674`*^9}, 3.830496248229169*^9, 3.8305006461357584`*^9, 
   3.8305037700442295`*^9, 3.8305633692342415`*^9, 3.830810366088269*^9, 
   3.830810866813484*^9, 3.830810923565238*^9, 3.8308221895625787`*^9, 
   3.8308266067239885`*^9, 3.8308289853349595`*^9, 3.830984521274922*^9, 
   3.8310025507416987`*^9, 3.8323045066458015`*^9, 3.8363485908727427`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"fc255e11-1c66-4e05-90c8-e4b95397209e"]
}, Open  ]],

Cell["\<\
Introducing the interaction Hamiltonian further separates the middle two \
energy levels.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827361083028102*^9, 
   3.8273611461071997`*^9}},ExpressionUUID->"8487854f-8319-4084-8e84-\
ba0677b7c5a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Resonant coupling (i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "=", 
    SubscriptBox["\[Omega]", "2"]}], TraditionalForm]],ExpressionUUID->
  "0e67de3d-0a7d-47d5-8af2-c3c3317094ca"],
 ")"
}], "Subsubsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273625305118847`*^9, 
   3.8273625606745825`*^9}},ExpressionUUID->"4fcd1df6-c12e-47a6-a4d9-\
1fb614b61241"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "temp", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HtotEVal", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]s"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]s"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
          "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"temp", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |ee>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |gg>\>\""}], 
            "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "\"\<Energy\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\n", ",", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MatrixForm", "[", 
            RowBox[{"HtotEVec", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]s"}], ",", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]s"}], ",", 
            RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
           "}"}], "]"}]}]}], "\n", "}"}]}]}], "]"}], ",", "\n", "Delimiter", 
   ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Frequencies\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]s", ",", "0.9"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Interaction strength\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]s", ",", "0.001"}], "}"}], ",", "0.001", ",", "3"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273625901087494`*^9, 3.8273626058300867`*^9}, {
   3.8274560993850036`*^9, 3.8274561178218513`*^9}, {3.8304960957907505`*^9, 
   3.8304960972605505`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"3677a2e3-520d-4c72-8f28-d06fb316a7ab"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Gamma]s$$ = 
    0.001, $CellContext`\[Omega]s$$ = 0.9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item["Frequencies", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]s$$], 0.9}, 0, 3}, {
      Hold[
       Item["Interaction strength", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Gamma]s$$], 0.001}, 0.001, 3}}, Typeset`size$$ = {
    617., {250.5, 146.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Gamma]s$$ = 
        0.001, $CellContext`\[Omega]s$$ = 0.9}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`temp$}, $CellContext`temp$ = ReplaceAll[
           Table[
            $CellContext`HtotEVal[$CellContext`i], {$CellContext`i, 1, 4}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]s$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]s$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]]; {
          
          Plot[$CellContext`temp$, {$CellContext`t, 0, 2}, 
           PlotLegends -> {
            "|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |ee>", 
             "|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |gg>"}, 
           AxesLabel -> {None, "Energy"}, PlotRange -> {-1.5, 1.5}, 
           Ticks -> {None, Automatic}, ImageSize -> Medium], 
          ReplaceAll[
           Table[
            MatrixForm[
             $CellContext`HtotEVec[$CellContext`i]], {$CellContext`i, 1, 4}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]s$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]s$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]]}], 
      "Specifications" :> {Delimiter, 
        Item[
        "Frequencies", Alignment -> Center], {{$CellContext`\[Omega]s$$, 0.9},
          0, 3}, Delimiter, 
        Item[
        "Interaction strength", Alignment -> 
         Center], {{$CellContext`\[Gamma]s$$, 0.001}, 0.001, 3}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{676., {291., 299.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.82736259798069*^9, 3.8273626067326913`*^9}, 
   3.82737952478656*^9, 3.827382828735057*^9, 3.827440476580181*^9, 
   3.8274457732253704`*^9, {3.8274560852208195`*^9, 3.827456118628666*^9}, 
   3.827470183163624*^9, 3.827524174162815*^9, 3.827783718694434*^9, 
   3.830495040102793*^9, 3.8304962500033846`*^9, 3.8305006463549576`*^9, 
   3.8305037703688674`*^9, 3.830563369467287*^9, 3.8308104060423503`*^9, 
   3.830811401391075*^9, 3.830822245614318*^9, 3.8308266181674614`*^9, 
   3.8308289958622437`*^9, 3.8309845527297215`*^9, 3.831002551040552*^9, 
   3.8323045201670156`*^9, 3.836348593788229*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8844e986-a9f3-4b5e-99ef-21713a2a18aa"]
}, Open  ]],

Cell[TextData[{
 "Representing the system Hamiltonian in new (dressed) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"|", 
      RowBox[{
       SubscriptBox["i", "DRE"], ">"}]}], ";", " ", 
     RowBox[{"i", "=", "1"}]}], ",", "2", ",", "3", ",", "4"}], 
   TraditionalForm]],ExpressionUUID->"dfa0eeac-4ccb-4115-8c36-67a5101843fa"],
 " basis"
}], "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273694590416155`*^9, 3.827369546653637*^9}, {
   3.8273714600446243`*^9, 3.8273714639617777`*^9}, {3.827379900636286*^9, 
   3.8273799108535905`*^9}, {3.830488901381234*^9, 
   3.8304889121980515`*^9}},ExpressionUUID->"f95bafde-b5b7-4308-b8f6-\
ebca337f8e00"],

Cell["Bare eigensystem (without interaction)", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273816397795196`*^9, 3.827381649814212*^9}, {
   3.8273817762117395`*^9, 3.827381780583928*^9}, {3.830488923501515*^9, 
   3.8304889467462034`*^9}},ExpressionUUID->"5b24a646-6077-4eae-9707-\
8945053b6fd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HAHBEVal", "[", "i", "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"HAHBEVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273570111683946`*^9, 3.8273570344061985`*^9}, {
   3.8273571723112164`*^9, 3.8273572333769093`*^9}, 3.8273816366129203`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"e3476dac-7803-4209-8d7b-8cbe6d83ad66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "+", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"1"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "\[HBar]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[Omega]", "1"]}], "-", 
        SubscriptBox["\[Omega]", "2"]}], ")"}]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8273816373418074`*^9, 
  3.8273828310731544`*^9, 3.8274404788548107`*^9, 3.827445797559062*^9, 
  3.8274639044090834`*^9, 3.8274701851115713`*^9, 3.8275241771369457`*^9, 
  3.827783720950178*^9, 3.8304950485396767`*^9, 3.830496252718689*^9, 
  3.8305006465841665`*^9, 3.8305037705920706`*^9, 3.8305633697435384`*^9, 
  3.8308105295163527`*^9, 3.83081141192455*^9, 3.8308222550288267`*^9, 
  3.830826622075729*^9, 3.830829009905695*^9, 3.830984564291992*^9, 
  3.8310025513718443`*^9, 3.8323045226181836`*^9, 3.8363486037790627`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"490ffbe2-9981-4328-b5c4-39abde0b0e84"]
}, Open  ]],

Cell[TextData[{
 "Define \n\tDetuning  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]R", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "-", 
      SubscriptBox["\[Omega]", "2"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"35a463e6-3116-440d-959b-911b745f189a"],
 "\n\tSum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]C", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "+", 
      SubscriptBox["\[Omega]", "2"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"1f703628-9e77-4f6e-9ab8-99f22623be29"],
 "\n\tRabi frequency ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalOmega]R", " ", "=", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "-", 
         SubscriptBox["\[Omega]", "2"]}], ")"}], "2"]}]]}], TraditionalForm]],
  ExpressionUUID->"04a5dc23-8632-4fda-8770-651d9e1e135a"],
 "\t\n\tCounter rotating frequency ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalOmega]C", " ", "=", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "+", 
         SubscriptBox["\[Omega]", "2"]}], ")"}], "2"]}]]}], TraditionalForm]],
  ExpressionUUID->"cc67e939-0e6f-4095-abdd-6cf433624800"]
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273816844744387`*^9, 3.827381697519328*^9}, {
   3.827382842986472*^9, 3.8273828917325635`*^9}, {3.830810587983105*^9, 
   3.8308106252553043`*^9}, {3.8308106716010284`*^9, 
   3.8308106756326523`*^9}, {3.8308107156112165`*^9, 
   3.8308107474107246`*^9}},ExpressionUUID->"62f43982-593c-4187-a110-\
c6aa3e6cd300"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]\[CapitalOmega]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalDelta]R", "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "-", 
       SubscriptBox["\[Omega]", "2"]}]}], ",", 
     RowBox[{"\[CapitalOmega]R", "\[Rule]", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], ",", 
     RowBox[{"\[CapitalDelta]C", "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "+", 
       SubscriptBox["\[Omega]", "2"]}]}], ",", 
     RowBox[{"\[CapitalOmega]C", "\[Rule]", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Omega]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "2", "2"]}]]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827528102041128*^9, 3.827528140049054*^9}, {
   3.8308106306093273`*^9, 3.83081064605182*^9}, {3.830810678763857*^9, 
   3.8308106819241247`*^9}, {3.8308107531063724`*^9, 
   3.8308107617063675`*^9}, {3.8308225117641277`*^9, 3.8308225245546293`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"1d23a527-0dee-45c9-abb5-42e012610892"],

Cell["Dressed Eigensystem (with interaction)", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273816520064754`*^9, 3.827381655734892*^9}, {
   3.827381782979969*^9, 3.8273817864819136`*^9}, {3.8304950586000137`*^9, 
   3.830495062648483*^9}},ExpressionUUID->"91130947-35c7-4097-b354-\
55336214010c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HtotEVal", "[", "i", "]"}], ",", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"HtotEVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Omega]", "1"], " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       SubsuperscriptBox["\[Omega]", "2", "2"]}]], "\[Rule]", 
     "\[CapitalOmega]R"}], ",", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Omega]", "1"], " ", 
        SubscriptBox["\[Omega]", "2"]}], "+", 
       SubsuperscriptBox["\[Omega]", "2", "2"]}]], "\[Rule]", 
     "\[CapitalOmega]C"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["\[Omega]", "1"]}], "+", 
      SubscriptBox["\[Omega]", "2"]}], "\[Rule]", 
     RowBox[{"-", "\[CapitalDelta]R"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "-", 
      SubscriptBox["\[Omega]", "2"]}], "\[Rule]", "\[CapitalDelta]R"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["\[Omega]", "1"]}], "-", 
      SubscriptBox["\[Omega]", "2"]}], "\[Rule]", 
     RowBox[{"-", "\[CapitalDelta]C"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "+", 
      SubscriptBox["\[Omega]", "2"]}], "\[Rule]", "\[CapitalDelta]C"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273821421698256`*^9, 3.827382152700038*^9}, {
   3.827382923692769*^9, 3.8273829597131615`*^9}, {3.8274525743308353`*^9, 
   3.827452576457049*^9}, {3.830810656645314*^9, 3.830810700501693*^9}, {
   3.8308107748158712`*^9, 3.8308108012509055`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"1456799e-2a3c-4aba-8bb0-83d30dd13e74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox[
            RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
            RowBox[{"\[Gamma]", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
                  "\[Gamma]"], "]"}], "2"]}]]}]]},
          {"0"},
          {"0"},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
                 "\[Gamma]"], "]"}], "2"]}]]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           FractionBox[
            RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
            RowBox[{"\[Gamma]", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
                  "\[Gamma]"], "]"}], "2"]}]]}]]},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
                 "\[Gamma]"], "]"}], "2"]}]]]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
             RowBox[{"\[Gamma]", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "\[CapitalDelta]R"}], "+", 
                    "\[CapitalOmega]R"}], "\[Gamma]"], "]"}], "2"]}]]}]]}]},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "\[CapitalDelta]R"}], "+", 
                  "\[CapitalOmega]R"}], "\[Gamma]"], "]"}], "2"]}]]]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox[
            RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
            RowBox[{"\[Gamma]", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
                  "\[Gamma]"], "]"}], "2"]}]]}]]},
          {"0"},
          {"0"},
          {
           FractionBox["1", 
            SqrtBox[
             RowBox[{"1", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
                 "\[Gamma]"], "]"}], "2"]}]]]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8273815755507364`*^9, {3.827382146989439*^9, 
   3.827382153615122*^9}, 3.827382832848981*^9, 3.827382961104151*^9, 
   3.8274404802245483`*^9, 3.8274458025500126`*^9, 3.8274525753871207`*^9, 
   3.827452631838859*^9, 3.8274639059324493`*^9, 3.8274701863757257`*^9, 
   3.827524178875963*^9, 3.827783723929057*^9, 3.83049508986333*^9, 
   3.830496285505439*^9, 3.8305006467314615`*^9, 3.8305037707335944`*^9, 
   3.8305633698849792`*^9, 3.8308105393795085`*^9, 3.8308106487725163`*^9, 
   3.8308107011091876`*^9, 3.8308108022436543`*^9, 3.8308114193032913`*^9, 
   3.8308266264458017`*^9, 3.830829014191182*^9, 3.830984567284521*^9, 
   3.8310025515880404`*^9, 3.8323045317340527`*^9, 3.8363486074844327`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4a332e35-596f-44ef-a0a2-e03d29c736a1"]
}, Open  ]],

Cell["Simplifying,", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827383274734646*^9, 
   3.8273832820160017`*^9}},ExpressionUUID->"f1c5db49-029d-4ede-9e50-\
ef0b346d638a"],

Cell[BoxData[{
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox[
         RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
         RowBox[{"\[Gamma]", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
               "\[Gamma]"], "]"}], "2"]}]]}]]},
       {"0"},
       {"0"},
       {
        FractionBox["1", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
              "\[Gamma]"], "]"}], "2"]}]]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "=", 
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"(", "\[NoBreak]", 
      TagBox[GridBox[{
         {
          FractionBox[
           RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Gamma]", "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
              "2"]}]]]},
         {"0"},
         {"0"},
         {
          FractionBox["\[Gamma]", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Gamma]", "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
              "2"]}]]]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Column], "\[NoBreak]", ")"}], " ", "=", " "}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
       "2"]}]]], 
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}]},
       {"0"},
       {"0"},
       {"\[Gamma]"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}]}]}], "\n", 
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"0"},
       {
        FractionBox[
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
         RowBox[{"\[Gamma]", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
               "\[Gamma]"], "]"}], "2"]}]]}]]},
       {
        FractionBox["1", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              "\[Gamma]"], "]"}], "2"]}]]]},
       {"0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "=", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0"},
        {
         FractionBox[
          RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]]},
        {
         FractionBox["\[Gamma]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]]},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], " ", "=", " ", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]], 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
      TagBox[GridBox[{
         {"0"},
         {
          RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}]},
         {"\[Gamma]"},
         {"0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Column], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}]}], "\n", 
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"0"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
          RowBox[{"\[Gamma]", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}],
                 "\[Gamma]"], "]"}], "2"]}]]}]]}]},
       {
        FractionBox["1", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
              "\[Gamma]"], "]"}], "2"]}]]]},
       {"0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "=", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0"},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Gamma]", "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
               "]"}], "2"]}]]]}]},
        {
         FractionBox["\[Gamma]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
              "]"}], "2"]}]]]},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], " ", "=", " ", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalOmega]R", "-", "\[CapitalDelta]R"}], "]"}], 
        "2"]}]]], 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
      TagBox[GridBox[{
         {"0"},
         {
          RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}]},
         {"\[Gamma]"},
         {"0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Column], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}]}], "\n", 
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        FractionBox[
         RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
         RowBox[{"\[Gamma]", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
               "\[Gamma]"], "]"}], "2"]}]]}]]},
       {"0"},
       {"0"},
       {
        FractionBox["1", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
              "\[Gamma]"], "]"}], "2"]}]]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "=", 
  TagBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox[
          RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]]},
        {"0"},
        {"0"},
        {
         FractionBox["\[Gamma]", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}], " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
         "2"]}]]], 
     RowBox[{"(", "\[NoBreak]", 
      TagBox[GridBox[{
         {
          RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}]},
         {"0"},
         {"0"},
         {"\[Gamma]"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Column], "\[NoBreak]", ")"}]}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273830072145023`*^9, 3.8273830605404043`*^9}, 
   3.8273830929285173`*^9, {3.827383183246913*^9, 3.8273832417193556`*^9}, {
   3.827383288102715*^9, 3.827383362495264*^9}, {3.8274458375632744`*^9, 
   3.827445852617655*^9}, {3.8274458863059673`*^9, 3.827446174842084*^9}, {
   3.830495110086959*^9, 3.830495112631159*^9}, {3.830811461187815*^9, 
   3.8308116093904696`*^9}, {3.830811654063984*^9, 
   3.8308118183453803`*^9}},ExpressionUUID->"ebe1173a-cb83-45fc-af93-\
c08a92afc37c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HtotEValSimp", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "\[HBar]", " ", "\[CapitalOmega]C"}], ",", 
     RowBox[{
      FractionBox["1", "2"], "\[HBar]", " ", "\[CapitalOmega]R"}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "\[HBar]", " ", "\[CapitalOmega]R"}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], "\[HBar]", " ", "\[CapitalOmega]C"}]}], "}"}],
    "[", 
   RowBox[{"[", "i", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"HtotEVecSimp", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
          "2"]}]]], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}]},
          {"0"},
          {"0"},
          {"\[Gamma]"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}], ",", " ", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
          "2"]}]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}]},
           {"\[Gamma]"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ",", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalOmega]R", "-", "\[CapitalDelta]R"}], "]"}], 
          "2"]}]]], 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"0"},
           {
            RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}]},
           {"\[Gamma]"},
           {"0"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ",", 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
          "2"]}]]], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}]},
          {"0"},
          {"0"},
          {"\[Gamma]"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}]}], "}"}], "[", 
   RowBox[{"[", "i", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273817110861034`*^9, 3.8273817495116706`*^9}, {
   3.827381809175118*^9, 3.8273819458894157`*^9}, {3.827382031459093*^9, 
   3.8273820369828873`*^9}, {3.8273822108618813`*^9, 
   3.8273822111009555`*^9}, {3.827383400953969*^9, 3.8273834094793587`*^9}, {
   3.8273838039724517`*^9, 3.8273838096927357`*^9}, {3.8274458170495605`*^9, 
   3.827445819077998*^9}, {3.8274462150838575`*^9, 3.827446220618039*^9}, {
   3.8308119545788026`*^9, 3.830811974108101*^9}, {3.8308132129268837`*^9, 
   3.8308132283776665`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"1f02f12e-ae66-411c-adfe-9f74696d0f5d"],

Cell["Diagonalizing the system Hamiltonian", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827383974326703*^9, 
   3.827384002206896*^9}},ExpressionUUID->"a877025e-540d-4d85-a7eb-\
ebad7df07845"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HtotEVecMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"HtotEVec", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273800042132874`*^9, 3.8273800755203295`*^9}, {
   3.8274407143894186`*^9, 3.8274407234414587`*^9}, {3.827441079843446*^9, 
   3.8274410802709723`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"e02637be-9073-4058-be19-dd3cbf9db3a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"HtotMatrix", "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Inverse", "[", "HtotEVecMatrix", "]"}], ".", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HtotEVal", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ".", 
     "HtotEVecMatrix"}], ")"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273840313212595`*^9, 3.8273840924021096`*^9}, {
   3.8274407708686666`*^9, 3.827440787165677*^9}, {3.8274408269768877`*^9, 
   3.8274408408028593`*^9}, {3.827441083228055*^9, 3.8274410836742115`*^9}, {
   3.83049555643716*^9, 3.8304955573321033`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"a244ab46-79e7-4f42-abba-2f6bac8918fb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"]},
     {"0", 
      RowBox[{
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "1"]}], "2"], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "+", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}], "0"},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[HBar]", " ", 
          SubscriptBox["\[Omega]", "1"]}], "2"]}], "-", 
       FractionBox[
        RowBox[{"\[HBar]", " ", 
         SubscriptBox["\[Omega]", "2"]}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827384080320077*^9, 3.8273840930066614`*^9}, 
   3.8274405359810963`*^9, 3.827440727657443*^9, 3.8274407887926536`*^9, {
   3.827440829481742*^9, 3.827440841748004*^9}, 3.8274410844262857`*^9, 
   3.8274465124400187`*^9, 3.8274639236905336`*^9, 3.8274701939557962`*^9, 
   3.8275241847601733`*^9, 3.827783745463134*^9, {3.8304955468077354`*^9, 
   3.830495558309101*^9}, 3.830496290708092*^9, 3.8305006589067183`*^9, 
   3.830503782585537*^9, 3.830563389232768*^9, 3.830812069281029*^9, 
   3.83081323179607*^9, 3.8308268012370415`*^9, 3.830829041859728*^9, 
   3.8309845738302526`*^9, 3.8310025607210755`*^9, 3.8323045905911117`*^9, 
   3.8363486149726763`*^9},
 CellLabel->
  "Out[38]//MatrixForm=",ExpressionUUID->"0960b116-08dd-4398-b0a0-\
e899880bb0a2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", "\[HBar]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "+", 
         SubscriptBox["\[Omega]", "2"]}], ")"}]}], "0", "0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"]},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[HBar]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "-", 
         SubscriptBox["\[Omega]", "2"]}], ")"}]}], 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[HBar]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "-", 
         SubscriptBox["\[Omega]", "2"]}], ")"}]}], "0"},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", "\[HBar]"}], "2"], "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[HBar]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "+", 
         SubscriptBox["\[Omega]", "2"]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827384080320077*^9, 3.8273840930066614`*^9}, 
   3.8274405359810963`*^9, 3.827440727657443*^9, 3.8274407887926536`*^9, {
   3.827440829481742*^9, 3.827440841748004*^9}, 3.8274410844262857`*^9, 
   3.8274465124400187`*^9, 3.8274639236905336`*^9, 3.8274701939557962`*^9, 
   3.8275241847601733`*^9, 3.827783745463134*^9, {3.8304955468077354`*^9, 
   3.830495558309101*^9}, 3.830496290708092*^9, 3.8305006589067183`*^9, 
   3.830503782585537*^9, 3.830563389232768*^9, 3.830812069281029*^9, 
   3.83081323179607*^9, 3.8308268012370415`*^9, 3.830829041859728*^9, 
   3.8309845738302526`*^9, 3.8310025607210755`*^9, 3.8323045905911117`*^9, 
   3.836348615069763*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"cefe65fa-dbd6-4ba6-811b-\
88b21962ab4c"]
}, Open  ]],

Cell["\<\
The diagonalization is through a unitary transformation with U being the \
eigenvector matrix.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273839037515793`*^9, 3.8273839187972984`*^9}, {
   3.827384116741076*^9, 3.827384133259098*^9}, {3.8304891322378764`*^9, 
   3.8304891741598434`*^9}},ExpressionUUID->"156603cb-1a8c-4fc4-9284-\
2ffe6e8ffc8b"],

Cell[TextData[{
 "Inverting the diagonalization gives the Hamiltonian in the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["1", "DRE"], ">"}]}], ",", " ", 
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["2", "DRE"], ">"}]}], ",", " ", 
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["3", "DRE"], ">"}]}]}], TraditionalForm]],ExpressionUUID->
  "36feeedb-313b-42d7-8867-bf74b711df06"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["4", "DRE"], ">"}]}], TraditionalForm]],ExpressionUUID->
  "75f5383c-b842-4e1b-99f9-3a4d58079beb"],
 " basis,"
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273839037515793`*^9, 3.8273839187972984`*^9}, {
   3.827384116741076*^9, 3.827384133259098*^9}, {3.83049611379952*^9, 
   3.8304961148679705`*^9}},ExpressionUUID->"27dc4553-2ec3-46ad-b7ed-\
da70452761e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HtotDREMatrix", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"HtotEVecMatrix", ".", "HtotMatrix", ".", 
     RowBox[{"Inverse", "[", "HtotEVecMatrix", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "HtotDREMatrix", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827379918093547*^9, 3.8273799552169156`*^9}, {
   3.8273800786981077`*^9, 3.827380220796009*^9}, {3.8304961254707575`*^9, 
   3.8304961264739623`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"0dd8c683-c1dc-4ea1-a53d-7747a8e15443"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", "\[HBar]", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Omega]", "1"], " ", 
          SubscriptBox["\[Omega]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[HBar]", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Omega]", "1"], " ", 
          SubscriptBox["\[Omega]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[HBar]", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Omega]", "1"], " ", 
          SubscriptBox["\[Omega]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[HBar]", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Omega]", "1"], " ", 
          SubscriptBox["\[Omega]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "2", "2"]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827380103985452*^9, 3.8273802214602704`*^9}, 
   3.827383765141967*^9, 3.827440540113253*^9, 3.827441059097844*^9, 
   3.8274410904476976`*^9, 3.827441165348897*^9, 3.8274465200458994`*^9, 
   3.827463925395895*^9, 3.8274701951739035`*^9, 3.8275241861776047`*^9, 
   3.827783746857876*^9, 3.8304955741219053`*^9, 3.8304962931329317`*^9, 
   3.8305006589793496`*^9, 3.8305037826579037`*^9, 3.830563389315843*^9, 
   3.8308121594080763`*^9, 3.830813235542535*^9, 3.8308268062261043`*^9, 
   3.8308290479972496`*^9, 3.8309845763588266`*^9, 3.8310025608523474`*^9, 
   3.8323045939093423`*^9, 3.8363486190414786`*^9},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"8d54b8a7-916d-4dc9-91b5-\
63f3ad29b1f3"]
}, Open  ]],

Cell["We will work in this basis from now on.", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273839296735077`*^9, 
   3.8273839371614113`*^9}},ExpressionUUID->"102a54c2-d053-47f6-acc2-\
95bc124fc01a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HtotDRESimpMatrix", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", "\[HBar]", " ", "\[CapitalOmega]C"}], 
        "0", "0", "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], " ", "\[HBar]", " ", "\[CapitalOmega]R"}], 
        "0", "0"},
       {"0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[HBar]", " ", "\[CapitalOmega]R"}], 
        "0"},
       {"0", "0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[HBar]", " ", "\[CapitalOmega]C"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273838690051384`*^9, 3.827383888441067*^9}, 
   3.8274405701521163`*^9, {3.8274411673835163`*^9, 3.8274411698007574`*^9}, {
   3.827446528019772*^9, 3.8274465312735777`*^9}, {3.8304956662620945`*^9, 
   3.830495666693592*^9}, {3.8308121731496687`*^9, 3.8308122117423515`*^9}, {
   3.8308122883141985`*^9, 3.8308122898213353`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"125355e7-f4f9-4a0f-9762-a393b533788a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HtotEVecSimpMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"HtotEVecSimp", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827441313526333*^9, 3.8274413427840505`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"0a310794-d1f0-410f-b45c-851f981b0dc2"],

Cell["\<\
Verify both eigenvector matrices are physically the same thing\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8304895252694435`*^9, 
   3.8304895559591446`*^9}},ExpressionUUID->"55b0f637-2bf4-4fcd-80ed-\
22fd97ce8ab0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"HtotEVecMatrix", "//", "MatrixForm"}], "\n", 
 RowBox[{"HtotEVecSimpMatrix", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8304886115323925`*^9, 3.8304886425748367`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"36a0bc90-b44c-4691-aca0-b4397cf7a8f3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        SubscriptBox["\[Omega]", "2"], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "1"], " ", 
           SubscriptBox["\[Omega]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
       RowBox[{"\[Gamma]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "+", 
              SubscriptBox["\[Omega]", "2"], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Omega]", "1"], " ", 
                 SubscriptBox["\[Omega]", "2"]}], "+", 
                SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
            "]"}], "2"]}]]}]], "0", "0", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "+", 
             SubscriptBox["\[Omega]", "2"], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
           "]"}], "2"]}]]]},
     {"0", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "-", 
        SubscriptBox["\[Omega]", "2"], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "1"], " ", 
           SubscriptBox["\[Omega]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
       RowBox[{"\[Gamma]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "-", 
              SubscriptBox["\[Omega]", "2"], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Omega]", "1"], " ", 
                 SubscriptBox["\[Omega]", "2"]}], "+", 
                SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
            "]"}], "2"]}]]}]], 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "-", 
             SubscriptBox["\[Omega]", "2"], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
           "]"}], "2"]}]]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["\[Omega]", "1"]}], "+", 
         SubscriptBox["\[Omega]", "2"], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], "+", 
           SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Omega]", "1"], " ", 
            SubscriptBox["\[Omega]", "2"]}], "+", 
           SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
        RowBox[{"\[Gamma]", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["\[Omega]", "1"]}], "+", 
               SubscriptBox["\[Omega]", "2"], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Gamma]", "2"], "+", 
                 SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
                 RowBox[{"2", " ", 
                  SubscriptBox["\[Omega]", "1"], " ", 
                  SubscriptBox["\[Omega]", "2"]}], "+", 
                 SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
             "]"}], "2"]}]]}]]}], 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["\[Omega]", "1"]}], "+", 
             SubscriptBox["\[Omega]", "2"], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "-", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
           "]"}], "2"]}]]], "0"},
     {
      FractionBox[
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "+", 
        SubscriptBox["\[Omega]", "2"], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Omega]", "1"], " ", 
           SubscriptBox["\[Omega]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], 
       RowBox[{"\[Gamma]", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{
              SubscriptBox["\[Omega]", "1"], "+", 
              SubscriptBox["\[Omega]", "2"], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], "+", 
                SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["\[Omega]", "1"], " ", 
                 SubscriptBox["\[Omega]", "2"]}], "+", 
                SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
            "]"}], "2"]}]]}]], "0", "0", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "+", 
             SubscriptBox["\[Omega]", "2"], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], "+", 
               SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Omega]", "1"], " ", 
                SubscriptBox["\[Omega]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "2", "2"]}]]}], "\[Gamma]"], 
           "]"}], "2"]}]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.830495593484104*^9, 
  3.83049567287335*^9, 3.8304962959167037`*^9, 3.830500659060999*^9, 
  3.83050378276689*^9, 3.830563389430687*^9, 3.8308122945838137`*^9, 
  3.8308132490031686`*^9, 3.830826830656497*^9, 3.830829060711712*^9, 
  3.830984579431985*^9, 3.8310025609694757`*^9, 3.8323045985591545`*^9, 
  3.8363486231367645`*^9},
 CellLabel->
  "Out[44]//MatrixForm=",ExpressionUUID->"3b6317bd-7c52-40de-9bfb-\
bc3fb53edea4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
          "2"]}]]], "0", "0", 
      FractionBox["\[Gamma]", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
          "2"]}]]]},
     {"0", 
      FractionBox[
       RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
          "2"]}]]], 
      FractionBox["\[Gamma]", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
          "2"]}]]], "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
           "]"}], "2"]}]]], 
      FractionBox["\[Gamma]", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]R"}], "+", "\[CapitalOmega]R"}], 
           "]"}], "2"]}]]], "0"},
     {
      FractionBox[
       RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
          "2"]}]]], "0", "0", 
      FractionBox["\[Gamma]", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
          "2"]}]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.830495593484104*^9, 
  3.83049567287335*^9, 3.8304962959167037`*^9, 3.830500659060999*^9, 
  3.83050378276689*^9, 3.830563389430687*^9, 3.8308122945838137`*^9, 
  3.8308132490031686`*^9, 3.830826830656497*^9, 3.830829060711712*^9, 
  3.830984579431985*^9, 3.8310025609694757`*^9, 3.8323045985591545`*^9, 
  3.8363486231458097`*^9},
 CellLabel->
  "Out[45]//MatrixForm=",ExpressionUUID->"cf9bb2b7-657c-4ca5-9798-\
45f515b3a5e6"]
}, Open  ]],

Cell["\<\
We will work in this basis from now on,
\twith the Hamiltonian\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273839296735077`*^9, 3.8273839371614113`*^9}, {
   3.830492449245666*^9, 
   3.8304924552095203`*^9}},ExpressionUUID->"fbb03292-783b-40e1-88a2-\
e342a10f655c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HtotDRESimpMatrix", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830492463571055*^9, 3.83049246498559*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"2eafa0e1-00a9-4717-bc8f-104bbb7a1cd1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"], "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.830492465533576*^9, 3.8304925646341395`*^9, {
   3.8304956529681664`*^9, 3.8304956762701597`*^9}, 3.8304962976949825`*^9, 
   3.8305006591231194`*^9, 3.8305037828301573`*^9, 3.830563389501752*^9, 
   3.830812808670311*^9, 3.8308132507382803`*^9, 3.830827336906573*^9, 
   3.8308290718349915`*^9, 3.830984581383156*^9, 3.8310025610370884`*^9, 
   3.8323046009001193`*^9, 3.8363486253520994`*^9},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"19654a1b-8b7c-4e1f-b578-\
c76cf6ffd4aa"]
}, Open  ]],

Cell["\tand eigensystem", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830492471615486*^9, 
   3.8304924786670914`*^9}},ExpressionUUID->"ed633ab7-f6ec-4f89-8ab6-\
ca1811d20ebb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Shift3", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "1"}]},
     "KroneckerDeltaSeq"], "2"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "2"}]},
     "KroneckerDeltaSeq"], "4"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "3"}]},
     "KroneckerDeltaSeq"], "3"}], "+", 
   RowBox[{
    TemplateBox[{
      RowBox[{"i", ",", "4"}]},
     "KroneckerDeltaSeq"], "1"}]}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273561300311756`*^9, 3.827356210602434*^9}, {
   3.827356346767085*^9, 3.8273563490676003`*^9}, {3.8273564797786727`*^9, 
   3.82735647994188*^9}, {3.827356519771364*^9, 3.8273565365493455`*^9}, 
   3.8273573126510105`*^9, {3.8304907731105003`*^9, 3.8304907762189817`*^9}, 
   3.830492514012225*^9, {3.830492601923818*^9, 3.830492642256057*^9}, {
   3.8308128465828075`*^9, 3.830812898837257*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"4adfef08-7de8-45e6-ad75-542f44f97949"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HtotDRESSimpEVal", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "HtotDRESimpMatrix", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"Shift3", "[", "i", "]"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HtotDRESSimpEVec", "[", "i_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"Eigenvectors", "[", "HtotDRESimpMatrix", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Shift3", "[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HtotDRESSimpEVal", "[", "i", "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"HtotDRESSimpEVec", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818971764653781*^9, 3.818971788563111*^9}, {
   3.818978989230052*^9, 3.818979086209076*^9}, {3.827356353535863*^9, 
   3.8273563611109414`*^9}, {3.8273573167310705`*^9, 
   3.8273573181036353`*^9}, {3.8273709824565067`*^9, 
   3.8273710001995745`*^9}, {3.83049152093778*^9, 3.830491521941848*^9}, {
   3.8304925241813264`*^9, 3.830492547510097*^9}, {3.8304925868029594`*^9, 
   3.8304925982401485`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"3045c0c7-3e10-4b38-8ac7-a91d26e1c244"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"0"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"},
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"1"},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"},
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.830495681377863*^9, 3.830496299636804*^9, 
   3.8305006591888523`*^9, 3.83050378289922*^9, 3.8305633896036835`*^9, 
   3.830812817110486*^9, {3.830812852927935*^9, 3.830812900174038*^9}, 
   3.8308132532521806`*^9, 3.830827342706217*^9, 3.8308290782220497`*^9, 
   3.830984583457275*^9, 3.8310025611171618`*^9, 3.8323046249305964`*^9, 
   3.8363486274361115`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"785fecc8-00f7-451a-8807-2a072c0e0183"]
}, Open  ]],

Cell["Density Matrix", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189719068160305`*^9, 
   3.818971912844532*^9}},ExpressionUUID->"b2b76611-92bf-4b8e-a83a-\
5623b2fb3d96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]DREMatrix", "[", "t_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"ve", ",", "ho"}]], "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ve", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ho", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189719178661394`*^9, 3.818971971512575*^9}, {
   3.827380320898517*^9, 3.827380369807832*^9}, {3.8274705485346146`*^9, 
   3.827470548843895*^9}, 3.8304956926586123`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"e3cbe740-64a3-4941-8f2d-a1c9c955cddf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818972011666029*^9, 3.8189720203164625`*^9}, 
   3.8273803530138335`*^9, 3.8304956936089582`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"ab82a063-4a6d-4c71-8af8-2967bf7c83d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"1", ",", "4"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "4"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"3", ",", "4"}]], "[", "t", "]"}]},
     {
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "1"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "2"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "3"}]], "[", "t", "]"}], 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8189720212851477`*^9, 3.8189813352428207`*^9, 
   3.8189816782989106`*^9, 3.819054785278103*^9, 3.81932037888659*^9, 
   3.821398231336958*^9, 3.8214913954605637`*^9, 3.821499023803048*^9, 
   3.8214995318577833`*^9, 3.821499820049381*^9, 3.827368250455928*^9, {
   3.827380346304126*^9, 3.8273803719024673`*^9}, 3.827383952073152*^9, 
   3.8274405853006134`*^9, 3.8274465526588087`*^9, 3.8274639307129545`*^9, 
   3.8274702016141725`*^9, 3.8274705505364323`*^9, 3.8275241913841662`*^9, 
   3.827783752562558*^9, 3.8304956985553226`*^9, 3.8304963022049356`*^9, 
   3.8305006592756567`*^9, 3.8305037829732866`*^9, 3.830563389714447*^9, 
   3.8308129068615427`*^9, 3.8308132559058723`*^9, 3.8308273560007486`*^9, 
   3.8308290865793743`*^9, 3.8309845856038713`*^9, 3.8310025612186537`*^9, 
   3.832304627906354*^9, 3.8363486298122625`*^9},
 CellLabel->
  "Out[52]//MatrixForm=",ExpressionUUID->"973b8ab4-daa4-431c-aa89-\
3b73d1e04478"]
}, Open  ]],

Cell["Pauli matrices", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7619495192838044`*^9, 3.7619495288103085`*^9}, {
   3.762561089384513*^9, 3.762561090154118*^9}, {3.7625627852721615`*^9, 
   3.7625627984978285`*^9}, {3.762562828880328*^9, 3.762562829297471*^9}, 
   3.7723103071816144`*^9, {3.7741460906221986`*^9, 3.7741460938705306`*^9}, {
   3.7745567872795906`*^9, 3.7745568033824034`*^9}, {3.8274406023455257`*^9, 
   3.8274406029695997`*^9}},ExpressionUUID->"207aaa3f-5710-4d10-b9a0-\
b8cf19561f82"],

Cell["In z-base representation", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827440605243127*^9, 
   3.8274406316049337`*^9}},ExpressionUUID->"9305683e-8010-46da-b20a-\
6f168888ccb6"],

Cell[CellGroupData[{

Cell["\<\
|+z>=(1,0)
|-z>=(0,1)\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7625650301891313`*^9, 3.7625650615728874`*^9}, {
   3.772308297682048*^9, 3.7723083030028553`*^9}, 3.772310285749466*^9, {
   3.7745567872795906`*^9, 
   3.7745568033824034`*^9}},ExpressionUUID->"640a1c7d-e5d3-4b6e-9b54-\
678478fee12d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "axis_"], "[", 
    RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"axis", ",", "1"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", "1"},
         {"1", "0"}
        }], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"axis", ",", "2"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"-", "\[ImaginaryI]"}]},
         {"\[ImaginaryI]", "0"}
        }], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{
       RowBox[{"axis", ",", "3"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1", "0"},
         {"0", 
          RowBox[{"-", "1"}]}
        }], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"ve", ",", "ho"}], "]"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Id", "[", 
   RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", 
  TemplateBox[{
    RowBox[{"ve", ",", "ho"}]},
   "KroneckerDeltaSeq"]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.761949611811145*^9, 3.7619496148729544`*^9}, {
   3.761950818122388*^9, 3.7619508224039326`*^9}, {3.762561106576414*^9, 
   3.762561110987118*^9}, {3.7625641369822435`*^9, 3.762564140459488*^9}, {
   3.7625642357469273`*^9, 3.7625642421145487`*^9}, {3.7625643733248587`*^9, 
   3.762564430704482*^9}, {3.76256540320552*^9, 3.7625654415409317`*^9}, {
   3.762566566897612*^9, 3.762566571498107*^9}, {3.762566834261737*^9, 
   3.7625668474893646`*^9}, {3.7625672266567564`*^9, 3.762567255563883*^9}, {
   3.7625673144277563`*^9, 3.7625673775391035`*^9}, {3.762568487805128*^9, 
   3.7625684897050467`*^9}, {3.7723078451333632`*^9, 
   3.7723078580118046`*^9}, {3.772308217501932*^9, 3.7723082190058746`*^9}, {
   3.772308292756543*^9, 3.7723082941887197`*^9}, {3.77231002002919*^9, 
   3.7723100530318623`*^9}, 3.772310285749466*^9, {3.7745567872795906`*^9, 
   3.774556803383401*^9}, {3.77550514253335*^9, 3.775505144183448*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"1fa7bf3e-8b08-470c-afaf-e8e95b165053"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "1"], "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ve", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ho", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "2"], "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ve", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ho", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "3"], "[", 
       RowBox[{"ve", ",", "ho"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ve", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ho", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"MatrixForm", ",", "%", ",", "1"}], "]"}], " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7625675647053075`*^9, 3.76256765059167*^9}, {
   3.762567746254074*^9, 3.7625677506685915`*^9}, 3.762568492653244*^9, {
   3.7723078608537645`*^9, 3.772307889652068*^9}, 3.7723102857504635`*^9, {
   3.7745567872795906`*^9, 3.774556803383401*^9}, 3.802471133108018*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"93dc9512-919e-41af-a58a-ad90c2662231"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->CompressedData["
1:eJwV0V1IkwEUxvF3mmHfYLgYW+mEZTbZ0iV7a3N0cG2ObNQuDMXBUiTFZbYy
S6Y1Gys2NQhm3yQSa170wUDZCjHRyUqDWheOqEauguw0pxVKSXXei4ff5XPx
F9eeMNXzGIbR0byJM6mcpjm46T9QDmIEl2x8dXAXgnFprOgteai+8bGqCGH2
/SOfpRhh22LaaLECISWVz5eQvbaS7wGy3328LH83gtl+Q24ng329BR1k5UVN
zEcu3mHq/OTHB4rwHyWCNnKhKsUiyLPzQ6I9CO/8KynOYXOaU6JCiFmmlm+r
EX76Hfan5NqslXB3KcJE3sBnL1l9d93IshZhvObKQPp+BPar5l4G+ex8n+Qg
2RrYHD5H+pTTgimy5WVqJ2d0jG/4QcaHCn/ryxEemlv5/aRcP+t6UYkgakh1
iY7Qv5F3LLsGIZHZpjrZiKBjq27ZyGiSr8w5jaDxhNW5JG9wWiImP6xvjmnJ
o6fuX5okbREQjpxFuJw1c32ODOj3mZLkL3npVc7MLucQZ/veNmmuEyFyrWHH
dvKTbLC9jEyOOup0ZMWbQNxITood84dJ32uZ0ES2CHoqrGR3XvWab2TzJka9
xU192HQX54S1yScgXxlmC4WksCOkZ8mFpcjWAJnwKAyctg1/pSFymI2vekJ+
sT5fyPAgzHQWBDeStf+ine4eBMaiEYIX4T9N+xe1
  "],
 CellLabel->"Out[56]=",ExpressionUUID->"52714077-bb60-4375-8dd1-36e018230965"]
}, Open  ]],

Cell[CellGroupData[{

Cell["In compound system representation", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.7619495192838044`*^9, 3.7619495288103085`*^9}, {
   3.762561089384513*^9, 3.762561090154118*^9}, {3.7625627852721615`*^9, 
   3.7625627984978285`*^9}, {3.762562828880328*^9, 3.762562829297471*^9}, 
   3.7723103071816144`*^9, {3.7741460906221986`*^9, 3.7741460938705306`*^9}, {
   3.7745567872795906`*^9, 3.7745568033824034`*^9}, {3.7745756021655793`*^9, 
   3.774575613581605*^9}, 3.775532496987141*^9, 
   3.8274406271048994`*^9},ExpressionUUID->"5d58b7fc-e32a-44a2-9f01-\
44bacb81d1ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", 
     RowBox[{"P_", ",", "axis_"}]], "[", 
    RowBox[{"ve_", ",", "ho_"}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[{
       RowBox[{"P", ",", "1"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Sigma]", "axis"], "[", 
        RowBox[{
         RowBox[{"EmapA", "[", "ve", "]"}], ",", 
         RowBox[{"EmapA", "[", "ho", "]"}]}], "]"}], 
       RowBox[{"Id", "[", 
        RowBox[{
         RowBox[{"EmapB", "[", "ve", "]"}], ",", 
         RowBox[{"EmapB", "[", "ho", "]"}]}], "]"}]}], ")"}]}], "+", "\n", 
    RowBox[{
     TemplateBox[{
       RowBox[{"P", ",", "2"}]},
      "KroneckerDeltaSeq"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Id", "[", 
        RowBox[{
         RowBox[{"EmapA", "[", "ve", "]"}], ",", 
         RowBox[{"EmapA", "[", "ho", "]"}]}], "]"}], 
       RowBox[{
        SubscriptBox["\[Sigma]", "axis"], "[", 
        RowBox[{
         RowBox[{"EmapB", "[", "ve", "]"}], ",", 
         RowBox[{"EmapB", "[", "ho", "]"}]}], "]"}]}], ")"}]}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]Matrix", 
   RowBox[{"P_", ",", "axis_"}]], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", 
      RowBox[{"P", ",", "axis"}]], "[", 
     RowBox[{"ve", ",", "ho"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ve", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ho", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]PMatrix", "P_"], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Sigma]Matrix", 
      RowBox[{"P", ",", "1"}]], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]Matrix", 
       RowBox[{"P", ",", "2"}]]}]}], ")"}]}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]MMatrix", "P_"], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Sigma]Matrix", 
      RowBox[{"P", ",", "1"}]], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Sigma]Matrix", 
       RowBox[{"P", ",", "2"}]]}]}], ")"}]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7745740661766872`*^9, 3.7745741489408503`*^9}, {
   3.7745741828329115`*^9, 3.7745743120542574`*^9}, {3.774574530062931*^9, 
   3.7745745413606014`*^9}, {3.7745756544948835`*^9, 3.774575659239529*^9}, 
   3.774575774678233*^9, {3.774577387388764*^9, 3.7745773949035144`*^9}, 
   3.775532496987141*^9, {3.775532849464467*^9, 3.775532969263632*^9}, {
   3.8189776718308*^9, 3.8189776964386735`*^9}, {3.818977730687642*^9, 
   3.8189777547828054`*^9}, {3.818977794273266*^9, 3.8189778042371387`*^9}, {
   3.827380491444672*^9, 3.827380507530136*^9}, 3.827380556361558*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"e202a417-1cfc-40d5-8113-6d5be1defbe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    SubscriptBox["\[Sigma]Matrix", 
     RowBox[{"1", ",", "1"}]], "]"}], ",", 
   RowBox[{"MatrixForm", "[", 
    SubscriptBox["\[Sigma]Matrix", 
     RowBox[{"2", ",", "1"}]], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8273805110202456`*^9, 3.8273805283143253`*^9}, 
   3.827452102300601*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"3e230628-896c-494e-b2eb-ae6ef4ff05a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"},
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0"},
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.819054809531191*^9, 3.819320383928615*^9, 
   3.8213982366911664`*^9, 3.821491402492683*^9, 3.8214990283856487`*^9, 
   3.8214995380222554`*^9, 3.821499820409116*^9, 3.8273682909226623`*^9, {
   3.8273805302414083`*^9, 3.8273805580541344`*^9}, 3.8274406373927493`*^9, 
   3.827446558724106*^9, 3.827452102951184*^9, 3.8274639359378805`*^9, 
   3.8274702062874184`*^9, 3.827470555612252*^9, 3.8275242025680513`*^9, 
   3.8277837582681837`*^9, 3.830495714838505*^9, 3.8304963070929976`*^9, 
   3.8305006594210806`*^9, 3.830503783141573*^9, 3.830563389879895*^9, 
   3.830813260032325*^9, 3.8308273624054413`*^9, 3.830829096913162*^9, 
   3.8309845904076457`*^9, 3.831002561381977*^9, 3.8323046331548014`*^9, 
   3.8363486375464582`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"a7bef05e-a068-4aaf-bbd3-71b37ad0c1ee"]
}, Open  ]],

Cell[TextData[{
 "In new ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["i", "DRE"], ">"}]}], TraditionalForm]],ExpressionUUID->
  "34539527-326f-4bc9-a32c-d2e42f845e9c"],
 " dressed system basis"
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.7619495192838044`*^9, 3.7619495288103085`*^9}, {
   3.762561089384513*^9, 3.762561090154118*^9}, {3.7625627852721615`*^9, 
   3.7625627984978285`*^9}, {3.762562828880328*^9, 3.762562829297471*^9}, 
   3.7723103071816144`*^9, {3.7741460906221986`*^9, 3.7741460938705306`*^9}, {
   3.7745567872795906`*^9, 3.7745568033824034`*^9}, {3.7745756021655793`*^9, 
   3.774575613581605*^9}, 3.775532496987141*^9, {3.8273804492662477`*^9, 
   3.8273804679693956`*^9}, {3.827440649395936*^9, 3.827440666307207*^9}, {
   3.8304885729667463`*^9, 3.8304885740311685`*^9}, {3.830489236551903*^9, 
   3.8304892369341726`*^9}},ExpressionUUID->"72ceeaae-279b-4c3c-9d96-\
88ac60f275b4"],

Cell["\<\
We put the Pauli matrices through the same unitary transformation we used \
above to convert HtotMatrix to HtotDREMatrix \
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830488765280178*^9, 3.8304888240779543`*^9}, {
   3.830489305466899*^9, 3.830489345093652*^9}, 
   3.8304961299661517`*^9},ExpressionUUID->"fdc537b7-f9e2-4de4-9a93-\
8d2e6fcf4c47"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Sigma]DREMatrix", 
   RowBox[{"P_", ",", "axis_"}]], ":=", 
  RowBox[{"HtotEVecSimpMatrix", ".", 
   SubscriptBox["\[Sigma]Matrix", 
    RowBox[{"P", ",", "axis"}]], ".", 
   RowBox[{"Inverse", "[", "HtotEVecSimpMatrix", "]"}]}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]PDREMatrix", "P_"], ":=", 
  RowBox[{"HtotEVecSimpMatrix", ".", 
   SubscriptBox["\[Sigma]PMatrix", "P"], ".", 
   RowBox[{"Inverse", "[", "HtotEVecSimpMatrix", "]"}]}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Sigma]MDREMatrix", "P_"], ":=", 
  RowBox[{"HtotEVecSimpMatrix", ".", 
   SubscriptBox["\[Sigma]MMatrix", "P"], ".", 
   RowBox[{"Inverse", "[", "HtotEVecSimpMatrix", "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827380484435286*^9, 3.827380485432392*^9}, {
   3.8273805700211525`*^9, 3.8273806367199407`*^9}, {3.827380694812334*^9, 
   3.827380703466638*^9}, {3.8273807746806145`*^9, 3.8273807965091295`*^9}, {
   3.8274413677175665`*^9, 3.827441374913707*^9}, {3.827441491178091*^9, 
   3.827441519842307*^9}, {3.8274417672335205`*^9, 3.827441769465766*^9}, {
   3.8304961330552874`*^9, 3.8304961340860023`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"878efd94-6690-4445-94c2-ab58def7b53c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     SubscriptBox["\[Sigma]DREMatrix", 
      RowBox[{"1", ",", "1"}]], "]"}], ",", 
    RowBox[{"MatrixForm", "[", 
     SubscriptBox["\[Sigma]DREMatrix", 
      RowBox[{"2", ",", "1"}]], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827380643631831*^9, 3.8273806475967836`*^9}, {
   3.827380709452142*^9, 3.827380728844384*^9}, {3.827441474230098*^9, 
   3.8274414746908536`*^9}, {3.827452262626762*^9, 3.8274522717499857`*^9}, {
   3.827452328323295*^9, 3.8274523481966023`*^9}, {3.830496136148251*^9, 
   3.830496136731124*^9}, {3.830813020971098*^9, 3.8308130227349195`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ee2614ce-76de-421c-a954-4db1829ff342"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]]},
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "-", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]]},
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "-", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827380648330141*^9, 3.8273807301135406`*^9, 
   3.8273807978223944`*^9, 3.82744137720879*^9, {3.8274414755713453`*^9, 
   3.8274414956463547`*^9}, 3.827441771649761*^9, 3.827446563743726*^9, {
   3.827452266837948*^9, 3.8274522723552403`*^9}, 3.827452337656664*^9, {
   3.827463938791633*^9, 3.82746395427852*^9}, 3.8274702084293633`*^9, 
   3.827470556980491*^9, 3.8275242076172094`*^9, 3.827783761184529*^9, 
   3.830496309339225*^9, 3.8305006594891405`*^9, 3.830503783217163*^9, 
   3.830563389970293*^9, 3.8308129178199577`*^9, 3.8308130236802354`*^9, 
   3.830813261859347*^9, 3.830827367831218*^9, 3.8308290998310986`*^9, 
   3.8309845907681155`*^9, 3.831002561705269*^9, 3.832304636417368*^9, 
   3.8363486423058*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"248f0c09-a614-4b24-a427-4face3187b22"]
}, Open  ]],

Cell["Calculating positive transition frequencies", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774569754350487*^9, 3.774569796526355*^9}, {
   3.7747434510291615`*^9, 3.7747434591162663`*^9}, 3.7755343075745163`*^9, {
   3.8274489222832007`*^9, 
   3.82744892998925*^9}},ExpressionUUID->"c68c482f-ab49-4407-8ff5-\
c6f89f8aa093"],

Cell["Assumptions on energy levels", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274491954839435`*^9, 
   3.8274492151759033`*^9}},ExpressionUUID->"90f07d16-0605-448a-8d51-\
8a5e0f93c7ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]C", "\[Rule]", "2"}], ",", 
     RowBox[{"\[CapitalOmega]R", "\[Rule]", "0.1"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274492190437794`*^9, 3.8274492771114855`*^9}, {
   3.827449471116542*^9, 3.827449494022003*^9}, {3.8274495381153784`*^9, 
   3.827449543661744*^9}, 3.83081307130653*^9, {3.830813175586669*^9, 
   3.8308131798635793`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"7f97320f-4a16-4ea1-9b95-0beda200655b"],

Cell[CellGroupData[{

Cell["Transition frequencies,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774565082328415*^9, 3.7745650874282675`*^9}, 
   3.775534307575541*^9, 
   3.7911636580454736`*^9},ExpressionUUID->"5a24a1ac-1dcc-4eba-91ef-\
aa2f3980b4f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"HtotEValSimp", "[", "m", "]"}], "-", 
      RowBox[{"HtotEValSimp", "[", "n", "]"}]}], ")"}], "/", "\[HBar]"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7745647255170813`*^9, 3.7745648518231378`*^9}, {
   3.774565032268879*^9, 3.7745650762769613`*^9}, {3.774565111931733*^9, 
   3.774565126813331*^9}, 3.775534307575541*^9, {3.82744899823036*^9, 
   3.8274489994631796`*^9}, {3.8274491164235506`*^9, 3.8274491199041696`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"708550df-2975-46a9-a591-d7e94b048f60"],

Cell["Unique and positive transition frequencies,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7745651339035754`*^9, 3.77456514554727*^9}, 
   3.775534307575541*^9, 
   3.7911636590897093`*^9},ExpressionUUID->"7676bd16-e87f-4842-970a-\
8b1c7fda4db9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"temp1", " ", "temp3"}], ",", "0"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{"\[Omega]size", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Dimensions", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"temp1", " ", "temp3"}], ",", "0"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]plus", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp0", ",", "temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HtotEValSimp", "[", "m", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"temp0", " ", "temp3"}], ",", "0"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]minus", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp0", ",", "temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HtotEValSimp", "[", "m", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp1", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Omega]", "[", 
          RowBox[{"m", ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"m", "+", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"temp1", "/.", "\[Omega]assum"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"temp2", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], "]"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"Abs", "[", "#1", "]"}]}], "]"}], "\[Equal]", "0"}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"#1", "\[NotEqual]", "0"}], ")"}]}], "]"}], " ", "&"}], 
        ",", "temp2"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"temp0", " ", "temp3"}], ",", "0"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "\n", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827449363373305*^9, {3.827449406092229*^9, 
   3.8274494484857626`*^9}, {3.8274495135502515`*^9, 
   3.8274495167132015`*^9}, {3.827449552536069*^9, 3.8274496733456354`*^9}, {
   3.8274497034224324`*^9, 3.827449785125492*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"010f6d61-4625-40f9-ac1f-1646d2a8e53c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"\[Omega]", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], 
  "]"}], "\n", "\[Omega]size"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774657080254648*^9, 3.7746570823714533`*^9}, {
   3.7753415910820603`*^9, 3.7753415920351963`*^9}, 3.775534307575541*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"3038b914-f8d1-4dbc-a308-701373fbeca3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], ",", 
   FractionBox[
    RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], ",", 
   "\[CapitalOmega]C", ",", "\[CapitalOmega]R"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7746570832865405`*^9, 3.774657217744459*^9, 
   3.7746576459998302`*^9, 3.774657998875121*^9, 3.7746601565797353`*^9, {
   3.774669776959401*^9, 3.7746697844692135`*^9}, {3.774669849884226*^9, 
   3.774669859868434*^9}, 3.7746698907542763`*^9, 3.7746699714173985`*^9, 
   3.7747486329130263`*^9, 3.7747525097806535`*^9, {3.775341585480019*^9, 
   3.7753415960056915`*^9}, 3.7753460747433414`*^9, 3.775346149455849*^9, 
   3.775427383309436*^9, 3.77544309487958*^9, 3.775505166483349*^9, 
   3.775515884832004*^9, 3.775533591010663*^9, 3.775534307576539*^9, 
   3.775534363803443*^9, 3.7836391660645885`*^9, 3.7837091069538126`*^9, 
   3.7839088165467463`*^9, 3.7845087576291857`*^9, 3.784945559431264*^9, 
   3.785201532546053*^9, 3.7854397931523666`*^9, 3.7856137203968735`*^9, 
   3.7856157146187534`*^9, 3.785701085745713*^9, 3.7857042371805305`*^9, 
   3.787447886926455*^9, 3.7879487652473993`*^9, 3.788039857530172*^9, 
   3.7880400886432953`*^9, 3.7891062253337755`*^9, 3.7898751518760843`*^9, 
   3.7899376554534836`*^9, 3.791162443033171*^9, 3.79425751361483*^9, 
   3.7942838751602583`*^9, 3.8274497998492594`*^9, 3.8274639600422525`*^9, 
   3.8274702139301467`*^9, 3.827470562139577*^9, 3.827524214788655*^9, 
   3.8277837671592445`*^9, 3.830495745671785*^9, 3.8304963150760603`*^9, 
   3.8305006596080904`*^9, 3.830503783327422*^9, 3.8305633934357724`*^9, 
   3.8308131849847555`*^9, 3.8308132683829827`*^9, 3.8308275821910005`*^9, 
   3.8308291126877375`*^9, 3.830984595810029*^9, 3.8310025618968897`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"f3535653-8e9b-4e41-9484-25084da3474f"],

Cell[BoxData["4"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7746570832865405`*^9, 3.774657217744459*^9, 
   3.7746576459998302`*^9, 3.774657998875121*^9, 3.7746601565797353`*^9, {
   3.774669776959401*^9, 3.7746697844692135`*^9}, {3.774669849884226*^9, 
   3.774669859868434*^9}, 3.7746698907542763`*^9, 3.7746699714173985`*^9, 
   3.7747486329130263`*^9, 3.7747525097806535`*^9, {3.775341585480019*^9, 
   3.7753415960056915`*^9}, 3.7753460747433414`*^9, 3.775346149455849*^9, 
   3.775427383309436*^9, 3.77544309487958*^9, 3.775505166483349*^9, 
   3.775515884832004*^9, 3.775533591010663*^9, 3.775534307576539*^9, 
   3.775534363803443*^9, 3.7836391660645885`*^9, 3.7837091069538126`*^9, 
   3.7839088165467463`*^9, 3.7845087576291857`*^9, 3.784945559431264*^9, 
   3.785201532546053*^9, 3.7854397931523666`*^9, 3.7856137203968735`*^9, 
   3.7856157146187534`*^9, 3.785701085745713*^9, 3.7857042371805305`*^9, 
   3.787447886926455*^9, 3.7879487652473993`*^9, 3.788039857530172*^9, 
   3.7880400886432953`*^9, 3.7891062253337755`*^9, 3.7898751518760843`*^9, 
   3.7899376554534836`*^9, 3.791162443033171*^9, 3.79425751361483*^9, 
   3.7942838751602583`*^9, 3.8274497998492594`*^9, 3.8274639600422525`*^9, 
   3.8274702139301467`*^9, 3.827470562139577*^9, 3.827524214788655*^9, 
   3.8277837671592445`*^9, 3.830495745671785*^9, 3.8304963150760603`*^9, 
   3.8305006596080904`*^9, 3.830503783327422*^9, 3.8305633934357724`*^9, 
   3.8308131849847555`*^9, 3.8308132683829827`*^9, 3.8308275821910005`*^9, 
   3.8308291126877375`*^9, 3.830984595810029*^9, 3.8310025619015417`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"5fe8b717-cc5d-48f7-bdd4-4374d3288a8c"]
}, Open  ]],

Cell["Thermal interactions with the environment", "Section",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189773083390284`*^9, 
   3.818977318217641*^9}},ExpressionUUID->"933eddca-5b08-4cef-b47c-\
471dc165ae02"],

Cell[TextData[{
 "Each of the two TLSs interact thermally with respective thermal baths ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "A"], TraditionalForm]],ExpressionUUID->
  "6fc352e4-5765-45ab-842e-5111b02fe0a8"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "B"], TraditionalForm]],ExpressionUUID->
  "f9325949-f829-44ef-b3f9-f189ffc8485c"],
 " with temperatures ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "A"], TraditionalForm]],ExpressionUUID->
  "84667c22-2589-42cb-9911-fa577d3aa5b6"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "B"], TraditionalForm]],ExpressionUUID->
  "a2eb74e2-fa0a-4252-b3aa-79cfa938fd9d"],
 "."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8189775325186715`*^9, 3.8189775822488546`*^9}, 
   3.818978580019899*^9},ExpressionUUID->"239d19c6-0e18-4679-bf9a-\
2e469e58c76a"],

Cell["\<\
Interaction Hamiltonian between the thermal bath L or R with the two TLSs is \
modelled after the Spin-Boson model in the x-component\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274417844662666`*^9, 3.8274418215367575`*^9}, {
   3.8274432930406265`*^9, 
   3.8274433045814*^9}},ExpressionUUID->"8a295d25-72c8-4372-854f-\
7f097225a04d"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["H", 
   RowBox[{"TLS", "-", "bath"}], "P"], "=", 
  RowBox[{"\[HBar]", " ", 
   SubsuperscriptBox["\[Sigma]", "X", "P"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     SubscriptBox["g", "k"], 
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["a", "k", "P"], "+", 
       RowBox[{
        SubsuperscriptBox["a", "k", "P"], "\[ConjugateTranspose]"}]}], 
      ")"}]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274418275334597`*^9, 
   3.827441921166237*^9}},ExpressionUUID->"32340860-804a-4d70-830f-\
b1251d813a3d"],

Cell["\<\
To get the Lindbladian operators, we use equation (15) of Optically \
Controlled Quantum Thermal Gate paper.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818978436415753*^9, 3.8189784881853943`*^9}, {
   3.8189785602256045`*^9, 3.81897856161137*^9}, {3.818978732987817*^9, 
   3.8189787759978113`*^9}, {3.8189792405488653`*^9, 
   3.8189792667341595`*^9}, {3.818979391173807*^9, 3.8189794854517174`*^9}, {
   3.827441967136815*^9, 
   3.8274419702361927`*^9}},ExpressionUUID->"02b6a424-d9dd-453b-890f-\
6d5ca08b61a3"],

Cell["Get projection matrices \[CapitalPi](\[Epsilon])", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827441992715474*^9, 
   3.827442011477885*^9}},ExpressionUUID->"d8a2f5b5-60fd-480c-86e2-\
2fdc8ab1f3b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Pi]Matrix", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "0", "0", "0"},
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0", "0", "0", "0"},
        {"0", "1", "0", "0"},
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"},
        {"0", "0", "1", "0"},
        {"0", "0", "0", "0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"},
        {"0", "0", "0", "1"}
       }], ")"}]}], "}"}], "[", 
   RowBox[{"[", "i", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274420145690536`*^9, 3.8274420273854733`*^9}, {
   3.827442062554495*^9, 3.8274421131843348`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"ac8cc80a-e305-487e-ba0b-f7d74df392d2"],

Cell[TextData[{
 "Get Lindblad operators ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "P"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"82029393-1503-4f57-8376-30b07e47cea3"]
}], "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827441992715474*^9, 3.827442011477885*^9}, {
   3.8274421690737653`*^9, 
   3.8274421826326165`*^9}},ExpressionUUID->"8ddd61c6-dfb6-4d4f-ad88-\
44d312e3a935"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["AMatrix", "P_"], "[", "\[Omega]s_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "4"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{
       TemplateBox[{
         RowBox[{"\[Omega]s", ",", 
           RowBox[{"\[Omega]", "[", 
             RowBox[{"i", ",", "j"}], "]"}]}]},
        "KroneckerDeltaSeq"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]Matrix", "[", "j", "]"}], ".", 
         SubscriptBox["\[Sigma]DREMatrix", 
          RowBox[{"P", ",", "1"}]], ".", 
         RowBox[{"\[Pi]Matrix", "[", "i", "]"}]}], ")"}]}]}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]R", ">", "0"}], ",", 
       RowBox[{"\[CapitalOmega]C", ">", "0"}], ",", 
       RowBox[{"\[CapitalOmega]C", ">", 
        RowBox[{"3", "\[CapitalOmega]R"}]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447383604288*^9, 3.8274474559086637`*^9}, {
   3.827447486792178*^9, 3.8274475313922033`*^9}, 3.827447564644823*^9, {
   3.8274476127406654`*^9, 3.827447613628663*^9}, {3.827447745693725*^9, 
   3.8274477546138983`*^9}, {3.827448398009839*^9, 3.8274484035134645`*^9}, {
   3.8274485220356593`*^9, 3.827448603217798*^9}, {3.8274491531457777`*^9, 
   3.827449157128235*^9}, {3.8274502185225525`*^9, 3.8274502310901656`*^9}, 
   3.827451030496842*^9, 3.830496137981284*^9, {3.8308133048794956`*^9, 
   3.8308133413807087`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"87415e51-beb0-4827-83b9-bd33ca86fe8d"],

Cell[TextData[{
 "Lindbladian terms involve a summation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", "P"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"ea252549-4502-42cd-8c35-13088aebd9ca"],
 " terms for positive omega."
}], "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274488084157166`*^9, 
   3.827448841420456*^9}},ExpressionUUID->"789e37ab-7870-4463-9ff1-\
6d384a7d1c0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     SubscriptBox["AMatrix", "1"], "[", 
     RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     SubscriptBox["AMatrix", "2"], "[", 
     RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447576800543*^9, 3.8274475964034977`*^9}, {
   3.82744776797626*^9, 3.827447794739555*^9}, {3.8274478786050024`*^9, 
   3.827447886065844*^9}, {3.827448406849849*^9, 3.827448407794946*^9}, {
   3.8274499395118814`*^9, 3.8274499843284287`*^9}, {3.8274510410100517`*^9, 
   3.827451044456638*^9}, {3.830813598696435*^9, 3.830813601039693*^9}, 
   3.830813654461914*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"1789a65a-28b5-4a6f-b6ba-a0e08e1fdbae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", "0"},
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], 
              ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447596938063*^9, 3.827447617478876*^9}, {
   3.8274477573863163`*^9, 3.827447795927826*^9}, 3.8274478865840263`*^9, 
   3.8274484087024994`*^9, {3.8274485324558773`*^9, 3.8274486058915515`*^9}, 
   3.827449168182578*^9, 3.827449985363634*^9, 3.8274510332497215`*^9, 
   3.827451791163619*^9, 3.827463987308707*^9, 3.8274702204306736`*^9, 
   3.8274705659082546`*^9, 3.827524225523307*^9, 3.8277837726930113`*^9, 
   3.830495778447919*^9, 3.8304963198564405`*^9, 3.8305006647140875`*^9, 
   3.830503788348037*^9, 3.8305634010475206`*^9, 3.8308132948805523`*^9, {
   3.8308133249226856`*^9, 3.8308133435012555`*^9}, 3.830813655845324*^9, 
   3.830827917564846*^9, 3.8308291273908615`*^9, 3.8309846025934076`*^9, 
   3.831002566938992*^9, 3.832304652365805*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"6bb71d38-7fb7-415a-b921-a00d1f4d5ccb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
            "\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}]], "0", "0", "0"},
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "-", 
            "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
             "2"]}]]}], 
         RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
             "2"]}]]}]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827447596938063*^9, 3.827447617478876*^9}, {
   3.8274477573863163`*^9, 3.827447795927826*^9}, 3.8274478865840263`*^9, 
   3.8274484087024994`*^9, {3.8274485324558773`*^9, 3.8274486058915515`*^9}, 
   3.827449168182578*^9, 3.827449985363634*^9, 3.8274510332497215`*^9, 
   3.827451791163619*^9, 3.827463987308707*^9, 3.8274702204306736`*^9, 
   3.8274705659082546`*^9, 3.827524225523307*^9, 3.8277837726930113`*^9, 
   3.830495778447919*^9, 3.8304963198564405`*^9, 3.8305006647140875`*^9, 
   3.830503788348037*^9, 3.8305634010475206`*^9, 3.8308132948805523`*^9, {
   3.8308133249226856`*^9, 3.8308133435012555`*^9}, 3.830813655845324*^9, 
   3.830827917564846*^9, 3.8308291273908615`*^9, 3.8309846025934076`*^9, 
   3.831002566938992*^9, 3.832304652952338*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"905318ad-2f1d-493f-9701-62b802d9fac0"]
}, Open  ]],

Cell["Define new values \[Eta]1, \[Eta]2, \[Eta]3 and \[Eta]4", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274664163743453`*^9, 3.8274664358877892`*^9}, {
   3.8275262015226173`*^9, 3.827526220836217*^9}, {3.8308140634120874`*^9, 
   3.830814077298853*^9}},ExpressionUUID->"950981fb-57fb-4fcc-b6bf-\
6524df54058c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Eta]1", " ", "\[Equal]", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], ")"}]}]}], 
      ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
        "2"]}]]}], 
    RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]}]]}], " ", "=", " ", 
  RowBox[{"-", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], ")"}]}]}], 
      ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]}], 
    RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
        "2"]}]]}]]}]}], "\n", 
 RowBox[{
  RowBox[{"\[Eta]2", " ", "\[Equal]", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], ")"}]}]}], 
      ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
        "2"]}]]}], 
    RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]}]]}], " ", "=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], ")"}]}]}], 
     ")"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
       "2"]}]]}], 
   RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]R", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
       "2"]}]]}]]}], "\n", 
 RowBox[{
  RowBox[{"\[Eta]3", " ", "\[Equal]", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
       "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
        "2"]}]]}], 
    RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]}]]}], " ", "=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
      "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
       "2"]}]]}], 
   RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
       "2"]}]]}]]}], "\n", 
 RowBox[{
  RowBox[{"\[Eta]4", " ", "\[Equal]", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "-", "\[CapitalOmega]C", 
       "+", "\[CapitalOmega]R"}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]}], 
    RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
        "2"]}]]}]]}], " ", "=", " ", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
       "\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
        "2"]}]]}], 
    RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
        "2"]}]]}]]}]}]}], "Code",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274645071584387`*^9, 3.8274646217285705`*^9}, {
   3.827464790999968*^9, 3.8274648072545223`*^9}, {3.8274655762389593`*^9, 
   3.827465604697524*^9}, {3.8274656557511683`*^9, 3.8274657330691457`*^9}, {
   3.827466446771208*^9, 3.827466450893502*^9}, {3.8275262250951076`*^9, 
   3.827526232233142*^9}, 3.8308140020730906`*^9, {3.8308140835704145`*^9, 
   3.8308141086040354`*^9}, {3.8308141451970205`*^9, 
   3.8308141771043673`*^9}, {3.8308147556860094`*^9, 
   3.830814852217656*^9}},ExpressionUUID->"060c91be-c1fc-4985-b958-\
1eb8a4d30f26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Eta]assum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Eta]1", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], ")"}]}]}], 
         ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
           "2"]}]]}], 
       RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
           "2"]}]]}]]}], ",", 
     RowBox[{"\[Eta]2", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], ")"}]}]}], 
         ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
           "2"]}]]}], 
       RowBox[{"2", " ", "\[Gamma]", " ", "\[CapitalOmega]C", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]R", "-", "\[CapitalOmega]R"}], "]"}], 
           "2"]}]]}]]}], ",", 
     RowBox[{"\[Eta]3", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[CapitalDelta]C"}], "+", "\[CapitalDelta]R", "+", 
          "\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]C", "+", "\[CapitalOmega]C"}], "]"}], 
           "2"]}]]}], 
       RowBox[{"2", " ", "\[CapitalOmega]C", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
           "2"]}]]}]]}], ",", 
     RowBox[{"\[Eta]4", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "\[CapitalDelta]C", "-", "\[CapitalDelta]R", "-", "\[CapitalOmega]C",
           "+", "\[CapitalOmega]R"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]R", "+", "\[CapitalOmega]R"}], "]"}], 
           "2"]}]]}], 
       RowBox[{"2", " ", "\[CapitalOmega]R", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"\[CapitalDelta]C", "-", "\[CapitalOmega]C"}], "]"}], 
           "2"]}]]}]]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8275280420509224`*^9, 3.827528078712017*^9}, {
   3.830814112961815*^9, 3.8308141318381467`*^9}, {3.830814185401165*^9, 
   3.8308142025491424`*^9}, {3.8308147791272793`*^9, 3.8308148446146455`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"d516fb53-c7aa-4432-8872-7bba64ee9928"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "temp", "}"}], ",", 
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MatrixForm", "[", 
            RowBox[{
             SubscriptBox["AMatrix", "1"], "[", 
             RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
            RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", 
            RowBox[{"\[CapitalDelta]R", "\[Rule]", 
             RowBox[{"\[Omega]1", "-", "\[Omega]2"}]}], ",", 
            RowBox[{"\[CapitalOmega]R", "\[Rule]", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]s", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]]}], 
            ",", 
            RowBox[{"\[CapitalDelta]C", "\[Rule]", 
             RowBox[{"\[Omega]1", "+", "\[Omega]2"}]}], ",", 
            RowBox[{"\[CapitalOmega]C", "\[Rule]", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]s", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
            ",", "unitassum"}], "}"}], "]"}]}]}], ",", "\n", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MatrixForm", "[", 
            RowBox[{
             SubscriptBox["AMatrix", "2"], "[", 
             RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
            RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", 
            RowBox[{"\[CapitalDelta]R", "\[Rule]", 
             RowBox[{"\[Omega]1", "-", "\[Omega]2"}]}], ",", 
            RowBox[{"\[CapitalOmega]R", "\[Rule]", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]s", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]]}], 
            ",", 
            RowBox[{"\[CapitalDelta]C", "\[Rule]", 
             RowBox[{"\[Omega]1", "+", "\[Omega]2"}]}], ",", 
            RowBox[{"\[CapitalOmega]C", "\[Rule]", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Gamma]s", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
            ",", "unitassum"}], "}"}], "]"}]}]}], ",", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3", ",", "\[Eta]4"}], 
         "}"}], "//.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"\[Eta]assum", ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", 
           RowBox[{"\[CapitalDelta]R", "\[Rule]", 
            RowBox[{"\[Omega]1", "-", "\[Omega]2"}]}], ",", 
           RowBox[{"\[CapitalOmega]R", "\[Rule]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Gamma]s", "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Omega]1", "-", "\[Omega]2"}], ")"}], "2"]}]]}], 
           ",", 
           RowBox[{"\[CapitalDelta]C", "\[Rule]", 
            RowBox[{"\[Omega]1", "+", "\[Omega]2"}]}], ",", 
           RowBox[{"\[CapitalOmega]C", "\[Rule]", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["\[Gamma]s", "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"\[Omega]1", "+", "\[Omega]2"}], ")"}], "2"]}]]}], 
           ",", "unitassum"}], "}"}], "]"}]}]}], "\n", "}"}]}], "]"}], ",", 
   "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Frequencies\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", "1.1"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]2", ",", "0.2"}], "}"}], ",", "0", ",", "3"}], "}"}], 
   ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Interaction strength\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]s", ",", "0.001"}], "}"}], ",", "0.001", ",", "3"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274640394760323`*^9, 3.827464153439127*^9}, {
   3.8274642914738145`*^9, 3.827464303461588*^9}, 3.827464456343669*^9, {
   3.8274646595399776`*^9, 3.827464679316166*^9}, {3.8274653922749534`*^9, 
   3.8274653943321934`*^9}, {3.827465616920086*^9, 3.827465620452675*^9}, {
   3.82746654148108*^9, 3.827466542538209*^9}, {3.8308138341336403`*^9, 
   3.83081388292782*^9}, {3.8308280302610874`*^9, 3.8308281142095127`*^9}, 
   3.8309846109376793`*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"34708e38-d52a-44fa-b7aa-83974b3c2ef5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Gamma]s$$ = 
    0.001, $CellContext`\[Omega]1$$ = 1.1, $CellContext`\[Omega]2$$ = 0.2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item["Frequencies", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]1$$], 1.1}, 0, 3}, {{
       Hold[$CellContext`\[Omega]2$$], 0.2}, 0, 3}, {
      Hold[
       Item["Interaction strength", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Gamma]s$$], 0.001}, 0.001, 3}}, Typeset`size$$ = {
    964.5, {138.5, 44.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Gamma]s$$ = 
        0.001, $CellContext`\[Omega]1$$ = 1.1, $CellContext`\[Omega]2$$ = 
        0.2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`temp$}, {$CellContext`temp$ = ReplaceAll[
           Table[
            MatrixForm[
             Subscript[$CellContext`AMatrix, 1][
              $CellContext`\[Omega][$CellContext`i]]], {$CellContext`i, 
             1, $CellContext`\[Omega]size}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`\[CapitalDelta]R -> $CellContext`\
\[Omega]1$$ - $CellContext`\[Omega]2$$, $CellContext`\[CapitalOmega]R -> 
             
             Sqrt[$CellContext`\[Gamma]s$$^2 + ($CellContext`\[Omega]1$$ - \
$CellContext`\[Omega]2$$)^2], $CellContext`\[CapitalDelta]C -> $CellContext`\
\[Omega]1$$ + $CellContext`\[Omega]2$$, $CellContext`\[CapitalOmega]C -> 
             Sqrt[$CellContext`\[Gamma]s$$^2 + ($CellContext`\[Omega]1$$ + \
$CellContext`\[Omega]2$$)^2], $CellContext`unitassum}]], $CellContext`temp$ = 
         ReplaceAll[
           Table[
            MatrixForm[
             Subscript[$CellContext`AMatrix, 2][
              $CellContext`\[Omega][$CellContext`i]]], {$CellContext`i, 
             1, $CellContext`\[Omega]size}], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`\[CapitalDelta]R -> $CellContext`\
\[Omega]1$$ - $CellContext`\[Omega]2$$, $CellContext`\[CapitalOmega]R -> 
             Sqrt[$CellContext`\[Gamma]s$$^2 + ($CellContext`\[Omega]1$$ - \
$CellContext`\[Omega]2$$)^2], $CellContext`\[CapitalDelta]C -> $CellContext`\
\[Omega]1$$ + $CellContext`\[Omega]2$$, $CellContext`\[CapitalOmega]C -> 
             Sqrt[$CellContext`\[Gamma]s$$^2 + ($CellContext`\[Omega]1$$ + \
$CellContext`\[Omega]2$$)^2], $CellContext`unitassum}]], 
         ReplaceRepeated[{$CellContext`\[Eta]1, $CellContext`\[Eta]2, \
$CellContext`\[Eta]3, $CellContext`\[Eta]4}, 
          
          Flatten[{$CellContext`\[Eta]assum, 
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
            Subscript[$CellContext`\[Omega], 
              2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`\[CapitalDelta]R -> $CellContext`\
\[Omega]1$$ - $CellContext`\[Omega]2$$, $CellContext`\[CapitalOmega]R -> 
            Sqrt[$CellContext`\[Gamma]s$$^2 + ($CellContext`\[Omega]1$$ - \
$CellContext`\[Omega]2$$)^2], $CellContext`\[CapitalDelta]C -> $CellContext`\
\[Omega]1$$ + $CellContext`\[Omega]2$$, $CellContext`\[CapitalOmega]C -> 
            
            Sqrt[$CellContext`\[Gamma]s$$^2 + ($CellContext`\[Omega]1$$ + \
$CellContext`\[Omega]2$$)^2], $CellContext`unitassum}]]}], 
      "Specifications" :> {Delimiter, 
        Item[
        "Frequencies", Alignment -> Center], {{$CellContext`\[Omega]1$$, 1.1},
          0, 3}, {{$CellContext`\[Omega]2$$, 0.2}, 0, 3}, Delimiter, 
        Item[
        "Interaction strength", Alignment -> 
         Center], {{$CellContext`\[Gamma]s$$, 0.001}, 0.001, 3}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1024., {200., 208.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8274640261245413`*^9, {3.827464112570391*^9, 
   3.827464155728716*^9}, 3.8274643046533995`*^9, 3.827464457207181*^9, 
   3.827464680311821*^9, {3.827465384280016*^9, 3.8274653952624435`*^9}, 
   3.82746579764758*^9, 3.8274702239895215`*^9, 3.8274705679981537`*^9, 
   3.827524232101515*^9, 3.8277837757320523`*^9, 3.8304958035085297`*^9, 
   3.8304963227153587`*^9, 3.830500665071413*^9, 3.8305037887083654`*^9, 
   3.8305634014078383`*^9, 3.830813884255471*^9, 3.830827928487501*^9, {
   3.8308280662103815`*^9, 3.830828114668347*^9}, 3.8308292323810925`*^9, {
   3.830984607459103*^9, 3.8309846117154703`*^9}, 3.8310025804916067`*^9, 
   3.8323046591377964`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"930be0ad-0c0d-417f-9065-ffae6c3a5458"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "1"], "[", 
    RowBox[{"\[Omega]", "[", "1", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"\[Eta]1", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", 
       RowBox[{"-", "\[Eta]1"}], "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "1"], "[", 
    RowBox[{"\[Omega]", "[", "2", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"\[Eta]2", "0", "0", "0"},
      {"0", "\[Eta]2", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "1"], "[", 
    RowBox[{"\[Omega]", "[", "3", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "1"], "[", 
    RowBox[{"\[Omega]", "[", "4", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274664619039793`*^9, 3.8274664836356497`*^9}, {
   3.827466521521885*^9, 3.827466534663138*^9}, {3.8274665773002405`*^9, 
   3.8274669065645494`*^9}, {3.8275262409331512`*^9, 3.827526251279327*^9}, {
   3.8308146242308364`*^9, 3.830814666940928*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b3abd7c5-dcc1-45c1-bba2-18a7c3997519"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "2"], "[", 
    RowBox[{"\[Omega]", "[", "1", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"\[Eta]3", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "\[Eta]3", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "2"], "[", 
    RowBox[{"\[Omega]", "[", "2", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {
       RowBox[{"-", "\[Eta]4"}], "0", "0", "0"},
      {"0", "\[Eta]4", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "2"], "[", 
    RowBox[{"\[Omega]", "[", "3", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   RowBox[{
    SubscriptBox["AMatrixSimp", "2"], "[", 
    RowBox[{"\[Omega]", "[", "4", "]"}], "]"}], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8274664619039793`*^9, 3.8274664836356497`*^9}, {
   3.827466521521885*^9, 3.827466534663138*^9}, {3.8274665773002405`*^9, 
   3.827466876483944*^9}, {3.8274669080317*^9, 3.827466945482271*^9}, {
   3.827467024012293*^9, 3.8274670264913855`*^9}, {3.82752624534169*^9, 
   3.8275262538696156`*^9}, {3.8308146797462497`*^9, 
   3.8308146844291863`*^9}, {3.830814906127404*^9, 3.830814908142606*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"83e28f17-43fc-47d4-b333-e641eb3aad1f"],

Cell["Calculate Lindbladian terms", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827448716127077*^9, 
   3.8274487405647154`*^9}},ExpressionUUID->"ba84a286-31f6-4f8d-9911-\
6c967ed5b1ce"],

Cell[TextData[{
 "Linbladian for the ",
 StyleBox["Markovian",
  IgnoreSpellCheck->True],
 " quantum master equation,"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740576122513866`*^9, 3.774057638699093*^9}, 
   3.7745571586798544`*^9, 3.775533202317648*^9, 
   3.791163731723366*^9},ExpressionUUID->"c7774c06-066b-42fe-a001-\
ff286cf36e86"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["LinMatrix", "P_"], "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "\[Omega]size"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["J", "P"], "[", 
         RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["NBE", "P"], "[", 
           RowBox[{"\[Omega]", "[", "i", "]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["AMatrixSimp", "P"], "[", 
            RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ".", "\[Rho]", ".", 
           RowBox[{
            RowBox[{
             SubscriptBox["AMatrixSimp", "P"], "[", 
             RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
            "\[ConjugateTranspose]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrixSimp", "P"], "[", 
                RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
               "\[ConjugateTranspose]"}], ".", 
              RowBox[{
               SubscriptBox["AMatrixSimp", "P"], "[", 
               RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ".", "\[Rho]"}], 
             "+", 
             RowBox[{"\[Rho]", ".", 
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrixSimp", "P"], "[", 
                RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
               "\[ConjugateTranspose]"}], ".", 
              RowBox[{
               SubscriptBox["AMatrixSimp", "P"], "[", 
               RowBox[{"\[Omega]", "[", "i", "]"}], "]"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{
         SubscriptBox["J", "P"], "[", 
         RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
        RowBox[{
         SubscriptBox["NBE", "P"], "[", 
         RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["AMatrixSimp", "P"], "[", 
             RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
            "\[ConjugateTranspose]"}], ".", "\[Rho]", ".", 
           RowBox[{
            SubscriptBox["AMatrixSimp", "P"], "[", 
            RowBox[{"\[Omega]", "[", "i", "]"}], "]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["AMatrixSimp", "P"], "[", 
               RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ".", 
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrixSimp", "P"], "[", 
                RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
               "\[ConjugateTranspose]"}], ".", "\[Rho]"}], "+", 
             RowBox[{"\[Rho]", ".", 
              RowBox[{
               SubscriptBox["AMatrixSimp", "P"], "[", 
               RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ".", 
              RowBox[{
               RowBox[{
                SubscriptBox["AMatrixSimp", "P"], "[", 
                RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], 
               "\[ConjugateTranspose]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
    ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Eta]1", ">", "0"}], ",", 
       RowBox[{"\[Eta]2", ">", "0"}], ",", 
       RowBox[{"\[Eta]3", ">", "0"}], ",", 
       RowBox[{"\[Eta]4", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.818981081096347*^9, 3.8189812662067566`*^9}, {
   3.82746595223258*^9, 3.827465973729707*^9}, {3.8274660509068813`*^9, 
   3.827466117022167*^9}, {3.8274671774434347`*^9, 3.8274671887182264`*^9}, {
   3.8274704867997785`*^9, 3.8274704983336215`*^9}, {3.8275262636777563`*^9, 
   3.827526266547587*^9}, {3.827788603014654*^9, 3.82778860623514*^9}, {
   3.830814927448182*^9, 3.8308149376795855`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"c285575d-2ae3-49e6-a8a7-e1ba15103689"],

Cell[CellGroupData[{

Cell[TextData[{
 "Net thermal decaying rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalTau]", "P"], "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]],ExpressionUUID->
  "de2d42cc-abdc-4fa7-8fba-eb85a87148d6"],
 " from state | i > to state | j > while releasing energy to reservoir P. \
Note i > j.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalTau]s", "P"], "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]],ExpressionUUID->
  "a6b52f78-f865-42f7-9541-e747f04cb315"],
 " is used due to variable naming issues."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7742260196846647`*^9, 3.774226077530282*^9}, {
   3.7742261649455256`*^9, 3.7742261857304506`*^9}, 3.774557208007482*^9, {
   3.774674891268958*^9, 3.7746749311644974`*^9}, {3.7747515663113747`*^9, 
   3.7747516155454597`*^9}, 3.775533202317648*^9, {3.784599762357682*^9, 
   3.7845997649491215`*^9}, {3.7911637366611524`*^9, 
   3.791163739740913*^9}},ExpressionUUID->"0a13f418-b50e-4b16-a0dd-\
97f585ec3206"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalTau]s", "P_"], "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "P"], "[", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SubscriptBox["NBE", "P"], "[", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"i", ",", "i"}]], "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "P"], "[", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "]"}], 
    RowBox[{
     SubscriptBox["NBE", "P"], "[", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "]"}], 
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"j", ",", "j"}]], "[", "t", "]"}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774748774888811*^9, 3.7747489008761797`*^9}, 
   3.774750014759505*^9, 3.775533202317648*^9, {3.783642704848527*^9, 
   3.7836427164405565`*^9}, {3.8189813851086516`*^9, 
   3.8189814589192533`*^9}, {3.8189815586630187`*^9, 
   3.8189815652094707`*^9}, {3.8189818990706496`*^9, 
   3.8189819036914463`*^9}, {3.8190562684335775`*^9, 
   3.8190563063082976`*^9}, {3.8190563958225126`*^9, 3.8190563968748*^9}, {
   3.827470318015407*^9, 3.8274703300323257`*^9}, {3.827470441512249*^9, 
   3.8274704613389072`*^9}, {3.8275248324628563`*^9, 
   3.8275248363622756`*^9}, {3.8277886134100323`*^9, 3.8277886209939003`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"4d13c236-21d0-4b3e-82ca-7ee264826098"],

Cell["Mathematica function for arithmetically proper replacements,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7747516503611603`*^9, 3.77475168976737*^9}, 
   3.775533202317648*^9, 
   3.7911637424775934`*^9},ExpressionUUID->"8dfc90c9-9c1e-48a3-abb8-\
dfa9ca0836f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{"expr_", ",", "orig_", ",", "repl_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Actual", " ", "replacement", " ", "function"}], ",", " ", 
      RowBox[{"but", " ", "it", " ", "is", " ", "not", " ", "Listable"}]}], 
     "*)"}], "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"exprs_", ",", "origs_", ",", "repls_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", "r"}], "}"}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", "r"}], "}"}], "=", 
          RowBox[{"PolynomialReduce", "[", 
           RowBox[{"exprs", ",", "origs", ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"q", ".", "repls"}], "+", "r"}]}]}], "\n", "]"}]}], ";", 
     "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Construct", " ", "for", " ", "making", " ", "the", " ", "function", 
       " ", "Listable", " ", "in", " ", "only", " ", "the", " ", "first", " ",
        "argument"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "orig", ",", "repl"}], "]"}], ",", 
        RowBox[{"{", "Listable", "}"}]}], "]"}], "[", "expr", "]"}]}]}], "\n",
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774752278383034*^9, 3.7747522798866615`*^9}, {
   3.774753210638798*^9, 3.7747532268405747`*^9}, 3.7747538566627827`*^9, {
   3.774753889805153*^9, 3.774753895424494*^9}, 3.7747547955878844`*^9, 
   3.775533202317648*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"234032f6-9b53-4a7b-91cb-61bb53b5b060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "1"], "[", 
     RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], ",", 
      SuperscriptBox["\[Eta]2", "2"], ",", 
      SuperscriptBox["\[Eta]3", "2"], ",", 
      SuperscriptBox["\[Eta]4", "2"]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Collect", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"J", "[", " ", 
             RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}]}], 
         "]"}], "&"}]}], "]"}], "&"}]}], "]"}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "2"], "[", 
     RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], ",", 
      SuperscriptBox["\[Eta]2", "2"], ",", 
      SuperscriptBox["\[Eta]3", "2"], ",", 
      SuperscriptBox["\[Eta]4", "2"]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Collect", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"J", "[", " ", 
             RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}]}], 
         "]"}], "&"}]}], "]"}], "&"}]}], "]"}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8275264299748363`*^9, 3.827526514051481*^9}, {
   3.8275266344912987`*^9, 3.827526641726844*^9}, {3.8275268204413466`*^9, 
   3.8275268570738354`*^9}, {3.8275269165686617`*^9, 3.827526930318237*^9}, {
   3.830495885519*^9, 3.830495887713334*^9}, {3.830829307260037*^9, 
   3.8308293093084946`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"2e3fece7-b857-456e-b2b3-20908367836e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Eta]1", "2"]}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}], "+", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}], "+", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827526441896329*^9, {3.8275264914380417`*^9, 
   3.827526515394221*^9}, 3.827526642294688*^9, 3.8275268588954105`*^9, 
   3.827526931714595*^9, 3.827783786401682*^9, 3.8277886258427215`*^9, {
   3.8304958760565195`*^9, 3.8304958888606195`*^9}, 3.830496334416918*^9, 
   3.8305006768524857`*^9, 3.83050380020839*^9, 3.830563417175047*^9, 
   3.830814277701682*^9, {3.8308149189824095`*^9, 3.8308149431465683`*^9}, 
   3.8308281839087553`*^9, 3.830829257884711*^9, {3.8308292916091995`*^9, 
   3.8308293105347433`*^9}, 3.830984639776973*^9, 3.8310025815004883`*^9, 
   3.832304674483678*^9},
 CellLabel->
  "Out[85]//MatrixForm=",ExpressionUUID->"add6034a-77c9-4e3e-863f-\
3f1221a1c955"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Eta]3", "2"]}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}], "+", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}], "+", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}], "-", 
             RowBox[{
              RowBox[{
               SubscriptBox["J", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}], " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827526441896329*^9, {3.8275264914380417`*^9, 
   3.827526515394221*^9}, 3.827526642294688*^9, 3.8275268588954105`*^9, 
   3.827526931714595*^9, 3.827783786401682*^9, 3.8277886258427215`*^9, {
   3.8304958760565195`*^9, 3.8304958888606195`*^9}, 3.830496334416918*^9, 
   3.8305006768524857`*^9, 3.83050380020839*^9, 3.830563417175047*^9, 
   3.830814277701682*^9, {3.8308149189824095`*^9, 3.8308149431465683`*^9}, 
   3.8308281839087553`*^9, 3.830829257884711*^9, {3.8308292916091995`*^9, 
   3.8308293105347433`*^9}, 3.830984639776973*^9, 3.8310025815004883`*^9, 
   3.8323046747569704`*^9},
 CellLabel->
  "Out[88]//MatrixForm=",ExpressionUUID->"1f03d8c9-5397-4afb-b6de-\
99943d864eda"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum Markovian master equation", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774557166496046*^9, 3.774557174574299*^9}, 
   3.774557208006485*^9, 3.775534455639141*^9, 
   3.79468825593429*^9},ExpressionUUID->"e4865143-5b2c-43a3-8140-\
142d0bdacff1"],

Cell["Ohmic bath spectral density,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740589299468665`*^9, 3.7740589530254955`*^9}, 
   3.774557208006485*^9, 3.775534455639141*^9, {3.79116374843661*^9, 
   3.791163749795998*^9}, 
   3.79468825593429*^9},ExpressionUUID->"accbb881-94b2-4cde-96d6-\
c369101dbae5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jassum", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "P_"], "[", "\[Omega]_", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Kappa]", "P"], " ", "\[Omega]"}]}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774058957216611*^9, 3.774058977249716*^9}, 
   3.774557208007482*^9, {3.775159922412965*^9, 3.7751599395107317`*^9}, 
   3.775534455639141*^9, 3.79468825593429*^9, {3.8277886320385723`*^9, 
   3.8277886360956635`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"8b23ba98-3632-4daf-a70e-8c5a049d5554"],

Cell["\<\
Right hand side of the Markovian quantum master equation (in interaction \
picture),\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774058401810094*^9, 3.7740584145232224`*^9}, 
   3.774557208007482*^9, {3.775506817263886*^9, 3.7755068243015947`*^9}, 
   3.775534455639141*^9, {3.783709396292345*^9, 3.7837094005699096`*^9}, 
   3.791163751921321*^9, 3.79468825593429*^9, {3.819320417951104*^9, 
   3.819320420281378*^9}, {3.8275253804695377`*^9, 
   3.827525381950908*^9}},ExpressionUUID->"a7d7d0eb-73f6-467a-b105-\
b5170c07a049"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RHS", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "1"], "[", 
     RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], "+", 
    RowBox[{
     SubscriptBox["LinMatrix", "2"], "[", 
     RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7837097612513223`*^9, 3.783709764530221*^9}, {
   3.783709804242017*^9, 3.7837098678920417`*^9}, {3.7837099902731385`*^9, 
   3.783709991270486*^9}, {3.783711449887467*^9, 3.7837115790657215`*^9}, {
   3.7903707423563533`*^9, 3.7903707443789463`*^9}, {3.7903718011915936`*^9, 
   3.790371801403022*^9}, {3.790387819130892*^9, 3.7903878213050365`*^9}, {
   3.7903878643479652`*^9, 3.790387868687334*^9}, 3.79468825593429*^9, {
   3.8193204430903378`*^9, 3.8193204630966625`*^9}, {3.8193205060125685`*^9, 
   3.8193205305054893`*^9}, {3.8193208626376925`*^9, 
   3.8193208926988134`*^9}, {3.8275253874114285`*^9, 
   3.8275253962673473`*^9}, {3.83049590539629*^9, 3.8304959066514525`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f444138c-4145-47f4-8047-cc7e3c7b80aa"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Eta]1", "2"]}], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]1", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]2", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]3", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]4", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]1", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]2", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]3", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]4", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]1", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]2", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]3", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]4", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]1", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]2", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "1"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Eta]3", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Eta]4", "2"], " ", 
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["NBE", "2"], "[", 
               FractionBox[
                RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
               "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}]}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.81932039677383*^9, 3.8193204637967477`*^9, {
   3.819320508779914*^9, 3.8193205314084682`*^9}, 3.819320893868013*^9, 
   3.821398283336496*^9, 3.8214914207664433`*^9, 3.821499042308938*^9, 
   3.8214995455491686`*^9, 3.821499820967327*^9, 3.8275253504738226`*^9, 
   3.8275253971957855`*^9, 3.8275270273272195`*^9, 3.8277837903989887`*^9, 
   3.8277886404152546`*^9, 3.830495908663127*^9, 3.8304963386459956`*^9, 
   3.8305006772311945`*^9, 3.8305038005937476`*^9, 3.8305634175553927`*^9, 
   3.8308143252124195`*^9, 3.830814966660225*^9, 3.8308293294148655`*^9, 
   3.8309846481648364`*^9, 3.831002581978427*^9, 3.832304677984977*^9},
 CellLabel->
  "Out[91]//MatrixForm=",ExpressionUUID->"06b82b74-ee68-476c-a9bb-\
2896dff0381e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{"RHS", ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "%", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], ",", 
      SuperscriptBox["\[Eta]2", "2"], ",", 
      SuperscriptBox["\[Eta]3", "2"], ",", 
      SuperscriptBox["\[Eta]4", "2"]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Collect", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["J", "P"], "[", " ", 
              RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"P", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
         "]"}], "&"}]}], "]"}], "&"}]}], "]"}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193205594617233`*^9, 3.81932057578364*^9}, {
   3.8193227020273027`*^9, 3.8193227271465364`*^9}, 3.8275254130313835`*^9, 
   3.827527040365856*^9, {3.827788657666405*^9, 3.827788677581398*^9}, {
   3.830814982818262*^9, 3.830815000742332*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"eb258627-a29e-4fc7-86f9-42213800aafb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Eta]1", "2"]}], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"1", ",", "3"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "4"}]], "[", "t", "]"}]}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"3", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "2"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "1"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "1"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["J", "2"], "[", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], "]"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "-", 
          RowBox[{
           SubscriptBox["NBE", "2"], "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]C", "-", "\[CapitalOmega]R"}], "2"], 
           "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SubscriptBox["NBE", "1"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "1"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], "]"}
            ], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{
              SubscriptBox["NBE", "2"], "[", 
              FractionBox[
               RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
              "]"}]}], ")"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["NBE", "2"], "[", 
            FractionBox[
             RowBox[{"\[CapitalOmega]C", "+", "\[CapitalOmega]R"}], "2"], 
            "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"4", ",", "3"}]], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Eta]2", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]1", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "1"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]4", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"2", ",", "4"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Eta]3", "2"], " ", 
        RowBox[{
         SubscriptBox["\[CapitalTau]", "2"], "[", 
         RowBox[{"3", ",", "4"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193205608790517`*^9, 3.819320576974409*^9}, 
   3.8193208962619267`*^9, 3.8193227278745685`*^9, 3.8193227854754596`*^9, 
   3.8213982843080544`*^9, 3.821491422394541*^9, 3.8214990440734425`*^9, 
   3.82149954567027*^9, 3.821499821043396*^9, 3.8275254143826604`*^9, {
   3.827527031914016*^9, 3.8275270415201597`*^9}, 3.8277837920802393`*^9, 
   3.8277886439231443`*^9, 3.827788678675596*^9, 3.830495915657085*^9, 
   3.830496342926137*^9, 3.830500677461404*^9, 3.8305038008229575`*^9, 
   3.8305634177886047`*^9, 3.8308143270562963`*^9, {3.830814975142887*^9, 
   3.8308150015328846`*^9}, 3.8308293343600135`*^9, 3.8309846484922724`*^9, 
   3.8310025822596827`*^9, 3.8323046795593405`*^9},
 CellLabel->
  "Out[94]//MatrixForm=",ExpressionUUID->"8c7f72e6-ab88-46c6-98f3-\
e03a8e628d2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Left hand side of the Markovian quantum master equation,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774059513518042*^9, 3.7740595261722393`*^9}, 
   3.774557208007482*^9, 3.7755344556401377`*^9, 3.7911637579063067`*^9, 
   3.7946882559352875`*^9},ExpressionUUID->"e59c2e6b-0611-45ea-b843-\
e97e84d5429e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LHS", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], 
    RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740595290079193`*^9, 3.774059544549122*^9}, {
   3.774059640284641*^9, 3.774059651110953*^9}, 3.774225450971875*^9, 
   3.774557208007482*^9, 3.7755344556401377`*^9, 3.7946882559352875`*^9, {
   3.827525431673414*^9, 3.827525431848422*^9}, 3.8304959218282156`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"43a91459-e60d-47b0-b883-7af32a09c543"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"1", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"2", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"3", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]},
     {
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Rho]", 
         RowBox[{"4", ",", "4"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8193206057901764`*^9, 3.819320912199709*^9, 
   3.8213982856425805`*^9, 3.821491424370589*^9, 3.821499045979043*^9, 
   3.821499545777646*^9, 3.821499821108176*^9, 3.827525433020586*^9, 
   3.827527071995505*^9, 3.82778379380683*^9, 3.827788689349334*^9, {
   3.830495919217061*^9, 3.8304959228503337`*^9}, 3.8304963458720922`*^9, 
   3.8305006775995283`*^9, 3.830503800941065*^9, 3.830563417976215*^9, 
   3.8308143286993866`*^9, 3.8308150518113813`*^9, 3.8308293429775867`*^9, 
   3.8309846485823536`*^9, 3.831002582346653*^9, 3.83230468106351*^9},
 CellLabel->
  "Out[96]//MatrixForm=",ExpressionUUID->"1c0800ec-0952-4d80-b10f-\
b3c5caaf6960"],

Cell[CellGroupData[{

Cell["\<\
Markovian quantum master equation for a general density matrix,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774125166785413*^9, 3.7741251783625774`*^9}, {
   3.7741252246495485`*^9, 3.7741252337625217`*^9}, 3.774557208007482*^9, 
   3.7755344556401377`*^9, {3.783645490714918*^9, 3.7836454914030504`*^9}, 
   3.7911637594441967`*^9, 
   3.7946882559352875`*^9},ExpressionUUID->"415e67b4-aa8a-4c94-97f2-\
c680e1d1acbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"LHS", "\[Equal]", "RHS"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"i", ",", "j"}]], "'"}], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], 
     "/.", 
     RowBox[{"Rule", "\[Rule]", "Equal"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783645681318359*^9, 3.7836457339009895`*^9}, {
   3.783645766651436*^9, 3.7836457694030485`*^9}, {3.783645809122158*^9, 
   3.7836458338211317`*^9}, {3.783645884392934*^9, 3.783645886525233*^9}, {
   3.7836462244070444`*^9, 3.7836462314133134`*^9}, {3.783646417988537*^9, 
   3.7836465444271135`*^9}, {3.7836466237849426`*^9, 
   3.7836466252939463`*^9}, {3.7836521849575033`*^9, 
   3.7836522730539894`*^9}, {3.7836528651908813`*^9, 3.783652879555477*^9}, 
   3.7836530214292126`*^9, 3.7946882559352875`*^9, {3.8193206275347104`*^9, 
   3.8193206290538874`*^9}, {3.827525501646418*^9, 3.827525502716783*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"f30548a7-cc5a-4ee1-8471-aa63bb4c7368"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"J", "[", " ", 
     RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"ApplySides", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{
        RowBox[{"Expand", "[", "#", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["\[Eta]1", "2"], ",", 
          SuperscriptBox["\[Eta]2", "2"], ",", 
          SuperscriptBox["\[Eta]3", "2"], ",", 
          SuperscriptBox["\[Eta]4", "2"]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Collect", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Rho]", 
                RowBox[{"i", ",", "j"}]], "[", "t", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Collect", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"J", "[", " ", 
                 RowBox[{"\[Omega]", "[", "i", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "\[Omega]size"}], "}"}]}], 
               "]"}]}], "]"}], "&"}]}], "]"}], "&"}]}], "]"}], "&"}], ",", 
     "sol"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.783646633033229*^9, {3.7836468121170053`*^9, 
   3.783646829080839*^9}, {3.783646878386289*^9, 3.7836469405172243`*^9}, {
   3.7836470273251247`*^9, 3.783647078640966*^9}, {3.7836530036946163`*^9, 
   3.78365301100012*^9}, 3.794688255936285*^9, {3.8193206660286865`*^9, 
   3.8193206694568777`*^9}, {3.8193207176152797`*^9, 3.8193207529484267`*^9}, 
   3.8275255524878607`*^9, {3.8275259437510567`*^9, 3.8275260088625126`*^9}, {
   3.8275260593617053`*^9, 3.8275260798420935`*^9}, {3.8275261226330233`*^9, 
   3.827526123491664*^9}, {3.827526968009859*^9, 3.827526982104601*^9}, 
   3.8275270915737257`*^9, 3.830815092479289*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"9e154674-20d5-410b-a8c7-54b998e36f6b"],

Cell["Separate diagonal and off diagonal equations,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7836530236682253`*^9, 3.783653045240573*^9}, 
   3.791163762025284*^9, 
   3.794688255936285*^9},ExpressionUUID->"8fe7dc6e-134c-48cc-815b-\
74f8a74b5933"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"soldiag", "=", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", " ", ";;", "5"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"soloffdiag", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"sol", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", "+", 
         RowBox[{"5", "i"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783653048239567*^9, 3.7836530766655407`*^9}, 
   3.794688255936285*^9, {3.8193207913170776`*^9, 3.819320826306034*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"dd0c4000-204d-4609-a57d-e44f9ff3e96d"],

Cell["\<\
Diagonals of the Markovian quantum master equation simplified to transition \
rates,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774732893762006*^9, 3.7747329124091377`*^9}, 
   3.7755344556401377`*^9, {3.783711762482523*^9, 3.783711766105802*^9}, 
   3.7911637638883057`*^9, 
   3.794688255936285*^9},ExpressionUUID->"6cd7f25d-73f1-4510-b199-\
02b778187edb"],

Cell[BoxData[
 RowBox[{"soldiagtran", "=", 
  RowBox[{"ApplySides", "[", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplaceArithmetically", "[", 
      RowBox[{
       RowBox[{"Simplify", "[", "#", "]"}], ",", "\n", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[CapitalTau]s", "P"], "[", 
           RowBox[{"i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       "\n", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[CapitalTau]", "P"], "[", 
           RowBox[{"i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
      "]"}], "&"}], ",", "soldiag"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7748277500370045`*^9, 3.7748278488198247`*^9}, {
   3.7748278971188083`*^9, 3.7748279003473983`*^9}, 3.7748366847520742`*^9, 
   3.775534455641135*^9, {3.784601484545556*^9, 3.7846014924543223`*^9}, {
   3.7903714172396507`*^9, 3.7903714428142567`*^9}, {3.790371690223647*^9, 
   3.790371694039406*^9}, 3.794688255936285*^9, 3.8193207860847654`*^9, 
   3.819322801325003*^9, 3.827527112696147*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"73914564-c466-4d93-9c87-1b5e5bd07b43"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "1"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Eta]1", "2"]}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]2", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "3"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]3", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]4", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "3"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"2", ",", "2"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]2", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"2", ",", "4"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Eta]3", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]4", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"2", ",", "4"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"3", ",", "3"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Eta]2", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "3"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"3", ",", "4"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Eta]4", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "3"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Eta]3", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"3", ",", "4"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"4", ",", "4"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Eta]2", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"2", ",", "4"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"3", ",", "4"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Eta]4", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"2", ",", "4"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Eta]3", "2"], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"3", ",", "4"}], "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8193208334935403`*^9, 3.8193209391751504`*^9, 
   3.819322802442855*^9, 3.8213982903822002`*^9, 3.8214914310988817`*^9, 
   3.821499050344736*^9, 3.821499430130426*^9, 3.821499546127965*^9, 
   3.82149982143658*^9, {3.827527097608526*^9, 3.827527113828358*^9}, 
   3.8277838000521097`*^9, 3.8277886947737527`*^9, 3.830495939419589*^9, 
   3.8304963511940975`*^9, 3.830500677944728*^9, 3.830503802227233*^9, 
   3.8305634183895917`*^9, 3.830814336685775*^9, {3.8308150495076027`*^9, 
   3.8308150573240385`*^9}, 3.8308150955773983`*^9, 3.8308293467419395`*^9, 
   3.8309846490162487`*^9, 3.8310025827360067`*^9, 3.832304686370122*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"6731b061-ccee-4363-87cc-34697d528f53"],

Cell[CellGroupData[{

Cell["Dynamical heat flows", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.774847222367645*^9, 3.774847243086377*^9}, {
   3.775168598693924*^9, 3.775168603077224*^9}, 3.7755344643112864`*^9, 
   3.794688327677451*^9},ExpressionUUID->"5c9c06fc-756d-489e-bac9-\
7759fc5c6865"],

Cell["\<\
Thermal distributions in the environments (Bose Einstein distribution),\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.77405486735592*^9, 3.7740548855147495`*^9}, {
   3.7742249253153667`*^9, 3.7742249315809903`*^9}, 3.7745572080094767`*^9, 
   3.774676514800723*^9, 3.7755344643112864`*^9, 3.791163770946421*^9, 
   3.7946883276784477`*^9},ExpressionUUID->"6d7891c1-5669-463a-be0b-\
e45770c16ab7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NBEassum", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["NBE", "P_"], "[", "\[Omega]_", "]"}], "\[Rule]", " ", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", 
         SubscriptBox["\[Beta]", "P"]}], ")"}]], "-", "1"}]]}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7740547644002223`*^9, 3.7740548454129815`*^9}, {
   3.774224853012274*^9, 3.774224936580756*^9}, {3.774227236629675*^9, 
   3.774227243215068*^9}, 3.7745572080094767`*^9, {3.774676529408292*^9, 
   3.7746765344535284`*^9}, {3.774910584457426*^9, 3.7749106054175997`*^9}, 
   3.7755344643112864`*^9, 3.7946883276784477`*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"f15e580f-ba26-4944-a7cb-328d2c47be47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NBEassum", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["NBE", "P_"], "[", "\[Omega]_", "]"}], "\[Rule]", " ", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[HBar]", " ", "\[Omega]"}], 
         RowBox[{"k", " ", 
          SubscriptBox["T", "P"]}]], ")"}]], "-", "1"}]]}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7745572080094767`*^9, {3.7746765315715475`*^9, 
   3.7746765365044036`*^9}, {3.7749105878762474`*^9, 3.7749106047793016`*^9}, 
   3.7755344643112864`*^9, {3.790372147015021*^9, 3.7903721481949096`*^9}, 
   3.7946883276784477`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"4bab286a-5965-46c2-aeae-8ea8f456c46a"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", "\[Omega]", "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{"NBEassum", ",", 
          RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", 
          RowBox[{
           SubscriptBox["T", "1"], "\[Rule]", "T1"}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "2"], "[", "\[Omega]", "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{"NBEassum", ",", 
          RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", "1"}], ",", 
          RowBox[{
           SubscriptBox["T", "2"], "\[Rule]", "T2"}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "0", ",", 
       RowBox[{"10", " ", "0.2"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<L\>\"", ",", "\"\<R\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<P[\[Omega]]\>\""}], "}"}]}]}], 
    "]"}], "\n", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T1", ",", "0.2"}], "}"}], ",", "0.01", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2", ",", "0.1"}], "}"}], ",", "0.01", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7946883276784477`*^9, {3.819321050958048*^9, 
   3.819321087191425*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"40ba1843-90b9-4006-91e6-4e8c5673122d"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T1$$ = 0.2, $CellContext`T2$$ = 0.1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`T1$$], 0.2}, 0.01, 1}, {{
       Hold[$CellContext`T2$$], 0.1}, 0.01, 1}}, Typeset`size$$ = {
    499., {141., 148.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`T1$$ = 0.2, $CellContext`T2$$ = 0.1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         ReplaceRepeated[
          
          Subscript[$CellContext`NBE, 
           1][$CellContext`\[Omega]], {$CellContext`NBEassum, $CellContext`k -> 
           1, $CellContext`\[HBar] -> 1, 
           Subscript[$CellContext`T, 1] -> $CellContext`T1$$}], 
         ReplaceRepeated[
          
          Subscript[$CellContext`NBE, 
           2][$CellContext`\[Omega]], {$CellContext`NBEassum, $CellContext`k -> 
           1, $CellContext`\[HBar] -> 1, 
           Subscript[$CellContext`T, 
             2] -> $CellContext`T2$$}]}, {$CellContext`\[Omega], 0, 10 0.2}, 
        PlotRange -> {0, 2}, PlotLegends -> {"L", "R"}, 
        AxesLabel -> {"\[Omega]", "P[\[Omega]]"}], 
      "Specifications" :> {{{$CellContext`T1$$, 0.2}, 0.01, 
         1}, {{$CellContext`T2$$, 0.1}, 0.01, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{558., {209., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.7946884952619586`*^9, 3.7947711575790253`*^9, 
   3.7959930288098087`*^9, {3.7961731040768356`*^9, 3.7961731138224173`*^9}, 
   3.803600074210411*^9, 3.803767927830274*^9, 3.806374819140004*^9, 
   3.819321041996722*^9, 3.819321088109964*^9, 3.8213982986742907`*^9, 
   3.821491438616254*^9, 3.821499437854047*^9, 3.8214995506652555`*^9, 
   3.821499821544567*^9, 3.8275274344402266`*^9, 3.8277838043366156`*^9, 
   3.827788699136303*^9, 3.83049594596504*^9, 3.8304963551627436`*^9, 
   3.8305006780359282`*^9, 3.83050380243042*^9, 3.830563418481675*^9, 
   3.8308144573595963`*^9, 3.8308293582071877`*^9, 3.830984655145767*^9, 
   3.8310025829461985`*^9, 3.8323047738310585`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"81a1e1bd-3ca9-4544-afa2-571f60a233e0"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "1"], "[", "\[Omega]", "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{"NBEassum", ",", 
          RowBox[{"k", "\[Rule]", " ", 
           RowBox[{"1.38", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "23"}]]}]}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", 
           RowBox[{"1.054", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "34"}]]}]}], ",", 
          RowBox[{
           SubscriptBox["T", "1"], "\[Rule]", "T1"}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["NBE", "2"], "[", "\[Omega]", "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{"NBEassum", ",", 
          RowBox[{"k", "\[Rule]", " ", 
           RowBox[{"1.38", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "23"}]]}]}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", 
           RowBox[{"1.054", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "34"}]]}]}], ",", 
          RowBox[{
           SubscriptBox["T", "2"], "\[Rule]", "T2"}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "0", ",", 
       RowBox[{
        RowBox[{"10", " ", 
         FractionBox["k", "\[HBar]"], " ", "300"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k", "\[Rule]", " ", 
           RowBox[{"1.3806", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "23"}]]}]}], ",", 
          RowBox[{"\[HBar]", "\[Rule]", 
           RowBox[{"1.0546", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "34"}]]}]}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<L\>\"", ",", "\"\<R\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<P[\[Omega]]\>\""}], "}"}]}]}], 
    "]"}], "\n", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T1", ",", "300"}], "}"}], ",", "0.01", ",", "500"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2", ",", "150"}], "}"}], ",", "0.01", ",", "500"}], "}"}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7946883276784477`*^9, {3.819321103103509*^9, 
   3.8193211098533273`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"eb60ac93-9125-43a3-81d5-7cf613f93e86"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T1$$ = 300, $CellContext`T2$$ = 150, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`T1$$], 300}, 0.01, 500}, {{
       Hold[$CellContext`T2$$], 150}, 0.01, 500}}, Typeset`size$$ = {
    499., {141., 148.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`T1$$ = 300, $CellContext`T2$$ = 150}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         ReplaceRepeated[
          
          Subscript[$CellContext`NBE, 
           1][$CellContext`\[Omega]], {$CellContext`NBEassum, $CellContext`k -> 
           1.38 10^(-23), $CellContext`\[HBar] -> 1.054 10^(-34), 
           Subscript[$CellContext`T, 1] -> $CellContext`T1$$}], 
         ReplaceRepeated[
          
          Subscript[$CellContext`NBE, 
           2][$CellContext`\[Omega]], {$CellContext`NBEassum, $CellContext`k -> 
           1.38 10^(-23), $CellContext`\[HBar] -> 1.054 10^(-34), 
           Subscript[$CellContext`T, 
             2] -> $CellContext`T2$$}]}, {$CellContext`\[Omega], 0, 
         ReplaceAll[
         10 ($CellContext`k/$CellContext`\[HBar]) 
          300, {$CellContext`k -> 1.3806 10^(-23), $CellContext`\[HBar] -> 
           1.0546 10^(-34)}]}, PlotRange -> {0, 2}, PlotLegends -> {"L", "R"},
         AxesLabel -> {"\[Omega]", "P[\[Omega]]"}], 
      "Specifications" :> {{{$CellContext`T1$$, 300}, 0.01, 
         500}, {{$CellContext`T2$$, 150}, 0.01, 500}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{558., {209., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.819321111842906*^9, 
  3.821398300645113*^9, 3.8214914405396323`*^9, 3.8214994395622*^9, 
  3.8214995527328396`*^9, 3.821499821693782*^9, 3.82752743616828*^9, 
  3.8277838062638793`*^9, 3.827788700483428*^9, 3.8304959481808476`*^9, 
  3.830496356886668*^9, 3.8305006782441177`*^9, 3.830503802559536*^9, 
  3.8305634186478405`*^9, 3.830814458638735*^9, 3.8308293596363487`*^9, 
  3.8309846553109164`*^9, 3.831002583103341*^9, 3.832304775391075*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"3a3dc818-776a-4283-8286-23ccc442d067"],

Cell["Calculate heat current flow,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7742288085586786`*^9, 3.7742288269920254`*^9}, 
   3.7742288804849157`*^9, {3.774228912222834*^9, 3.7742289133275094`*^9}, 
   3.7745572080104733`*^9, {3.7753423933357325`*^9, 3.775342394544462*^9}, 
   3.7755344643122816`*^9, {3.791163774275506*^9, 3.791163775732607*^9}, 
   3.7946883276784477`*^9},ExpressionUUID->"54c65f0d-e18e-441f-9921-\
b056c01f6969"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["EngyFlowIn", "P_"], "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["LinMatrix", "P"], "[", "\[Rho]", "]"}], ".", 
    "HtotDRESimpMatrix"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193270506031733`*^9, 3.819327054273734*^9}, 
   3.827527534643571*^9, 3.830496143879735*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"6ff41bdf-cf4c-4e27-94e4-33522737b25e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["EngyFlowIn", "1"], "[", 
     RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[Eta]1", "2"], ",", 
      SuperscriptBox["\[Eta]2", "2"], ",", 
      SuperscriptBox["\[Eta]3", "2"], ",", 
      SuperscriptBox["\[Eta]4", "2"]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[CapitalTau]", "P"], "[", 
           RowBox[{"i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], 
     "&"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ReplaceArithmetically", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["EngyFlowIn", "2"], "[", 
     RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]s", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "\n", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalTau]", "P"], "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[Eta]1", "2"], ",", 
     SuperscriptBox["\[Eta]2", "2"], ",", 
     SuperscriptBox["\[Eta]3", "2"], ",", 
     SuperscriptBox["\[Eta]4", "2"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalTau]", "P"], "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"P", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], 
    "&"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8193270830269938`*^9, 3.819327135163083*^9}, {
   3.819327268577691*^9, 3.8193272689369*^9}, {3.8193273701532106`*^9, 
   3.8193273738132644`*^9}, {3.8193278864961185`*^9, 
   3.8193278947568855`*^9}, {3.827527453643444*^9, 3.8275274618732233`*^9}, {
   3.8275275713599453`*^9, 3.827527612331483*^9}, {3.827527683905697*^9, 
   3.827527800650346*^9}, {3.8304959575925603`*^9, 3.8304959585674334`*^9}, {
   3.8308151040931873`*^9, 3.8308151065318947`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"d83e4430-22fc-408d-b7df-6ec2c836364b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Eta]2", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "-", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "3"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "-", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"2", ",", "4"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Eta]1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "1"], "[", 
       RowBox[{"3", ",", "4"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8193270686901317`*^9, 3.819327100959834*^9, 
   3.8193271359472666`*^9, 3.819327269838148*^9, 3.8193273743230133`*^9, {
   3.819327890085285*^9, 3.8193278957388277`*^9}, 3.821398303957331*^9, 
   3.8214914431459465`*^9, 3.821499441441961*^9, 3.8214995562722797`*^9, 
   3.8214998218640027`*^9, 3.8275274634337654`*^9, 3.8275275366799564`*^9, 
   3.827527573030669*^9, 3.827527612939187*^9, {3.827527741578446*^9, 
   3.827527801674244*^9}, 3.827783809838722*^9, 3.8277887051518917`*^9, {
   3.830495954364085*^9, 3.8304959595606747`*^9}, 3.830496361235385*^9, 
   3.8305006785476665`*^9, 3.830503802838791*^9, 3.8305634189801435`*^9, 
   3.8308144704071393`*^9, 3.8308151081054263`*^9, 3.83082936223673*^9, 
   3.830984655608179*^9, 3.8310025833855977`*^9, 3.8323047787224016`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"4369324d-28e1-4cb6-9c23-fd49c328b120"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Eta]4", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "-", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "3"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "-", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"2", ",", "4"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Eta]3", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]C", " ", "\[HBar]"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"\[CapitalOmega]R", " ", "\[HBar]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SubscriptBox["\[CapitalTau]", "2"], "[", 
       RowBox[{"3", ",", "4"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8193270686901317`*^9, 3.819327100959834*^9, 
   3.8193271359472666`*^9, 3.819327269838148*^9, 3.8193273743230133`*^9, {
   3.819327890085285*^9, 3.8193278957388277`*^9}, 3.821398303957331*^9, 
   3.8214914431459465`*^9, 3.821499441441961*^9, 3.8214995562722797`*^9, 
   3.8214998218640027`*^9, 3.8275274634337654`*^9, 3.8275275366799564`*^9, 
   3.827527573030669*^9, 3.827527612939187*^9, {3.827527741578446*^9, 
   3.827527801674244*^9}, 3.827783809838722*^9, 3.8277887051518917`*^9, {
   3.830495954364085*^9, 3.8304959595606747`*^9}, 3.830496361235385*^9, 
   3.8305006785476665`*^9, 3.830503802838791*^9, 3.8305634189801435`*^9, 
   3.8308144704071393`*^9, 3.8308151081054263`*^9, 3.83082936223673*^9, 
   3.830984655608179*^9, 3.8310025833855977`*^9, 3.832304778849517*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"d0b1abe7-529f-4e84-aac0-ba83848ba23b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["On unit conversions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942664296517987`*^9, 3.794266434955821*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"df2b7edd-ca5a-4c77-922c-\
d9f6602ad183"],

Cell[TextData[{
 "To resolve the natural units to SI units, we use the relationship,\nEnergy \
= \[HBar] \[Omega] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "B"], "T"}], TraditionalForm]],ExpressionUUID->
  "cc07326e-0329-4089-814f-3560eb6b6123"],
 "\nIn the natural units case, we have chosen ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],ExpressionUUID->
  "19af42b7-043a-4d9f-b50f-27bd84654da4"],
 "s to be an order of magnitude lower than the largest \[Omega]s."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79426642334105*^9, 3.79426657626483*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"af51ac1d-8424-4aa0-9b40-\
c1e0754edf4c"],

Cell[TextData[{
 "In SI units, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"T", "'"}], "H"], TraditionalForm]],ExpressionUUID->
  "ae5ba474-c5e9-4b72-8f0b-ce7e08e799f8"],
 " = 400, in natural units, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "H"], "=", "0.2"}], TraditionalForm]],ExpressionUUID->
  "ac9be505-b249-4e7e-a956-381f12ac2ec3"],
 ".\nThis gives a ratio of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"T", "'"}], "H"], TraditionalForm]],ExpressionUUID->
  "6218dde2-517f-4b2f-9174-464dc57bbc1e"],
 "/",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "H"], TraditionalForm]],ExpressionUUID->
  "e622b70c-4ac3-4430-b643-defc75fdaf63"],
 "=2000."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942665999934487`*^9, 3.7942666785030007`*^9}, {
   3.7942667345950384`*^9, 3.7942667448463616`*^9}, {3.7942808428196807`*^9, 
   3.7942808446903334`*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"c33d467d-3d8e-48c6-ac10-\
eafc92301bdd"],

Cell[TextData[{
 "Temperature conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "'"}], "=", 
    RowBox[{"2000", " ", "T"}]}], TraditionalForm]],ExpressionUUID->
  "118fa7fa-032a-413f-8a8a-18b57bf7685f"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942666907050724`*^9, 3.7942667222182713`*^9}, {
   3.7942667567474823`*^9, 3.794266757444193*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"5bc7f8dc-a572-4e2a-a8ab-\
8099e3af9516"],

Cell[TextData[{
 "Frequency conversion,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Omega]", "'"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2000", 
       SubscriptBox["k", "B"]}], "\[HBar]"], "\[Omega]"}]}], 
   TraditionalForm]],ExpressionUUID->"7ceec856-576a-4c76-983e-9705d119c1bc"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalOmega]", "'"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2000", 
       SubscriptBox["k", "B"]}], "\[HBar]"], "\[CapitalOmega]"}]}], 
   TraditionalForm]],ExpressionUUID->"5e5b507d-35c0-464b-96cd-0d33ebbc84e2"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942667627446947`*^9, 3.794266824765622*^9}, {
   3.794266923462131*^9, 3.7942669475851107`*^9}, {3.7942718534040165`*^9, 
   3.7942718792859116`*^9}, {3.794272061349345*^9, 3.794272065755951*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"fdefe953-6113-40f2-9bcb-\
4007e9768921"],

Cell[TextData[{
 "Time conversion,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"t", "'"}], "=", 
    RowBox[{
     FractionBox["\[HBar]", 
      RowBox[{" ", 
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}]}]], "t"}]}], TraditionalForm]],
  ExpressionUUID->"aa4c67f1-b30b-4783-9728-5efef82c1fed"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942667627446947`*^9, 3.7942668603827357`*^9}, {
   3.794271887258107*^9, 3.7942718917397547`*^9}, {3.794272072177114*^9, 
   3.794272073452735*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"f24d64e2-400b-4705-a484-\
bced260d6201"],

Cell[TextData[{
 "Transition rates conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalTau]", "'"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"2000", 
       SubscriptBox["k", "B"]}], "\[HBar]"], "\[CapitalTau]"}]}], 
   TraditionalForm]],ExpressionUUID->"fe0d595f-4152-40b0-ba0e-aeec72e62ec4"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942721260731263`*^9, 3.794272145333819*^9}, {
   3.7942722142311363`*^9, 3.794272247380316*^9}, 
   3.7946883341900363`*^9},ExpressionUUID->"e463be18-b801-4326-8bc4-\
e2a1b7e1e733"],

Cell[TextData[{
 "Energy flows conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"J", "'"}], "=", 
    RowBox[{
     RowBox[{"\[HBar]", 
      FractionBox[
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}], "\[HBar]"], 
      FractionBox[
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}], "\[HBar]"], " ", "J"}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2000", 
          SubscriptBox["k", "B"]}], ")"}], "2"], "\[HBar]"], "J"}]}]}], 
   TraditionalForm]],ExpressionUUID->"25612398-78d8-4702-919b-8855795ad610"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79427176851785*^9, 3.7942718192809644`*^9}, {
   3.7942720532361326`*^9, 3.7942720532361326`*^9}, {3.794272091776184*^9, 
   3.79427212193836*^9}, 
   3.7946883341910334`*^9},ExpressionUUID->"b93a694d-7e06-4404-b3fb-\
3384ae99c388"],

Cell["Unit conversion factors for natural units,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79427929106101*^9, 3.7942793178357034`*^9}, {
   3.794279550338332*^9, 3.7942795537391944`*^9}, 3.794280854010661*^9, 
   3.7946883341910334`*^9},ExpressionUUID->"3e226b8e-c798-47f3-9715-\
5bc0459ef4df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\[HBar]", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794269397822668*^9, 3.7942694163007307`*^9}, {
   3.7942694676494246`*^9, 3.7942694696080093`*^9}, {3.7942705589283156`*^9, 
   3.7942705720149584`*^9}, 3.7942728132018347`*^9, 3.7946883341910334`*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"d9d91d96-6e62-403c-8bb0-279cae31b034"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tconv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]conv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tconv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTau]conv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Econv", "=", "1"}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279162538752*^9, 3.7942791998186207`*^9}, {
   3.794279269854555*^9, 3.794279274841489*^9}, {3.794279324154192*^9, 
   3.7942793414757624`*^9}, 3.7946883341910334`*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"aa524f09-c3ad-4fc5-b00d-e26c6ed417ae"],

Cell["Unit conversion factors for SI units,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279562856717*^9, 3.794279571874467*^9}, 
   3.7942808551629505`*^9, 
   3.7946883341910334`*^9},ExpressionUUID->"2eb7d33e-431e-427b-9d14-\
4757bd10ff74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", " ", 
      RowBox[{"1.3806", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "23"}]]}]}], ",", 
     RowBox[{"\[HBar]", "\[Rule]", 
      RowBox[{"1.0546", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "34"}]]}]}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7942694647135396`*^9, {3.7942705751665306`*^9, 
   3.7942705756297846`*^9}, 3.7942728197783885`*^9, 3.7946883341910334`*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"f3e2b9b5-634a-4a95-990c-50ec9d019f8a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tconv", "=", 
   FractionBox["300", "0.2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]conv", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Tconv", " ", "k"}], "\[HBar]"], "/.", "unitassum"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"tconv", "=", 
   RowBox[{
    FractionBox["\[HBar]", 
     RowBox[{"Tconv", " ", "k"}]], "/.", "unitassum"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTau]conv", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Tconv", " ", "k"}], "\[HBar]"], "/.", "unitassum"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Econv", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Tconv", " ", "k"}], ")"}], "2"], "\[HBar]"], "/.", 
    "unitassum"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279162538752*^9, 3.7942791998186207`*^9}, {
   3.7942793641651325`*^9, 3.794279414927433*^9}, {3.794430999462424*^9, 
   3.794431025213562*^9}, 3.7946883341910334`*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"a8ae1775-59d0-4ffc-b4c6-a4c1e33f33da"],

Cell["\<\
Note - When using SI units, due to frequencies and energies being in widely \
different orders of magnitudes, there may be numerical errors in calculations \
(Removing Quiet functions in code will allow warnings about this issue to be \
displayed). Hence it is always advisable to confirm simulation results with \
natural unit simulations.  \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942851464950123`*^9, 3.7942853384149876`*^9}, 
   3.7946883341910334`*^9},ExpressionUUID->"6d602678-5c4f-4393-9d3a-\
fb9f885ab325"]
}, Open  ]],

Cell["\<\
Density matrix, transition rate and energy flow evolution with time\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7751597474668713`*^9, 3.775159758275875*^9}, 
   3.7751684837870855`*^9, 3.775534473087042*^9, {3.7959950131782017`*^9, 
   3.795995023850216*^9}, {3.8193216512486486`*^9, 
   3.8193216529996753`*^9}},ExpressionUUID->"e9b350b6-c4fc-4a2d-b17f-\
bfeedbdbd21a"],

Cell["\<\
Assumptions on the temperatures of the baths, TLS energy levels, and TLS \
interaction strengths,\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7836539848854723`*^9, 3.783654029431021*^9}, 
   3.791163780096901*^9},ExpressionUUID->"23d73fbc-d93b-4c8b-a39f-\
645d10a223a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tassum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["T", "1"], "\[Rule]", " ", 
      RowBox[{"0.2", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["T", "2"], "\[Rule]", " ", 
      RowBox[{"0.02", " ", "Tconv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", 
      RowBox[{"1.1", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", 
      RowBox[{"0.2", " ", "\[Omega]conv"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "1"], "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{
      SubscriptBox["\[Kappa]", "2"], "\[Rule]", "0.01"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7903728943154235`*^9, 3.790372953581931*^9}, {
   3.790373021807481*^9, 3.7903730282354245`*^9}, {3.7903730686244555`*^9, 
   3.7903730829501395`*^9}, {3.7903746481577826`*^9, 
   3.7903746521012316`*^9}, {3.7903749177956896`*^9, 3.7903749537216187`*^9}, 
   3.790375095043697*^9, {3.7942601530263615`*^9, 3.794260154971158*^9}, {
   3.794260263909217*^9, 3.7942603665960803`*^9}, {3.79426041313457*^9, 
   3.7942604192198567`*^9}, {3.794261815532322*^9, 3.7942618284919786`*^9}, 
   3.7942618968790226`*^9, 3.794272872428309*^9, {3.7942796130097013`*^9, 
   3.794279652643711*^9}, {3.7954088102977858`*^9, 3.7954088146801767`*^9}, {
   3.795408864303483*^9, 3.795408867635575*^9}, {3.819321780480033*^9, 
   3.819321805546974*^9}, {3.821491669900217*^9, 3.821491686948207*^9}, {
   3.827528552600561*^9, 3.8275285557397475`*^9}, {3.8277887155312986`*^9, 
   3.827788725508029*^9}, {3.8309846757928157`*^9, 3.830984683418683*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"c456a4c6-e52a-4832-9488-bf5ef125962b"],

Cell["Assumption on the strength of the L-R interaction", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.783712848551632*^9, 3.7837128578926334`*^9}, {
   3.7942794413463144`*^9, 3.794279443594536*^9}, 3.7942809031685534`*^9, {
   3.8193217280538716`*^9, 
   3.8193217320175004`*^9}},ExpressionUUID->"241162cf-bb8c-429d-9f0c-\
a573b8287d1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     RowBox[{"0.001", " ", "\[Omega]conv"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.794260537532092*^9, 3.7942605379559965`*^9}, 
   3.794279882079415*^9, {3.7958269125451975`*^9, 3.7958269136991167`*^9}, {
   3.8193217361558337`*^9, 3.8193217381952934`*^9}, {3.8275283638897433`*^9, 
   3.8275283662138977`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"4fb204bb-b5d8-4213-832c-e44ff7a1b75d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     RowBox[{"0.3", "\[Omega]conv"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.795408418923833*^9, 3.795408419294843*^9}, {
   3.8193217398054876`*^9, 3.819321745290885*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"06e9d7f4-2d8c-4417-8158-5b5e7bb47589"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]assum", "=", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     RowBox[{"1", "\[Omega]conv"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, 3.794273027465427*^9, 3.794279883793353*^9, 
   3.7954078209343395`*^9, {3.7954079308823786`*^9, 3.795407945774559*^9}, {
   3.795408009182028*^9, 3.7954080110111303`*^9}, 3.795408084248262*^9, {
   3.7954081394865923`*^9, 3.7954081422242465`*^9}, 3.7954081861688905`*^9, 
   3.795408301634449*^9, 3.7954083529233212`*^9, 3.7954087756714087`*^9, 
   3.7954090352427197`*^9, 3.7954090728412123`*^9, {3.7954091206338253`*^9, 
   3.795409146038886*^9}, {3.819321742130534*^9, 3.8193217439467273`*^9}, 
   3.819329244928648*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"96e7ce11-e6b4-4f7d-ab5a-263ec483cd67"],

Cell["System energy matrix under above assumptions,", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7942729842511735`*^9, 3.794272992451922*^9}, 
   3.7942809063213205`*^9, {3.795993131922058*^9, 
   3.795993133609578*^9}},ExpressionUUID->"2afc037d-3fe9-464a-94fc-\
5fba27d238cf"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"HtotMatrix", "//.", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"Tassum", ",", "unitassum", ",", "\[Gamma]assum"}], "}"}], 
    "]"}]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"HtotDREMatrix", "//.", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"Tassum", ",", "unitassum", ",", "\[Gamma]assum"}], "}"}], 
    "]"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7753446833149695`*^9, 3.775344698367894*^9}, 
   3.775534473088038*^9, 3.7942604768355093`*^9, {3.794272932396739*^9, 
   3.794272942395976*^9}, {3.819321767331492*^9, 3.8193217677752514`*^9}, {
   3.8193218268644743`*^9, 3.8193218270708084`*^9}, {3.82778388261172*^9, 
   3.827783890681486*^9}, 3.8304961460484176`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"57aa3a13-8bf3-4a6a-9e33-67d663af806b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.65`", "0", "0", "0.0005`"},
     {"0", "0.45000000000000007`", "0.0005`", "0"},
     {"0", "0.0005`", 
      RowBox[{"-", "0.45000000000000007`"}], "0"},
     {"0.0005`", "0", "0", 
      RowBox[{"-", "0.65`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.819321768992085*^9, {3.8193218092404985`*^9, 
   3.8193218337854624`*^9}, 3.821398336413254*^9, 3.821491463225134*^9, 
   3.8214995879042664`*^9, 3.821499822154544*^9, 3.827527999911275*^9, {
   3.8277838272673817`*^9, 3.827783855451594*^9}, {3.827783891232499*^9, 
   3.827783918159254*^9}, 3.827788728580936*^9, {3.8304959832126055`*^9, 
   3.8304959912914705`*^9}, 3.8304966262651515`*^9, 3.8305006842890215`*^9, 
   3.8305038131523166`*^9, 3.830563427530919*^9, 3.830814548055188*^9, 
   3.830815145771062*^9, 3.83082939637222*^9, {3.8308294830533485`*^9, 
   3.830829494309214*^9}, 3.830984687444172*^9, {3.8309848100198255`*^9, 
   3.8309848396624784`*^9}, 3.831002595537882*^9, 3.8323047870142317`*^9},
 CellLabel->
  "Out[120]//MatrixForm=",ExpressionUUID->"2a8a36bd-f543-475e-aa78-\
0220ccb00c4e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6500001923076639`", "0", "0", "0"},
     {"0", "0.4500002777776921`", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "0.4500002777776921`"}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", "0.6500001923076639`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.819321768992085*^9, {3.8193218092404985`*^9, 
   3.8193218337854624`*^9}, 3.821398336413254*^9, 3.821491463225134*^9, 
   3.8214995879042664`*^9, 3.821499822154544*^9, 3.827527999911275*^9, {
   3.8277838272673817`*^9, 3.827783855451594*^9}, {3.827783891232499*^9, 
   3.827783918159254*^9}, 3.827788728580936*^9, {3.8304959832126055`*^9, 
   3.8304959912914705`*^9}, 3.8304966262651515`*^9, 3.8305006842890215`*^9, 
   3.8305038131523166`*^9, 3.830563427530919*^9, 3.830814548055188*^9, 
   3.830815145771062*^9, 3.83082939637222*^9, {3.8308294830533485`*^9, 
   3.830829494309214*^9}, 3.830984687444172*^9, {3.8309848100198255`*^9, 
   3.8309848396624784`*^9}, 3.831002595537882*^9, 3.8323047870211935`*^9},
 CellLabel->
  "Out[121]//MatrixForm=",ExpressionUUID->"8ad7397a-51f9-47dd-a93d-\
c266761d1704"],

Cell["\<\
Numerical solution of the dynamics, with the initial condition that all \
density matrix elements except the first are zero.\
\>", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.7836540352374563`*^9, 3.7836540706328754`*^9}, {
   3.794280910763088*^9, 3.7942809265140305`*^9}, {3.795826802298605*^9, 
   3.7958268028381605`*^9}, {3.7958268336398*^9, 
   3.795826882950331*^9}},ExpressionUUID->"4b83e4e0-9c7c-4724-97d7-\
bd5407339eda"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"120", "/", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], " ", 
         SubscriptBox["\[Kappa]", "1"]}], ")"}]}], ")"}], "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"unitassum", ",", "Tassum"}], "}"}], "]"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dynamics", "=", 
    RowBox[{"NDSolve", "[", "\n", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sol", "//.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
            "\[CapitalDelta]\[CapitalOmega]assum", ",", "\[Eta]assum", ",", 
             "\[Gamma]assum", ",", "NBEassum", ",", "unitassum", ",", 
             "Tassum", ",", "Jassum"}], "}"}], "]"}]}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Rho]", 
              RowBox[{"i", ",", "j"}]], "[", "0", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              TemplateBox[{
                RowBox[{"i", ",", "j"}]},
               "KroneckerDeltaSeq"], 
              TemplateBox[{
                RowBox[{"i", ",", "4"}]},
               "KroneckerDeltaSeq"], "1"}], "+", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"k", "=", "2"}], "4"], 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"l", "=", "1"}], 
                RowBox[{"k", "-", "1"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  TemplateBox[{
                    RowBox[{"i", ",", "k"}]},
                   "KroneckerDeltaSeq"], 
                  TemplateBox[{
                    RowBox[{"j", ",", "l"}]},
                   "KroneckerDeltaSeq"], 
                  RowBox[{"RandomReal", "[", "]"}]}], "+", 
                 RowBox[{
                  TemplateBox[{
                    RowBox[{"j", ",", "k"}]},
                   "KroneckerDeltaSeq"], 
                  TemplateBox[{
                    RowBox[{"i", ",", "l"}]},
                   "KroneckerDeltaSeq"], 
                  RowBox[{"RandomReal", "[", "]"}]}]}], ")"}]}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "}"}], "]"}],
       "\n", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"i", ",", "j"}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"i", ",", "i"}]], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "}"}], "/.", 
    "dynamics"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
    RowBox[{"PlotLabel", "\[Rule]", "  ", 
     RowBox[{"Style", "[", "\"\<Density Matrix Diagonals\>\"", "]"}]}], ",", 
    "\n", "\t", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", "1"}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", "\"\<t(s)\>\"", "]"}], ",", 
       RowBox[{"Style", "[", "\"\<Probability\>\"", "]"}]}], "}"}]}], ",", 
    " ", "\n", "\t", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{
       "Style", "[", 
        "\"\<|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |\[UpArrow]\[UpArrow]> \
\>\"", "]"}], ",", "\n", "\t\t", 
       RowBox[{
       "Style", "[", "\"\<|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", "]"}], 
       ",", "\n", "\t\t", 
       RowBox[{
       "Style", "[", "\"\<|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", "]"}], 
       ",", "\n", "\t\t", 
       RowBox[{
       "Style", "[", 
        "\"\<|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |\[DownArrow]\
\[DownArrow]> \>\"", "]"}]}], "}"}]}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}], "]"}]}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arg", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Arg", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Arg", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"1", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Arg", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Arg", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"2", ",", "4"}]], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Arg", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", 
          RowBox[{"3", ",", "4"}]], "[", "t", "]"}], "]"}]}], "}"}], "/.", 
     "dynamics"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"plot1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Off Diagonals\>\"", "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", "\"\<t\>\"", "]"}], ",", 
         RowBox[{"Style", "[", "\"\<Magnitude\>\"", "]"}]}], "}"}]}], ",", 
      " ", "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(1, 2\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(1, 3\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(1, 4\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(2, 3\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(2, 4\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Abs \!\(\*SubscriptBox[\(\[Rho]\), \(3, 4\)]\)\>\"", "]"}]}], 
        "}"}]}]}], "]"}], ",", "\n", 
    RowBox[{"Plot", "[", 
     RowBox[{"plot2", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", "\"\<Density Matrix Off Diagonals\>\"", "]"}]}], 
      ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t\>\"", ",", "\"\<Phase\>\""}], "}"}]}], ",", " ", "\n", 
      "\t", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "}"}]}], "}"}]}], ",",
       "\n", "\t", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Style", "[", 
          "\"\<Arg \!\(\*SubscriptBox[\(\[Rho]\), \(1, 2\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Arg \!\(\*SubscriptBox[\(\[Rho]\), \(1, 3\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Arg \!\(\*SubscriptBox[\(\[Rho]\), \(1, 4\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Arg \!\(\*SubscriptBox[\(\[Rho]\), \(2, 3\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Arg \!\(\*SubscriptBox[\(\[Rho]\), \(2, 4\)]\)\>\"", "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{
         "Style", "[", 
          "\"\<Arg \!\(\*SubscriptBox[\(\[Rho]\), \(3, 4\)]\)\>\"", "]"}]}], 
        "}"}]}]}], "]"}]}], "}"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["EngyFlowIn", "1"], "[", 
        RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", 
       RowBox[{
        SubscriptBox["EngyFlowIn", "2"], "[", 
        RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["EngyFlowIn", "1"], "[", 
         RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], "+", 
        RowBox[{
         SubscriptBox["EngyFlowIn", "2"], "[", 
         RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}]}]}], "}"}], "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
       "\[CapitalDelta]\[CapitalOmega]assum", ",", "\[Eta]assum", ",", 
        "\[Gamma]assum", ",", "NBEassum", ",", "unitassum", ",", "Tassum", 
        ",", "Jassum"}], "}"}], "]"}]}], "/.", "dynamics"}], "]"}], 
  ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", "\n", "\t", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
   RowBox[{"PlotLabel", "\[Rule]", " ", 
    RowBox[{"Style", "[", "\"\<Energy In-Flows\>\"", "]"}]}], ",", "\n", "\t", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\!\(\*SubscriptBox[\(J\), \(P\)]\)\>\""}],
      "}"}]}], ",", "\n", "\t", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Left \>\"", ",", "\"\<Right\>\"", ",", "\"\<Total\>\""}], 
     "}"}]}], ",", "\n", "\t", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "BlueC", ",", 
      RowBox[{"{", 
       RowBox[{"White", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827528525201256*^9, 3.8275285455806046`*^9}, {
   3.8275285976157393`*^9, 3.827528599349763*^9}, {3.827528630066713*^9, 
   3.8275286590928574`*^9}, {3.8275287064599924`*^9, 
   3.8275287079092174`*^9}, {3.827528756426029*^9, 3.827528771379574*^9}, {
   3.8277840370273976`*^9, 3.8277840566417856`*^9}, {3.82778410697739*^9, 
   3.82778420947519*^9}, {3.8277843104685106`*^9, 3.8277844680347357`*^9}, {
   3.827784499876773*^9, 3.8277846290828605`*^9}, 3.8277846996346617`*^9, {
   3.8277847328237677`*^9, 3.827784812563135*^9}, {3.827784846248128*^9, 
   3.827784883496084*^9}, {3.8277849283122587`*^9, 3.8277849426990857`*^9}, 
   3.827785306203928*^9, {3.827785462852046*^9, 3.8277855227387094`*^9}, {
   3.827785670250612*^9, 3.8277857582310486`*^9}, {3.8277858489503975`*^9, 
   3.8277858543973455`*^9}, {3.8277859011580896`*^9, 3.8277859110959024`*^9}, 
   3.827785944897813*^9, {3.827786037832555*^9, 3.827786101811947*^9}, {
   3.8304961477045183`*^9, 3.830496151711895*^9}, 3.830814573351057*^9, 
   3.830815167632573*^9, {3.830984697408309*^9, 3.830984707438463*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"e8b9907c-9e84-45d8-ab3d-a4a6ab9fab80"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd1nk4VV0XAHCazPNQNFKIIqk3ErtlHkJFJISEiFemJEnGe8+NMs/zPM8i
Q+G6xqIoUZJeQzRcRRlTvu376zy/Z+2z9llr7XOeI2Jzw9BuEwMDgzEjA8PG
9eCs6aiVjPRpBmvFeScpGSX07+v+LBorRGhcM+1b7FIOq+K/6UATBjWpf6XH
nWeUleLTW07zHYC0AZ2UzolV5WODNZpnaFIgxBZl3WnLhGJZ7OyLG2Qh6MHJ
N30TPCii4IbkUb7jEGc7E6ikIITCtHy+1TrJAznIyW++dx8ifwouV6IpAi+z
8WsmPzEUGBLuTt2FoLap94NPthQ6zdsrnNMA0LAm3bh5pyxSrBwaleRTh7sL
gsGBKifQY4bLzc7NGsDuwZhzO/4kOnFuPKPcSQsyB6UVnAWU0dHv367+Q9MF
l91j1jeQKipD7hrernpgdODg0llZdXT44ZJ44y4D2JkoMGAvq4liBBlvZjSc
Aym/aZ3LJroo/BGbgjjfBeh8tJ7n+eA8Iv3c9/QozQwuKztONf1nhjSSJ2SM
ksyB6+L5Hcx8FmiLWl66p6sF7NZVz/ysfhkFRB0KqNtlCdSdzSvRhVbo6Y6d
WWkN1hAw72UVpGCDGurE7A7w2YKyBI8N+as9qlhQ/HqEdh2+5J6wlqi+gUpf
te9SVXCCsOWtVrwirqio8pzBhRIniD88xjF/zRVl/2tf6R3jDLWecvOvfrqi
uKnIW622LqBGts0S3eKOnl7/FVC4yQ0eTSxvt2HyRE1v65OqlNxA5cOFSGEN
T9Sgfa+60csNzi2Xs6BAT1QnzjrV+8UNFrn/Y3+26okqxvdqzw+4A+t//P77
p26ibLMznKeyPWHLkBriyLiFsrq5JdRHPUFdqNRu1+AtlKHw5rT+9pvw9dvD
i6Us3ihF8IqbVehNKKtc8TJz80ZxA16vgzy8wOCZohbrqduI0M1Keq7mDQoq
rOK/H/sgF8UVccvJO/CmxYTtqMNdFLyDWvlQ2Bc4pcUaXB/cRYmL95Waz/nC
if6D+nZVdxGtapfhvie+sIu2bO36+y4SPgR3x2PvwgJvOMuB+36ocyf5lb3W
PWiVvG+em3QPRfixtsgbB0Dquw96Rh3+KJnusvWcawB8enmVSn/tj/IsXuk6
hAZAacw43XnCHzUqpgwmtAbAFaayq8IMAejTovTXFelACKqNcVFQCEBKN84L
Nm0LAoPnD7RqsgPQZ6sEZ3gcDFxKRy12OwYiv2bBrJcDwTBVbyjt7xmIePfG
DlnTg2EhJp3xxb1ApPQhUjVANAS87IQNjsYFogiL0B3UsBDY241K2amBSOGS
H03tCgmG9af2nBYMQoSh7S4tVgL0AovMgiqD0O6q8fNDBwhgIPVUFDcEoSqe
K+RrpwnoPW6mTmsLQu9fXp4nexIQ1BIT3zEYhGTPXuzq+kDAaM9rFr6VIDR0
RtdTt5oCo3HU6XGlYCSuIftc3yIUJPpUu3kagpEq04rVntuh0ExZ6+KnBiPL
7tafs7Gh8FNzfZG5JxjF6xvtjHgRCiZuIgbtb4MRs4nX9QHVMFCXv7EUsRyM
vtg3MV+UfADNJtnRocdCUDmhrWG9+BAYtScuP00PQc91ed7K8oXDTFBiiFBe
CJphf+fMKBsOPiH/LTmUhKB9kU4xWY7hICnbyzP1OARFJT6cmHwfDm4B6e4X
+kOQovGXlporEVCxN0pNlIGEdtnLWp3UjgS65ULRZhMS+pEVG1JsHAn9lhwu
9WYkRBtbLd59FVs+QfiaFQk5X2pfZvSLhGdb5a8VOZBQk55ZVE91JChuo58b
8CEh82PB7eZ7oyCodUm2OpWEkhiGD/ktRkGMYNc8zwcSclFWNvyxORrmjb4d
/vAfCan6ZHnb8ETDuYvD49lTJPTlp3O75uFoiHIspO+kk5DiNKMVl000rPQl
VzT/JqG3vYeiMnqjQSSN/u/YdjLakXxvmZoTA/TpddPOM2Qky8JqYFwdA7er
/qnfcZaMtG7FZE+3xsCO01yzVw3JyMuo0IB9DMdTpzbPmJLRINurHGOhWDCj
6O0vsCOjKF/x8zMPYkHGoaWLx4+M2Cx7CzluxcGkmbPpqyIyEn1+cT09JA5e
n67m9CwlI0XF8QtyMXFgYcM1wVVBRtcFl9ZNKuPgMyHJcvIRGXX17TPJ+BoH
7Ldfg2EzGQWf9tx0zDoe+rX+MBcMkNHffTvNTXUSwHgxK1Z4kYzMyVUFeRcT
4O7xqBqxZTJ6TNdZ/GWXAPrzuTukV8nIrcE7MjIwAT5e+NYj+5eMJo3edPY0
JkDYg74o9m0E6iZFHleWSYSsJQv/nQIEivnGxCnKlwTijLVMVFkCzRmmm7uK
JIGT4/Y9NnIEMqg/Ufj0SBJI8XMorx8jEBPJTt1cLwl0IscKZeUJ5LO3zScm
JAlsnum8clUmkJWh3/S25SRQW17b5KRDIKnHv1q+vk8GYbY0ZUcrAumtsn9V
+5IMmb6p29KsCXRDSUwgZSkZ1EzftL68QqCaFmNHPd4UaCqM3iVrSyDUXctT
qpUC6QoJ1DcOBDJ8523jUpUCy2Z6zzrc8P5ra5vnyKnA4xiooh1IoBQkIKMT
mwrrJdVFKkEEavaXNs3MSgUN8ydOJ4MJtGWrZcn5J6nwooqV4QCJQA85mi9U
zacCTCk2TVEIlLUnINfjchqk8FoO747E/YKtWoty6bCJNjvmnkYg2RrVDBeV
dBjt/6iqn06gOAn/lU9n00E/uJhXPINANpy/i4ec08HO7OWWV5kEWh35wV2f
lw6kdneScC5ef8qFrsyRAd8fXr1iU0ygzjeX6hgCMsCr3X5suhbXE7E8oURk
QMek6d7YOgLJ6MZz3w7PgLh9pntVHuN5PXntOJeaAUfi3jvE1hPIOufsrvGG
DFD/G331SBOBlt00Atp+ZQAPd8MXqVYCSXIcPUNyyITvUzSqQQ+Bnh7ntte6
kQkdt6uEXmBfsPjuz+yVCYLNF6MNnhHIv7i09n5QJqiEdf3SfU6gYR0p0fC0
TMj2UE462UcggrR/Jf51JsxPrdR87yfQzLpAfiFkgUjLTFzXMIH8JBZar2tl
QbwH+n3kLYH4z75+f8ggC5p8z5TGYUNaFG+ZeRacTLy0fuUdgRKUuPyqvLJg
XnHG98cIgbRvMxs3lmTBzOehSfoHAuXPr27q3ZENg66V29wncb1xH4Wc92bD
/sNt5W3YOxQ7ZNnEs6GFsaePf4pA9wMiLXWOZUNpp5n7I2xn7oMN7frZkHFu
s+OPT3h+MsZuTwOzgSvHa0T/M4EeO5aPlX/LBsW0xOwSOoFcOWIXDX5mw5sV
h5pZbMlKH47ZlWzQN0g0lp0lUNKyxqnDTDkwHCCuV4XtS34fVyCSA4LHYE/l
d1xfLotBpkkO5HJQ5pPmCNT18WpTVEsOHDNaFTywQCDR3e+/tHbmgOW6Co8l
9t1LF4Tm+nLg8HP1zHhsuQF1r7OjOTA+eTuEZZFAyW1isuyrObD+IcZjBtsl
bzo75Fgu/H1NDY9eJhCfs1Ood14u2GnFhGT/xvGCifr80lyQX6XE9WN3TZrP
vKnJhVBlIaN1bN/Lehr/tOWCpHBy/6U1An0ykF6fG8sFzYtjC6x/cD+Ofnd3
EsqDF8Z/TCz/Eshyyd3MMiwPEl8mnuploKDkzEO3eKPzoPRgvd137OEzk9Ed
iXlwSj7PmIeRgowyjHtl8vNAJcWEuICtraMA6615sEcwUHUYWy75j1jGUh5E
bX5hOriJgradJub+s8kHGc7MoIItFKT2GTjjHPNBu3qfAA3bP3pFStc1H66o
Rd4aw/49fd226i6Or12vENhKQT8i9IcCE/LBWZhv9R72u3HeJ/v78uGlUZe0
3jYKKiOlEnYnC2DkrcbOdiYKetA901QIBXDy8JYTo9jO7Mfn6FoFMP9Y5MAC
tlRUzyUvkwLIy628c4CZgvJSl6TIHgVwvTtvXwB2es353oLSAlg4sBgix0JB
EeNbeb+JFMLvb79GbrFS0A2x85qykoUgFdq7dB/bwCHFx1O2EIa1NX+kYrPP
yk2soUK4p8Pl3YZNWbGq4bAoBL8brZ/Z2SgokLvB5EhcIZj31IYmYnsgl2R3
1iIon5V0TWanIM8/zc9ieIpg8iSDQRG2VxPPWu2OIghyyOGux/ZRfGTxW7wI
RHz4NN5g+59Y2x2sVgQvH9Xd4OLA9cvcz4j1LYLS0cFFX+z8PXm5j2eLQMNr
UFiTk4KKUnS2/Vkrgs/ZP0suY5cJ0+1V2IrhWuf3z57YNYLHD/ZIFMOhHwaO
WditnNSiEetiON+jlr6CPfJ3tPzvQDEsmZV8TOSioBzTTXS9j8WQmaFgV4zt
UiUulUwvho+8LGVN2Az2N3LkmUtA4qlB+AfsA70Mia7KJWC8Zzh/LzeeT/L+
wPH8EkgqPzwYj/3XwHnNj1oCsx1J9GrsiE2PvHaOloDbQt+ZF9g1jppOF3hL
QaaR/9tmHgr6I+94ocO3FAImxUTssAUN1g5nJ5YCTXBn811sWdvwrf61pfBg
5kFhLLZNxKPakz9KQWnS+nYbdtcMo1Dp1TKou2xM2c5LQeN/Y+Yo/mWw/5Qo
/yHs3/wHe+xTy2ACkrgRtoyKwZ19Q2Vw7bqKiw12TGLSaLRuOdjbkiRysT8c
pzHc9C+HFOHjra3YB1/S95vUlsMJyvOR99iWQfv+YeepgF9e38Y4+Sho8/lH
HWuHKmA10fi7GHbBHl1TumYFyPTTu09hz9d73OnzrYCEqVO7bLH3fDF0Wk+s
ACNdyePe2GeE5cxl6yqgLGxEIhQ7x+eHYtRcBZSkbZ8oxX5Z9EKqjbMSutcE
ep5gr70rE/51qBI4ug72PMc2PvXvqrF9JQyTr5+Zwab6WjXkp1eClzinBQM/
BR15et5nZbgS1LZYDQtgp6yrKZ7hrYI04tQ2SWwWlROrKWeqIOzCwm5FbN4s
Ecvw2ir8P/pT0hhbeDMHNUCkGhJiPfKuY8OsSPrN2GoI48+y9MW2f3vC15Gl
BtZFbEYo2A1ZhsolN2vgmZ61aiw2p7PL39n/aiDyXdSZDOzQpbl7PHqPYKLS
bDUfmznoJuPx2kew8GH6cyl2VoLo2kXJWrjzonKhClup7MXinZRaINJ7F2ux
t2QFDc4y1UH/vY65euzeWPmaKx510CEzQmrCruYTYH8zXQen2DJEm7ETI+ev
6lo8Bm+jTJ1W7IJ+ed+0vscQu+mHABW7luduzDzUwyekeXAj/vNId0RscT1I
a/xRasGWNRB4oCDYADovfp/YWH9/8f6mUUoDHPeVIz/Dnkpj8A740wCXAxO/
tWG7iN3t93RshAYTPvZ27MXiFSmHwUb4aPins2Nj/1+j6qdON8EPqBvaiF9S
plpyFjbBimxwwoYPcr+cG9/5BJp2eY3+//7x0eC6h0/gLPPnuQ3/jJ7//W7l
Cdg/bl7f8A91Jo+/tk/h1k8kuJGf1V/j6v63T4HjhYz2hsUag4y09ZuhIXLs
1oZdXndJNNU3w/3QR+4bHlnc9nc7XwvsZ15h3XCM7eUuFe0WOMTwhXUjv95A
dZTT3RY4xx8htlEf/9Z0IcG6FuCPDU3Z6O+I/P2Mlh8tMMpm8W5jHg1vvROj
xFvBsmuysBI74c61KFuLVsiucUzPxQ4Z/6JVF9cKVHHByChsdx2XPyz9rSBU
KnvPC9uDrqNdTG+FoXSJc87YnpFi0XqsVJgay64gb/hqtELqDiq4fV5gTN/w
P4wf6OJUMExgfb5xPjyZbgShf6hwaqlIf2M+N9++PxiuRoWxAYXpIeyHEfGy
K95U2CQb5NyIna9lqHC1DK/vjjq8Me++tsw1/RkqaOTyMPy//6fnWhRE20CT
+lBooz/HD6kv6Zq2QbpJ2MvujecVjJe+/LAN5BY13w9gd4zvVrdqa4Mqkxna
FLZQeY7ZleU22H1PqpdZANcb7cRF3UaD4Hl+uiB2zy05mqgADThGewMlsEUt
VryD9tMg+llstyK2D7RITx6lwU/d0rVz2AMHyOPqQIPA2vBr17EPsRjE5xrQ
4Lb63zAC2/RO5dygMQ2UKGrUROxgOr/etss08CdpBpRgv+8fYbjmRIO7w1m/
3mB/rbyns8udBoZj96Tp2KuR+6P6vWnwnp7DvFUQfx/cO9+R7tGg6vtS/B7s
HYZO+5VINHB+aUk/ib1P9UlnHIUGfx7MaWljS8hxOc+F0SDjTrPwRewTvNU1
edE0mHq/ftQLG23aeokxngYuz776kLA1503+mCfR4PXYVo14bIPxgszaVBqE
Dt2PKsA2HljV4MmkwRbXOrsGbM8o1aE7ZTQImh4u+oodZXjf4VMjDUSD+ac3
nCknU5lMxfnEBDLeYlfwDqyc66bBnvUSgUbsx5sOpBU/p4GG80m2jfzN8zdV
t72kgYCk/bdo7L4BodDGNzT4qJh1ywFbh57K5vOOBu/Yd18ywKYxiYYpfKCB
BHflpBx2o5LUg0dTNGgoOrC6hPu3rOPcGzNNA7lz/Y4z2CculnF4fqYBg+qW
4GHsKje5h3J0GiSy/qmrwy7IUwwv/0UDlcpyfg/sT9W+Lx4u0oBt6n6QDfb+
1qdcLss0GDy494YhdtqIasThNRrYfnRvOoYtvNjB/XWdBrNDRWsb5ymW+0xk
4eZ28ODqPLKGzx/3oRc8Dkzt8JPUaTyBHaZhFCXO1g4uqMTlOTaT9RDvFGc7
TP5z06cOO9DHPDqbtx1M/hW9nYNtYeAbHy/bDvnRFxhdseVFU5NDDdohRP78
yY3373+eCvyX
          "]]}, Annotation[#, "Charting`Private`Tag$9547#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$9547#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ByWSE0P0n4HQYnEp0/8DSSHxzA==
          "]]}, Annotation[#, "Charting`Private`Tag$9547#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Hc81d8fB3AaCqUQmUVFSUSlZHTfJYkQchHZqzLK7Nqua0v2yN4zFEJE
ZqnQNxWZlYZSXCSr8Dvn3t9fn8fzcc7nc97ndc7nLWxxQ8d6HQMDgzIjAwN+
HpgyGDGVlCBYrUteXlujEk45vH2d084CHNW2dp2rVMLtyh1uV9v5wJ4UK5W2
QiUcfVd97kL7QXgr5sJl9ZdKSGC2timtl4IfQyQH/WUqIbrohpg05zEIXZsO
012iEkK+BVYotMvB8O/AwusLVEJAUJRzq8ApmF4R+hcwTyUQOLr58uoBUg8P
Pc79QyXIPegfEeM8C9aza6orv6kEaeovS5l2NfjZ2Xhv8wyVUH7KWZl0Ux2+
7cq0uDJNJRy6syDaIKAJt4UdDWuoVEI8N6NbVr0W6HB9F/OeohIuNbV9bYnW
hpCfG+PGJ6kEDptgvc82OvDnpKO5AXLUQ1ZZUU5dkByNslH9RSVoGvcUqfzQ
hc3aYoTnP6mELRtjeK89IQLxZXejBnK4LvffUjt9mFNw32A1QSUE/xZqkm43
hIYgZYOW71SCcupnyUspRmCyS3HVHHmDUkGm680rsNuSg5cJmRwrTq4VMAE3
nZnDBuNUAshNzbyfNYHhcz8mNyKvfrpvsdxpCsEjooU136iEJh7+nIx6M7hA
2JQhhJxh721YIWIORe1SBQNfqQSf5hGO5mhzcH1bDgnIClezKJ9sLOCp875u
TuT6WhHrfZxWsLdg5b34FyohhTVEUMbXCtQkSxkXPlMJHqbf3yn/sIIGB+Yd
7ciym0rP2T6xBlHGpTJL5J1GW9ZuHbSBSXkZzuPI8+UOtaEJNuBdFLGLBfmh
ntSBEjtb8HufNFEzhvIviflY32cLQ4aGkVHIrquzyS9PX4UivcHUa8hHCh4y
T+68BptYvTqFke//kft5uP06HDEuYcr+RCWUvekQOCNrB/dUc5TIyCUPtDR1
79lBFj9XowVyroPNA1K8PUhINcmIIWddmBkL3+wAyf2WgmzIaWLeO9K9HcC5
NYpj7iOVkPg15laLlSPsCXjzrxU5tk2g+M17R7h9c2GkFDkqu3Dwq/oNAOq9
vATk9vLRXUF8N0H1BFuzHXLT9Tly8TonOHy86Jww8uOBRymVCk5Qt7XYfjty
/Xm/qgZ3J9DjMz/JgFwryvK1e8IJGIsa7336QCXUJLxa6dvnDMQRH5U3yNUb
Erg/mjiD7JT9zQ7k+2O7z8/2OsOnlAViKXK59lezv1tcQM/MaHMmcllziccG
FRcQm5w9GodckiFTyt3gAovG5z57I+caXmCTz3UF/e5GMSJyzvPt+8+OuEK+
nKeYOnKWbB9BY6cb7JYTJyshp3GbO5lGuIEeue/gUeSUINHwqx1uYBS3010c
+e7czxynNTeQeyW3ZR9yYq/7W4qLO8Q0DW3lRo4/rTB5u8wd3BiqXbYhx95n
ZEocR+O3NXmZkaPu3D5RZHQLgrq0+FZGqYRQtZyULiUS6MBy5Thy8CPbqnc+
JCj2+Nc3hhx0QKJrtJYEDY0eYqPIAUx1K9PiHmA0qKfzDtnfzYd72doDZqb1
RV4j+345c3h9lgfkfWIQ6kb2au0249rhCbXS+4I7kD2l4zx2aXqC02rUVAsy
Kcsgdn+oJ9hyPSQ1Ibv6fm47+c8T9rIrTtYiO8otiZp88YJnMsdk7iEH8rQ+
uMPnDcS7l2qKke/Ohys80fKG4e1r6oXI7ZUCOkKN3sD0p602B3kw+uuw1m9v
eNWgG56FTHUstyWL+UDPAbcbGch84uAzluADPDavHVOQpZiZN3N2+UCjY1tI
MrLy+OtYpXW+UKVSeT8R+WauZVGeoy/EBylLxSE/4w95Y6PiB81cL/pvIw8v
XTRJ8vGDAEqXeQTybD/Pj2dVfjDK1b4QhrxNjei3Y7s/fO6cUA7B6z961H5I
3B+6l5RXgpD3HdjFonzOHzpvUJsCkeWYxuPdvP1BYkuraQCux+3CYGSSP5iO
nT5FRtb6UrG7oNIfxC48FPFHtm4llfR99wedX/vYfJGjfVmaTxDJUFA+q+CJ
nDrpuFHrJhniRksNPZALrrxRuxpBBmXpHX4k5Aa5tHfJLWQwLl8/5I78bV7i
55JEAPxaTx5wQZ6xjpXiUA2AqN05otj/3s67HbQKgL3BL0nOyOxVTxiMUgKA
yBMp7oSscEOb+zETBTjMpZ86IquMPjR6K0wB412sJ7B1NPiyfylQ4GtyVakD
sq34Z3FBFwpMmP3ItEeOHXc97fuBAn5XPe5fR07XGwhOXKZAW5eBAnZRh2JX
OVcgrDDzvbyG3JTLpP/hQiAISg5NX0X+YZpsD3WB8OfvtKEtvp9PuHP+6w2E
6+FHVmyQOXYn9JtNBgI/S3Q2tsJozBnyniAIYDKdtsb5XYngab0dBCkl0XlW
yCKPmTV1CoPgmf48EbueP5Qy1hIEZttXN2N/GQycWrcQBCHarS6WyLKXfduV
zINhz3KHoQVyd92/pTdewVD2eHwntgWP12GrxGCgeF/sM0e+3X8rJfBlMEjm
vtDD/kh0utkhEwLK2rbWZvh/1bESUGEJBXFQqTRBFqwc0+7fFwpDIb1+2JXs
5iG2hFCoI4lpYg//Zzwb4hoK2tJ7J43x/b6o39k5GgoR5PtHsfsvqLmqVYUB
m9fpD0bI9qWdxYPdYbA/GWqxGVhVPlz/HgaDXB1R2AdfKKlFCIYDt5HWGWzf
84pCXSHhME7hKTNEFlWW6tK4EgHJ+RJJl5HPbFoy3eURAbGBNi7YJs9bfk8l
RMCPj6xa2Ekal/ijX0XAf6qxLNib9dyv9565DZe+qwUaIE/YPN6sLxYJggce
hOojM4kFpe0/FwnvT1Vex97zU0Nq0SISmFcZNLCNbnzQv5sWCS96yBzYXbfW
FQ5tuwOZ4T+y9JArQs8rm83fgYlNKi+IeFyNfUCKMwoW+SPuY3/fMmjPKBUF
R0xZkrCFYuzic65FQRpzrRV27N07n78MR4EX64N12HLEieZq82iwUPY4r4ss
YCNlevJ8DNRQGRd0kKdzEoJKiTFwyT/rC3b7h+VSQcsYOBdg3ottf7ljkdE3
BuYCVcuxH6sbxr6oioGN0kW22EZHAzuMdscCv4DRR23kFIb34r7zsdD9oH5c
C/dHRUWd6fVxUJTPM4B9xjOHZMEeB1sTol9gT/y27zh3KA7a7naXYcuNM5pu
s4iDz9nubtgD3eKxWd1xoGRrwIzNk+q32JoXD07KQmcu0vohiyaxKh44dW1l
sFVuxeeOt8RDo9HTA9jul4o1t3yIh1MJL7dhv2N9k0fkTYB1jpOjmjgvb1Ht
75EJ8MXJlozNatJdvPVWIsxWbe3TwOfXpb+WGZQIFJ61l9hycmO6R+IT4c6Z
9a3Y17kX1vQeJIK1sVI5dmePkF7Wz0RQmsgIwQ4kuK47apYEVZfzFbFXhfiN
DFSTIciYrUYd5xdSWVSgnwzdCYrl2HWTqvNz1smgstOrANupnhQTE5AMa3eE
krC/XOp79qIhGbrIHB7Yz4NjjilK3gVFdm8CdvyvTWx7OFNAiL/53QXcD3Uy
jW4Kp8BuwbBX2JqPjhc3HU6BYx7Gz7E3BVufNVJPgajJ/Y3YnrvbPOODUiAs
9HQ+tqmO7zjTYgpYF7rdwj5YN9f8czgVQqaN92KrL2/5qTSRChSVll3YNxRE
uNIWUkHL4xAfdnUz8Zo6RxqUnORjxz71vIa9TCUNgtq019Rwfx0kWThWpoF5
mcgItue/f+tnQtKBL5ElAzvtFJekakI6DDJqp2A/8ZcwyM5JB5fW9ETsDRtN
7mk3poMgn1oU9p2tT3QrZ9NhE9OkP3bOLnK+i3EGiHzTscZ+DhtV5o9kwoTE
5SPYUtVnshxPZ0K0NPdh7MT9/kvfLmaCsMKAOLYF29/SfvtMaJF1EsFeHpre
/qggE0zjx3lo8+UdJxW3ZkFk+BcG7Gd9l2sZyFkw96f/rSreT/TiZ4XQLPCP
Ot2LLamWtN0jKgvsqRWvsOMb316bSc8C0mjKC2yzvIsCY/VZsOhT1Iy96KRM
bpvLAlbj1DJssa3SF4KvZkOtQXE4tu4Vqv9m92zo1e8PxvYvLasJp2SDF4mD
gv1e9eCeqIxsIFpVeGGHBu9dSnqbDYaMfg7Y39e4CoshB55wal/C3nHx7bC4
Zg6s8ipqYUNGLEe5UQ7oPjyqgZ2ssM230j0HBPlBBfu8x2Ziw70cSH74Wh67
cHZ5XTdPLsR014ti88g9lWIVzYUXLur7sMPJMSaqR3PhvNo3YWz77QfqOzRy
gbLziCC2lCTRqSkgF5Tk9+/ArrtW8aHiVy5U1Dutx05ZVJY/tCkPLHXD1s4j
e4cMJxYJ54EmZ8NfbMhn1szWy4MJzetz2J0fLR/HNueBQu7Xb9hHes+6XxzJ
g1dOpM/YqW0iUluW8+CKwL6P2I4F47lBR/Phx762AWxOe7sIUkE+iA5v7aGt
Z6yuLNOWD8sfdV9if9OUWJv5kA9+dys6seukqc52vAXAy5TRhm2y4GxocrsA
gnW06rHPq8rCWksBzEpeqqHVk7oikrVQAJ5aEZXYTITQmU8WhSD1OroUezpa
oz8guRA+LhkUYQ+OcTTu7SkELTX1fOzy4PRQ65NFcCa/NBO7IH3hYIhLEczI
j6RhZ1ZrdxeVFYG544kU7OixjRy/hIvh9H9GCdhhS6bVW68Uw3CZcBx2wPZ6
vcOJxeAZsykG2+WUY6ozSwm0Ug5FYkdKhmcleJfApGdPGHbhroL8uqkSkPfp
CcZuYWstGTIrBS1joUDsodWRitXeUtAcrydj26fuDRgrvAd8htM+2Csnruk+
9S6Ds04fPGnn9Z2Rt8yyHMIuypCw4++mjMSpVUDrwE53Wp4UIZkt7PfBLp/i
ij37yMWrx/s+EF4qumDneU7Lxc7cB9W6vc7YRHmHZaLNA2gmnnXCPtyk7bn0
/gF8PJd4E5v59PHltAuVICSxhWaOHGGTqJpKkN9QcAObb/3WVrJwFcxfJtIM
U8KZbglVYC7AQbPNwHHva8zVUKkw6Ihdn6OjeM+tGoR9C2hms3dcnfpUDdWp
/jRHLMz4sas/hJAoG5o3U9wYj9U8hGNmWjTnJO/5py9WAz9sFGlWKH8175VW
A48OS9K8IYfybmpTLbzs2UNzd8KJanMXZEdemqs4ubb0jdeCsRQ7zXdjZi3V
rtRBFwMrzUWvT3hn9NQB5T0TzTXsPvGz8AjUPNbT/Pvw8+iE0kfAe3/NAVtK
kytSlrseeriWaQ6fD183ElYPJmyzNH/NYCCRV+phnrBIs6OIz2vXaw2Q5kn3
fOnSwavvGkBKbJ7mormRs/KEx7BLne7Liq0mbMWP4frUH5oPbP9vZoy/Ebpt
6J4fGwmsvdMI5itzNP+Om/07uNQIUffonj67yWXVqgm0bOhm8Ve23DvQBP6i
dIs0UC6d13gCEsu/6fW97dz/+NETYBqje2ieaXUnZzPse0d3vJVx5+nzzWDY
Sbd6b1WsnU8zfCqle8fGTF7u2mZIMvv/+yfCs5qnm6G5j55H/QDpbqxoC7zg
pjvZyzbW6koL8MnP0Bw0NqFSm9gCXg7TNDurOq4wv24B5+N0u8aIxKmztMKx
Yvp8t4HhA1FKrcAZTF/vTnSS1BKpFYT+0b9fqKIja1neCvbS9PGetux/Gt9b
gUeT7nnCTLPsnjZw0aX7mPjZBTWDNtCzpNuFO0nC+E4bOIfS/XRM8KxpWxuw
vqebtyLP0HyxDbgd6Hl6QrPEF+l26Eqnn8/w6yEGW7t2EO5aoJnYu6zMnt0O
ss5/6fX08kY09LXDJw76/QnwNIrL5eiAwS56/Sf2pKdGaHbA6Wq6/wco6XDO

          "]]}, Annotation[#, "Charting`Private`Tag$9547#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"t(s)\"", StripOnInput -> False], TraditionalForm], 
       FormBox[
        StyleBox["\"Probability\"", StripOnInput -> False], TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Density Matrix Diagonals\"", StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0., 10909.0906864564}, {0., 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"|\\!\\(\\*SubscriptBox[\\(1\\), \\(DRE\\)]\\)> = |\[UpArrow]\
\[UpArrow]> \"", StripOnInput -> False], 
       StyleBox[
       "\"|\\!\\(\\*SubscriptBox[\\(2\\), \\(DRE\\)]\\)>\"", StripOnInput -> 
        False], 
       StyleBox[
       "\"|\\!\\(\\*SubscriptBox[\\(3\\), \\(DRE\\)]\\)>\"", StripOnInput -> 
        False], 
       StyleBox[
       "\"|\\!\\(\\*SubscriptBox[\\(4\\), \\(DRE\\)]\\)> = |\[DownArrow]\
\[DownArrow]> \"", StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827784913966672*^9, 3.8277849474101253`*^9, {
   3.8277857165922914`*^9, 3.827785759281457*^9}, {3.8277858086522455`*^9, 
   3.8277858133352604`*^9}, 3.8277858556713705`*^9, {3.8277859120727563`*^9, 
   3.8277859722448654`*^9}, {3.827786038869892*^9, 3.8277860473937435`*^9}, 
   3.827786102559492*^9, 3.8277887332720895`*^9, 3.8304959969053764`*^9, 
   3.830496630131583*^9, 3.8305006843990703`*^9, 3.8305038132824345`*^9, 
   3.8305634283570027`*^9, 3.830814582298941*^9, {3.830815153157203*^9, 
   3.8308151813503704`*^9}, 3.830829410678339*^9, 3.830829442188987*^9, 
   3.830829513021489*^9, {3.830984691025625*^9, 3.830984711228278*^9}, {
   3.8309847465773582`*^9, 3.830984758204738*^9}, 3.830984844665144*^9, 
   3.831002595673318*^9, 3.8323047886466045`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"aacffc59-5d0c-4f4b-a275-858b38c53355"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
K1e9NeKKpPky0sJVKWAttT9VptsV/Q/3naqa
            "]]}, Annotation[#, "Charting`Private`Tag$9636#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwVV3k0ll8XlUIKCQkRiZKEon7iuc9zUiQimVJkKJlDGZIp80zmOfPw8pq9
5nlMKhkSEUmmMkSJCH2+v+7aa92z99nnrHvuvcfuWas9oKaiovLcTUX1/1Vo
UXtUX/QM0XVg6aDZf5UE/vB9b3rbPuDUHbsAGRVEcCmbvWkbFxSvMAx0slQQ
EgMUeaU2YXC+X/81bJNC+E17F2Ft0mD4SSI7+E8p4enz/HELNw4H0VSj87NS
gmB5y5VZA8DfpuxrTV9KSJcMjp5ivQLtQl/lOE6UEGd/zN8/36YIfh+0JSeo
iohC/LGco811YGtN7KWTKSREQtdO1HKrgENm3e8jTgVEFPsu+9QaVVj1DxSJ
pM0nnpfvlzrBqgFhk1WJzpq5hMrdbtLVbxrAm/Xs9bsyEsFAE85p1qgJ5pOY
4Wl2EhGowf6XbHELHBi6ayOnswnfX3wNZ9vuQNEkafxZWSYhl/hVVD1BB0wK
UsyMxDKJPZezU+xsdMHL8+NwZGEG4RFx2qOSWw/YJ9p/ulekEw0cR9KTawyg
cfitwIPvqUSypcudIkFDuOkMTI/dUgnXplGWpjBDWO59RyV+KJXATFO9vhjf
g2bR8ImVqGSiplLwgQCrERzKfG68JyuRSNjvx3PezQgS7uvKxa8kEE/1Zwfk
vhnBs/O87lEKCYQUHVnepPEB9D91pFfeiiPKtcSF8ixMgOm8ksFYTAwRlRc+
XvPBBNrlC45V0MYQdts/415fMoVuyuPPgk7RxLnscvqFw2ag9cPsuK1FFFH8
W3pOrM0cSNp37xvYRxAF/e3cslIWMG7IRbz7HU7klaiqaORbQMH+5YtFT8OJ
jIfGJY5RloCu35EwDgojYqbCnzQbWYFHecKWHSmEiGjlzu0fsgJ/5pgK15Fg
4nlazvDUdWuYvnhcgIktmGgrHDvqw2UDAN/OnY0OJBrMVzxyqR9BSlXqemi/
H1H3sTqhFHsE59t+aUyJ+hE1Cs/Kah0eQer9uqcFob5E5Yl9U2+/PwIW23di
HDo+RPEEr8LPvsfQx0WldUHAiyi8OWXwl8EWRDWH3s2neBIFTXlP91y1hVPr
RgwXeD2JvOTzZPZaWwDyrkfcQh5Exh0lJpkMO9isbt9r1OxGpL9iPnll1A7y
N78bfJh3JVKlPhDKh+1B22Kel/aoK5HEbvhIP8geSrOCmqjCnYmYPof3XrYO
UM/0de1yuSMRdQlbCC5wAGkUFeK5z5GIKN5FGzPjAEBTYaJr9IR4Hhr8H0nn
CQjQBKwZCzoQ/orpCW8uO4JcDP9E4EdbwrfapGzA1RFC5dZWdFVtCR+hM2/G
Kh0hgS4j82vXY8KTtmpr6fRT+P7unnNW1yPCueWtwSE2J6C+E0nTNmlNOJ2N
fHpUxQkcHW7U3t5rTTimakec9HcCWSWahC9nrQg7t6+tFzedgOV23U3hGEvC
Snr9hN6kM3CKpQvqpJgR3hwtJaFcLsBjJF48um5KxK8GYo2qLnDON4wuVNuU
aCvlVuOrdwG1xRvr9PwmBNdpcJ2IdgUhdavc9AkjQpyefi/rG1egBNHwNOoY
EXIzvRGXqd2gue78xqWh+4RNxn1SppUbFH4qcRAYuUe8POLXb3z1GZwa9/py
jNaQ+LR+Qy/W9RmMWLupnokzIH4Ocnx7WfYMrIhQtn8iBsQBRc1nbMzuQC+Z
dFK/Xo+Qpp2Jsndxh56Ts+2tTTqEnL3ScEisO3x3u/XAm1GHUJ0s4s0udQf1
Z17tr/XuEA9aHPM+zLrDuZWIAQem20SY276m/zQ9gN7GMlMqRYtIXLCiUbXZ
wQ9DVY4yahHZuv2KpkEeEGV6402pmyZRK500ENfsARLe918GWGoQ06tn5tbP
eEI0cyN9gI0asfwgQpzlmicoj3cQNus3ic33q/bCRp4wceiIm7bPTeJgWSOV
ToInnNhHOvslS5XArG+y19F6gdATZquYAyrE1bFynffHvCDr1e591srKhJoy
V9o85gUnY5UGRcOuEyanv57msfWC8vgLByaPKxERM3aX3D57gdKf0vP97grE
C62PvjEbXlDHEDAeMXGVILWjN4WHvGFN90iaqsJVoiGD9tZnJW+w+mwdossr
T3zTj7OEKm+YWkvu5lm/TLg1sqf39HlDnMAn+WSnywQLb/SgwYI3fA61asH/
yRLYWLisB78PTOy7wBV9UJYI0w3iaAn2Ae69fg2h2kAI1tGrqOX4wIZe1zrT
BEHUHPH3mmj2gcNTjgG8HAQxOey9SL3mA5VaR58ci0SE1G23tsuGvmDZ2vLw
crM08bZqc73f2Rd+kXm2uw9LE/c4nMWMYnxB7RWfV/Dji0Tw4JME79e+YPch
0eS8pBQxrvnIpv28HwzI5dx+OHWesC//kaWp6gfFprvsGu+cJ/YdshqZMveD
T7JOM+79koTke3N52lQ/sJqf+r3RLUH4qxlxX93nD+Urso1Oc2cJntKJm4MC
/hB7X2ls8+lZovSgoZ8J4Q9bQXGlKvvPEp967v70s/MHnwOrXzguiBPiN251
do75gwJ7wNxrjTNEe+HAlva6P+zfv49xX6IIcYdJQ+IbawBQg1L7l6nThPdb
1WT6awGwIdBQOekvTAwqKdoplgWAp72Xm8QuIcKS3Jk7/DYAulj3OIuanSSo
9l/9bD4bAG4hR6YW3p8ghLsuKwbxBEJD8/00rUpBwk0B8b3xCwSZDlG4knWc
YCXVauqmB8L21972IaHjBIlOOmi+LhDquPZ88SziJ/o6Lqwy/NzBjgYene3H
iBNy4m+UdYPgZIGewSYrHyFLt65/9GkQ7BP7PaOgxEvovWr+tRgdBHQikjq+
dkeJWGX1I2HvguDEf/mXTw5xE3u1HMz7ZIPB8GJ0TeZnTkKAg9hO1w8G7+P9
31hEOQkYpouwdQmGh7/ONsl5cBBP9eKr2SqC4ZaJ6d8n5w8T343r9t46FQKh
j/y1Q3vZCNpTPkkn5UPArMT9XYEsG8E/pyz+514IMHWck86oZCV0rD/fik8K
AcnNyRBSPgvx5gl1zsiBUKguVylUaWImZi++ls4XCYV2DpO72srMBM1mZLfL
tVCY8L71/UfNAQJ3F1zl8QoF/o4In+uMTESRv4KcwWoorMRVfdha2Ue8UTz4
UZz1OXRYJtP9ldlHzDIMW+4Sfw5v6mvfLfrRE3zhFlHpZs/hOW3p/ouie4mI
+NCvk5+ewyXXY649xTREkc6tJ+Xrz+Fe1q3SjSM0xDRTGM3l/WGgmszjyh20
h6Du1Y5nFQqDQssg4Rm73YS05vcmimEYsCpW7V2y3UUoVHTv47EJg82nDW/P
blIRWofLNHzcwiDaUPtUrh8V8fij86xmYhgk35/yK77xDyffZWReex8GzHu3
frGxb+I1Dcu39b+GwTRHVuEdzb94J++HjJfLYdCw5njqXfwGPvkl+b84pnBI
7ZY3KDm7jnMbi+tfVAiHYAqjoF38Kr6UHu1D1gyHT4LfRSL3ruJtnzfIPPfD
4e4E76KG82/c8nb7n11u4aAXEnDR2GIFr7t+J6KrLBwMxn7jV21/4mEBjVVY
czjoKMdRdm8t40YdAp8Lu8Mh3bKPoSxgGWeAH6cjv4VDZaXAwRzyEq4j4d2u
wxsBLx8qjDDxLeKiNt/m3opEQOFwWus/vQWcukCFBaQjYC2b1bIjfR7PO8Gp
L6AZAac4XzIoS83hG5yFf+YDI+D4jHkOd9ws3q3FyqsfFwG9EsNDTzZm8PRI
R7nerAgQfPt6uNNgBldkvBxR3hQBpf9R35iSmsYTqIZOu61GgIDTLXYZtknc
CiG1pd2REJvwwNUz8isu65TueO9gJCQ5KR7azf4V//7Lsl1eJBJILy9F3xeY
wKVndukfuBcJP6r9aIKNxnEmARMfD+tIEFz9KMe09hmfMHhD/uUSCZ3ia0Ny
wp/xwOGYP4OxkdBk4eI1njKKf3x7OiL1bSSIXtx4cKltGM/fF17FMhIJnMKt
z3M4hnH3q6tj3rOR0Pt3POPuo4+4UHPTabPdUWBOuiWkIjaEO1I0289ejALP
lcFF1eEB/PpyzVyGfBRY1yxWyqsM4HyifCzsGlHw9Sm5qbz9Pd6Z811vwyoK
5gq6jxY39OMcic/+tGRGwQG9s7QMg724OP0+Fc2yKBAqIc3L6vTiV59EZcw0
R8HuDMT7caIHd1DPVWH4HAXqud6V3mvv8IH9/ZmanNEQ4NGm9zbjDT7/9O7G
zMloCC7ofbB39DW+Z3bmhtOFaMBeKJvmHHmNS7ZtbiSrR4OKJN2YL+kVHuFy
4uZsSDRMSVXuot7qwPO+F2c7JUXDJSeb25F3O/BmbZlNBnI0mGl75dq2tONL
kqo5ZzujYe7OTY74uDZcZeHplhN1DIjaiuwm2bbgxjp71BkPxsCr06/0X/xq
xl1fhZJSeGOg5kqz24EnzXh+VoZ6GxYDGWLPU/f6N+H79d7mMj6JAaOeNwnX
Uupx/je3/qX4xMDN0Bi7yt46XFp6QuNcVAwYJ8Wsl9HX4ebsa/+0SmKAMZ/e
oTugBu/s5tNKnYsBosBCpbGjEh/HyORzGzFQRhUXO3SsEl/LO7+rfW8sHMpL
eGjhUYGf8FPM/yYYCzd2/RK3VS7HvQk7agmDWBjb/fVP56EyPKlg+1a7VSxc
uJzLrR9eipcdCSi45RoLrq+LVsOZS/GJtRfaLgmx4Gl5/68lZwl+qfhlYfv7
WAjou30wK7MQ1z6qtkf7ayyw9joRN3sKcJvgT7e/L8dCqlRZeNmuAjzVdHnP
gQNxEFZ4fnvIjoxv8x3R0b4WBzEP9lu3x5FwHb9SUvatOLA5ecmHfjkHr1q4
trryIA4OHM182amcgz+qcQwP94yDh6v69+TYsvFJ9Q8vu2rjduZZ2Temvgwc
ah4e4uyKA9pFLZ09Shn4Cz6a+yZDcZCE9nCHvkzHtRYktnf/jgOTqO9H5rrS
8Fe+4ZJINB68EwpvZC+l4CcWhDyDsHjwSP17opA9BfdUb3r3UTEeFJVk2ENk
k3GM74e5g0k8yIvNvZcmJ+GF1dfTilLjoSDy6RZRF4/v55tc3CqMh5fHOhu+
M8Tjpr7O2PX6eMCjazov3YvDj6nnDc5+jIfUN19V9Lli8ah5OiZ+1gQQpQ0Y
pKuPwpfVUnRsjiWAe47jVr5YFK5SfSG3QSwBzBlfnjyaHYnT+T64onM9Ac5J
tTf8exGBO/G2OkX5JICMh7DFdkUY/sHnTudEZAJINf4SkpULwyXmlw+dTU8A
hk4lMnPBc3y+iq/kbUMCZE6z3rPaHYrrq7nN0P5JANr9AoNvlwLxuqpD5zVp
E2HVtp5uSyoQ5+At8MxgS4SP3fcmWHwD8L65ER44mwgWezI6n4j641d8Lmo8
NU+Ex+zldV0UHzxtriftpWMifCo3S+vn88G3b5r+OOSXCP6Jb6PfhnnjlUdj
A0szEuHzV7txThcvXLhqpWnuUyKMKf+Do64e+PUNhrnL33fiq2u/5jN64NaY
4KGktUTgcLxKT5PmjlOaNM2usyTBduAdIi3lGY6/qjhYcDUJRM/nJnLEueAG
+9/J0GgmQc9R3Qpswhn3Up55cPdeEqgcEptYFHfGO3sP1zC6JoHi6O+fTiNP
cbVhx3tWpUnQsXtUtMvwCW7HHR7c0ZgEaz5XRw6/dcBj9XIrjr5NguJ3zOJ8
mAP+aeLjvnczSVAu9JuRTtAeN56TLhPjeQHOf5wuVvPa4v5n1Ef9hF/AZMPN
lybZj3GytQXd+H8v4LHwT1se8cf40q9EnTC1F7Ck32505foj3Glzc/ey3wsY
iNXy5VC0xpPwQ6LXol8A1XQJ/s/TCm90P6Odlv4CNHv3NhY1PcT30Ojl36x/
AV1K6bsvKlrioYyNGqU/X0BMQ4fXuUgzvPjGoNs+qmTYfNSOcS2Z4v3hP0j3
GJNhmqt5gPWmKc7BzrfFIpQMDieUFoaOmuDpRz2ybO8mwzXWhfilaSO8zSD+
3WvzZBC8xy5dYGiEz6SXrB93TAZvbTs5yuf7uMjJCeX3EcnQdiPqOzF1D68Q
u7wq2ZkMa6+8qILZDPGhRzp8IQPJ8KOROzQ0xwD/W2arODWRDLV1A4qqyAAH
qczk6K1keCiYxpv6RQ9/BTRXV8+lgIEy0+qPOR1cnCKbanUpBXQ2if7np3Xw
mJPu69M3UmBMN0vU2uYOfo/pL3nQMgX4hmTX5Ohv4xsjS8zV2SlwYezNbVlb
Ldzghqj52fIUmKeScf86pIl3tFi05ramwF72ZMEmWU08MnfaPmE8BUKfejNS
+DXwGBmrBcSYCnwDiRIEsxp+7TcDlxNbKnBJO0vYR93ENwvJ8hVHUqFLs+/n
6pGb+D3+bymiwqlgy3qq54GkKi5Kb6TGezUVCqeT90QfUMa/tFA/01FJhfKL
bx2G5a/jUS5p5FjNVBhqY9I18lLCN36M7WE2SgVqaro//fsV8ZcfbldSeaRC
ZohlI92tq7hT2J+vmH8qWBweYNUql8dFFWOZnz5PhZsfXr6m4ZDHo+rfmy2/
SIWnj/3GDn+/ghtk3uCeqEkFSV3Xwbl6WZxVb1HhaEsq8KStOp/GZPGOwyH2
d16lggj1q5yl+ku4SFBXd99gKsTO0TFXvwb8zyM5j9aVVJAm8tepuHGcfHqy
4N/fVDBipbLUvI5wvSnPYZndaSBncWnQ3BPD27SbJCgH0+CLUl6IxD9pPIyQ
mc4UTYOn2pNnqi9I4ZfXP7J8OZ8Gqn22RyLC/sNXSx0JHpQGb3fTf/u5eAHX
PVERF62UBoo69Kp/q87jpxjPKvmapkHArrtPd34geIMks/FV6zSQMo+xEaGW
wDV0f7jvdUgDrvyHN5b9z+Hu5IKKQK804D7mbnkv5Sw+dE2Y/3lyGrCJ/H02
+FEMt3pEj1Sz0qDYR26RilEM3xM/e+tgfhrMnfMt+HdFFBefzQ6JrE6DrX4h
X81WEdzf9/h67Ps0OPbZdpht7RR+tJCa7fZIGpxULUC7b5zCKQNfRLkm0iCH
64/aGbIQPi6QapT0Iw0eF/9RG7c+iUu1cvek7kuHlpATX22FBPHu73+/Gx5M
h70pr+mWUgRwI5YRmuMc6TD5KGV2hEsADzOMl8kSTAftGfa1eK7j+Oy/Qzm5
kA7yDEc8x4hjuNvJ383mV9Ph6yHG2YIePpztxvtPp1XSIemEhZmOER8OyREs
hTrpIGUjVcotxIvHYQfcSh3SIUdEVYX2BDcuarQYZ+uaDlamVkaTj47gbUFv
yyS906Hk6KzJnRYufGk46FtFeDowH/CTd7ThxBWe7tWszU+HPbO3Wl222fGx
1Blrl7J04Hu4oV5vwY7bdXYEopp0EHNqvVHw6RCeetinqfFlOgTH3Noj+ooN
/1O+S6RtYsdvs2VL2SsWPHR0XN7nWzp8oBo59ugmCy5A02Qov7RTn0IuPoZP
B3FVDbfYzq10qNVSO12wzozn/NygfsuRAYKz81r385hwg5hxTkveDHheLpY+
MMuIc0h3iO8/kQEDbYnhdCKMeKBHuN41iQzIkZ5fU2jaj1syC9W0K2eArLcW
bxwPPS5AYew10sgAX/3XnXef7cVHb/2a2a2TAeYGK28OTdHhKikNh2RNM4Br
aOlUby0tLi6q+ajBMwPY8pXNT0XtwWd7pf3vBmTAybSTVhSWPXiaPV/K5vMM
8KIXiXkStRtnqZ97I/0iAwoo/ZlqadT4ipKnUGVlBhw8c27wwBgVnv/DhNBq
yAAGUVFWdjsq/EGkstbvtgzIzmyBSgYq/MMwh7dEXwZM336+xR60jarMij4X
zWeA1bPAXp+cv8iGMXpV5VcGXNnLLNSzvoFOlTgxLq5nwF2jgwkaqhso4Y+c
jAhdJqjIh0+G0q8jF79PMaRjmeCeNHpcOG8VSZ5uKbgqlAkuSO2J05FVtNCd
0zYtmgnre0+1K4f9Rnrstj8FsEz4YmE7Iuq9giCLXiVNKxOC7StbyiN+oj8K
P4zgbiYUeim/W+H5iUrm3zt/vp8J9dfn5BnzlxG/ZGouz6NM+OEueyCoZwnt
ab1AkxCUCaklTAqcjxdRnTE398WITPC1pMp/VbqA7PdRSwzFZcLap9xTF/7M
o+mbbw3YszNhflC9rTNsDnWO36+LaNrxo9TPbv57FvHzfPre/DIT+sbyjz9T
mkWutzU4l7sz4bppfhZn9gw613fF4cZoJli98L5iaTqNElsFxRk2dvK7YRli
dHQSrf57oSezKwtOqyt89Yj+ilQx9hDzvVngEJqfK8P8Fe0pp/3eyZ4FWu0j
nd0HJpBV9kyGj0QWOF2/dtzr/DjqnNDvo0hngW305JeLIZ8RP+8Q1eSlLKA4
BDqplY+hwdjOu7KqWZBQIc5azj6KICD38D/LLMAG3RZ6uIZRQvsxeVG7LLDL
pHtWb/oR/d6VYHfXOQu6V9LmI2uHUJ5TYG9tQBYELpq9drceRKyWFkGO2Tv5
LY2lzzEMICvS1+qcgizg8Aziq3J7jzondWY/ULLA8zzdbduVfuRy97rc+dYs
yO/pMpOa60Mf4ttsjbqyYD9fy9Pdln3o7AcsPbI3CwZG9/6SXepF0ypn/i1/
zgLhUCc28u5eBEFZZ47N7MSzNwxVR/SghJc8uqqLWcBQP9AnIdiDbgBTdeFm
FqRX9cjN5XSjqrM/HltwZsM508EYBvJrxGJlkpbAlw1vVi4V+q93oYd5n9+9
OpkNq6lLXAzKXYj/eI+I0IVsUFOcNb1E/QoFsZVMT6plQ6zbxN6DKR1oWvXU
IbY72cCZfWDz8YEOBCFply8bZsOVXm5RRq92tEITkZpmnQ3XBbJaqW3bkN7a
4zt6wdnQdufA9AvrFpSYdvoJS2Q2hOXR+BT/bUZDSpORHfHZEPxGcYUqoBmp
p2q+Fc3JhoSh/Z2Q24QUrknBv+ad+Pcz1zXpG5DPryXdss5sYFMKqYm6VI9a
XuQ+NXmXDXFYFmePax1CP7nK3n3KBssYr9bWXbXoXOKWYOpaNnxW1DHTk6xC
1nIVshrb2TDe+JsGBVSi/B9W+ntpciCvprjl1JcKdPLKeJwNSw4MyH8uq4gv
R9wLLfsvncmB3Z+fcegJlyFawn/5y70caHxYvL9JvwBd/gZMMWY5MBTcfvrN
jXzkHrkurGiTA9NUjXTbl8no74y5UalrDtid8WkvupiLlsKUBz3jdvQcqbjo
9bPQGRnalQspOdB9jORtbZ+JzKcamOeycqDOe+GycXgGmroorqhelgPStryC
pcNpaHiCpf54dw5QsrxMqK1foMMhrz8Ovs+BBvWf9KrbiUjjP+/VoJEceHPv
/axtYgJ6F/RbbGU2B9wTQgXjqeIQw4XC66QfO/ENkrNXX8UgxXFjM93VHHCU
/l58Mi0atUkOpbftJoG8OO/RgWeRaNfnsEbHfSRwy7I8qeoXgfCAa59EDpLg
lNkDqlsp4chFgnp9/DAJPjja6EBnGKoerTkUfZQEj/tWvt+jDkOrfrbnrgmS
4NBMaYtwUiiSPCdyY+s0CSzK9k3o3gpBjz5NWpScI8ETrRQ9owvBqND3hf+D
iyTo4Yks0TofhEJezdblAgnG31N4LSAQWTJILi9cJcHWQAhLhWUAUrrxTPDc
DRIwNYtJq1T5I+GIrtsOWiT4ez5fXvGYP6IfOBRac5cEue/ZZpuy/NDsYcOW
bSMSbGPO3Z2X/dDLO/mrspYkmGBaznVc90XZL9aE/WxJIP3dT3imzRcZHQ+N
POBJgi+Y/sidaF/EnyuwGRtGgpOSoYYfs3zRrnlr8U+xO/V60Wep2eyLxkVr
jfhSSEC8S0McM76o6RFtvFE2CajMGb2lDvmhFMrNt6QCEtxnPLn05pofcltL
2rVAIYHGbapz855+SE969vzZOhK0LOSt5zf4IeQqYW7fSgIPc6k1wb9+iLvJ
Lbm6awdb1ww/vOCP/lJ39W317vhLktVItPJHw3KH6GQ/kmAsfIK1Pc0fVfsb
yPiOk4DuB/nVrm5/FPeabN01Q4J9GsWCpsv+SOum7JDaKgkulheHMbAHILbB
IRjZkwuegavf1g8EoF+cAva8DLkQ78zDsJsuAPXpWufeZ80Fqcmpodp1f1SS
UjOaw5ULmdZXD3rP+KOwCRqW+WO5cPTVRYfad/7IWvCmvPipXJhPpHQ2l/gj
FdMkJzvxXFCLLHq1GuyPzpBnCqv+y4XwO/zSNQb+iGHx3NdNPBcWk/aMWIj4
ozlxt8OX5HMhn0blocUPP9Rl+0rJRzkXmGG1hCPXD+VVsLm/0sgF1bUVs35t
PxSwrk9h1M2Fjg+XtP5u+SJTjDx7834u5AW8/28p1hcpPFvljjHPhXO1me8O
nvBFJ1su3Rx+lAtN7HljjTk+iJYmxOfo01zwvfpJ8A63D5q6OlR9zz0XXv85
Zwxe3qgt8Phitl8u9AxkGfSNeCFP5hotsZhcEGlq8HPU90SG6jRBti9yYZ+A
xoXrAR4IYlQbKzNzocJgMl0x3R3xfkz89Ze8Uw/Zbu4c9Wdo+8jMSSjLhcPH
SbYhuCsa1Tun612TCw5Vcm/o9jijujTXsM7mXHh+O4Y0kO6InE6yrav27Pix
5Dgj62uLbpvrn4kezAU/26/3tr7YIKmCPMOPY7ngrzkzVPfQEh1e+h3NM50L
SbwSeutsJmj13KUuw4VcEAUlvs9thmjAPng7ayUXhIzS+i8evI0oVYPnvv/N
haqm8EO+Bcoo6i+/iejuPEjNklkYbZFAtrhV4uN9ebD3mDD7GeFzyG6r8XXU
wTzgy9j9dahSETnUHdys4MiDCo1bvPmJmsjR+b7IR948SG4/zJ0meRc5SZfr
/j2RB3XzJly9e+8hl3XaEB7RPKjhlz/SyvQAuVZp1xPn84Dhs8haeJoJcnuS
t2CI5UGbSzpbboUZcr+wyeN9OQ/IWmeGbS9bIM/fyirZinmw56V64V1kibwo
KW6dN/PARChprTfeEnnbLhd+184DFrnxUX99S+R77vJnBoM8sGu8csS5xwL5
L0cdEDPJg8c/khW4NsxRYPE0cdMqD1ZU1S5yfDVDwdZSNrb2efBev6XpRIQp
ChENTI12yYOzcWqla4wmKHRhpKfSKw+q7Y2/YHcfoLD8M7uGA/OA3s7wGMn3
PooS7jU8Gp8Har7nL9vQ6KOYb/wRkLqjfxgOerTfQbEku5Z7OXkg1SWZZGmt
hRJOcBzPKd/ZP7FE126phJKmzNRf1eUBKTdP1/STLHqRWes115oHqpPjLXWH
zqPk+4wUxtd54K/qcdQ2lg2l8utPivXlQTFVmrRHy3GU/qWYTe1jHvRVDvQw
dP2HMlOp5ezG8yCz+luii5gsytbXsI+ZyYNx27t2A81XUc7R7KyqxTyo7+87
AvTKiDS6NjD8e4fvtVMqOnAT5SVdo93azINCBpq2UBd1lK+TeIF3DxmMbud1
6XVqokKuBeNL+8nQOhZM+3TxFir+iMfeZyFD7avuV6Tvt1FJXNhLH04y/JWP
MK6u0kGltybWcvjI0OC1LuqgcRdR2CWFuk6Sgb/ghH1etR6qGPDRnhclw9AP
maBjk/qoMmrQn+kCGe7UFRj2mxigKvVT1eKIDKY1/ZXUdQaohsX5m9oVMkTt
PfbIe94A1fW+4bRXIoN8ffYFfM0ANYQdVYxVI8Pqon3JoWED1HTDxqn6NhmO
UFIClyIMUDNTS96IARng+HkLCq8BannLOrJlQobcrNA/IZt6qC34wX4+azLc
L+1+e+T2XdShVCkj60CGDvqf2zdv6qDOffSWRq5k+JN0oElpWxt1vbqT5OtN
Bu/G9Y4XDlrotX/+G1IQGSw/33L716KOumlVzyzEk0Eg7ohaym8l1NOedvdA
Ghk+zJh+vf1DDvV6/wo5SyJDHSrTHCsgUN9luQb1IjIwiz39m+gsgd5Txy7a
V5ChyYAm6BSZB31onj0aV08GVZk7J7/6HkRD7tI3atrIYJBi2MgbKoaGieBn
n16TgY8iJnk3XRqNbI8WbfeR4WLLnVBDU1nUdNqmO+sjGWSSHMC1Sx5lalMv
XB8nQ/wpAy6uNkUU4BO1f2WaDBPhMkfYrqogq9ITwokLZDB2ZU/LSFdFap+r
FGRXyHBOTuTl1aGb6D8GJZNvG2T4LPHomVG9GuK+OOoTtisfjHWfvJpRVEdU
xtaZ/+3NB373BwUUN3U0GbGrdYwpH8qaG1IHPNTRq8bILz6H8qF48aFsj4E6
KpwXpDrDnQ+KAsWjszzqKIKz6uh7/nxoedZSf79WDTnIKyLnU/lw5ejEGR8Z
NaRj+0mHXzwfprivPw1PvYkg1crp1YV8+B6H5t7MqyKBt1TxNigfsot+dTvz
q6K9GxGVh6/kg/6m1uc2PxW0cELwQ4NiPghevnI2MPs6qnC/xsqonQ+PqtwN
eAMVUELByFmKXj506LSZU2nLo2fDD1V1HuSDUoTV57+sV5CCZERI7uN8SLra
2NrZgyMRQ4F81af5IDxz/mI7qzQ6GFrRtfYsH067K/0nc+s8Wq1R+Jbsmw88
/ivfZTLF0fDMMJ18SD78nFWkLqETQg1sD08sRObDxSnFRP9NHpRx6d+VqIT8
nfm98SR9fS/ytwq/L5OWD+KaH7C3h5Yxy8TjnhM5+TApx/+LxMWGVDvLUwMK
88Emp7DN3+wYOv/7aqN4eT6YPK+3f8IrhLj4h0cHa/Nh5YD/00uHRdG2iuWm
W0s+aIlZjnklnUUTzttcJ17lg+ltLMa+QgK9JIVdfPsuf+cbEH/HV/k8yh/g
17b7sIP5v6V1aF5AYdTlDkdG88F37fmEfOsFZCd2Nbrlaz70y/yKOBx4Ad3W
/Vhm9j0fzjBWszN/Or/zvrToY17Oh2VfHprtXecRf8XWUuVaPsQdf2TmQCOJ
aL8+P6C/nQ8nFBwPbvw4h+YO8IvS0hRAxO21LvrXZxHFTN5Cg6UAwopH1dKW
RVFczFDAX44CqOQd72epF0GureakdN4C6Ar/PZVeLozuLW12XDtRAI96swXU
F4WQPM/zqSWRAhDOdTkt6HQSCSse2xMnUQCxa2WWwWYn0IEnZfyEdAH8vNZG
XvAUREM9g/ohVwsgaeFaH+vwcVS3ZeYmqVIAxxgOFeVxHkdpwptJIxoF8Hj6
6P4eE37keyu01lOnABTus3yxbD+GzL35hk/dKwBNs4TT5hLH0I2S0j89pgWw
77PhVHEpH5Icu3LY0boAuMis9MJX+BDH/sHzvA4FoGNazu/ay4u2/jPT6HAp
gODm1uVCWV7ErrIpkhFfAPDfYcaT73mQuNFzGveKAojbSHanC+dG2I+hR4tt
BaBM7xcmUHQEXXPiH9PtLwCmXRF35ty4kBaNpeLrLwWQuewUcwrnRPfCyisu
LhXA58eZXGa7OdCs5vC8zVoBXAnLZTptehhZH/nHT9ouAGPj35sK3ezIJVvh
OTtjIfAXaqibJh9C0XUjJr9OFUJE88eyL9dZEbcnVbLw2UIYqq2TF69lQelX
Bd8bShVCfwC7frgwCyrss4Ie+UJ471L4ruzgQdQ5u4uz4H4hjCumN5AOM6EB
WyWfI48Lwd3r1hKnHAOa2I5aDnAvhOsbQz7V8fvQYsDY3T+hhbAVvfrnEic9
+ssm1GX8ohA2MffWhy/p0N7URxcGyIVALRnrUZVIi9hO16ZfrimEVH9XgyN+
NEj0kooz32AhGL/7Gt8asxvJvImdCZ0qhEfyIDRGoUYKt76ob/3a8ZeR+q58
dBcyfGgnMsxcBLp+rudc5KhQVHzCaKRiEVQeXmxaWdnALpqIWXs/KALDgMFa
lPwHG5Nso7J3LwKN1un91ndWMS/q2xEPEougiqVfs/rICibUs3Bcq6IIVAfP
HAtaXMbevvAsl+8tAoOP1QmczT+wxxaHr/43XwTjusG2b7fnsGBurfnI3cVw
aik5yLNkFtPz4jvPcLAYGhXr0wJWpjDx799dvY8Wg7TaqzHy8Fds983yjs3T
xfCnz+UPL/ME9qHy2QH7i8WwTK5ta/AYx0hHFbUX5IshdfJ8y2WHMUy3ysVc
SbEYNhL08rjmR7GDakUuucrFwJsnzFNjOYo5+bClPdAohgMO+h/an3/ClOfH
vo0aFoPshaO7/jMZwX5W2zp3uxTD/vndfmX5I5gS1zkd8cpiqAyQYBYYGMcy
nZakI5aLQVJk6xrZ5jNWwzJeKkxVAs+lmiSF94xiPXnvhFuZSkBkpqnfRXQY
m5ZtTNfhKYGlf6snaRgHsc3hQq6V0yXQonjnnGB9P8ZimxwRLF0Cfs8nfuG6
PZjQ/tB9gtdK4J9l98ss+i5MdDlA6PX1Evhj++3BUcNOTGLQR/6RagmItnz5
KFjbgeEZrp71t0og+njjOxeXVkxT5uGGpnEJCJ/8F3G4sgaz1LdknzMrAcH7
vO+9vldinl4W59wfloDALuMpG6lyrPi1mXmeXQnQ/raOMhctxl7+MPUlHEtg
XsTGPaiSjI2xmqa/dy6B4LsGxa66ORiDrvHwtmcJgPFMeopkCnbc/cFqpG8J
aI1AfbxzHCadacRyKrAEpD3d/zzziMBM5u8pqoeXQMzTEq993zywFhf9mpyU
EpiQPskrz3YF+5iq9wHLKIHp5/QXOzxVsaW2uz97s0uAKnON2ofLCONh1BXe
LCgB9wEvO5ECd8zxhXaCat2Ofo8aj19zMva8+VbFVGMJGPQUn/pzPQPLntLq
c2otgdQu6HpHzsHen9Hcl9VVAuNXR8cTxouxuZsaJ6S7d/oh0WI/UFuGUTuo
y77rLQEbByUDhZ4KTKzhptP60A7fvtP0DZn1mC6taunx8RIoPpDcNFnYggWq
qHxXnimBOFPe/5K2OrCqmOv8joslUJW0Lm3Z8BqbHlO8k/57B+v6vnvh2IOx
nbwW8WazBPYYcyf+UezHLllf7VrdXQruS4XfLmp9wJL+XZZWYikFLCugHB0e
xbquyj625ywFu8UhT1vjcWztOeSl8JUCv7YSkX53AlPjQ1wroqVgdfx050rq
NOZuKqN29EIp1Aft3d6/MIsVFl/cueV3+G8IHDHSnMPoL13YSFIqhTPOfxf1
0BLGtWbHd12tFJKbp6InvZYx4YIy+b/apXBvlDyV9+Endp3zbORt41LQfXz7
6o/U31jo8mkRdo9SGNcR+8Pe+RdLzjFXa/crhaprfu4P7baworu5jnahpYBr
5U46n/2H9bw60d6XWAqpIG3Eb7oLsaQf03teUQoszOk6rMdoEL+2gTdeXwrv
qHzmFvbRIgmmlLyF1lJ4XWm/TPpBizScuNeUekvhVn9UBnXGXmQ/HX85b2yH
j1NoI/PMPhSjdjhs73wpeF/SdmXz3I+GhFlOtdOWQfbBc8IP1RgR127GFo9j
ZdC7YTInTmJEz1KLEJV4GZg73t2PWBjRJFKrdsPLYJPGW+bEp/0oJvj4Wr1c
GdRP97MW/duHFEZWJLeul4Fk8b2k+hV6tHGq4zGmUQY/L19aP129FxU4xhY7
65TBnreRodOKdIiWz/3GEf0y4IofSRz0oEUGL00Xa+7t5FPUfkyrkAaxsEuL
bJjt6Gs0qjN8340cyj7lODqWQerFrbnM3/+wd3fa5TlcymCoieeTwsctTIi6
cKryWRnslXYtVCz+i42oPju+5lsGs2IOjwOwNQwWj6XYR5eB9xdHn9qBOSw+
eh9+KL4MBGI9+CoYZrCf2K9PlKQyePNt0/Cn9AR2fXLEWSO1DMLG1Bio24ex
rKA2rpWMHT7PoIipfb3Y9rmC6sicnXyKvbBW0XpMezhaW4JcBlS9rqc/ZGRg
JR5ua32FZaDqqPZg7V4ntu+USczj0jKwsWJyF58ZwO733DjPUlEGJH7+8ifh
n7G6J1LvS6rL4Ep02fzhmEnMqoOeZbmpDJjwTt8LBxex/vv5IdbvykClg+ya
dPIPJrI/WuRAfxkUsc+MCmptYL6lrq8LP5TBP/0Vf3/HTUxq1w36xdEy4Pjg
dVxXkQqFk/4jhXzZ4Q+eUZGW34W+3+C7emaqDJ7k2N9fuUiNkpKXvS3ny6Df
vi9ojnYPUlloaSH/KoNJFh4BvgIatAuLoprbKINzjAdOLIrQIUrgA1yYmgKi
nVJ0fM/3IuOPF1zM6ClQnMIpodlLj8LU7rxfZqeA45IHW3XXflT72lXESYAC
b579iqs/z4imr6R5U5+jwLIg3TvlbUbE3ND2KZCggGGtZrsGMxOS/m9WklWZ
AiQOx8D6W4zoQfH+kMQ7FDjITnfGtmk/2rDkqdY3pEAE24zcnsR9KOyU2NRx
UwpwBCfWGlygR8N0Un99LCiw/XDQJMJiLxKchoOzVhTgjlv7QRNGh2rS1VC+
PQWc1LuvPMqiQXs8dNSZnlIgkLxu1hm9B93QNzKzcaHAlY8/j/DZ7UaTRxyi
Jb0o4HdFavD5OhUS23Ajx/hSYCHs5yMm+Ic5Dfk1/wmgQKf+12Jn403sQHT8
Ql0YBeytJqlvoFXsjm36bt4oCnyjO/a3+9dPLPMmmdMjlgIuLc3J12V+YD/E
KGJfEyigCsTT9/GzmDRTvZxcMgW2RJ0ktE5OYN7z7To5aRTYMDFanTwwhL3r
6n5En0WB4PrEPyefvcK4cgf9LEgU0LZ0T/sgloUZ+Y2/eEumwCLdYHxUXyVW
+OBbmVjRjr9YBfFDYa+w9cs/X4WXUqDsmq7gSlAvdoX/7+df5RSge5z8mO9P
PxZKtWdVs5oCstns1S9H+rGPYwwMVXUU8E0k4cadvZhA/SF+rqYdPcGe9z76
bzCrxKNSLq2UnfP9RPP2SAtW/fSkyljHTv8tbtlE/ijE9miLG0EXBcSXeL9P
c6dhKhcuOqW/pUDcrqhwI4cmLJ5NNmxPLwXiA+HNFucbbPKnYrbxewpYLX3u
kED92NMi3T7hEQoMslHFJ1wbxpgsrbYXv1DAc66cOeXECNaR6XsifJYCIQ9e
asYaDWFuo8kqEj8oYLexbbmQ3I8Nr+fd8/5JAXkfqQ9UfT3YBfZKh4HfFOD/
Wo53fXyNRZxrDTyxToFnzAxeNIId2ILKu+QnmxTYfaLMwvt1E6ZgMVLa+Y8C
DCYDA2InqrBMv5kOzt3lIB85OXXMqxijyvw1bE5bDpLmA7yzwtmYbtO/xVr6
cgD5wPQi03is6tP+3YyM5TBUohdNre+Ksa0fPqzHXA4MqQpJ6mue2Juz4gTV
4XLInDavUvuZjgmpYOo3ucqBYxsz7tQhYd7mCibpPOVAZZ/+d+B+PoZlGDy/
IlAON8Vi6FlDirB8tvDP/mfLQeFgxmPq+ARs79kXvz5KloPBUsfrrd+umJFy
Lt1pqXIwLX53aroxCOP2bRZ7i5cD/+EZY6GwAux9w8db1nLl4CBpWDF8qhoL
Wlt+dvD6jj6bODkCb8KmWbcj790oB5nUZcOc082YrPg+UplaOfT1TIdMqjZj
G6b8PZq3yyFja8O6Ia4RMx9W40swLgdjGmNf2vFSrGNVT3LOrBy+GIUp0nsX
YvysFgrYw3LoeSwa9TMqBxtW8rIZsy0HJ4n9TNnvY7ELps+9xZ6UA3Ue+8UK
jedYhHdinLvTTv1SUoT2nPfBFOvLmvg9ykFE4fBY7CETLPtj43tb73IQ51Jl
eIAuY9Srr2fb/Hb8f71Y4B7zEKsRnWQ2CS2Hunt3F/Pi3bFTqWyG5MRyWLzW
K/zTxB3b62W/S7KiHPb/oubd/uiKlc8pHntbXQ7amc/5Qp66Y/c0+C4Z15cD
U+bDuMZ8d6xW8LV7XFs5xJ9Ce95JuGFWnXxUW33lQO9jLK8a+wgbYHyz3f6j
HO5mv/zB0mGApcfxb946VQGPWqaww7T3Mazw3apzUgX40AawdH1XxN5G/0cx
tK2E8RXjbM81Liw+/Od9Rd0qGK7yfRg1aINVHHSN+gnVUP+fwxZduSYmrnIo
RIq9Bpi4DwQHTz7CppKpHD22aoAIvmXfuuaErZLXhU0HaiGZ8S5Xo7oBdhu1
6DHl1kH9sYOit4v/w1YnRr0rQ+thaHty1nWaGVu6Qme7bdQApJ+n8DT67zKC
tV7qCsqNMMfs5HqgekxmZJV2+zBrExTfckE/d7+Xud5XFmHh2gTuu0ZMvKd9
ZUb+C0xtWmoC/HUtPXMlPRbnbBJhpNsMbqRJXk6bXdjja1Zb9L3NMEx+uJpg
z4HZf/wk9PxyCxgf4JbmK/otk3NVTep+YQsEPKbjlpMYk1kllpuk+FtBsuAT
w+ajchlb9tgzd0Nbwf37K6OuLCMZzqLMO4Z/WqGi0Y7k3t4h86l3hMrEog3G
Byr8rdp6Zbr7OINqP7SBRfTlbnu7EhmGcZ3XCUNtwHWFOs25u1jm2sKL/U7D
bbDtzHlhS7RYpo2OP1hqrA3YGDJUZmgLZWox4ZDyqTZI39ujpLOSK0PKln5e
tNIGRv8S6K5JZMp4OulEZrC0Q2XgbhfORwkyTX4v+j3Z2kFW4I9f7GC8zFbU
Z9Z77O3AyZfdd10+Xsax6H4UH1c7vOJ8Nnobi5OxnrSIfnGsHRh8W45yy8XI
6Kq4xMaKt4PTmWV9G4UImQSdhkGHc+0wKjnULPwqXGbIlIpDS7IdLm6msldf
D5dR9/KOY5NqB57Xg3E3dcNkFKuC48OJdhDoq6aalA6R8W/v/mhzqR3qlSvT
i82CZdr7mLlUL7eDUm60smZykAwsRCUwXW0HarXJuhOcgTJuGx+GFxTaoWZz
tGReL0Cmjo7zyFvFdtBVPEVqzPWX2WDT0cm/3g7T0h0pKet+Mv/xv0gMUmkH
SjclLljFT+Z/kA+kdQ==
            "]]}, Annotation[#, "Charting`Private`Tag$9636#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$9636#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
rWa+o3hOIDszUqMXwl8wo9z824r/A14oWak=
            "]]}, Annotation[#, "Charting`Private`Tag$9636#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
0F8=
            "]]}, Annotation[#, "Charting`Private`Tag$9636#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Q/33H8L/AKzvqYk=
            "]]}, Annotation[#, "Charting`Private`Tag$9636#6"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox["\"t\"", StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox["\"Magnitude\"", StripOnInput -> False], TraditionalForm]},
        AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Off Diagonals\"", StripOnInput -> False], 
         TraditionalForm], 
       PlotRange -> {{0, 10909.090909090908`}, {1.3663448458367251`*^-22, 
         0.9581111342932385}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 2\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 3\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 3\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Abs \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(3, 4\\)]\\)\"", 
          StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxFyX0s1HEcB/BfWolilUuc/sCW6TZ1JHcucabCeVgjTe464zyccJqbZu7U
cMNyGM6cO9cTQyknj6eTruun1YrminCu1GhrIl26uO1u1Vaf73t7773X3h6p
eXHpNhiGxfzp3/VeTTQkH/YJwf4lOPft5G3cnv7f4l5CARcngo9O9Z+Owkng
is8iZRBOA/t++8o5hjPA5T/cR33xJHDPT9ryEfwimEfb9GIvCsBfkqU5dJUI
7HWK/CqGVQU+kEFODoyoA7vIr25o2yRgq7sbMzFSCiap1jXL83LwC/q2cJPf
DfAhB9+ocu4tcIfRbDPu0gp+vsAZqde0gdm/8pPY4nZwd7miMj2wE8wP5snz
7e+C9VaD0qrrAlsoWWefCe+DJc0yQwNDCTYO8wUTwh5wwvFcc0LGA7BdaIC5
JaoXTNzqoC3x6ANnzAYIs+z6wY45POvqR+QdZQVb/AcHwEHdr02ClkHweCOl
P4U/BG6uM3IYLBV4cE+xxEgfBpNj91VTnR+Cl65jhSUWZFPXJok7pQafP6Fl
O94ZQf8ng2io5hF47aQt35o2Cj6oLouPiHkM1pu2W/c7acDRur767GJkPeXa
Tc0aslSQWZ/GegLOj+RZ7CaRC2bnvWvDtOCO8DgqpxvZFPJdQ/V8CuY7N/lc
qEF2VbYlpWwgz0/qscxsHDyhc61STyPvWmC+lM0gR64odhbNIeO2nmLqe2R1
EKl6YAm5s51Wq1xHLi1iNrTuHQNrKhRvSgnIFskHp1Rn5EIlR+JORM5bzG5U
eCCzYoVNTWRkGXP03WU/5Bku5nLOHzm+TCQlUJEZKnFzXQhy5djE7KVQ5DHd
buKZMGT6ikTmGI58xTw9txKBPGLr6jbOQDYTmMx70cgUT4W8Khb5N0NvML0=

            "]]}, Annotation[#, "Charting`Private`Tag$9706#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
Cwc=
            "]]}, Annotation[#, "Charting`Private`Tag$9706#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxN0gs0FPgeB3DZjSgqich2jT0sMoWSWesxbsqzUR6t1ypv0sqSmkUPkdw8
WpnxHloq8s6bqFkmiy0byXqWRe6NvDXCmu6959z7//qf8z//8zn///n+H78/
xf2cjZewkJDQ5H/6f0fVaYehU/uoRkL/a4bfd3fm8MTp/3dcuXSIL0+e+MCr
yqOWPHXiG+NRpfo8PWKtmfceOjwL4ugFxcdaPCfisg96k/t5Z4gD9JZVXMfC
iN+dSj1Lr40iVjmi+eyYSyyxgrfmqa/NEol3ZVz52HSXRSxQ3O3sYJ5KrF67
yJ0czCBuo2805WtnE6tJaFlG+/5MnDe/Ivx8Vy5x67BHw23uXWLXpSAn17j7
xCXRnBivr/OJgw0DMoLEC4gHBEOlgq5C4jVdP7uW8GJiVlr6UJJFKfF8XXBY
R3gZsf0336/Yez8kFjM+tJJpWU4slWkfv8iA5ZfOK1rZwOrFFUdXHWArOa0k
R284YW6vhkzEurwciuut6nV5a/S58TpYyeF0lGEjfEAyu2CqGbYLVViy7IST
bWR/2vR+Xd5nEk0RlAri4IIPpynK8LMTrz9xVeErd0oNhDThMQObusuGcDEz
pSzMGRZRvGq9+xR8+lff6Xp3WEpGT2PFD75QMZjHZML0aUp2CBtOY4sb7kyD
5/UXBisz4XuxPPnFXFhczSc5qBz2eGGtI1UNN1ykdT+sgwNaxKTmuPBLj6L4
c7/DGpvZGltfwtHll34r6YFpG6zFpofgxHzd/Pg/4QlrRVPqWzgzay7q7Hv4
w5H+L7fMwoyppqbCBTifVehmuQRv0GcJTa7ATqPh2TcFFfRdVBO7VYoYvfKm
l6G6cCWxhDZjqG0j7N13KNxPDK7PsTEoCoElzwYIpv+EN0WGbDhYXUWsX/I7
Pyyzmvg5W7fSLbiGOC1x3sPCpZa4evsl1jy9jliTsTOeJlNP/DZLiBmxBvML
l9V9Xz0idjRocpV80ID5kaGomoRG4oWk+dX+ZXjWRDRY4PmY+JK7yuS2bFj8
6hGPL/vgTkn7bA0+nMrxHNDZ8YTYIsJXnSkPr3qe/bGeAnefnL7jrAwXmQW2
/qUKX9ebn+FowK4a52WNNJ+Q+unu4RsOH4C3bWN6R+jCTQthVc2GsPKjSFuz
Y/DsqPJ84XG4fkvrT1vtYIbrlo4eJ5i5gW3m5Qu3m943uBYJswLNBt9Gw65p
E6HmN+GFiX212xJhhYQa7ewseLzasVM4By57s3rO+x58RIteTC2CA7pbv2qo
g2lrZ1r+1ggLq0h4RXLhZ4zSz/7ZDKdcPJFj8SvsfmeBXtIOa7Sx32zvgPlz
updDOmGufL9CXzfq867RPcVnBJZym9zOn4HLbS9H/mMjl3iALyKQ3QHXUrVH
i6gwy/O7VmMzWFhoQS/OHg7MiCnucYdfMwZWr3jCVsL7LNS8ueS89VVXU7t8
4K/8Xo6H+cEsBRUdZX9Y+AUzsuMs/PrQHkVKIGw1ERjQ/sO6fE5zQ3AwzP7c
z7Hlwrr1XRW3/S/BI3snx2lXYOZ1pW9EIuB7tMTRO1GwICvgYE8sXOav1kNP
h6U3ZsvJ1MADujfvcGfhiaITmufm4Y8UOe4Xi7DMlvw3oUuwzfDTPToCuD1m
A+fB5l9w3z5m2m0VuI1BVzNWhXubRetm1GB+cXKvFRXWvlYpK3oQfqA+yw4z
hmuza5TVD8Mt0leqek3gMYHEKx0zWPHlXulZBrzfbCE36zhs2Fh/4JgN7JJn
bltgD/srbB91+BYOTewNEnWEU8N8bnu6wC+Sd6jqusKi5U8axU6v2++5v+2g
G3zhX7LvSjx+If9zbE+gtJ0PbGvfarR8BtZsYiYfDoIl96tNxf8It2+6ma4U
A18fmTCtSYb/YhflDFfAQeYBa2Kd8PlE5SQr8SbikL5B1VuH4TxTG5pHCcw3
muPSlJqJD+41WbJwgINlUqjfJcCCGZ/ANRYc00ar4GTAxw793D2VBUvlivEN
cuDzfY0i47nwH1uDZBPuNZP31DuqonooD84M76e9zocF5Qnm0QWw27u/O+0r
glVOFoZdLoUf7g9/vKcabhn5wuRUM6wq12Un+hSOtY72Km2BjzdMR39qgwfY
T9qyX8CzZm7Ww0OwXOldJ7eP8N1Ygx+oK7Cmb8+N5VX4KGVTVeInOCjJf2uT
CI+4/aI2T2knHErnUse04MHOASEff7ijSy72UQ+8Zdj5t/Re2HyKszm0H+aJ
KsXRXsOP9NXjq97C+ff1bpUuwtdCnZNypZ4Sc29wXl6ThtdYb3a4y8DMUg+W
ojx8bsyfzaHALozwlBRNON358R8XtOFeX6FdJw/CtpFRqdI02KI2Li3RCI55
2tEXaAw/7domf/wwTJ9ipUuawpdXevqnzOAGUbndzy3gFWln5yIrWFeJkxHL
gP8N8z8kWw==
            "]]}, Annotation[#, "Charting`Private`Tag$9706#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxN0gs0FPgeB3DZjSgqich2jT0sMoWSWesxbsqzUR6t1ypv0sqSmkUPkdw8
WpnxHloq8s6bqFkmiy0byXqWRe6NvDXCmu6959z7//qf8z//8zn///n+H78/
xf2cjZewkJDQ5H/6f0fVaYehU/uoRkL/a4bfd3fm8MTp/3dcuXSIL0+e+MCr
yqOWPHXiG+NRpfo8PWKtmfceOjwL4ugFxcdaPCfisg96k/t5Z4gD9JZVXMfC
iN+dSj1Lr40iVjmi+eyYSyyxgrfmqa/NEol3ZVz52HSXRSxQ3O3sYJ5KrF67
yJ0czCBuo2805WtnE6tJaFlG+/5MnDe/Ivx8Vy5x67BHw23uXWLXpSAn17j7
xCXRnBivr/OJgw0DMoLEC4gHBEOlgq5C4jVdP7uW8GJiVlr6UJJFKfF8XXBY
R3gZsf0336/Yez8kFjM+tJJpWU4slWkfv8iA5ZfOK1rZwOrFFUdXHWArOa0k
R284YW6vhkzEurwciuut6nV5a/S58TpYyeF0lGEjfEAyu2CqGbYLVViy7IST
bWR/2vR+Xd5nEk0RlAri4IIPpynK8LMTrz9xVeErd0oNhDThMQObusuGcDEz
pSzMGRZRvGq9+xR8+lff6Xp3WEpGT2PFD75QMZjHZML0aUp2CBtOY4sb7kyD
5/UXBisz4XuxPPnFXFhczSc5qBz2eGGtI1UNN1ykdT+sgwNaxKTmuPBLj6L4
c7/DGpvZGltfwtHll34r6YFpG6zFpofgxHzd/Pg/4QlrRVPqWzgzay7q7Hv4
w5H+L7fMwoyppqbCBTifVehmuQRv0GcJTa7ATqPh2TcFFfRdVBO7VYoYvfKm
l6G6cCWxhDZjqG0j7N13KNxPDK7PsTEoCoElzwYIpv+EN0WGbDhYXUWsX/I7
Pyyzmvg5W7fSLbiGOC1x3sPCpZa4evsl1jy9jliTsTOeJlNP/DZLiBmxBvML
l9V9Xz0idjRocpV80ID5kaGomoRG4oWk+dX+ZXjWRDRY4PmY+JK7yuS2bFj8
6hGPL/vgTkn7bA0+nMrxHNDZ8YTYIsJXnSkPr3qe/bGeAnefnL7jrAwXmQW2
/qUKX9ebn+FowK4a52WNNJ+Q+unu4RsOH4C3bWN6R+jCTQthVc2GsPKjSFuz
Y/DsqPJ84XG4fkvrT1vtYIbrlo4eJ5i5gW3m5Qu3m943uBYJswLNBt9Gw65p
E6HmN+GFiX212xJhhYQa7ewseLzasVM4By57s3rO+x58RIteTC2CA7pbv2qo
g2lrZ1r+1ggLq0h4RXLhZ4zSz/7ZDKdcPJFj8SvsfmeBXtIOa7Sx32zvgPlz
updDOmGufL9CXzfq867RPcVnBJZym9zOn4HLbS9H/mMjl3iALyKQ3QHXUrVH
i6gwy/O7VmMzWFhoQS/OHg7MiCnucYdfMwZWr3jCVsL7LNS8ueS89VVXU7t8
4K/8Xo6H+cEsBRUdZX9Y+AUzsuMs/PrQHkVKIGw1ERjQ/sO6fE5zQ3AwzP7c
z7Hlwrr1XRW3/S/BI3snx2lXYOZ1pW9EIuB7tMTRO1GwICvgYE8sXOav1kNP
h6U3ZsvJ1MADujfvcGfhiaITmufm4Y8UOe4Xi7DMlvw3oUuwzfDTPToCuD1m
A+fB5l9w3z5m2m0VuI1BVzNWhXubRetm1GB+cXKvFRXWvlYpK3oQfqA+yw4z
hmuza5TVD8Mt0leqek3gMYHEKx0zWPHlXulZBrzfbCE36zhs2Fh/4JgN7JJn
bltgD/srbB91+BYOTewNEnWEU8N8bnu6wC+Sd6jqusKi5U8axU6v2++5v+2g
G3zhX7LvSjx+If9zbE+gtJ0PbGvfarR8BtZsYiYfDoIl96tNxf8It2+6ma4U
A18fmTCtSYb/YhflDFfAQeYBa2Kd8PlE5SQr8SbikL5B1VuH4TxTG5pHCcw3
muPSlJqJD+41WbJwgINlUqjfJcCCGZ/ANRYc00ar4GTAxw793D2VBUvlivEN
cuDzfY0i47nwH1uDZBPuNZP31DuqonooD84M76e9zocF5Qnm0QWw27u/O+0r
glVOFoZdLoUf7g9/vKcabhn5wuRUM6wq12Un+hSOtY72Km2BjzdMR39qgwfY
T9qyX8CzZm7Ww0OwXOldJ7eP8N1Ygx+oK7Cmb8+N5VX4KGVTVeInOCjJf2uT
CI+4/aI2T2knHErnUse04MHOASEff7ijSy72UQ+8Zdj5t/Re2HyKszm0H+aJ
KsXRXsOP9NXjq97C+ff1bpUuwtdCnZNypZ4Sc29wXl6ThtdYb3a4y8DMUg+W
ojx8bsyfzaHALozwlBRNON358R8XtOFeX6FdJw/CtpFRqdI02KI2Li3RCI55
2tEXaAw/7domf/wwTJ9ipUuawpdXevqnzOAGUbndzy3gFWln5yIrWFeJkxHL
gP8N8z8kWw==
            "]]}, Annotation[#, "Charting`Private`Tag$9706#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag$9706#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxFyX0s1HEcB/BfWolilUuc/sCW6TZ1JHcucabCeVgjTe464zyccJqbZu7U
cMNyGM6cO9cTQyknj6eTruun1YrminCu1GhrIl26uO1u1Vaf73t7773X3h6p
eXHpNhiGxfzp3/VeTTQkH/YJwf4lOPft5G3cnv7f4l5CARcngo9O9Z+Owkng
is8iZRBOA/t++8o5hjPA5T/cR33xJHDPT9ryEfwimEfb9GIvCsBfkqU5dJUI
7HWK/CqGVQU+kEFODoyoA7vIr25o2yRgq7sbMzFSCiap1jXL83LwC/q2cJPf
DfAhB9+ocu4tcIfRbDPu0gp+vsAZqde0gdm/8pPY4nZwd7miMj2wE8wP5snz
7e+C9VaD0qrrAlsoWWefCe+DJc0yQwNDCTYO8wUTwh5wwvFcc0LGA7BdaIC5
JaoXTNzqoC3x6ANnzAYIs+z6wY45POvqR+QdZQVb/AcHwEHdr02ClkHweCOl
P4U/BG6uM3IYLBV4cE+xxEgfBpNj91VTnR+Cl65jhSUWZFPXJok7pQafP6Fl
O94ZQf8ng2io5hF47aQt35o2Cj6oLouPiHkM1pu2W/c7acDRur767GJkPeXa
Tc0aslSQWZ/GegLOj+RZ7CaRC2bnvWvDtOCO8DgqpxvZFPJdQ/V8CuY7N/lc
qEF2VbYlpWwgz0/qscxsHDyhc61STyPvWmC+lM0gR64odhbNIeO2nmLqe2R1
EKl6YAm5s51Wq1xHLi1iNrTuHQNrKhRvSgnIFskHp1Rn5EIlR+JORM5bzG5U
eCCzYoVNTWRkGXP03WU/5Bku5nLOHzm+TCQlUJEZKnFzXQhy5djE7KVQ5DHd
buKZMGT6ikTmGI58xTw9txKBPGLr6jbOQDYTmMx70cgUT4W8Khb5N0NvML0=

            "]]}, Annotation[#, "Charting`Private`Tag$9706#6"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, {{0, 
           FormBox["0", TraditionalForm]}, {
           NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
           FormBox[
            FractionBox["\[Pi]", "2"], TraditionalForm]}, {
           NCache[Pi, 3.141592653589793], 
           FormBox["\[Pi]", TraditionalForm]}}}, AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox["\"t\"", TraditionalForm], 
         FormBox["\"Phase\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Density Matrix Off Diagonals\"", StripOnInput -> False], 
         TraditionalForm], 
       PlotRange -> {{0, 10909.090909090908`}, {0., 3.141592653589793}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, {{0, 
           FormBox["0", TraditionalForm]}, {
           NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
           FormBox[
            FractionBox["\[Pi]", "2"], TraditionalForm]}, {
           NCache[Pi, 3.141592653589793], 
           FormBox["\[Pi]", TraditionalForm]}}}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"Arg \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 2\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Arg \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 3\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Arg \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(1, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Arg \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 3\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Arg \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(2, 4\\)]\\)\"", 
          StripOnInput -> False], 
         StyleBox[
         "\"Arg \\!\\(\\*SubscriptBox[\\(\[Rho]\\), \\(3, 4\\)]\\)\"", 
          StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827784913966672*^9, 3.8277849474101253`*^9, {
   3.8277857165922914`*^9, 3.827785759281457*^9}, {3.8277858086522455`*^9, 
   3.8277858133352604`*^9}, 3.8277858556713705`*^9, {3.8277859120727563`*^9, 
   3.8277859722448654`*^9}, {3.827786038869892*^9, 3.8277860473937435`*^9}, 
   3.827786102559492*^9, 3.8277887332720895`*^9, 3.8304959969053764`*^9, 
   3.830496630131583*^9, 3.8305006843990703`*^9, 3.8305038132824345`*^9, 
   3.8305634283570027`*^9, 3.830814582298941*^9, {3.830815153157203*^9, 
   3.8308151813503704`*^9}, 3.830829410678339*^9, 3.830829442188987*^9, 
   3.830829513021489*^9, {3.830984691025625*^9, 3.830984711228278*^9}, {
   3.8309847465773582`*^9, 3.830984758204738*^9}, 3.830984844665144*^9, 
   3.831002595673318*^9, 3.8323047889828033`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"59f67af2-99af-40a6-b405-6560d198c1d5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
WwFa26v3Yf4/Oiiu2A==
          "]]}, Annotation[#, "Charting`Private`Tag$10113#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2627, 0.4313, 1]], 
         LineBox[CompressedData["
1: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
JEoi5ZnQ4XrO5XVryVASHxLpoPODvO7/A1O4Ah0=
          "]]}, Annotation[#, "Charting`Private`Tag$10113#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
f/iyFYc=
          "]]}, Annotation[#, "Charting`Private`Tag$10113#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(P\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Energy In-Flows\"", StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{0, 10909.090909090908`}, {-2.0717236887820958`*^-10, 
       8.303131785911067*^-10}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Left \"", "\"Right\"", "\"Total\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, 3.827784913966672*^9, 3.8277849474101253`*^9, {
   3.8277857165922914`*^9, 3.827785759281457*^9}, {3.8277858086522455`*^9, 
   3.8277858133352604`*^9}, 3.8277858556713705`*^9, {3.8277859120727563`*^9, 
   3.8277859722448654`*^9}, {3.827786038869892*^9, 3.8277860473937435`*^9}, 
   3.827786102559492*^9, 3.8277887332720895`*^9, 3.8304959969053764`*^9, 
   3.830496630131583*^9, 3.8305006843990703`*^9, 3.8305038132824345`*^9, 
   3.8305634283570027`*^9, 3.830814582298941*^9, {3.830815153157203*^9, 
   3.8308151813503704`*^9}, 3.830829410678339*^9, 3.830829442188987*^9, 
   3.830829513021489*^9, {3.830984691025625*^9, 3.830984711228278*^9}, {
   3.8309847465773582`*^9, 3.830984758204738*^9}, 3.830984844665144*^9, 
   3.831002595673318*^9, 3.8323047893293433`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"5bc0d4c4-bf02-4b67-9417-ad02d2d6a3ac"]
}, Open  ]],

Cell["\<\
Density matrix, transition rate and energy flow at equilibrium\
\>", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.77516851089515*^9, 3.7751685476613455`*^9}, 
   3.775534483351179*^9, 
   3.7946885928625154`*^9},ExpressionUUID->"17d12f9b-202a-425e-a70d-\
c6c8a1f4e7a9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Energy flows conversion, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"J", "'"}], "=", 
    RowBox[{
     RowBox[{"\[HBar]", 
      FractionBox[
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}], "\[HBar]"], 
      FractionBox[
       RowBox[{"2000", 
        SubscriptBox["k", "B"]}], "\[HBar]"], " ", "J"}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2000", 
          SubscriptBox["k", "B"]}], ")"}], "2"], "\[HBar]"], "J"}]}]}], 
   TraditionalForm]],ExpressionUUID->"aeb8922c-b821-4675-891a-9d32313509cb"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79427176851785*^9, 3.7942718192809644`*^9}, {
   3.7942720532361326`*^9, 3.7942720532361326`*^9}, {3.794272091776184*^9, 
   3.79427212193836*^9}, 
   3.7946883341910334`*^9},ExpressionUUID->"cb233058-74fc-45f4-8728-\
40da2f43fac8"],

Cell["Unit conversion factors for natural units,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.79427929106101*^9, 3.7942793178357034`*^9}, {
   3.794279550338332*^9, 3.7942795537391944`*^9}, 3.794280854010661*^9, 
   3.7946883341910334`*^9},ExpressionUUID->"ec690dee-1c91-441c-a4dc-\
a6c7d6628970"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\[HBar]", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794269397822668*^9, 3.7942694163007307`*^9}, {
   3.7942694676494246`*^9, 3.7942694696080093`*^9}, {3.7942705589283156`*^9, 
   3.7942705720149584`*^9}, 3.7942728132018347`*^9, 3.7946883341910334`*^9},
 CellLabel->
  "In[136]:=",ExpressionUUID->"961116b4-e358-417a-a202-dd3a369f6f88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tconv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]conv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tconv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTau]conv", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Econv", "=", "1"}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279162538752*^9, 3.7942791998186207`*^9}, {
   3.794279269854555*^9, 3.794279274841489*^9}, {3.794279324154192*^9, 
   3.7942793414757624`*^9}, 3.7946883341910334`*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"4c72b397-37b3-4337-b5ac-b7cc9eb89590"],

Cell["Unit conversion factors for SI units,", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279562856717*^9, 3.794279571874467*^9}, 
   3.7942808551629505`*^9, 
   3.7946883341910334`*^9},ExpressionUUID->"dd4e023c-08a6-48c1-9134-\
1a8fff2093d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unitassum", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", "\[Rule]", " ", 
      RowBox[{"1.3806", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "23"}]]}]}], ",", 
     RowBox[{"\[HBar]", "\[Rule]", 
      RowBox[{"1.0546", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "34"}]]}]}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7942694647135396`*^9, {3.7942705751665306`*^9, 
   3.7942705756297846`*^9}, 3.7942728197783885`*^9, 3.7946883341910334`*^9},
 CellLabel->
  "In[629]:=",ExpressionUUID->"b4aa871f-2a08-444b-a5ad-72daf9ee2a94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tconv", "=", 
   FractionBox["300", "0.2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Omega]conv", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Tconv", " ", "k"}], "\[HBar]"], "/.", "unitassum"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"tconv", "=", 
   RowBox[{
    FractionBox["\[HBar]", 
     RowBox[{"Tconv", " ", "k"}]], "/.", "unitassum"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalTau]conv", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Tconv", " ", "k"}], "\[HBar]"], "/.", "unitassum"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Econv", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Tconv", " ", "k"}], ")"}], "2"], "\[HBar]"], "/.", 
    "unitassum"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.794279162538752*^9, 3.7942791998186207`*^9}, {
   3.7942793641651325`*^9, 3.794279414927433*^9}, {3.794430999462424*^9, 
   3.794431025213562*^9}, 3.7946883341910334`*^9},
 CellLabel->
  "In[630]:=",ExpressionUUID->"38caf8fb-8dc3-41d8-9e46-4a7be710a9b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Function for density matrix elements, transition rates and energy flows,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7751783289196167`*^9, 3.775178338311266*^9}, {
   3.7751790528988047`*^9, 3.7751790566628785`*^9}, {3.775429373703368*^9, 
   3.775429386583944*^9}, 3.775534483351179*^9, 3.7942809585703945`*^9, 
   3.7946885928625154`*^9},ExpressionUUID->"797622bb-1f23-46ba-9844-\
c259cab5862b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"varFunc", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", "\[Omega]1_",
     ",", "\[Omega]2_", ",", "\[Gamma]s_", ",", "unitassum_"}], "]"}], ":=", 
  "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp0", ",", "temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
        "unitassum", ",", "Jassum", ",", "NBEassum", ",", 
         "\[CapitalDelta]\[CapitalOmega]assum", ",", "\[Eta]assum", ",", 
         RowBox[{
          SubscriptBox["T", "1"], "\[Rule]", "T1"}], ",", 
         RowBox[{
          SubscriptBox["T", "2"], "\[Rule]", "T2"}], ",", 
         RowBox[{
          SubscriptBox["\[Kappa]", "1"], "\[Rule]", "\[Kappa]1"}], ",", 
         RowBox[{
          SubscriptBox["\[Kappa]", "2"], "\[Rule]", "\[Kappa]2"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
         RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}]}], "}"}], "]"}]}], ";", 
     "\n", 
     RowBox[{"temp1", "=", 
      RowBox[{"N", "[", 
       RowBox[{"sol", "//.", "temp0"}], "]"}]}], ";", "\n", 
     RowBox[{"temp2", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp1", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[Rho]", 
                RowBox[{"i_", ",", "j_"}]], "'"}], "[", "t", "]"}], "\[Rule]",
              "0"}], ",", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Rho]", 
               RowBox[{"i_", ",", "j_"}]], "[", "t", "]"}], "\[Rule]", 
             SubscriptBox["\[Rho]", 
              RowBox[{"i", ",", "j"}]]}]}], "}"}]}], ",", 
         RowBox[{"1", "\[Equal]", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "4"], 
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "i"}]]}]}]}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{"temp3", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{"temp2", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"i", ",", "j"}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\n", 
     RowBox[{"Re", "[", 
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"i", ",", "i"}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], "/.", 
         "temp3"}], ",", "\n", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\n", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Eta]1", "2"], " ", 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "1"], "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[Eta]2", "2"], 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "1"], "[", 
               RowBox[{"1", ",", "3"}], "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[Eta]2", "2"], " ", 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "1"], "[", 
               RowBox[{"2", ",", "4"}], "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[Eta]1", "2"], 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "1"], "[", 
               RowBox[{"3", ",", "4"}], "]"}]}], ",", "\n", 
             RowBox[{
              SuperscriptBox["\[Eta]3", "2"], 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "2"], "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[Eta]4", "2"], " ", 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "2"], "[", 
               RowBox[{"1", ",", "3"}], "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[Eta]4", "2"], " ", 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "2"], "[", 
               RowBox[{"2", ",", "4"}], "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[Eta]3", "2"], 
              RowBox[{
               SubscriptBox["\[CapitalTau]s", "2"], "[", 
               RowBox[{"3", ",", "4"}], "]"}]}]}], "\n", "}"}], "//.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["\[Rho]", 
                 RowBox[{"i_", ",", "j_"}]], "[", "t", "]"}], "\[Rule]", 
               SubscriptBox["\[Rho]", 
                RowBox[{"i", ",", "j"}]]}], ",", "temp0"}], "}"}], "]"}]}], "/.",
           "temp3"}], "]"}], ",", "\n", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\n", 
            RowBox[{
             RowBox[{
              SubscriptBox["EngyFlowIn", "1"], "[", 
              RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}], ",", 
             RowBox[{
              SubscriptBox["EngyFlowIn", "2"], "[", 
              RowBox[{"\[Rho]DREMatrix", "[", "t", "]"}], "]"}]}], "\n", 
            "}"}], "//.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["\[Rho]", 
                 RowBox[{"i_", ",", "j_"}]], "[", "t", "]"}], "\[Rule]", 
               SubscriptBox["\[Rho]", 
                RowBox[{"i", ",", "j"}]]}], ",", "temp0"}], "}"}], "]"}]}], "/.",
           "temp3"}], "]"}], ",", "\n", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Rho]", 
            RowBox[{"i", ",", "j"}]], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "//.", 
         "temp3"}]}], "\n", "}"}], "]"}]}]}], "\n", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, 3.7753537106511436`*^9, {3.775354696927497*^9, 
   3.7753546987756114`*^9}, {3.775428022468929*^9, 3.7754280343304987`*^9}, {
   3.7754283417040205`*^9, 3.7754283466039453`*^9}, {3.775428461138793*^9, 
   3.7754284859393673`*^9}, {3.7754285707248497`*^9, 
   3.7754287140660653`*^9}, {3.775428798815893*^9, 3.775428807789307*^9}, {
   3.775428885123607*^9, 3.7754289198902144`*^9}, {3.775429168643715*^9, 
   3.7754291932662024`*^9}, {3.7754292387818403`*^9, 
   3.7754293443932076`*^9}, {3.7754293901354027`*^9, 3.77542939650432*^9}, {
   3.775429462436409*^9, 3.775429493769034*^9}, {3.7754296057267632`*^9, 
   3.775429614791603*^9}, {3.775429657006019*^9, 3.775429707263837*^9}, 
   3.7755344833521767`*^9, {3.783708328626151*^9, 3.7837084279718237`*^9}, {
   3.7837084635048327`*^9, 3.783708593429549*^9}, {3.7837162149202175`*^9, 
   3.7837162194700165`*^9}, {3.7837164597381516`*^9, 
   3.7837164874273114`*^9}, {3.7837175921555853`*^9, 3.7837176232251844`*^9}, 
   3.7837182532424307`*^9, {3.7837183085944786`*^9, 3.783718374103629*^9}, {
   3.783718802201745*^9, 3.783718805936762*^9}, {3.783719004498307*^9, 
   3.7837190169420395`*^9}, {3.7846027487904377`*^9, 3.784602755045949*^9}, {
   3.7879551315045953`*^9, 3.787955140857542*^9}, 3.7879551836320467`*^9, {
   3.78795747895417*^9, 3.787957481155241*^9}, {3.7879575982678833`*^9, 
   3.7879576105129714`*^9}, 3.790375422830477*^9, {3.7903758922662244`*^9, 
   3.790375895923444*^9}, {3.7903759377545805`*^9, 3.7903759676087365`*^9}, {
   3.7903760056140966`*^9, 3.7903760076716075`*^9}, {3.790376094611101*^9, 
   3.7903760967085004`*^9}, {3.7903766476904707`*^9, 3.7903766792550163`*^9}, 
   3.7903769385336494`*^9, 3.7903770027598925`*^9, {3.790377073052915*^9, 
   3.7903770746047645`*^9}, {3.7903777644212437`*^9, 
   3.7903777661595936`*^9}, {3.7903778049010916`*^9, 
   3.7903778144316053`*^9}, {3.7903778466713886`*^9, 3.790377883341327*^9}, 
   3.7903782939626284`*^9, {3.790378734307251*^9, 3.790378801513156*^9}, {
   3.790379110950943*^9, 3.790379119310584*^9}, {3.790379257436088*^9, 
   3.790379273153054*^9}, {3.7903885187170467`*^9, 3.790388574984623*^9}, {
   3.7903887002555037`*^9, 3.7903887032784195`*^9}, 3.790388762290086*^9, {
   3.790388992196544*^9, 3.7903889953461523`*^9}, {3.794267151730879*^9, 
   3.7942671547172346`*^9}, 3.794269480741638*^9, {3.7942705414583364`*^9, 
   3.79427054620549*^9}, {3.794270601355549*^9, 3.7942706060740547`*^9}, {
   3.7942742021063147`*^9, 3.7942742050591936`*^9}, {3.7942746764730377`*^9, 
   3.794274679968153*^9}, {3.794274978814254*^9, 3.7942749993266826`*^9}, 
   3.7946885928625154`*^9, {3.821492179357643*^9, 3.8214922406126056`*^9}, 
   3.8214923737001777`*^9, 3.821493310024704*^9, {3.827784978764124*^9, 
   3.8277849974626026`*^9}, {3.8277884747459717`*^9, 3.827788494402034*^9}, {
   3.827788751875087*^9, 3.827788784785903*^9}, {3.827788822261589*^9, 
   3.827788894760645*^9}, {3.827788930005127*^9, 3.8277890763477087`*^9}, {
   3.8277891077497463`*^9, 3.8277892547664127`*^9}, {3.8277903099529233`*^9, 
   3.827790463551649*^9}, {3.8277905282405553`*^9, 3.8277905586959586`*^9}, {
   3.8277907163508883`*^9, 3.8277908216172266`*^9}, {3.827792917657754*^9, 
   3.8277929728514214`*^9}, {3.8304960181414013`*^9, 3.8304960242331076`*^9}, 
   3.830815195153775*^9, {3.8308152836609907`*^9, 3.8308153956869297`*^9}, {
   3.8308156069155474`*^9, 3.8308156315402145`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"40d3d94d-005a-4371-8f02-627f8015cc3a"]
}, Open  ]],

Cell["Test function", "Text",
 CellChangeTimes->{
  3.545825155715281*^9, {3.827788432018293*^9, 
   3.827788434970339*^9}},ExpressionUUID->"45d39a07-85ba-46c5-b15f-\
1e540d0d7173"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"varFunc", "[", 
  RowBox[{
  "0.2", ",", "0.02", ",", "1", ",", "1", ",", "1.1", ",", "0.9", ",", "0.1", 
   ",", "unitassum"}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8277884375206456`*^9, 3.8277884595374055`*^9}, {
   3.827788834436309*^9, 3.827788836057809*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"e4529938-65ff-4b49-815d-7dc5ffe122e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2.725636679117127`*^-6", ",", "0.0036479065339858284`", ",", 
     "0.0007438948256670496`", ",", "0.995605473003668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.3220538050553284`*^-6"}], ",", 
     RowBox[{"-", "1.279586023252557`*^-7"}], ",", 
     RowBox[{"-", "0.00017125577487131947`"}], ",", 
     RowBox[{"-", "0.0006337469053506807`"}], ",", "2.3220538050548456`*^-6", 
     ",", "1.279586023246795`*^-7", ",", "0.0001712557748713191`", ",", 
     "0.0006337469053506801`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0007565079908217988`", ",", 
     RowBox[{"-", "0.0007565079908217981`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.725636679117127`*^-6", ",", "0.`", ",", "0.`", ",", "0.`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.0036479065339858284`", ",", "0.`", ",", "0.`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.0007438948256670496`", ",", "0.`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.995605473003668`"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.82778847254535*^9, 3.8277885142030463`*^9}, {
   3.8277888161745577`*^9, 3.8277888363513236`*^9}, 3.827788872802183*^9, 
   3.8277889213926153`*^9, 3.8277890019011836`*^9, 3.827789035841653*^9, 
   3.8277890793206964`*^9, {3.8277892215671177`*^9, 3.8277892319552937`*^9}, {
   3.8277907660198765`*^9, 3.82779082404877*^9}, {3.8277929333574867`*^9, 
   3.8277929753927736`*^9}, {3.8304960096343164`*^9, 3.830496026569414*^9}, 
   3.830496646908637*^9, 3.8305006968014107`*^9, 3.830503829293402*^9, 
   3.8305634431248016`*^9, {3.830815191458575*^9, 3.830815197430128*^9}, 
   3.8308156477054844`*^9, 3.830829536525261*^9, 3.830984784873664*^9, 
   3.8309848524793835`*^9, 3.8310026033810806`*^9, 3.8323047954013014`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"049017c9-fb7f-4e92-8b2a-d352a1b06e46"]
}, Open  ]],

Cell["Function for drawing a state flow diagram,", "Text",
 CellChangeTimes->{
  3.8214933625831423`*^9},ExpressionUUID->"28e814d4-879f-4c59-9686-\
a6270f63f050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DrawFlowGraph", "[", 
    RowBox[{
    "label_", ",", "posx_", ",", "posy_", ",", "nodes_", ",", "rates_", ",", 
     "ratecolors_", ",", "ratesF_", ",", "ratecolorsF_", ",", "title_", ",", 
     "maxrate_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pos", ",", "psize"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"psize", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "label", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"pos", "[", "i_", "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"posx", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"posy", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ";", "\n", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0001", "]"}], ",", 
             RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", "Black", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1.15", 
                   RowBox[{"Min", "[", "posx", "]"}]}], ",", 
                  RowBox[{"1.2", 
                   RowBox[{"Min", "[", "posy", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1.15", 
                   RowBox[{"Min", "[", "posx", "]"}]}], ",", 
                  RowBox[{"1.1", 
                   RowBox[{"Max", "[", "posy", "]"}]}]}], "}"}]}], "}"}], 
              "]"}]}], "}"}], ",", "Black", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Energy\>\"", ",", 
                 RowBox[{"FontSize", "\[Rule]", "13.6"}], ",", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1.0", 
                   RowBox[{"Min", "[", "posx", "]"}]}], "-", "0.03"}], ",", 
                 RowBox[{"1.15", 
                  RowBox[{"Max", "[", "posy", "]"}]}]}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"title", ",", 
                 RowBox[{"FontSize", "\[Rule]", "13.6"}], ",", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"1.57", 
                  RowBox[{"Min", "[", "posy", "]"}]}]}], "}"}]}], "]"}]}], 
            "}"}], ",", "\n", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "1", "]"}], ",", "Thick", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0.55", ",", "0.55", ",", "0.55"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"pos", "[", "i", "]"}], ",", 
                 RowBox[{"0.01", "+", 
                  RowBox[{"0.22", 
                   SqrtBox[
                    RowBox[{"nodes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]]}]}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "psize"}], "}"}]}], "]"}], ",", 
           "\n", 
           RowBox[{"Table", "[", "\n", "\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"rates", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[NotEqual]", "0"}],
                " ", ",", "\n", "\t\t", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratesF", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[NotEqual]", 
                  "0"}], ",", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], ">", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ",", "\n",
                    "\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.8", "]"}], ",", 
                    RowBox[{"Thickness", "[", 
                    RowBox[{"0.003", "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}], "]"}], ",", 
                    RowBox[{"Arrowheads", "[", 
                    RowBox[{"0.04", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"ratecolors", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "i", "]"}], ",", 
                    RowBox[{"pos", "[", "j", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "j", "]"}], ",", 
                    RowBox[{"pos", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    RowBox[{"Thickness", "[", 
                    RowBox[{"0.003", "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}], "]"}], ",", 
                    RowBox[{"Arrowheads", "[", 
                    RowBox[{"0.04", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"ratecolorsF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "i", "]"}], ",", 
                    RowBox[{"pos", "[", "j", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "j", "]"}], ",", 
                    RowBox[{"pos", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}]}],
                     "}"}], "\n", "\t\t\t", ",", "\n", "\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.8", "]"}], ",", 
                    RowBox[{"Thickness", "[", 
                    RowBox[{"0.003", "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}], "]"}], ",", 
                    RowBox[{"Arrowheads", "[", 
                    RowBox[{"0.04", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"ratecolorsF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "i", "]"}], ",", 
                    RowBox[{"pos", "[", "j", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "j", "]"}], ",", 
                    RowBox[{"pos", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    RowBox[{"Thickness", "[", 
                    RowBox[{"0.003", "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}], "]"}], ",", 
                    RowBox[{"Arrowheads", "[", 
                    RowBox[{"0.04", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"ratecolors", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "i", "]"}], ",", 
                    RowBox[{"pos", "[", "j", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "j", "]"}], ",", 
                    RowBox[{"pos", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}]}],
                     "}"}]}], "\n", "\t\t\t", "]"}], "\n", "\t\t", ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.8", "]"}], ",", 
                   RowBox[{"Thickness", "[", 
                    RowBox[{"0.003", "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}], "]"}], ",", 
                   RowBox[{"Arrowheads", "[", 
                    RowBox[{"0.04", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}]}], "]"}], ",", "\n", "\t\t\t", 
                   RowBox[{"ratecolors", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"rates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "i", "]"}], ",", 
                    RowBox[{"pos", "[", "j", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "j", "]"}], ",", 
                    RowBox[{"pos", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}]}],
                   "}"}]}], "\n", "\t\t", "]"}], "\n", "\t", ",", "\n", 
               "\t\t", 
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ratesF", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[NotEqual]", 
                  "0"}], ",", "\n", "\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.8", "]"}], ",", 
                   RowBox[{"Thickness", "[", 
                    RowBox[{"0.003", "+", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}], "]"}], ",", 
                   RowBox[{"Arrowheads", "[", 
                    RowBox[{"0.04", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/", 
                    "maxrate"}]}]}], "]"}], ",", "\n", "\t\t\t", 
                   RowBox[{"ratecolorsF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ratesF", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "i", "]"}], ",", 
                    RowBox[{"pos", "[", "j", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", "j", "]"}], ",", 
                    RowBox[{"pos", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}]}],
                   "}"}], "\n", "\t\t", ",", " ", "Nothing"}], "]"}]}], "\n", 
              "\t", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"psize", "-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"i", "+", "1"}], ",", "psize"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "1", "]"}], ",", "Black", ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"label", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"posx", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0", ",", "0.04", ",", "0", ",", "0.06", ",", "0.04", ",",
                     "0", ",", "0.04", ",", "0"}], "}"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"posy", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.045", ",", "0.08", ",", 
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.06"}], ",", "0.06", ",", 
                    RowBox[{"-", "0.05"}], ",", 
                    RowBox[{"-", "0.08"}], ",", "0.045"}], "}"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "psize"}], "}"}]}], "]"}]}], "\n", 
          "\n", "}"}], "]"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DrawFunc", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Gamma]s_",
     ",", "title_", ",", "maxrate_", ",", "var_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "label", ",", "posx", ",", "posy", ",", "nodes", ",", "rates", ",", 
      "ratecolors", ",", "ratesF", ",", "ratecolorsF", ",", "temp0"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"temp0", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"Jassum", ",", "NBEassum", ",", 
         RowBox[{"k", "\[Rule]", "1"}], ",", 
         RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
         RowBox[{
          SubscriptBox["T", "1"], "\[Rule]", " ", "T1"}], ",", 
         RowBox[{
          SubscriptBox["T", "2"], "\[Rule]", " ", "T2"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
         RowBox[{
          SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}]}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"label", "=", 
      RowBox[{"{", 
       RowBox[{
       "\"\<|\!\(\*SubscriptBox[\(1\), \
\(DRE\)]\)>=|\[UpArrow]\[UpArrow]>\>\"", ",", 
        "\"\<|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
        "\"\<|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
        "\"\<|\!\(\*SubscriptBox[\(4\), \
\(DRE\)]\)>=|\[DownArrow]\[DownArrow]>\>\""}], "}"}]}], ";", 
     RowBox[{"posx", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "0.4"}], ",", "0.4", ",", "0"}], "}"}]}], ";", 
     RowBox[{"posy", "=", 
      RowBox[{"Diagonal", "[", 
       RowBox[{
        RowBox[{"HtotDREMatrix", "/", 
         RowBox[{"(", 
          RowBox[{"\[HBar]", " ", "\[Omega]conv"}], ")"}]}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", 
     RowBox[{"nodes", "=", 
      RowBox[{"var", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"rates", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]},
         {"0", "0", "0", "0"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ratesF", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "6", "]"}], "]"}], "0"},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "7", "]"}], "]"}]},
         {"0", "0", "0", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "8", "]"}], "]"}]},
         {"0", "0", "0", "0"}
        }], ")"}]}], ";", 
     RowBox[{"ratecolors", "=", 
      RowBox[{"(", GridBox[{
         {"0", "Red", "RedC", "0"},
         {"0", "0", "0", "RedC"},
         {"0", "0", "0", "Red"},
         {"0", "0", "0", "0"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ratecolorsF", "=", 
      RowBox[{"(", GridBox[{
         {"0", "BlueC", "Blue", "0"},
         {"0", "0", "0", "Blue"},
         {"0", "0", "0", "BlueC"},
         {"0", "0", "0", "0"}
        }], ")"}]}], ";", "\n", 
     RowBox[{"DrawFlowGraph", "[", 
      RowBox[{
      "label", ",", "posx", ",", "posy", ",", "nodes", ",", "rates", ",", 
       "ratecolors", ",", "ratesF", ",", "ratecolorsF", ",", "title", ",", 
       "maxrate"}], "]"}]}]}], "\n", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8214933259905043`*^9, 3.821493357393633*^9}, {
   3.8214934506006765`*^9, 3.821493464508458*^9}, 3.8214935086758256`*^9, {
   3.8214937761813993`*^9, 3.821493777716198*^9}, {3.8214938097310705`*^9, 
   3.8214938944848356`*^9}, {3.821494062309416*^9, 3.8214941422220244`*^9}, {
   3.8214942209206667`*^9, 3.8214942826998844`*^9}, {3.8214943334260488`*^9, 
   3.8214943667892694`*^9}, {3.821494456927063*^9, 3.821494582827623*^9}, {
   3.8214946137221794`*^9, 3.8214946730689335`*^9}, {3.8214955594943843`*^9, 
   3.8214955623063955`*^9}, {3.8214956979731665`*^9, 3.821495706037418*^9}, {
   3.8214968273768024`*^9, 3.8214968303462477`*^9}, 3.821497206372101*^9, {
   3.821497557510516*^9, 3.82149756554496*^9}, {3.8214976029196367`*^9, 
   3.821497740617289*^9}, {3.8214977866697555`*^9, 3.821498009082221*^9}, {
   3.821498061663824*^9, 3.8214981190177765`*^9}, {3.8214981981478405`*^9, 
   3.8214982507908883`*^9}, {3.8214982811267138`*^9, 
   3.8214983306050262`*^9}, {3.821498362040168*^9, 3.8214983655329027`*^9}, {
   3.821498407739914*^9, 3.821498444591493*^9}, {3.82150040305178*^9, 
   3.821500412270117*^9}, 3.827790895307798*^9, {3.8277909590170803`*^9, 
   3.8277910337129602`*^9}, 3.827791278080154*^9, 3.8277913482413387`*^9, {
   3.8277915438479085`*^9, 3.8277915849773607`*^9}, {3.8277916773013325`*^9, 
   3.8277917103952026`*^9}, {3.8277982343819056`*^9, 
   3.8277982560974264`*^9}, {3.8277989166568775`*^9, 3.827798940643887*^9}, {
   3.830496162449398*^9, 3.8304961654074907`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"88471b74-3dcf-4b3b-8b5f-b4d6711ac49c"],

Cell["\<\
Steady-state energy flows, transition rates, density matrix diagonals and \
energy eigenvalues, plotted for dynamically changeable bath, and system \
parameters,\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.791163378715145*^9, 3.791163468365039*^9}, {
   3.791163800336773*^9, 3.7911638005212803`*^9}, 3.7946885928645105`*^9, {
   3.8214935902089148`*^9, 
   3.821493591088431*^9}},ExpressionUUID->"b25c8c64-c469-4ac8-952a-\
610039f970f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "temp1", ",", "temp2", ",", "temp3", ",", "temp4", ",", "\[Eta]s", ",", 
       "\[Nu]s", ",", "\[CapitalDelta]s", ",", "\[CapitalOmega]s"}], "}"}], 
     ",", "\n", 
     RowBox[{
      RowBox[{"temp1", "=", 
       RowBox[{"varFunc", "[", 
        RowBox[{
        "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1",
          ",", "\[Omega]2", ",", "\[Gamma]s", ",", "unitassum"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"temp2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"HtotEVal", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/", 
         "\[HBar]"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
          "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"temp3", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Inverse", "[", "HtotEVecMatrix", "]"}], ".", 
         RowBox[{"temp1", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ".", "HtotEVecMatrix"}], "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
          "}"}], "]"}]}]}], ";", "\n", 
      RowBox[{"temp4", "=", 
       RowBox[{"temp1", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"\[CapitalDelta]s", "=", 
       RowBox[{"\[CapitalDelta]", "//.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]\[CapitalOmega]assum", ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}]}], "}"}], "]"}]}]}], 
      ";", "\n", 
      RowBox[{"\[CapitalOmega]s", "=", 
       RowBox[{"\[CapitalOmega]", "//.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]\[CapitalOmega]assum", ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}]}], "}"}], "]"}]}]}], 
      ";", "\n", 
      RowBox[{"\[Eta]s", "=", 
       RowBox[{"\[Eta]", "//.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
          "\[CapitalDelta]\[CapitalOmega]assum", ",", "\[Eta]assum", ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}]}], "}"}], "]"}]}]}], 
      ";", "\n", 
      RowBox[{"\[Nu]s", "=", 
       RowBox[{"\[Nu]", "//.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
          "\[CapitalDelta]\[CapitalOmega]assum", ",", "\[Eta]assum", ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
           RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}]}], "}"}], "]"}]}]}], 
      ";", "\n", 
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{"temp2", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "2"}], "}"}], ",", "\n", "\t", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |\[UpArrow]\
\[UpArrow]>\>\"", ",", "\"\<|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |\[DownArrow]\
\[DownArrow]>\>\""}], "}"}]}], ",", "\n", "\t", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "\"\<Frequency\>\""}], "}"}]}], ",", "\n", 
          "\t", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "1.5"}], "\[Omega]conv"}], "/.", "unitassum"}], 
             ",", 
             RowBox[{
              RowBox[{"1.5", " ", "\[Omega]conv"}], "/.", "unitassum"}]}], 
            "}"}]}], ",", "\n", "\t", 
          RowBox[{"Ticks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}], ",", "\n", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"MatrixForm", "[", 
            RowBox[{"HtotEVec", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Omega]", "1"], "\[Rule]", "\[Omega]1"}], ",", 
            RowBox[{
             SubscriptBox["\[Omega]", "2"], "\[Rule]", "\[Omega]2"}], ",", 
            RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]s"}], ",", "unitassum"}], 
           "}"}], "]"}]}], ",", "\n", "\n", 
        RowBox[{"MatrixForm", "[", 
         RowBox[{"(", GridBox[{
            {
             RowBox[{
             "TextForm", "[", 
              "\"\<Density Matrix - |\[UpArrow]\[UpArrow]>,|\[UpArrow]\
\[DownArrow]>,|\[DownArrow]\[UpArrow]>,|\[DownArrow]\[DownArrow]> basis\>\"", 
              "]"}], 
             RowBox[{
             "TextForm", "[", 
              "\"\<Density Matrix - |\!\(\*SubscriptBox[\(1\), \
\(DRE\)]\)>,|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>,|\!\(\*SubscriptBox[\(3\), \
\(DRE\)]\)>,|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> basis\>\"", "]"}]},
            {
             RowBox[{"MatrixForm", "[", "temp3", "]"}], 
             RowBox[{"MatrixForm", "[", "temp4", "]"}]}
           }], ")"}], "]"}], ",", "\n", "\n", 
        RowBox[{"DrawFunc", "[", 
         RowBox[{
         "T1", ",", "T2", ",", "\[Omega]1", ",", "\[Omega]2", ",", 
          "\[Gamma]s", ",", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1\)]\)=``, \
\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)=``, \[Gamma]=``,\n \
\[CapitalDelta]=``, \[CapitalOmega]=`` \n\[Eta]=``, \[Nu]=``\>\"", ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[Omega]1", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[Omega]2", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[Gamma]s", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[CapitalDelta]s", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[CapitalOmega]s", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[Eta]s", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"DecimalForm", "[", 
             RowBox[{"\[Nu]s", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
          "\[CapitalTau]max", ",", "temp1"}], "]"}], ",", "\n", "\n", 
        RowBox[{"BarChart", "[", 
         RowBox[{
          RowBox[{"temp1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\n", ",", 
          RowBox[{"ChartLabels", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Left \>\"", ",", "\"\<Right\>\""}], "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", "\"\<Equilibrium energy inflow\>\""}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(J\), \(P\)]\)(J)\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "Emax"}], ",", "Emax"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Green", ",", "Red"}], "}"}]}]}], "]"}], ",", "\n", "\n", 
        RowBox[{"BarChart", "[", 
         RowBox[{
          RowBox[{"temp1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\n", ",", 
          RowBox[{"ChartLabels", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<L |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
               "\"\<L |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
               "\"\<L |\!\(\*SubscriptBox[\(2\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>\>\"", ",", 
               "\"\<L |\!\(\*SubscriptBox[\(3\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>\>\"", ",", 
               "\"\<R |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>\>\"", ",", 
               "\"\<R |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>\>\"", ",", 
               "\"\<R |\!\(\*SubscriptBox[\(2\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>\>\"", ",", 
               "\"\<R |\!\(\*SubscriptBox[\(3\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>\>\""}], "}"}], ",", "Bottom", ",", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{"#", ",", 
                RowBox[{"\[Pi]", "/", "2"}]}], "]"}], "&"}]}], "]"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Equilibrium thermal transition rate\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "Red", ",", "RedC", ",", "RedC", ",", "Red", ",", "BlueC", ",", 
             "Blue", ",", "Blue", ",", "BlueC"}], "}"}]}]}], "]"}], ",", "\n",
         "\n", 
        RowBox[{"BarChart", "[", 
         RowBox[{
          RowBox[{"temp1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\n", ",", 
          RowBox[{"ChartLabels", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \({1, 1}\)]\)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \({2, 2}\)]\)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \({3, 3}\)]\)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \({4, 4}\)]\)\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", "\"\<Equilibrium density matrix\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "1"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}]}], "]"}]}], 
       "\n", "}"}]}]}], "]"}], ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Fixed Bath Temperatures\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T1", ",", 
       RowBox[{"0.20", " ", "Tconv"}]}], "}"}], ",", 
     RowBox[{"0.001", " ", "Tconv"}], ",", 
     RowBox[{"1", " ", "Tconv"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2", ",", 
       RowBox[{"0.02", " ", "Tconv"}]}], "}"}], ",", 
     RowBox[{"0.001", " ", "Tconv"}], ",", 
     RowBox[{"1", " ", "Tconv"}]}], "}"}], ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Bath Coupling Factors\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]1", ",", "0.01"}], "}"}], ",", "0.001", ",", "2"}], 
    "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]2", ",", "0.01"}], "}"}], ",", "0.001", ",", "2"}], 
    "}"}], ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<System Parameters\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", 
       RowBox[{"1.1", "\[Omega]conv"}]}], "}"}], ",", 
     RowBox[{"0", "\[Omega]conv"}], ",", 
     RowBox[{"2", "\[Omega]conv"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]2", ",", 
       RowBox[{"0.2", "\[Omega]conv"}]}], "}"}], ",", 
     RowBox[{"0", "\[Omega]conv"}], ",", 
     RowBox[{"2", "\[Omega]conv"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]s", ",", 
       RowBox[{"0.3", "\[Omega]conv"}]}], "}"}], ",", 
     RowBox[{"0.001", "\[Omega]conv"}], ",", 
     RowBox[{"2", "\[Omega]conv"}]}], "}"}], ",", "\n", "Delimiter", ",", 
   RowBox[{"Item", "[", 
    RowBox[{"\"\<Simulation and Display Parameters\>\"", ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Emax", ",", 
       RowBox[{"0.00005", "Econv"}]}], "}"}], ",", 
     RowBox[{"0.00001", "Econv"}], ",", 
     RowBox[{"0.001", "Econv"}]}], "}"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalTau]max", ",", 
       RowBox[{"0.001", "\[CapitalTau]conv"}]}], "}"}], ",", 
     RowBox[{"0.0001", "\[CapitalTau]conv"}], ",", 
     RowBox[{"0.01", "\[CapitalTau]conv"}]}], "}"}], ",", "\n", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, 3.8214999993578157`*^9, {3.8277910861519156`*^9, 
   3.8277911497074337`*^9}, {3.827791199348023*^9, 3.827791252341157*^9}, {
   3.8277913917088013`*^9, 3.827791392191351*^9}, {3.8277914763031225`*^9, 
   3.827791489146576*^9}, {3.8277917244438314`*^9, 3.827791725886999*^9}, {
   3.827791783779707*^9, 3.8277919087211685`*^9}, {3.8277919616623044`*^9, 
   3.8277919620759315`*^9}, {3.8277920708939495`*^9, 3.827792084828562*^9}, {
   3.8277921220377045`*^9, 3.8277921533174973`*^9}, {3.8277922041413865`*^9, 
   3.82779234641986*^9}, {3.8277923990334435`*^9, 3.827792407882979*^9}, 
   3.827792533759916*^9, {3.8277928090184484`*^9, 3.8277928132679396`*^9}, {
   3.8277930051552734`*^9, 3.8277930429661865`*^9}, {3.827793086142542*^9, 
   3.8277931708836136`*^9}, {3.8277934142479253`*^9, 3.827793426304655*^9}, {
   3.827793507280347*^9, 3.8277935312112865`*^9}, {3.827793572292055*^9, 
   3.827793589314289*^9}, {3.8277936214481344`*^9, 3.827793649642042*^9}, {
   3.8277983835242195`*^9, 3.827798388461542*^9}, {3.827798418926329*^9, 
   3.827798742241865*^9}, {3.82779881569701*^9, 3.82779881799187*^9}, {
   3.8277988502754073`*^9, 3.8277988823123302`*^9}, {3.827798965012719*^9, 
   3.827798985326463*^9}, {3.8277990923574657`*^9, 3.8277990988792877`*^9}, {
   3.8277995865248365`*^9, 3.8277997390207796`*^9}, {3.8278001424565516`*^9, 
   3.8278001771493835`*^9}, {3.827800216273014*^9, 3.8278003047232003`*^9}, {
   3.8304961688798947`*^9, 3.830496182104432*^9}, {3.8304968499514694`*^9, 
   3.830496855033521*^9}, {3.8305010633419504`*^9, 3.830501121217151*^9}, {
   3.8305012163595467`*^9, 3.8305012356847925`*^9}, {3.830501276559722*^9, 
   3.830501276665716*^9}, {3.8305013310563126`*^9, 3.8305013537005143`*^9}, {
   3.830504107206767*^9, 3.830504108009307*^9}, 3.830504147193492*^9, {
   3.8305042022168713`*^9, 3.8305042208638496`*^9}, {3.830563464982772*^9, 
   3.830563479830703*^9}, {3.830815208544962*^9, 3.8308152109567113`*^9}, {
   3.8309848693053026`*^9, 3.8309848702645216`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"8b3c2485-540c-4a01-a11b-c5fc1b357849"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Emax$$ = 0.00005, $CellContext`T1$$ = 
    0.2, $CellContext`T2$$ = 0.02, $CellContext`\[Gamma]s$$ = 
    0.442, $CellContext`\[Kappa]1$$ = 0.01, $CellContext`\[Kappa]2$$ = 
    0.01, $CellContext`\[CapitalTau]max$$ = 0.001, $CellContext`\[Omega]1$$ = 
    1.1, $CellContext`\[Omega]2$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Item["Fixed Bath Temperatures", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`T1$$], 0.2}, 0.001, 1}, {{
       Hold[$CellContext`T2$$], 0.02}, 0.001, 1}, {
      Hold[
       Item["Bath Coupling Factors", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Kappa]1$$], 0.01}, 0.001, 2}, {{
       Hold[$CellContext`\[Kappa]2$$], 0.01}, 0.001, 2}, {
      Hold[
       Item["System Parameters", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]1$$], 1.1}, 0, 2}, {{
       Hold[$CellContext`\[Omega]2$$], 0.2}, 0, 2}, {{
       Hold[$CellContext`\[Gamma]s$$], 0.3}, 0.001, 2}, {
      Hold[
       Item["Simulation and Display Parameters", Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`Emax$$], 0.00005}, 0.00001, 0.001}, {{
       Hold[$CellContext`\[CapitalTau]max$$], 0.001}, 0.0001, 0.01}}, 
    Typeset`size$$ = {1343.5, {1016., 145.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Emax$$ = 0.00005, $CellContext`T1$$ = 
        0.2, $CellContext`T2$$ = 0.02, $CellContext`\[Gamma]s$$ = 
        0.3, $CellContext`\[Kappa]1$$ = 0.01, $CellContext`\[Kappa]2$$ = 
        0.01, $CellContext`\[CapitalTau]max$$ = 
        0.001, $CellContext`\[Omega]1$$ = 1.1, $CellContext`\[Omega]2$$ = 
        0.2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`temp1$, $CellContext`temp2$, $CellContext`temp3$, \
$CellContext`temp4$, $CellContext`\[Eta]s$, $CellContext`\[Nu]s$, \
$CellContext`\[CapitalDelta]s$, $CellContext`\[CapitalOmega]s$}, \
$CellContext`temp1$ = $CellContext`varFunc[$CellContext`T1$$, \
$CellContext`T2$$, $CellContext`\[Kappa]1$$, $CellContext`\[Kappa]2$$, \
$CellContext`\[Omega]1$$, $CellContext`\[Omega]2$$, $CellContext`\[Gamma]s$$, \
$CellContext`unitassum]; $CellContext`temp2$ = ReplaceAll[Table[
             $CellContext`HtotEVal[$CellContext`i], {$CellContext`i, 1, 
              4}]/$CellContext`\[HBar], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]]; $CellContext`temp3$ = 
         ReplaceAll[
           Dot[
            Inverse[$CellContext`HtotEVecMatrix], 
            Part[$CellContext`temp1$, 4], $CellContext`HtotEVecMatrix], 
           
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]]; $CellContext`temp4$ = 
         Part[$CellContext`temp1$, 4]; $CellContext`\[CapitalDelta]s$ = 
         ReplaceRepeated[$CellContext`\[CapitalDelta], 
           
           Flatten[{$CellContext`\[CapitalDelta]\[CapitalOmega]assum, 
             Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$}]]; $CellContext`\[CapitalOmega]s$ = 
         ReplaceRepeated[$CellContext`\[CapitalOmega], 
           
           Flatten[{$CellContext`\[CapitalDelta]\[CapitalOmega]assum, 
             Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$}]]; $CellContext`\[Eta]s$ = 
         ReplaceRepeated[$CellContext`\[Eta], 
           
           Flatten[{$CellContext`\[CapitalDelta]\[CapitalOmega]assum, \
$CellContext`\[Eta]assum, 
             Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$}]]; $CellContext`\[Nu]s$ = 
         ReplaceRepeated[$CellContext`\[Nu], 
           
           Flatten[{$CellContext`\[CapitalDelta]\[CapitalOmega]assum, \
$CellContext`\[Eta]assum, 
             Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$}]]; {
          
          Plot[$CellContext`temp2$, {$CellContext`t, 0, 2}, ImageSize -> 
           Medium, PlotLegends -> {
            "|\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> = |\[UpArrow]\[UpArrow]>",
              "|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>", 
             "|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> = |\[DownArrow]\
\[DownArrow]>"}, AxesLabel -> {None, "Frequency"}, PlotRange -> {
             
             ReplaceAll[(-1.5) $CellContext`\[Omega]conv, \
$CellContext`unitassum], 
             ReplaceAll[
             1.5 $CellContext`\[Omega]conv, $CellContext`unitassum]}, 
           Ticks -> {None, Automatic}], 
          ReplaceAll[
           Table[
            MatrixForm[
             $CellContext`HtotEVec[$CellContext`i]], {$CellContext`i, 1, 4}], 
           Flatten[{
            Subscript[$CellContext`\[Omega], 1] -> $CellContext`\[Omega]1$$, 
             Subscript[$CellContext`\[Omega], 
               2] -> $CellContext`\[Omega]2$$, $CellContext`\[Gamma] -> \
$CellContext`\[Gamma]s$$, $CellContext`unitassum}]], 
          MatrixForm[{{
             TextForm[
             "Density Matrix - \
|\[UpArrow]\[UpArrow]>,|\[UpArrow]\[DownArrow]>,|\[DownArrow]\[UpArrow]>,|\
\[DownArrow]\[DownArrow]> basis"], 
             TextForm[
             "Density Matrix - |\!\(\*SubscriptBox[\(1\), \
\(DRE\)]\)>,|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>,|\!\(\*SubscriptBox[\(3\), \
\(DRE\)]\)>,|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)> basis"]}, {
             MatrixForm[$CellContext`temp3$], 
             MatrixForm[$CellContext`temp4$]}}], 
          $CellContext`DrawFunc[$CellContext`T1$$, $CellContext`T2$$, \
$CellContext`\[Omega]1$$, $CellContext`\[Omega]2$$, $CellContext`\[Gamma]s$$, 
           StringForm[
           "\!\(\*SubscriptBox[\(\[Omega]\), \(1\)]\)=``, \!\(\*SubscriptBox[\
\(\[Omega]\), \(2\)]\)=``, \[Gamma]=``,\n \[CapitalDelta]=``, \
\[CapitalOmega]=`` \n\[Eta]=``, \[Nu]=``", 
            DecimalForm[$CellContext`\[Omega]1$$, {3, 2}], 
            DecimalForm[$CellContext`\[Omega]2$$, {3, 2}], 
            DecimalForm[$CellContext`\[Gamma]s$$, {3, 2}], 
            DecimalForm[$CellContext`\[CapitalDelta]s$, {3, 2}], 
            DecimalForm[$CellContext`\[CapitalOmega]s$, {3, 2}], 
            DecimalForm[$CellContext`\[Eta]s$, {3, 2}], 
            
            DecimalForm[$CellContext`\[Nu]s$, {3, 
             2}]], $CellContext`\[CapitalTau]max$$, $CellContext`temp1$], 
          BarChart[
           Part[$CellContext`temp1$, 3], ChartLabels -> {"Left ", "Right"}, 
           PlotLabel -> "Equilibrium energy inflow", 
           AxesLabel -> {"", "\!\(\*SubscriptBox[\(J\), \(P\)]\)(J)"}, 
           ImageSize -> Medium, 
           PlotRange -> {-$CellContext`Emax$$, $CellContext`Emax$$}, 
           ChartStyle -> {Green, Red}], 
          BarChart[
           Part[$CellContext`temp1$, 2], ChartLabels -> 
           Placed[{"L |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>", 
              "L |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>", 
              "L |\!\(\*SubscriptBox[\(2\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>", 
              "L |\!\(\*SubscriptBox[\(3\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>", 
              "R |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(2\), \(DRE\)]\)>", 
              "R |\!\(\*SubscriptBox[\(1\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(3\), \(DRE\)]\)>", 
              "R |\!\(\*SubscriptBox[\(2\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>", 
              "R |\!\(\*SubscriptBox[\(3\), \(DRE\)]\)> to \
|\!\(\*SubscriptBox[\(4\), \(DRE\)]\)>"}, Bottom, Rotate[#, Pi/2]& ], 
           PlotLabel -> "Equilibrium thermal transition rate", ImageSize -> 
           Medium, ChartStyle -> {
            Red, $CellContext`RedC, $CellContext`RedC, 
             Red, $CellContext`BlueC, Blue, Blue, $CellContext`BlueC}], 
          BarChart[
           Part[$CellContext`temp1$, 1], 
           ChartLabels -> {
            "\!\(\*SubscriptBox[\(\[Rho]\), \({1, 1}\)]\)", 
             "\!\(\*SubscriptBox[\(\[Rho]\), \({2, 2}\)]\)", 
             "\!\(\*SubscriptBox[\(\[Rho]\), \({3, 3}\)]\)", 
             "\!\(\*SubscriptBox[\(\[Rho]\), \({4, 4}\)]\)"}, PlotLabel -> 
           "Equilibrium density matrix", ImageSize -> Medium, 
           PlotRange -> {-0.1, 1}, ChartStyle -> "Pastel"]}], 
      "Specifications" :> {Delimiter, 
        Item[
        "Fixed Bath Temperatures", Alignment -> 
         Center], {{$CellContext`T1$$, 0.2}, 0.001, 
         1}, {{$CellContext`T2$$, 0.02}, 0.001, 1}, Delimiter, 
        Item[
        "Bath Coupling Factors", Alignment -> 
         Center], {{$CellContext`\[Kappa]1$$, 0.01}, 0.001, 
         2}, {{$CellContext`\[Kappa]2$$, 0.01}, 0.001, 2}, Delimiter, 
        Item[
        "System Parameters", Alignment -> 
         Center], {{$CellContext`\[Omega]1$$, 1.1}, 0, 
         2}, {{$CellContext`\[Omega]2$$, 0.2}, 0, 
         2}, {{$CellContext`\[Gamma]s$$, 0.3}, 0.001, 2}, Delimiter, 
        Item[
        "Simulation and Display Parameters", Alignment -> 
         Center], {{$CellContext`Emax$$, 0.00005}, 0.00001, 
         0.001}, {{$CellContext`\[CapitalTau]max$$, 0.001}, 0.0001, 0.01}}, 
      "Options" :> {ContinuousAction -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{2332., {613., 621.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8214999898815413`*^9, 3.8215000002294927`*^9}, 
   3.8277910471199336`*^9, 3.8277911582634573`*^9, 3.8277912051288204`*^9, 
   3.8277912530323486`*^9, {3.827791365225153*^9, 3.827791392847542*^9}, {
   3.8277914719146547`*^9, 3.8277914900637245`*^9}, 3.8277915974914684`*^9, 
   3.8277917277852073`*^9, {3.82779188077016*^9, 3.827791909982136*^9}, {
   3.827791941905019*^9, 3.827791963034536*^9}, 3.827792087636614*^9, 
   3.8277921543244457`*^9, {3.8277922690716515`*^9, 3.827792347289139*^9}, {
   3.827792399683297*^9, 3.8277924229571333`*^9}, {3.8277925088951955`*^9, 
   3.82779253408943*^9}, 3.827792776399111*^9, 3.8277928149440746`*^9, {
   3.827793000803154*^9, 3.8277930440928607`*^9}, {3.8277930900076303`*^9, 
   3.8277931213888006`*^9}, {3.827793155849676*^9, 3.827793173047484*^9}, 
   3.8277932695377584`*^9, {3.8277933929581904`*^9, 3.8277934270962615`*^9}, 
   3.82779347919218*^9, {3.827793512759679*^9, 3.827793532301302*^9}, {
   3.8277935624924765`*^9, 3.827793650332988*^9}, 3.8277936824312453`*^9, 
   3.8277937897701764`*^9, 3.827798279952476*^9, 3.8277983124372454`*^9, 
   3.827798464480653*^9, 3.827798501636012*^9, 3.8277985949689503`*^9, {
   3.8277986310747385`*^9, 3.8277986540285625`*^9}, 3.827798743502898*^9, {
   3.8277988053812933`*^9, 3.8277988191283884`*^9}, 3.8277988830498877`*^9, 
   3.8277989874396067`*^9, 3.827799103092631*^9, {3.8277996106879034`*^9, 
   3.8277996315127788`*^9}, 3.827799686678174*^9, {3.827799719022772*^9, 
   3.827799740365797*^9}, {3.82780015933924*^9, 3.827800179118003*^9}, 
   3.8278003058134923`*^9, 3.83049604505758*^9, 3.8304961985389886`*^9, 
   3.830496654802434*^9, 3.830496712730174*^9, {3.8304967587144136`*^9, 
   3.8304967605604315`*^9}, {3.8304968511425533`*^9, 3.8304968586302476`*^9}, 
   3.8305006969142785`*^9, {3.830501069915083*^9, 3.8305011219536047`*^9}, {
   3.8305011603346076`*^9, 3.830501236334314*^9}, 3.8305012775161695`*^9, {
   3.8305013238879366`*^9, 3.8305013543186884`*^9}, {3.8305025939289875`*^9, 
   3.8305026184996495`*^9}, {3.8305026514826136`*^9, 3.830502675804196*^9}, {
   3.830503834921076*^9, 3.8305039048902698`*^9}, 3.83050410867598*^9, 
   3.830504148305766*^9, {3.830504183948844*^9, 3.8305042217377944`*^9}, 
   3.83050429855803*^9, 3.830504329745453*^9, {3.8305634432118807`*^9, 
   3.830563480456031*^9}, 3.83081521311639*^9, 3.8308156599417677`*^9, 
   3.830829573096885*^9, 3.8308302053833923`*^9, {3.830830254803664*^9, 
   3.830830270732727*^9}, {3.8309848622919817`*^9, 3.830984871195285*^9}, 
   3.831002616795087*^9, 3.8323047996788793`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"9f7d7756-f234-4bc5-8368-f82003a4b8e5"]
}, Open  ]],

Cell["Energy flow characteristics for different system parameters", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.77516851089515*^9, 3.7751685476613455`*^9}, 
   3.775534483351179*^9, 3.7946885928625154`*^9, {3.8277937373260674`*^9, 
   3.827793757831606*^9}},ExpressionUUID->"abd52f43-1490-415a-88b3-\
ac67dc9000c2"],

Cell["Energy flow under different levels of resonance", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830563614937607*^9, 
   3.830563653014323*^9}},ExpressionUUID->"cd63464d-38f4-44b8-bd06-\
342d0557f2a4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Energy flows when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "2"], TraditionalForm]],ExpressionUUID->
  "0ba18030-ded7-432f-b536-f23794ac76a5"],
 " is changed from below ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "31cb046d-9e39-4179-a44a-1924ea394fa6"],
 " to above ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "965cfe6c-1397-4b2d-8f48-611fdcdc1ee2"],
 ", keeping \[Gamma] constant,"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.783908449607541*^9, 3.783908455354002*^9}, {
   3.784608182289212*^9, 3.7846082053070126`*^9}, {3.7911635964968257`*^9, 
   3.7911636069399214`*^9}, 3.7911638142244873`*^9, {3.794442653811062*^9, 
   3.7944426545720263`*^9}, {3.7944430068452196`*^9, 3.794443033673576*^9}, 
   3.7946886885725245`*^9, {3.830563655478552*^9, 
   3.8305636953479176`*^9}},ExpressionUUID->"aa774917-5f74-4153-9f6f-\
2a25e1ccf8b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", 
    "\[Omega]1s_", ",", "\[Omega]2min_", ",", "\[Omega]2max_", ",", 
    "\[Gamma]s_", ",", "\[Omega]res_", ",", "legends_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempx", ",", "tempy", ",", "temp"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Omega]2", ",", "\[Omega]2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
          "\[Omega]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempy", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"varFunc", "[", 
          RowBox[{
          "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", 
           "\[Omega]1s", ",", "\[Omega]2", ",", "\[Gamma]s", ",", 
           "unitassum"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
           "\[Omega]res"}], "}"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"temp", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempx", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", 
            RowBox[{"tempy", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "3", ",", "i"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"temp", ",", "\n", "\t", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]2min", ",", "\[Omega]2max"}], "}"}], ",", 
          "Full"}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Gray", "]"}], ",", "13.5", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[Omega]2\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(J\), \
\(P\)]\)(\!\(\*SuperscriptBox[\(10\), \(-5\)]\))\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}], ",", 
       "\n", "\t", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", "\n", "\t", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Red", "}"}], ",", 
          RowBox[{"{", "BlueC", "}"}]}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"legends", " ", "&&", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(J\), \(L\)]\)\>\"", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(J\), \(R\)]\)\>\"", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}]}]}], 
      "]"}]}]}], "\n", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7846053822554855`*^9, 3.7846054490795164`*^9}, 
   3.784605598651943*^9, {3.7846057057891273`*^9, 3.784605707326879*^9}, 
   3.784607105425058*^9, 3.7846071591201334`*^9, {3.7846072066515055`*^9, 
   3.7846072088704977`*^9}, {3.7846073485014305`*^9, 3.784607358678322*^9}, {
   3.7846074031942687`*^9, 3.7846074260451765`*^9}, {3.7846081647114525`*^9, 
   3.7846081698775787`*^9}, {3.784608241733886*^9, 3.784608244317532*^9}, {
   3.784608460626673*^9, 3.7846084847240143`*^9}, {3.785616705451291*^9, 
   3.785616706554267*^9}, {3.7879741603576355`*^9, 3.78797418085876*^9}, {
   3.787974471115717*^9, 3.7879744759128747`*^9}, {3.7942848432110443`*^9, 
   3.794284846100052*^9}, {3.79428538556993*^9, 3.7942853943046494`*^9}, {
   3.794285534414443*^9, 3.794285540581482*^9}, {3.7942869541667633`*^9, 
   3.7942870173720303`*^9}, {3.794441589763091*^9, 3.794441651719434*^9}, 
   3.7944417740124226`*^9, {3.794441858910409*^9, 3.7944418736340227`*^9}, {
   3.794442348966787*^9, 3.7944423594398193`*^9}, {3.794443129273974*^9, 
   3.7944431708748393`*^9}, {3.794449946979224*^9, 3.7944499565328584`*^9}, {
   3.794522656502205*^9, 3.794522667379118*^9}, {3.7945278354850454`*^9, 
   3.794527846646296*^9}, {3.7945278939421206`*^9, 3.7945278946995583`*^9}, 
   3.794688688573558*^9, {3.7946915190426164`*^9, 3.7946915294018993`*^9}, {
   3.795133645536869*^9, 3.795133698355662*^9}, {3.795133832624301*^9, 
   3.795133837410489*^9}, {3.795994461925544*^9, 3.79599446649432*^9}, 
   3.79599472865281*^9, {3.8225247594397745`*^9, 3.822524775481331*^9}, {
   3.830563701248141*^9, 3.8305639391967916`*^9}, {3.830564199040367*^9, 
   3.830564247784162*^9}, {3.830564294935762*^9, 3.8305643132517457`*^9}, {
   3.830564347745745*^9, 3.8305643502150955`*^9}, 3.8305644748004894`*^9, {
   3.8305645800347605`*^9, 3.8305646186642475`*^9}, {3.8305647303130684`*^9, 
   3.830564773735257*^9}, {3.83099991378686*^9, 3.8309999169916687`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"214892ea-435d-4da2-9984-b93f6eb3f6fb"],

Cell[BoxData[
 RowBox[{"{", "\n", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
       ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]s", ",", 
       "\[Omega]res"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"T1", "=", 
       RowBox[{"0.2", "Tconv"}]}], ";", 
      RowBox[{"T2", "=", 
       RowBox[{"0.02", "Tconv"}]}], ";", "\n", 
      RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
      RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\n", 
      RowBox[{"\[Gamma]s", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"1.1", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"\[Omega]2min", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]2max", "=", 
       RowBox[{"1.8", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]res", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
        ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]s", ",", 
        "\[Omega]res", ",", "True"}], "]"}]}]}], "\n", "]"}], ",", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
       ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]s", ",", 
       "\[Omega]res"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"T1", "=", 
       RowBox[{"0.2", "Tconv"}]}], ";", 
      RowBox[{"T2", "=", 
       RowBox[{"0.02", "Tconv"}]}], ";", "\n", 
      RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
      RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\n", 
      RowBox[{"\[Gamma]s", "=", 
       RowBox[{"0.1", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"1.1", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"\[Omega]2min", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]2max", "=", 
       RowBox[{"1.8", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]res", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
        ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]s", ",", 
        "\[Omega]res", ",", "True"}], "]"}]}]}], "\n", "]"}], ",", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
       ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]s", ",", 
       "\[Omega]res"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"T1", "=", 
       RowBox[{"0.2", "Tconv"}]}], ";", 
      RowBox[{"T2", "=", 
       RowBox[{"0.02", "Tconv"}]}], ";", "\n", 
      RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
      RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\n", 
      RowBox[{"\[Gamma]s", "=", 
       RowBox[{"0.3", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"1.1", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"\[Omega]2min", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]2max", "=", 
       RowBox[{"1.8", "\[Omega]conv"}]}], ";", 
      RowBox[{"\[Omega]res", "=", 
       RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\n", 
      RowBox[{"PlotEngyFlowsWith\[Omega]2", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
        ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]s", ",", 
        "\[Omega]res", ",", "True"}], "]"}]}]}], "\n", "]"}]}], "\n", 
  "}"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7857028921184025`*^9, 3.7857030091050262`*^9}, 
   3.7857031252191353`*^9, {3.7942849169038873`*^9, 3.7942850013941927`*^9}, 
   3.794285072862439*^9, {3.7942855147958884`*^9, 3.794285518887411*^9}, {
   3.794441555530632*^9, 3.7944415556253767`*^9}, 3.7944417056701617`*^9, {
   3.794442436097172*^9, 3.79444243692293*^9}, {3.7945279010815015`*^9, 
   3.79452792114284*^9}, 3.794688688573558*^9, 3.7946932839715166`*^9, {
   3.7951336798561673`*^9, 3.795133680725828*^9}, {3.8225247938549786`*^9, 
   3.8225248317602715`*^9}, {3.830563946642151*^9, 3.83056414799172*^9}, 
   3.830564516376361*^9, {3.830564635531206*^9, 3.8305647125921535`*^9}, 
   3.8305648132468824`*^9, {3.830830008509595*^9, 3.8308300138694353`*^9}, {
   3.830830080064762*^9, 3.830830085427348*^9}, {3.8309849550920258`*^9, 
   3.8309849633575845`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"5267a07e-64d1-474d-813d-173f706860b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw11gs4lPkeB/DuneUc2thWsSGELlsUNbp8XboYl4oit5wwjCG5bBFx3Kay
W6SkQk2xqu3UUS4ntZUuJtRBpRBJ7kQYjBmXUcdMv/0/zzzzvPPO+///f9/P
731nND0D7b2nTZkypWDyJX0/rJyztTmCi7PWdeXH50zHt+MzUEuZ4TDYoom7
C4/02N3lYWR32YRksyGdz0ZS2KpnvA/rkZ4mHddxKurlI9cKC9yTfT8HacG6
Cnf7LDF5MPlJLoyyypWt8mzp+gKIGGeLmN/ZQa7296ANcoXg6ci9Y8jvhGy6
tHtY6H/fxqdtF/TdTj4d1nsAzbCqdZbpjrSfIqTX/mieaeCE7Mmra39/DJva
JbPtc5zxWbbeExRnz/fYr+SK1aukoxgP0/9mzvJyo/X58BEtkte6vAfFw3qT
KzyDalrJnfX/c4e8bD+liCvrOfG1/Z+wly1YBsVZA8n8Q3up3udo3vBsnCPe
i5YI6YQvcC1v6/G9gR6033JUtd10V2z2QLB0e0EVYCoExNTYeFI+lahIOxoz
J98TU2TjFbgOzNNKyl5UzyuUm4gdDIO8YNksXeA1+jJ7OA9Kvai+1yhR1az5
soCF5KfSAqqwLvu5+yY/FmTlrnozmXt8SfV/WZCVU/sGGQtaZo5NsKj+txiO
VYsUmXtDXbqdhdXguYWpKh7xpjyqUdC3NOUo3xtsH+mowdLYGYd4U30on1q4
65zed269D6SzKefUoiI0g5l70IfyeofkJw5bl/7HByLpdMPv8Dbpte6mVh/K
rw7nXOW9TFTY2ChrgHosPTOyy8aGTXnWw+yi4v670WzItnfkPZoXnvd5mMem
fBtwLcblYHo7GxXl0tGAY+MLfjup4kt5f4BaWdiJD9a++EG2wUbYdtRcKon2
pfwbIV6sEJBU4AvZdG4foSh3JSSi25c8mlB0+aJblSaH6mnCyflVrCYXDvk0
gX969cOBVA7V14S6XNuZu99wyKsZ4tLb5SwlP6q3GTubbLUPOPqRXzPObqg3
bb3gR/W3oI4zsnJepx95tiA+f/G/w4z88W26FvDsfhCEJ/iTbyvqDS7Vn2vy
p3xacac36KvDxn3k3Yo5z5kzN2Xto7za0JQxofvl7wHk34YBftbwz9EBlF8b
0lL1tp8aDaB+aEeRXNzdwcj9lGc7vJysZxvLBVJ/tIOhVRbrmBVI+XZgW7TG
UyOtIOqXDkxrfeRVcziI8u5AqE5pwf33QXS/d0KFUyS4bhFM+XfiJ+PkhH8V
BFM/dYJRoe6yekUIeXTBWS2lqKsghDy6MLGsJbN5yy/k0YXitwptZzp+IY8u
/MMkzTE39QB5fELo+TeP9R0PkscnsLxqD5ovCSWPT4h4oW2YpRxGHt3YtbfM
gK1yiDy6oRN8+bEZI5z6sxuJThxR6uEI8uhBSoZX79W2w+TRg+21VzMrI6LI
owclVsyuks3R5PEZkomJJu61GPL4jDiO9lT917Hk8Rm9D5xvauvGk0cvvKp+
4t7P45JHL9T93i4viT5KHr3YInfjz4sXE8ijD0cl6maBGsfJow8ePGPhCq0k
8uhDveYO563tyeTRjxBxwNXH2ink0Y9HF4y/Nxemkkc/9BV4o/yENPIQwNOy
/jcjQx7VI0Bv3P3XH42zyEcAo0t6twy4V6m+yfPRbPGOvJvkJcAxN8vsMzPy
qV4BNA4q7HmX9Cf5CVD4x23uPkEx1T+AbdU35tVdeUWeAwjezb/McmuiPAaw
aIm7b4OqkHwHYKLNiGKVTTf9ls8AzAuEt8sPDZH3AKYHFASszGmkvAax66TE
MMGkkvwHcY/FznE99oTyG0Tpl5rsyxl3qB8GsbLwq/MJl1v0ezSI7z9aSwy6
rtL9OoizD/y5H9mZlO8Q1s6Q/xy1OYP6ZQiCfIPclLZUynsI7UMfBMp9p6h/
htDjrVTT0JBI+Q9hDWOqwae1v1I/DeH69eZwjeQj5CHEyKD8TbPMOPIQQsG8
i1G5MYY8hHAu9p59PjmSPISIzwvdrm4TTh5CDBi8VFNMDCUPIYwfCJntaw+Q
hxCcft2fd68LIY9hXIjU6b/GDSKPYXysmG4wPuev58Uwqib8nX6M8CePYVi4
6r0QrOZQvw5D0v2su3o1mzyGwZhS8kdAoDd5iBCfK9e8psGLPERI5wQaLjvg
SR4icBdqmQYaeJCHCIkM/g0Vxb3kIQLDqNdafq47eYhw2natpt8aN/IQIya8
v98hwYU8xPBtVArJ/+pEHmI09nD11dN2k4cYCQ5Pwl/ucCQPMeYZJ5lGajmQ
hxhMRn6llcIu8hiBRfcVj4cKO8ljBD567YFXFtmTxwiS7Eo3qljakccIli7+
zsE7agd5jIDHtO1Ui9tOHiNYNmv5pVitbeQxAgZv33Vegw15jOLVKddfXW9Y
k8co7ldiQV2iFXmMYtlp9/1+cUzyGIWDauStpGOW5DGKM0Z273oytpLHKN6o
x+lYFW0hjzHUflq5KLl3M3mMQef9YsYjvc3kMQY93RmFgv2byGMM6s6ey3c+
+uv/4Bgs+Br6evMtyGMM+Z1WK58eNiePcdjHd03EdZiRxzhumDKH6pzMyGMc
Z1e8KDSvMiWPcVxUnTV1k70peYwj1iVA0nAb5DEOvzml/MKyjeQhQeOe2Upu
PRvIQwKbpHg/NZUN5CGBYeLch07b1pOHBHXTKgyjEteRhwQq+gvmTq02IQ8J
nqq68L21TfB/OXpiLw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]], 
          LineBox[CompressedData["
1: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
pUkeI7jYM3vm+AoN8hhBkZZtPktZg/kHUv3AYQ==
           "]]}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox[
          "\"\[Omega]2\"", FontFamily -> "Times New Roman", FontSize -> 14.5, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm]}, AxesOrigin -> {0.01, 0}, AxesStyle -> Directive[
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.01, 1.8}, {-2.4728479178488927`, 
        2.4728479178488927`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
blkseYxip0Nm+uHEGPIYhXPY/Ixaixj8DyNonpk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]], 
          LineBox[CompressedData["
1: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
           "]]}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox[
          "\"\[Omega]2\"", FontFamily -> "Times New Roman", FontSize -> 14.5, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm]}, AxesOrigin -> {0.01, 0}, AxesStyle -> Directive[
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.01, 1.8}, {-2.5233184625849177`, 
        2.5233184625849208`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw11gtYzOkeB/C51aQ8ooOeNmUjKR4c4mzHoe9/5bTM2uO6NselDrtFeVLE
UtlSCblECYWW4qilC1pHKVKpUHTVRdFt0lXT3JpmJp2a/6/3eebpmZnmfd/f
9/P+/7+/1c59G37hcTicjJHX6N+AyanfNfuHISknwiZs8wWw7y/C+ZtVN0zT
0vHY8nj3+sfxSPDZlmqR8py+v4VnPyTtmGVeirjY0ZEMcezLriUVVcjU/X8q
ZpjPfF3n9B4jb0Y+uY+tdllXk8qb6PcZeOGy4557eysMaxJ9lhv+D562q93j
a9qhmy42E5KCNAPPhE7YbYvMU9hmY3he8fUO5x7az1P0xBzMuVn4GbdGfl2T
mIsDef92KbsgQY9uveewtfHo56T3Y7H96MhHvYH0UtNTKa1fgBOqaapNz2TI
V9iOrPACx5x+Ojb3gRxGuv0UIcvgbeC0Kwps0C1YjJLiStUbXyXV+xLzfdUe
DRhAi//ohK8QI8q8VslT0X5LEP5x6+R/PFHBd3R7PqX4MUR4J2rPIOXzBsvW
BGRvmqAGRzfKUDj4H+uBZDXVU4aUVJt73cs0WNU8ukA5BBmB4TeKNFRfOdYe
ORMdLNLifN5oARX4a/L+i7IXWujKta+EW9uR9TuWDkFXTk0l/vnQ5PGMpCGq
vwrWF+tkvxt/wfTR7VhWQy0sDVvk+4XyqEbKKYNNi0u/wMN9dLzDW255kXbm
MOVTg9mu7jVNB4cxOtvk1BrsWlhtaZ8/THnVwrV536CVPodRjk6nqMWsHcFZ
6bYchs2vDj95P630Ws1hHHUHoB7a6ZnM4d0chs2zHlMNdnPVxzmMbnvH32M4
x9h6cgKHYfNtwGwp721HNocpLRkdDYh/ZC+Kfcdh2Lwb8Wr2SQPnPg4zRbfB
D6gwEadPEHIZNv8PKHFrsjGx5DK66bZ9xDWJUbT3Yi7DejSha1Kx57ciLsPW
04TQoYhf77hyGdanCeZ7TzZm+3GpviZUZN+0un6Ky7BezQjUhM7fFc+leptx
dW+1i91DLsP6NeOm8bqd44q5VH8L9ufcDJjWyGVYzxakmYhXBki5DDtdC3bZ
B5csN+AxrG8rrkUtOBNgyaN8WnGX0ez6fgmPYXlaISwoicpfw6O82pD6zYZ7
gz/zGNa/DYccy0/zfuNRfm247XvMSXqZx7DnQYyzTmphwwMe5SnGJrPFphVv
eAx7PsTg50TGibt5lG87ViSJQm0M+Qx7XtphtDXLLdGOT3m3wzz9+oI9Ij7D
Xu+fcPj6S6vQvXzK/xN6FvpsV0fyGfY8fUL1TMeH1Rl88ujA37PPicze88mj
A7J/cZ0KeQLy6IC7Z7mofq6APDqQe/CQ3drNAvLoxKuFKx2/ChGQRyciw4xl
c9ME5NEJr/uOM/c1CsijC0Nu8w8Xj9cjjy6Eh/lnT1muR+ezC6Z3TtjO89Yj
j26sWZpwt+F3PfLoBnIW/K2zXI88unHQO9dwgkCfPHqQ9UpkoV2iTx49eLp0
/6ktHvrk0YPv6nfMeX5Znzx6cTbEyS2vUJ88elFYPGVSs0yfPHrhGcWXxVgK
yeMzouISF6x1FpLHZ/Rs9vf29RSSx2cEHZBs3BIhJI8+PHEXBG2/LSSPPpjE
JhqVZwnJow/Ne67E6r8SkocE1hHuZRsrhFSPBJl54WunVArJRwIHzgPJg9dC
qk+Cl3wjh1tPhOQlwaPw9gK/BCHVK0FWdOG54iAh+UmQuqrvT9eNQqq/H8Wm
OalmFkLy7MduxdLogYaxPPoxZ9K5fRbR+uTbjy/l8KrAWD79GO5YkRfUqkfe
/WidIopO/U2P8pKi+I/aqwITPfKXIr890IiJF1B+UsiV9rcXWQvoPEjh0fnW
O/sWn2H7kRTXzDIWFn7Np+tViq8uuE1YFsujfGU41Za23cB47PqVofjAgYnG
oWP3HxkicmPv2ynH7ncyTCxNtrLew6H8ZTDMKJrjlzlM93MZAgLP3p2T+IX6
hxzxrUF7Y88PUf+RI2bS8e1FIVq6H8sx9V6zXoy/hu7/cvhUHcrKOTzWb+TI
O6c+WXd0EKyHHIkW4XdcI1RgPeRw+vrbZcnxA9QvFIjan7xZnqWk/qSAlc8a
tftHBfU7BSzmzbEyGa+gfqkAR2GQIGfk1F8UaFL49QwdlVE/U2C3UfP5iflS
sB5KZCz6IVIwUQrWQ4nNzzieyT/3Uz9Sok7soi3KlVD/U6L0bKCptbWEng+U
cI41K9NMGzm3Og8lVlsGrrcZ7qXnjQGEyYPWMJ97qF8OIOSB+aLnnd1gPQaQ
YhTy8Ov+LrAeA7COu99Rw++ifjcAzHNZvtOqkzwGcHp81VzH1R3koUKUp3dp
r/8n8lChSrjEeeDPdvJQ4XjoLBPxoJg8VLjkl+7g7CwmDxWW5Kk8U+PayEOF
g4/jJz5StpKHCg7mrs7qLa3kMYjvbX8sn1bQQh6DcMheMa5gcQt5DMK0v+VJ
3N1m8hhERpbKcJ1tM3kMQjQ+1PnyH03kMYigGSsKZi9qIg81Ik8YeB05+pE8
1Kgd0lPZ3fhAHmpk3GzXil83kocaH0UxagdOIz3vqDHP1bEsY1kDeagxfLrd
oz/4PXlo4HV13S9nSurJQ4MrmtM1ttPryUMDv2CvXu/DdeShgcutCSlGtbXk
ocHRlZdS05fXkocG/Bbj+r8k15CHFvNdLtv2mdWQhxZY+N/dnPPvyEOL6L5g
vXFG78hDi6RfU8pLI6rJQ4ta8ZaqqcbV5KFF7vorZmmXq/B/5uhvyw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]], 
          LineBox[CompressedData["
1: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
v3epkfg//zzGIA==
           "]]}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]]}, {
          Directive[
           PointSize[0.007333333333333334], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {
         FormBox[
          StyleBox[
          "\"\[Omega]2\"", FontFamily -> "Times New Roman", FontSize -> 14.5, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
           "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
          TraditionalForm]}, AxesOrigin -> {0.01, 0}, AxesStyle -> Directive[
         RGBColor[
         0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
         13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.01, 1.8}, {-2.9780679905892073`, 2.978067990589207}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\)\"", FontFamily -> 
          "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
        "PointLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8305641344738665`*^9, 3.830564156000758*^9}, 
   3.8305642296512814`*^9, {3.8305643060950303`*^9, 3.830564321994195*^9}, 
   3.830564359151908*^9, 3.8305645643126287`*^9, {3.8305646108804064`*^9, 
   3.8305646304034147`*^9}, 3.8305646697079554`*^9, 3.8305648035152674`*^9, 
   3.830815725851224*^9, 3.8308296392075615`*^9, 3.8308301190050716`*^9, 
   3.830985019823701*^9, 3.8309999533089685`*^9, 3.8310026503698606`*^9, 
   3.8323048773198986`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"82e6b686-045b-4e49-84f3-1c47f1fb130a"],

Cell["\<\
Energy flow under different levels of resonance and different coupling \
strengths\
\>", "Subsection",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830563614937607*^9, 3.830563653014323*^9}, {
   3.830564864542782*^9, 
   3.8305648699592905`*^9}},ExpressionUUID->"8953fac5-5305-4963-b88f-\
8cd78d7ebe7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEngyFlowsWith\[Gamma]", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", 
    "\[Omega]1s_", ",", "\[Omega]2s_", ",", "\[Gamma]min_", ",", 
    "\[Gamma]max_", ",", "\[Gamma]res_", ",", "legends_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempx", ",", "tempy", ",", "temp", ",", "p1", ",", "p2"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]", ",", "\[Gamma]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
          "\[Gamma]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempy", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"varFunc", "[", 
          RowBox[{
          "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", 
           "\[Omega]1s", ",", "\[Omega]2s", ",", "\[Gamma]", ",", 
           "unitassum"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
           "\[Gamma]res"}], "}"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"temp", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempx", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "i"}], "]"}], "]"}], ",", 
            RowBox[{"tempy", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "3", ",", "i"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"p1", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"temp", ",", "\n", "\t", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Gamma]min", ",", "\[Gamma]max"}], "}"}], ",", "Full"}],
           "}"}]}], ",", "\n", "\t", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\n", "\t", 
        RowBox[{"AxesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Gray", "]"}], ",", "13.5", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
          "]"}]}], ",", "\n", "\t", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\[Gamma]\>\"", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(J\), \(P\)]\)(\!\(\*SuperscriptBox[\(10\
\), \(-5\)]\))\>\"", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}], ",",
         "\n", "\t", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", "\n", "\t", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Red", "}"}], ",", 
           RowBox[{"{", "BlueC", "}"}]}], "}"}]}], ",", "\n", "\t", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"legends", " ", "&&", 
          RowBox[{"{", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(J\), \(L\)]\) with \!\(\*SubscriptBox[\
\(\[Sigma]\), \(x\)]\)-\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(J\), \(R\)]\) with \!\(\*SubscriptBox[\
\(\[Sigma]\), \(x\)]\)-\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}]}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SuperscriptBox["10", "5"], "0.0000246642"}], ",", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["10", "5"]}], "0.0000246642"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max"}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"BlueC", ",", "Dashed"}], "}"}]}], "}"}]}], ",", "\n", 
        "\t", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"legends", " ", "&&", 
          RowBox[{"{", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(J\), \(L\)]\) with \!\(\*SubscriptBox[\
\(B\), \(I\)]\)\>\"", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(J\), \(R\)]\) with \!\(\*SubscriptBox[\
\(B\), \(I\)]\)\>\"", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14.5"}]}], "]"}]}], "}"}]}]}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"p1", ",", "p2"}], "]"}]}]}], "\n", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7846053822554855`*^9, 3.7846054490795164`*^9}, 
   3.784605598651943*^9, {3.7846057057891273`*^9, 3.784605707326879*^9}, 
   3.784607105425058*^9, 3.7846071591201334`*^9, {3.7846072066515055`*^9, 
   3.7846072088704977`*^9}, {3.7846073485014305`*^9, 3.784607358678322*^9}, {
   3.7846074031942687`*^9, 3.7846074260451765`*^9}, {3.7846081647114525`*^9, 
   3.7846081698775787`*^9}, {3.784608241733886*^9, 3.784608244317532*^9}, {
   3.784608460626673*^9, 3.7846084847240143`*^9}, {3.785616705451291*^9, 
   3.785616706554267*^9}, {3.7879741603576355`*^9, 3.78797418085876*^9}, {
   3.787974471115717*^9, 3.7879744759128747`*^9}, {3.7942848432110443`*^9, 
   3.794284846100052*^9}, {3.79428538556993*^9, 3.7942853943046494`*^9}, {
   3.794285534414443*^9, 3.794285540581482*^9}, {3.7942869541667633`*^9, 
   3.7942870173720303`*^9}, {3.794441589763091*^9, 3.794441651719434*^9}, 
   3.7944417740124226`*^9, {3.794441858910409*^9, 3.7944418736340227`*^9}, {
   3.794442348966787*^9, 3.7944423594398193`*^9}, {3.794443129273974*^9, 
   3.7944431708748393`*^9}, {3.794449946979224*^9, 3.7944499565328584`*^9}, {
   3.794522656502205*^9, 3.794522667379118*^9}, {3.7945278354850454`*^9, 
   3.794527846646296*^9}, {3.7945278939421206`*^9, 3.7945278946995583`*^9}, 
   3.794688688573558*^9, {3.7946915190426164`*^9, 3.7946915294018993`*^9}, {
   3.795133645536869*^9, 3.795133698355662*^9}, {3.795133832624301*^9, 
   3.795133837410489*^9}, {3.795994461925544*^9, 3.79599446649432*^9}, 
   3.79599472865281*^9, {3.8225247594397745`*^9, 3.822524775481331*^9}, {
   3.830563701248141*^9, 3.8305639391967916`*^9}, {3.830564199040367*^9, 
   3.830564247784162*^9}, {3.830564294935762*^9, 3.8305643132517457`*^9}, {
   3.830564347745745*^9, 3.8305643502150955`*^9}, 3.8305644748004894`*^9, {
   3.8305645800347605`*^9, 3.8305646186642475`*^9}, {3.8305647303130684`*^9, 
   3.830564773735257*^9}, {3.8309994102260914`*^9, 3.83099948939719*^9}, {
   3.830999550284157*^9, 3.8309995936812477`*^9}, {3.8309999307772217`*^9, 
   3.8309999401284504`*^9}, {3.83099997728826*^9, 3.8309999889079843`*^9}, {
   3.831000033331126*^9, 3.8310000737878103`*^9}, {3.8310001349563975`*^9, 
   3.8310003214464903`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"db9764a1-b7f3-4544-9693-6b777bb62db3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
     ",", "\[Omega]2", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
     "\[Gamma]res"}], "}"}], ",", "\n", 
   RowBox[{
    RowBox[{"T1", "=", 
     RowBox[{"0.2", "Tconv"}]}], ";", 
    RowBox[{"T2", "=", 
     RowBox[{"0.02", "Tconv"}]}], ";", "\n", 
    RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\n", 
    RowBox[{"\[Gamma]min", "=", 
     RowBox[{"0.01", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Gamma]max", "=", 
     RowBox[{"0.5", " ", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Gamma]res", "=", "0.015"}], ";", "\n", 
    RowBox[{"\[Omega]1", "=", 
     RowBox[{"1.1", "\[Omega]conv"}]}], ";", "\n", 
    RowBox[{"\[Omega]2", "=", 
     RowBox[{"0.2", "\[Omega]conv"}]}], ";", "\n", 
    RowBox[{"PlotEngyFlowsWith\[Gamma]", "[", 
     RowBox[{
     "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
      ",", "\[Omega]2", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
      "\[Gamma]res", ",", "True"}], "]"}]}]}], "\n", "]"}]], "Input",
 CellChangeTimes->{
  3.545825155715281*^9, {3.830999615279605*^9, 3.830999655837964*^9}, {
   3.8309997705177135`*^9, 3.8309997858614864`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"2731d15b-d8a2-4ca3-ba64-f2cf641454b3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQXS2yzv1hVYv9Q9ujvzO/J9jPmgkG9s1coatPlHfZ
Q+SX2Hu4n2Xf/niBvWZM/6GvGmvsBcS752SeXm//OnCHXOvrjfbiE4MPqs/e
aQ+UBKrYar9+pf5l0/2H7CHG7bT/3a0leHH3SfsCW67riwv22r80lJE7f+uC
/RKwwAH7VB49v9l+V+0nQAywX3S96eQLg1tQ+4/YJ/xY0nio4r59Ghgcs/+3
x/dwYt8j+yCQ9YEn7C/39jye3fnU3g5kvO0p+zcCsf9kV76AuveMvbbtWcF3
z1/bg40TOWdf2fXjl7jje3sGMLhg/1Lhm/3d8I/230C2f71gn3b1UV2n+Gf7
N2D/XbTvKC654Hz3iz1QM9CES/azgtl5byz7Zg+yjev6ZXudZQ7pekU/7M+e
AYEr9r5Hv7v62f6ChsdV+4Icz4wEtj/2YOfuuGa/9HVd/IbTf+3Bzll33f5J
z6Octd3/oeFxw17129zM0kUMDpD4uGmf/9z7Gn81o0M/2MBb9jHvFmsJ+zM5
tIIj4La9ikbqvr+yzA6Q8Lpjf6I7sCzuObMDJLzv2nMmyHBdWcXiAAm/e/Zh
u08b82SwOoCDJ+a+/X6BK+cOybE5AACC4AoW
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2627, 0.4313, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQXS2yzv1hVYv9XcejvzO/J+yfNRMM7Ddyh64+Ud61
HyK/xP6i+1n27Y8X7NeM6T/0VWONvZJY95zM0+v3vw7cIdf6eqP94wnBB9Vn
79wPlASq2Go/aaX+ZdP9h/ZDjNtpb9ejJXhx98n9BbZc1xcX7LV/aigjd/7W
hf1LwAIH7HN49Pxm+13dPwFigP38600nXxjcgtp/xD73x5LGQxX396eBwTH7
X3t8Dyf2PdofBLI+8IT9zd6ex7M7n+63Axlve8r+pUDsP9mVL6DuPWOvZ3tW
8N3z1/vBxomcsy/o+vFL3PH9fgYwuGD/UuGb/d3wj/u/gWz/esE+7uqjuk7x
z/vfgP130b61uOSC890v+4GagSZcsl8czM57Y9m3/SDbuK5fttdf5pCuV/Rj
/9kzIHDF3uvod1c/21/Q8LhqX5zjmZHA9mc/2Lk7rtmvfl0Xv+H03/1g56y7
bv+851HO2u7/0PC4Ya/8bW5m6SKGA5D4uGlf+dz7Gn8144F+sIG37BPfLdYS
9mc60AqOgNv2Khqp+/7KMh+AhNcd+9PdgWVxz5kPQML7rj1PggzXlVUsByDh
d88+bPdpY54M1gPg4Im5b79f4Mq5Q3JsBwCquht0
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2627, 0.4313, 1]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2627, 0.4313, 1]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPY/Jff6jqhZ7x1kbM6x2MzsEvGT6ahjSB+czZsQv
PSA2Bc7vu25jqHJkHpzPPGVXsFHcEjg/5rO/tZfjSjhfWfybbU7fOjh/w9Un
UXUHNsL5LEzhS07nbYHzn59kPTJFYDtC3stbTrR1J5wfoSPZNktvD0L9sVqN
66v2wflNdf0X3HsPwPlrvJZMXnb/IJz/pYjlS4L0YTg//IzG7bmFR+D8xuLs
tTMOHoXzT5b9lHn/6xicr7PaW/iE3wmE+dYvl/3pPgnne/z1Orj58Sk4fzXP
6WMapmfgfO2KaZk/88/C+cdF1Cb7HD0H5x9oY1j7l/ECnM+g9ZfVZB6Cf+5p
9KLV7hcR5vsn8F58iuCLXjq223ziJTg/uXpPfK3lZTh//6XwSwXXEPyVTqEd
SxuuwPmLEn7wdMhfhfPrlmq1e+5G8F8w7XfxSbkG5yfy/bzwh/E6nJ9uNHXB
uzUIfg3Ldbs+nxtwfunf5Zd4XiL4v/lurzwz6SacP+HcZn8rw1tw/uZl7yxe
3kHwdy7dIV7eehsRHkEaRzcp3YHzCyV+bdU/i+Ar9RSWRuXchfO3q1VopXDc
g/Nv3XygtH4jgs9t/f7lcv/7cP5Zy5nvLy9H8PstnL/+/4/gAwChzHqV
           "]]}, Annotation[#, "Charting`Private`Tag$92767#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2627, 0.4313, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPY/Jff6jqhZ7x1kbM6x2Mx8IeMn01TCkD85nzIhf
ekBsCpzfd93GUOXIPDifecquYKO4JXB+zGd/ay/HlXC+svg325y+dXD+hqtP
ouoObITzWZjCl5zO2wLnPz/JemSKwHaEvJe3nGjrTjg/QkeybZbeHoT6Y7Ua
11ftg/Ob6vovuPcegPPXeC2ZvOz+QTj/SxHLlwTpw3B++BmN23MLj8D5jcXZ
a2ccPArnnyz7KfP+1zE4X2e1t/AJvxMI861fLvvTfRLO9/jrdXDz41Nw/mqe
08c0TM/A+doV0zJ/5p+F84+LqE32OXoOzj/QxrD2L+MFOJ9B6y+ryTwE/9zT
6EWr3S8izPdP4L34FMEXvXRst/nES3B+cvWe+FrLy3D+/kvhlwquIfgrnUI7
ljZcgfMXJfzg6ZC/CufXLdVq99yN4L9g2u/ik3INzk/k+3nhD+N1OD/daOqC
d2sQ/BqW63Z9Pjfg/NK/yy/xvETwf/PdXnlm0k04f8K5zf5Whrfg/M3L3lm8
vIPg71y6Q7y89TYiPII0jm5SugPnF0r82qp/FsFX6iksjcq5C+dvV6vQSuG4
B+ffuvlAaf1GBJ/b+v3L5f734fyzljPfX16O4PdbOH/9/x/BBwAuQpSV
           "]]}, Annotation[#, "Charting`Private`Tag$92767#2"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox[
        "\"\[Gamma]\"", FontFamily -> "Times New Roman", FontSize -> 14.5, 
         StripOnInput -> False], TraditionalForm], 
       FormBox[
        StyleBox[
        "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
         "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
        TraditionalForm]}, AxesOrigin -> {0.01, 0}, AxesStyle -> Directive[
       RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       13.5, FontFamily -> "Times New Roman"], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.01, 0.5}, {-2.7650200041262845`, 2.7650200041262845`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\) with \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(x\\)]\\)-\\!\\(\\*SubscriptBox[\\(\
\[Sigma]\\), \\(x\\)]\\)\"", FontFamily -> "Times New Roman", FontSize -> 
            14.5, StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\) with \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(x\\)]\\)-\\!\\(\\*SubscriptBox[\\(\
\[Sigma]\\), \\(x\\)]\\)\"", FontFamily -> "Times New Roman", FontSize -> 
            14.5, StripOnInput -> False]}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(L\\)]\\) with \
\\!\\(\\*SubscriptBox[\\(B\\), \\(I\\)]\\)\"", FontFamily -> 
            "Times New Roman", FontSize -> 14.5, StripOnInput -> False], 
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(R\\)]\\) with \
\\!\\(\\*SubscriptBox[\\(B\\), \\(I\\)]\\)\"", FontFamily -> 
            "Times New Roman", FontSize -> 14.5, StripOnInput -> False]}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2627, 0.4313, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2627, 0.4313, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17513333333333334`, 0.28753333333333336`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2627`", ",", "0.4313`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2627, 0.4313, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2627, 0.4313, 1], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.545825155715281*^9, {3.8309997627545624`*^9, 3.8309997888525615`*^9}, 
   3.8310000793374166`*^9, {3.8310002114643373`*^9, 3.8310002246887655`*^9}, {
   3.831000296272195*^9, 3.8310003298931265`*^9}, 3.8310026525057535`*^9, 
   3.832304879518897*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"7f6834cc-1678-4dd6-b0e7-c6b77f563ddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEngyFlowsWith\[Omega]2and\[Gamma]", "[", 
   RowBox[{
   "T1_", ",", "T2_", ",", "\[Kappa]1_", ",", "\[Kappa]2_", ",", 
    "\[Omega]1s_", ",", "\[Omega]2min_", ",", "\[Omega]2max_", ",", 
    "\[Gamma]min_", ",", "\[Gamma]max_", ",", "\[Omega]res_", ",", 
    "\[Gamma]res_", ",", "legends_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempx", ",", "tempy", ",", "tempz", ",", "temp"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"tempx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"\[Omega]2", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
          "\[Omega]res"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
          "\[Gamma]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempy", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"\[Gamma]", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
          "\[Omega]res"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
          "\[Gamma]res"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"tempz", "=", 
      RowBox[{
       SuperscriptBox["10", "5"], 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"varFunc", "[", 
           RowBox[{
           "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", 
            "\[Omega]1s", ",", "\[Omega]2", ",", "\[Gamma]", ",", 
            "unitassum"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
           "\[Omega]res"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
           "\[Gamma]res"}], "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\n", 
     RowBox[{"temp", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "tempx", "]"}], "[", 
           RowBox[{"[", ";;", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Flatten", "[", "tempy", "]"}], "[", 
           RowBox[{"[", ";;", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Flatten", "[", "tempz", "]"}], "[", 
           RowBox[{"[", ";;", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"ListPlot3D", "[", 
      RowBox[{"temp", ",", "\n", "\t", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]2min", ",", "\[Omega]2max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]min", ",", "\[Gamma]max"}], "}"}], ",", "Full"}], 
         "}"}]}], ",", "\n", "\t", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\n", "\t", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "20.5", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2\)]\)\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "20.5"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\[Gamma]\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "20.5"}]}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(J\), \
\(P\)]\)(\!\(\*SuperscriptBox[\(10\), \(-5\)]\))\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "20.5"}]}], "]"}]}], "}"}]}], ",", 
       "\n", "\t", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<BlueGreenYellow\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"\[Omega]2", ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Omega]2", ",", "\[Omega]2min", ",", "\[Omega]2max", ",", 
              "0.1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Gamma]", ",", "\[Gamma]min", ",", "\[Gamma]max", ",", 
              "0.05"}], "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]}], "\n", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7846053822554855`*^9, 3.7846054490795164`*^9}, 
   3.784605598651943*^9, {3.7846057057891273`*^9, 3.784605707326879*^9}, 
   3.784607105425058*^9, 3.7846071591201334`*^9, {3.7846072066515055`*^9, 
   3.7846072088704977`*^9}, {3.7846073485014305`*^9, 3.784607358678322*^9}, {
   3.7846074031942687`*^9, 3.7846074260451765`*^9}, {3.7846081647114525`*^9, 
   3.7846081698775787`*^9}, {3.784608241733886*^9, 3.784608244317532*^9}, {
   3.784608460626673*^9, 3.7846084847240143`*^9}, {3.785616705451291*^9, 
   3.785616706554267*^9}, {3.7879741603576355`*^9, 3.78797418085876*^9}, {
   3.787974471115717*^9, 3.7879744759128747`*^9}, {3.7942848432110443`*^9, 
   3.794284846100052*^9}, {3.79428538556993*^9, 3.7942853943046494`*^9}, {
   3.794285534414443*^9, 3.794285540581482*^9}, {3.7942869541667633`*^9, 
   3.7942870173720303`*^9}, {3.794441589763091*^9, 3.794441651719434*^9}, 
   3.7944417740124226`*^9, {3.794441858910409*^9, 3.7944418736340227`*^9}, {
   3.794442348966787*^9, 3.7944423594398193`*^9}, {3.794443129273974*^9, 
   3.7944431708748393`*^9}, {3.794449946979224*^9, 3.7944499565328584`*^9}, {
   3.794522656502205*^9, 3.794522667379118*^9}, {3.7945278354850454`*^9, 
   3.794527846646296*^9}, {3.7945278939421206`*^9, 3.7945278946995583`*^9}, 
   3.794688688573558*^9, {3.7946915190426164`*^9, 3.7946915294018993`*^9}, {
   3.795133645536869*^9, 3.795133698355662*^9}, {3.795133832624301*^9, 
   3.795133837410489*^9}, {3.795994461925544*^9, 3.79599446649432*^9}, 
   3.79599472865281*^9, {3.8225247594397745`*^9, 3.822524775481331*^9}, {
   3.830563701248141*^9, 3.8305639391967916`*^9}, {3.830564199040367*^9, 
   3.830564247784162*^9}, {3.830564294935762*^9, 3.8305643132517457`*^9}, {
   3.830564347745745*^9, 3.8305643502150955`*^9}, 3.8305644748004894`*^9, {
   3.8305645800347605`*^9, 3.8305646186642475`*^9}, {3.8305647303130684`*^9, 
   3.830564773735257*^9}, {3.8305648952560425`*^9, 3.8305649322056*^9}, {
   3.8305650645070114`*^9, 3.830565080795905*^9}, {3.830565212085184*^9, 
   3.8305653562502236`*^9}, {3.830565471678116*^9, 3.830565485600971*^9}, {
   3.8305655810004897`*^9, 3.8305655853355656`*^9}, {3.8305656404900527`*^9, 
   3.830565657479143*^9}, {3.830565710841158*^9, 3.8305657272094116`*^9}, {
   3.8305657604356985`*^9, 3.8305658433335524`*^9}, {3.8305659363739896`*^9, 
   3.8305659370966835`*^9}, {3.8305660128396215`*^9, 3.830566018358389*^9}, 
   3.8305661076293344`*^9, {3.830566357333226*^9, 3.830566363185563*^9}, {
   3.830987066734949*^9, 3.830987132089285*^9}, {3.8309871629550295`*^9, 
   3.830987246773713*^9}, {3.8309873013739967`*^9, 3.8309873364462233`*^9}, {
   3.8309874037310534`*^9, 3.8309874313870087`*^9}, {3.830987481686742*^9, 
   3.830987556214438*^9}, {3.830987591025442*^9, 3.830987662604162*^9}, 
   3.8309877203563957`*^9, {3.830987755241585*^9, 3.830987766703912*^9}, {
   3.83098789345354*^9, 3.8309879473996267`*^9}, {3.8309879783902054`*^9, 
   3.830988069018319*^9}, {3.830988519561525*^9, 3.8309886308903894`*^9}, {
   3.8309969443803873`*^9, 3.830996947113953*^9}, {3.830999283667488*^9, 
   3.8309993366766143`*^9}, {3.831002527659751*^9, 3.831002530755099*^9}, {
   3.8310026334752097`*^9, 3.83100263369541*^9}, {3.831002667568905*^9, 
   3.831002668151211*^9}, {3.8310035329006567`*^9, 3.831003533592746*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"67bffbb8-0e88-473f-ae89-8143d881c420"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
     ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]min", ",", 
     "\[Gamma]max", ",", "\[Omega]res", ",", "\[Gamma]res"}], "}"}], ",", 
   "\n", 
   RowBox[{
    RowBox[{"T1", "=", 
     RowBox[{"0.2", "Tconv"}]}], ";", 
    RowBox[{"T2", "=", 
     RowBox[{"0.02", "Tconv"}]}], ";", "\n", 
    RowBox[{"\[Kappa]1", "=", "0.01"}], ";", 
    RowBox[{"\[Kappa]2", "=", "0.01"}], ";", "\n", 
    RowBox[{"\[Gamma]min", "=", 
     RowBox[{"0.01", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Gamma]max", "=", 
     RowBox[{"0.5", " ", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Gamma]res", "=", "0.015"}], ";", "\n", 
    RowBox[{"\[Omega]1", "=", 
     RowBox[{"1.1", "\[Omega]conv"}]}], ";", "\n", 
    RowBox[{"\[Omega]2min", "=", 
     RowBox[{"0.01", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Omega]2max", "=", 
     RowBox[{"1.8", "\[Omega]conv"}]}], ";", 
    RowBox[{"\[Omega]res", "=", 
     RowBox[{"0.01", "\[Omega]conv"}]}], ";", "\n", 
    RowBox[{"PlotEngyFlowsWith\[Omega]2and\[Gamma]", "[", 
     RowBox[{
     "T1", ",", "T2", ",", "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Omega]1", 
      ",", "\[Omega]2min", ",", "\[Omega]2max", ",", "\[Gamma]min", ",", 
      "\[Gamma]max", ",", "\[Omega]res", ",", "\[Gamma]res", ",", "True"}], 
     "]"}]}]}], "\n", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.545825155715281*^9, {3.7857028921184025`*^9, 3.7857030091050262`*^9}, 
   3.7857031252191353`*^9, {3.7942849169038873`*^9, 3.7942850013941927`*^9}, 
   3.794285072862439*^9, {3.7942855147958884`*^9, 3.794285518887411*^9}, {
   3.794441555530632*^9, 3.7944415556253767`*^9}, 3.7944417056701617`*^9, {
   3.794442436097172*^9, 3.79444243692293*^9}, {3.7945279010815015`*^9, 
   3.79452792114284*^9}, 3.794688688573558*^9, 3.7946932839715166`*^9, {
   3.7951336798561673`*^9, 3.795133680725828*^9}, {3.8225247938549786`*^9, 
   3.8225248317602715`*^9}, {3.830563946642151*^9, 3.83056414799172*^9}, 
   3.830564516376361*^9, {3.830564635531206*^9, 3.8305647125921535`*^9}, 
   3.8305648132468824`*^9, {3.83056488042362*^9, 3.8305648897057037`*^9}, {
   3.8305649450060053`*^9, 3.830565049861974*^9}, 3.830566425414125*^9, 
   3.8305666488319483`*^9, {3.8309850231918783`*^9, 3.830985024056254*^9}, 
   3.8309868458094277`*^9, {3.8309872826208506`*^9, 3.8309872834120197`*^9}, {
   3.830987630236987*^9, 3.8309876465228667`*^9}, 3.8309877023651094`*^9, {
   3.8309880835765667`*^9, 3.8309880841352353`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"457ba464-6c21-4b5b-a248-861cb6b50b11"]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
4CLpSofbh1GV2MGF2opO3UHXq7GDi4O7/6TsqK/FDi52F5RpPJzcIH6885+L
NLUh5av2NmIHFybTvS5uc29izIVLBFYqlU4RzdjBxUdP/qvAXy3YwcVXCfbS
b82tjLnwyAtvvTG98u2MveITC78x9n4DO7CDiwL5fWc7BndiBxcjRw7M8lHr
YsxRQFwMv5yQ7u1i7Mnf21EvR7DbiroZ8xURjdteV2bF9GAHF5p31nzzce39
d33j0UUia7j5sYG7sYOL2Jvta75qX2MczyLbHQ4ds6z1ww4ulD0ezPHcFIod
XIwaounH2heBHVws42zZdC3lM3Zw8SxYUnqkDRs7uPgTsrZJFJ6GHb6+7+ZD
7t3OycIOLqa1f7s66lku4/zZxEYvTco6hocdXLSET3wtHCjEDi6WBuTbVmQX
YQcXM8J2b/g0q5RxHThkdPEJa/WQcuzgort4b9qLyX+wg4uDtgmP9sdUYQcX
i97cH75iQy12cDHw+Ppqv8p67ODCLmYf78jSRuzg4tamqsZ9t5qwg4siw8eD
xuU2M+bCJVtK7YbvHtqKHVycv3fgdfqWNuz4ePe4QUP3uLcz5sIjVgHUqcEx
HYy94pO00GmvdYo6sYMLrtUoybSeLuzgImf1KvNT6j2MOQrIGa05rBdDexl7
IiQdDWt8ugb1MeYrIidFdrXj5fuxgwuph28smmv7yexZ//cnEV189lMwsrTY
gx1crFcostUbd51xPItMvDpm7oglj7GDC27EgTtv7oRhBxflL07zFuz/iB1c
bFPw8t9h9BU7uEhJfaWre/Q7dnDhaLXDZpccBzu4SC6dYjP0zU/seP/CZ8kJ
q/dcxvmzScjkqVOjZfKxg4uRxXrlW56IsIOLa1IvL4Z8KsYOLtavkbiWZ1jG
uA4c8vzU/IZP/Ars4CJz39s/VdcqsYOL08ZXzo4hNdjx97Qe7xUXSdZjBxfD
ls3y0itrwI4uAoqojauasIML33MJiQdeNmPH54Hs23EzXrmVMRcuuXbq4uk2
6zbs4OJM5tTz4V/asYOLk25yNz6qdTLmwiN3vosGSmzvYuwVn5g1xs57eq8b
O7hItA2zSuX0YAcXb5yy63909DLmKCBD+E9WjtTqZ+yJkIRGyAzVGSZB0ecr
IpPXzdt//Im4gwv/au2F+dqSFOwHuLBqG6s87ule3BtwUevf8Nxd6wahH88i
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
cc/jeXwZJcIOLuZbOjm53ShhnD+bXNhk0t62ugI7uPh0+HHmvQ1V2MHF76D1
RVPv1mEHF7eFl6kPro2M68AhFuqZricKm7GDizvn+zpfmbRhBxeXAkrzV6V1
YAcXaaezA5bu6MYOLrpKnnaGN/ViBxfDt1QcOWAigfMFF4fnh0U3PJXEDi72
Vo4akdghRdHnwiVzdc2c32yUwQ4u3l3bPCkwTBY7uDCZUNH2AN9nQ4Au9tmL
NofvUKDoe8Unp55a1Ci+UsQOLhRyNbXru5Www/7O2MSb+W6lCmNv/85no5pv
lIcqRd8TIXl6ZVbM+Sw1ij5fEcnKKRm4XE68/+AixZd6sShQg/rfdRG7uNGt
5XZnmA2BDi4ktT7ENad7E/rxLGLuZVAwuS8YO7gY9Ht4GfteJHZw0TL80dNv
MxOwg4vksIbNDiFp2MHF++Q5OqbrsrGDC/lx2pEn+n5hBxf55c2iC7tE2MFF
3izzglcvSxjn//d+9/pk82cnK7CDi29/Am91Xq7CDi4q7znl7/9Rhx3/u5Oj
916dE9LIuA4cMshq76VtUi3YwYXb9SNDSu3bsIOLM++21sQ0d2AHF2eWn1mQ
69KNHVyc6ZgnWDq2Dzu4GF96adJjSwmcL7joZffxXWMlseP7HvjoLgsZJE3R
58IldVr3q7KOyWAHF9HlNXr1KbLYwYWPXv0W2bHyFH0uPLLmS3/05LMKFH2v
+CSte4+W5w9F7OAi5eU93VOjlLGDC+3RuX4Gh1UYeysgO1gB1tM/qFL0PRGS
RQ+F3lWtahR9viLycv/CgWeGi/cfXNyzcnGpi9D49z4hQnShnXL6ltDEhkAH
F/PiipNEzd6EfjyLbGvSO148IwQ7uDBtrM2fmhSJHVw4jZcPeLgjATu4MBvo
zDUuTMMOLupnHNh4wiEbO7hY8eeCovU0HnZwkbQv/9SoeyLs4GLX+pWqYZkl
jPNnk74Dn9rlAyqwg4vY26JzVe+rsIMLGf1Pdr9l6rGDC7NY0TGS3Mi4Dhyi
Vzvx3X3dFuzg4t2gYzbL77dhBxfrQywOjtLuxA4uYkcH+Ax5240dXDhHdSkv
3tCHHVw4TtC+WnRBAucLLmr0rXb250piBxdeu+bJLZ4uTdHnwiXVS5QLjrrJ
YAcXatvjnK6Uy2IHF2Pbhqg5EXmKPhceea47r/LcfQWKvld88mig6qLQGkXs
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
/3vd/X/nRbtQSV/KXhCxh0DH318oJ6YUrrpOmNcLyNbT76KXHnqMHVyIJk7N
t09MwA4u7u7avaro6Efs4OKVvlrHo41Z2PH1xZ7+kSGuOdjBRfLUKK1IaRF2
cOHvRT1MjSjBDi52qRQtOXy9QuL+hcQuMvPu8Z/V2MGF0Y7A2pKV9djBRV30
Bi2xdxN2cBG3bpXW89YWiXPIIKz7Pms/HWnHDi7uuETlT1bqwg4uanTzfeY+
6cEOLjIaHbVv2PZjBxezbI7sV/WWwjmCC/fbq5fz81nYwQUvr1xV2lAGO7jw
Ku9SzfWVpZhzySH1f3cvDi5kYwcX2XnFxkemymEHFyebq08kHZenmHPJJSPX
f57zK02BYu5VHjnyKHb7HD4PO7iYONNgSJCFInZw4fs0sfecL19ib0Vko2p1
0+93ShRzTwqJjezba9Z1yhRzvmJirt+ptv+/1xfQwYVVm9+/KRqq//s7vnJ0
URzcp9evuJdABxdnLzbsvSa4TpjXC4iwks+7U/AYOz5XTUZRuWhUInZw4btO
42Hep4/Y8XX3HNnU3+lZ2MHF6sFU2453OdjBRf+OWQ6jN4qwg4u7YY8nHM0r
wQ4uGm0Nz3v8rpC4fyEpHFNjswo/j74cXUx6mVuTEl6PHX/fHad7LftJE3Zw
cXZ5e/IV7VaJc/jv31ELhiqXP2zHDi545+ZOzKK6sIOLNY/ZWuElPdjx57Sc
F1rt5/uxg4sy7/VvNwZL4RzBhcumb4NvNrOw4+vuHr10l6Uy2MHFHM9ny/Lu
ylLMueSQFYecE0ua2NjBhXZX0KmUeXLYwUVXSfDVL5fkKeZccsmHxIl3XHIU
KOZe5ZFfberj5o3gYQcXJS0eCQU2itjBxeJ9Giadl/gSeysiR3g9MzenKFHM
PSkkXJXpsVX/fb9gzldMAqMeiN+eV8EOLj62vVjLUlP93/P/aRdNwoi2KV57
CXRwsTnAv0el7zphXi8gBpxgY/3lMdjBRUqvUIp1OhE7uDBu3KXRM/wTdnCR
5ylbEzL6O3ZwoTurbu0/hd/YwUXouP5C53ci7OAipDVhVfjgUuzgYtqBnd+c
1Col7l9IpOT+rHXfWYMdXCRor1Za0FGPHf8uaeOfeTMKm7Dj37HO05Spt26V
OIcMsoEi8SfE7djBRXTMhfgi1y7s4KJuz8estcN7sYOLZ8Z3jp1K7scOLqaY
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
zR2b3DjYwcWTIZtzT72Www4uDl6+UrSiSZ5iziWXPN8cOsNFl0sx9yqPVB/f
Q8Xb8LCDiyIfx9yBE4rYwUVjq1uBcQRfYm9F5LBG6hi7ZCWKuSeFxEGq8YPL
b2WKOV8xiRN77Ek7pIIdXORwDsRu61L53+co0S6ky5Idf3seINDBhZLs3N6y
x7cI83oB2R3ad2e77VPs4EJq/zQD+/Ak7ODisYNtLsvvM3Zw4ZWatmB4/g/s
4MKzYNoNqzW52MFF79umxtW3i7CDiwtVzWnJX8uwgwu9DurQqpFVEvcvJH9X
Ofv8eFCLHVx8OvjbUhjfiB1chH9vso42bMEOLmw+X7Xd+q5N4hwyiO2WzJUT
rTuxgwun7mr7xOZu7ODih+Hdz/Ov9WEHF05rh2eYqkvhvMCF1ubtxm/2sLCD
C52dfkW1CdLYwUXBJTPt32xZ7Pj7i9ir2pEr2BRzLjmkMvtpbPxlDnZw8cba
f5z/Vzns4EKnMMzzq7QCxZxLLsli7bwycTqXYu5VHjm4f07Bmc087OAi0f74
4ZQzitjBxftncXf+3ONL7K2I7H49MfT7WyWKuSeFZGDQac23WcoUc75ikn1X
12n9Pnr/wcW56dNiqpvgOSG0C7dxaS8TCw4Q6OCCXdLeYzLvNmFeLyCxluyB
Ky+eYsf3R13MvPB5RTJ2cKHm8z68RzkdO7iQsQkbc9ckGzu4eH1TjjqVlYsd
XLyU74/wUivGDi5SzvibDtcvxw4u/j0n136frpK4//9cvNxWMHFsHXZwcYm3
50NnVyN2cHEwRcfI1qMFO7i48PO9yJ7TLnEOGWTUwi0KM0M7sYOLiEobs8C5
PdjBxdPDj35FFvdhBxcPDN9JD5snhfMCF4obXvRPDmBhBxeFvXaLD4mksYOL
2dxGxVYdWezgwnTshMUNO9gUcy455Mio90pZURzs4MKi2ExRu0QOO7g4cmOF
XvAQBYo5l1yy6f2nQGlzLsXcqzxyyWCzxaydPOzgInrEDa6ZnyJ2cDFUwyBa
+j5fYm9FpE7wS+H+GyWKuSeFJMVp9k6zz8oUc75isswg+qzLDnr/wcXQ+BT9
0moV6v83Vu5fdDFiZ1Ljg/kuBDq+vjhnb1JXcpswrxeQqU5DZxwa8Qw7uLgT
7bRwlEwKdnDRoT3yWGJYOnZwcWmc9Zxbd7Oxg4sWJ9XCBTZ52MHFrGHk7L29
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
X9OIDl18F9vcN+NZMzp0YWQpF9oR14IOXbTf17p/Mq8VHbp4GvP1M7+qDR26
mLDKzjasuR0dupjouK7LprWDmguHbF82/sv7hk506MJ4vHvDiLIudOjiyw6v
fcr/uqm5cMm5/HY7r7ge6lzxSPizcS94r3vRoYvnKppf79/oQ4cupO6+SNe1
7qfmyCeLnGo+7DUYoM6JgCzYfO7vxlmD1HwLyevujZvPDjIOXbxIV1uqnzf0
v/vTmC76axNrORrH0KGLw/GCufZCd6n1LLLiksvbU3FB6Pi5MFof36sofEaH
LhL3RU6OCv+JDl3c65hiXV+VjA5dFP6Y13tSOAsdulhtW95WeTQHHboIavjx
zWwkDx26SPg75pc6X0A9P5vMu6lD8g+WoEMXaw8JKsJ4ZejQxaxRv7OObqtE
hy6alKde3hBXTe1DGjGsqlUrVapDhy6OOm0TlJ5rQIcuDiuNjSxkN6FDF8vv
t3jICrWgQxeDKopxmya2okMXytdturRmt6FDF9I/3bRWqrWjQxeCWY6+rIUd
1Fw4RGF//LqeuZ3o0MVKNdVL36Z3oUMXcc3Kz0+O7abmwiWj39u1P+/vps4V
jyic9MzILO9Bhy6+mO7fc+FPLzp0seXbzWWz3vZRc+ST+Sk7g9Vv9lPnRECC
F36WH39sgJpvIZG/O69TRXcQHbrYJPU1JnnK0P/2l+lipVBSiO1JS3ToYv60
q1fGB96h1rOIIPx6trPMa3TogrPm/IUfXpHo+O+ohiPJcj1x6NCFyJwFu+JW
J6FDF/eS5TaY5KWjQxcaE9RjJ477hw5dGBzyCbnkkocOXYjb+OdMHs2nnp9N
Vvz38mKFRTE6dKFW47PH7GcpOr6+yInycZpZgQ5dqI0oH4i/UEXtQxpZePDH
9YicGnToYtyIvqpPM+rRoYu3lp7fph9sRIcukmUsVp3f1IwOXZSGqy2vMmtB
x/dHxYop5Fq3okMXBwJ6+KdPtaFDF2Vuc3xkHNqpuXCIqPGVhm6bDnTo4u/9
yW2h/72uB4cunm25OnDPqIuaC5cUVwUdnKfTTZ0rHpm09LtCuWoPOnSxR2Ha
IY3RvejQRZt//MCN5l5qjnwy77ja1K1ZfdQ5EZCSPv/Asvf91HwL//v3rT87
6MYAOnRxL39xYf3hwf/de9aJXXh8kClZwT+MDl3MC5SznsP1odazyKbi2iUs
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
zU8L4d4wpovCuitzpwfsRocuPu31syIHLlPrWWReem7UOzN/dOhiX7XF8f2l
r9Ghiw1L5dVXeHxAhy70A0ZYHXL4ig5dhKYW3s7cFo8OXRhvEJn0wjEJHbq4
butapDwxDR26+Kj59czRcdnU87NJftL9l/HrctChCy+t5U5ST/PQ8e8v3rz5
8FW2AB260FxkuF/6eSG1D2nk4Hnn+d1TS9ChCw/5bTz51lJ06GJFfj//7Z9y
dOjCOePMPs6rSnToIiq6JnScazU6dOE+zWS2mnEtOnQhYj9p0+p59ejQRaKB
UpT3QAM1Fw7J6N2x+216Ezp0wVdXGjsrvRkduogqVf/07EMLNRcumVTw79pa
v1bqXPGIbNqIL3JObejQxWDLNol5xu3o0IXLqtM+j5Z0UHPkk4VT87KujOqk
zomA8KtNp4yo7qTmW0h0Pskt3RnfhQ5dvGzoWOMe0P2//x/TxXWT+LOZ23eh
QxdOt2pm3LW4RK1nkefbFLY3TXmAjvfTjlXXb/zCQocuMt1dFA/7R6BDF7NX
jL7QMCMaHbpY/stgcLvdT3T8Oe3fj+sldiWi47+jWj5uev8lBR26+DZxzqFH
a7Oo52eTvPlbj9oa/0OHLuKf5DYne+WiQxcBvtrJL8t46NDF1/hMY++dAmof
0kjz9aPzy48Xo+Pv9SaIhs9cUooOXVzPWcfP6i9Dhy6ujLoVNTm1Ah26KBqt
cMrpURU6dBHS/Ssr+L/vI+DQhdIh1egvK+rQ8Z7/gbz9VaIN1Fw4ZGtkmee7
9EZ06IL7vMXLeFMzOnSxuyVyws4FLdRcuETrwuys+JGt1LnikbjJRTqBdYxD
FzkHpvQP/W5Dhy4CxhqfqWG1U3Pkkx6dL3PPXOygzomA3Nk+pYO9p5OabyHh
5W3PalnchQ5dsNhOb6dJdf/v62G6mLjcR8dV2QQduhAZdWxXrLM7tZ5FNG18
f29r90OHLvJyltbZvw5Ehy6ayOsUC9dwdOjC/n3F+lc1UejQxZW5d+9zV/9A
hy7OlyZaPdvMRsfPY63WFrJ2+IOO9x7M8y55IJRJPT+b/Pi97+5Wx7/o0IXf
xqE/xIeDjt8v3q//dCOZi45/f3Fb00lBgU/tQxqRtpnS7OhehA5dhKs+q+ef
K0GHLkLyNzXlrCpDx99fZLfP3DFYjg5dSB/fHJSSUIkOXfC8X/GGblSjQxcn
w9YoN26rRYcuNk3vMEiVq6fmwiHCCqzXg3kN6Pj77h6RqwoBTejQxfiP2xtr
3zZTc+GSax93Lhe92UKdKx5p0Y2PS8fPlWG62LHq4+3Num3o0MVk/wVCNxXb
qTnyiWC9Q+WDjnbqnAjIhPA70jfSO6j5FpL2/T8zzrI60aELrSNPFT3PwX4x
XWxcGZmxabQxOnTxbouf0WRykVrPIvKDuk4Tyu+hQxc1e3eH24W8Qsf3R+kt
lnCte48OXZyvSLGr//MZHbowMWsN6v36HR262Hp04eeTuxLQoYtdQ7uuTlz3
Gx26aHk//6TDw3Tq+dnEbZ1y9KjAbHToYpvhpBfSL3LQoQvzXyrSYt/z0KGL
3pnHbum151P7kEaOmyb439YpRIcu7Cq9tjzNKEaHLi4kmTfLepSiQxe+wsVz
ileXo0MXs7rS77p3VaBDF6IDU0rCP1WhQxdPb06LO+JQgw5dbCjsmZO6qI6a
y3/fL+qjbmjX16NDF+43lubrBTeiQxf3P+/uXru4mZoLl2zcv1O+bEQLda54
ZOIv2WynSsbx9xcD0ms7frSiQxcF94XmWD5so+bIJ+HSQ7OyTrZT50RA9Lpt
tdav76DmW0jcqxyuFkzpRIcuXMwLRgc3w88Hu7ELvdrXB7+PNkKHLsyaow8u
+ehGrf/v9cWV/TGF1XfRoYtRrXc3/oh7iQ5dHBLcu/LH5R06dOGs8qX4yo9P
6NCFqMhSqenGsejQxQsZsi/61C906GKk9PqYt/OS0aEL2TdaQlcN0qjnZ5PT
4+UunC7KQocuwu732BX+/IcOXSiR6SPjf+WiQxdBnD1foop41D6kESdT9twU
WQE6dPH1NHfmz/nF6NDFnOfvnjbmlKBDF1Omel9T9yhDhy7iF8VMHLmsAh26
sBcEPV9eU4kOXdhZ3nVmPatGhy66RxosPPff65Hhc+EQI6/QS9Iy9ejQxen0
DpW0uAZ06KLW+VasuUMTNRcuMRCv79a620ydKx5ZoPxb2NW6BR268JcJ3ly4
thUdupih8tbzkHwbNUc+KZ1Uf31UYxt1TgSkoeZSQ82vdmq+heTopu3xEv4d
6NCFZMMIB2dr+Dk708VR1YqTr5V2okMXjzJ2zLbUc6XWs4jZFMnzfkJ30aEL
tuZWgWvlC3To4pu95B3zmW/RoYuW83YOx35HokMXUtvlncIlY9ChizuqY35X
PolHhy5+LlMu3D0rCR26SFyXGvd7dCr1/Gyyiu19ylI1Cx26iOq5F3+v6S86
dKH8pOKwVx4HHbpYfkjt8eoCLrUPaeT3NY1XDR0F6NDFq3fBvL3KRejQxZDi
R8ecRSXo0AWXzF4f868UHbpoPBhRVXW+HB26+HwiZf2kOZXo0EX3ppcOK3Oq
0KGLhJVKIbaXa6i5cIir1LqugcV16NBFeZ1zrGlRPTp0YWR0VHGidyM1Fy7Z
uWHL3ybFZupc8UjBlUi5n62MQxdJl2511ya3oEMXKRe/PrJ60krNkU9kpkde
1LRvo86JgIwO3LDQQq+dmm/hf68XcjtqJnSgQxdy6xwFZVXw/mmmC58dydry
BjvQoQsuzyj6Z9M5aj2LWBSVXjsw1xcdupgtPC++d+oLdPx9d3TNq6DSN+jQ
xcKQQIWU0o/o0EVl/yFZ879f0aGLSY0ef+/l/kSHLv64HTrtsigRHT+n2GGO
6ZGaP9Tzs0lpUsr2pJ4MdOiiale54uT5f9Ghi7GxomWbenPQoYulGjL3P1Tk
UfuQRm65n07lVuejQxeH+bvr3gwJ0KGLqr+/XFbeK0bH94H4R75uX1CKDl1M
7PL84Jdahg5dZB8+zObZVqBDF8HXlpyMlK1Chy5O7Umy0fpaTc2FQ5yOtjbF
WNSiQxe6dwc/+UvVo0MXjr+8REwjGqi5cImt4c+YkN1N1LnikYgfhltnXmxG
hy7GPeBwB3a0oEMXem5yI8xmtVJz5BOhxtILKztbqXMiIPHtqyX8ktuo+RaS
bnM7N4eH7ejQxXu9sb8KreD960wX81WkTSzdtqNDFyUliS5vPp2l1rOIqvlQ
5vODd9Dx3mbvqpPnk5+hQxf7W83bd38LQYculp5rt58w6iM6dPG5VsNa8WM0
OnRRuPLKO7epP9Ghixcvrtb4bWKjQxd57hqB4bm/qednk3cu43dJRqejQxe/
g+JeOjlko0MXzoc9nbvn5qDj519ICqRGD+ZS+5BGJt5eXnuhlocOXXAjZzyz
rOOjQxcf1G/nLBsoQocu2kxHSFn4lKBDF3M0wqYHKJehQxdR9c/rZb6Xo0MX
q3c/EAvaW4kOXdifjlxxpbuKmguHXPczdap4WIMOXXzvrjq2YFUdOnTR5vC8
Ob+gnpoLl9z75cPycWukzhWPmP599uHCmGZ06CJa3GtkTxHj0MVW3yz+rIgW
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
rYvNl05yIYd51YLB35J5tePg8i17nLiRw3zbyeDPyXzrtKTkvWQcD3KYh58x
+EMyDw8+X3xMuZEXOczPwwxuReZnh9m3RYbG8SOHeduJwW+QefuFrv0lVwkB
1n+vt1LqFYNfIPP5mikhHu7ygshhnl/L4Lpknhc9+eOxg8Y45DD/T2fwg2T+
10wN4h/RGY8c1oWDhN8dHU81dYbM/05BS61Ocj2lgMO6kMngOmT+f3HlKa+d
yAfksC78YHARMv8v9Z/TVnMsHDmsC3sZ/CeZ/z/uMIl4viYROe4zZPAvZP7P
l5+9QqwvAzmsCz0Mbkfm/x7LmuNzV+chh3WB9/Z/uS6Z/4eVpo3c+liCHNaF
ibv/y13J/H9uud3GVRcqkcO6cJ3Bbcj8n3L33E7eg7XIYV3IY3AjMv8vPbyy
we1hI0P/BGodgx8j8/8Lv8RFO7lakcO64MXgu8n8H2ueL7ZIqwM53pdm8PVk
/p/344bxzJQu5LAuLGVwcTL/Fw3wlnQq/mZcD+lUJYMLkflfMDYm/VtZH3JY
FyYx+ABZF6w3uB0bMfmDHNaFJwwO60JIy8URtS1nkXeR+Z9jh+qHtQuHkcO6
IMjgjWT+v13Fe8JXnw39BevCPQYvJ/N/64DpNqV4duSwLnQyeC7xsat2OEtW
jBM5rAtvGTyVzP/qFbdXaxpyIYd14SCDx5D5f46W35OP37iRw7ogzuDBZP6P
eJz1+ugsXuSwLsQwuC+Z/88E5qwPPMeHHNaF8wzuRub/a5KfLvOH8yOHdeEm
gz8j8//zrTfEy9gFkcO64MzgtmT+F5vy6ESs/DjksC7MYXBLMv+fTimffNCS
nj9hXTjL4MZk/jcZKH2sEy7E+u/1VkrdYvBzZP7fPCPphGezMHJYF7YyuA6Z
/x86vRQztZ2AHNaFxwyuReb/lQHJ19zmiCCHdWE14UdG/95FbSDzP4/t113f
KsIp4LAumDC4Epn/ZSufiIr84z/gsC44M3j/ob/z/2aFReL1l0uQw7pgwuA5
ZP4/UcxxbG9uNXJYF6wY3IfM/9Hpni/Uvzcih3WhgsEtyPx/7aVXVblmG3JY
F54zuCaZ/69Lp9/cK9GJHNYFawZ/Tub/Hyfl2PuOdSOHdaGUwa3I/L9nJ++A
4f7fyGFdOMTgF8j8/9W+j5uNr4+hfwKVweAHyfxf3tw2xcWmHzmsCw0MvoPM
/xLJOzaVVA0gh3VBmsFXk/l/b4rNC/Vpg8hhXdBk8Flk/n8xMjPIYdUQ43pI
p94wOB+Z/6V5eOr5pYeRw7qwkcG7ybrweObEbtaCEeSwLjxlcFgXsrvK2ie3
PkHeDvtqjvEO9HOwoV9gXdjE4HVk/i+TaXecfp7m+PtwGbyEzP+RSRV8cbk0
h3UhhsGz4Pvrdq1rfTLsyPE+CYMnk/k/rWrJ0PPnNId1IYPBI8n8z7tw1yG1
XprDuiDA4AFk/r/2q3Qw9gAHclgXrjP4ezL/u5QNv1PzpzmsC68Z3JXM/2n6
S4avjedEDuvCdwZ3JPP/RvNh9Zv6NId1YTOD34fnX/lbn7on0hzWhQcMbk7m
/6Xy0z8un8+FHNYFCQY3IvP/3Vdej7aZ0xzWBWsGP0Pm/6Xfe7PGldEc1gUJ
Bj9G5n+NuAcDPhu5kcO6oMXg6mT+lzOZ/GLdK5rDurD9P/wPrgstdn/PRwCH
dcHw4X85rAtvyLkJ4LAulDM4rAuvyHkK4LAu9DA4rAte5JwFcFgXqhgc1gV1
cv4COKwLNxkc1oW75FwGcFgX/Bkc1gVLcl4DOKwLrxgc1gVHco4DOKwLfgwO
68Iscr4DOKwLGxkc1oWD5NzHf/VPoAwYHNaF3eQ8CHBYF7QZHNYFR3JOBDis
C14MDuvCDnJ+BDisC4cYHNaFRHKu5L/XQzpVwuCwLnwj502Aw7qQy+CwLmSS
cyjAYV0oZXBYFxzIuSHgsC7kkHMrwGFdqGBwWBdcyXkW4LAu+DA4rAsnyTkX
4LAuGDI4rAtzyPkX4LAuSDI4rAv25FwMcFgX3jA4rAty5LzMf32UR+1jcFgX
ppJzNMBhXZjN4LAuzCbna4DDurCQwWFd2EHO3fzXR4WUMoPDulBNzuP8dx4r
on4xOKwL18g5HeCwLpgzOKwLG8j5HeCwLmxjcFgXusm5nv9eb6XUIIPDuqBD
zvv8d54powwYHNaFJeQc0H99XU6tYnBYFw6S80HAYV04QfgEkX9/4L0anyhT
mT2lyi/OoE+AXxUPPrpx4ADyv/6NpFjfSo2CllyklMQagiz2PECeWPTNb1yA
CcabkPnq7dorZS8umiGvGr3+U6kDpW9D3RPvIv9b90xK1dCGo+WbHXV1lDti
ns96R1ucS5wxHu6THVsZrrWl+gmOC/IrXK8JFeB6g/GCf41EFdimrdHa5oj8
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
3CbVFQ84ru59H6cO8cC5/HPcwSkvilEHDula5Yc/Z7IY3BYTbry5O+qj3r22
fng89QEO+ZPnlNY96iZzm5Sb2sOZk0+8FUN/qEtyaXDboVcCZL6Orvts0bTJ
pYbNfPMEPrgPVV8kR3CdJPrjnNL1YydzQsW4wAfyHHvOQrHjXzf6g8/HVfoj
nLWoD/QlViVO0NRTmq8OfKCu6zYd+9ZE0Lrwd4XE5YqXfXFkbpPqMSHHTebv
g/dbUM73jcNrO+VLUAcOrk/2jZvWw+LLjTd3R32OqpmtD11BfXA+vH17/C+h
HjK3Sbm5h/aypsWKoT9+z7vt/Xk3V4DM19F1f17nKLmHN/PNE/jgvoPmuk5L
XUn0x3kba5Og+8lwfinNc7PItastuj3oj/uRXx+4+mQj9YG+zLG5aRDtIs1X
Bz5Q1/c9xkMramld0Jel687eORMST+Y2a1DnRK7eHj8xQR3icV/qLPZldY8S
1IFDaujMzq8T2Hy58ebuaugc+4fn9gqfqA9w6E/UUI842kPmNik3s48LfcYV
iKE/1KU8W/ZRm4Qgma+rwXX/2h8QG6PUwjdP4AOcU8ovaO/fLIn+eF5KfNK6
uyViXOADeW4aCjg490sP+oPP2muXI5dtpT7Ql6q1lxTHnpPmqwMfqEtg5o/v
lkq0LuiL8WmhzMO2CWRuk+rdncv0PrQlqEM8cF52vPdEq0Ip6jjPf7Vy3hlt
Nl9uvLk76qPaEGGhqkF9gMPup54Z3eU9ZG6zBrmtFzasWt0qhv5Q16qhU/Zu
q+E8B7pu6rJxGiI3WvjmCXyA8/Ixi5OyDSTRH9YNMvhY/LFbjAt8IE+RG59T
O5b2oj/4hB3Rf7xqO/WBvuTrrntmYSXNVwc+UFeZkd2NXANaF+7vLnyz5MHW
RDK3SfWnNiUH1PMT1SEe9x0k+IpPDChFHThMMciRWnGCzZcbb+6O+jwZWXNQ
NYf64LzWmHirnD29ZG6TcpvbMNX1LIeD/lDXvaGnlmZ2gmS+jq47Qf3C2HLB
Vr55Ah/g/DRMclXQDkn0h3VvrdXKLJfmcIEP5NmoeXHPrY+96I/7JX1eFz0w
oj7QlzPN1UUeu6T56sAH6vp0TTvrihutC/oSqhZruV8jicxt1qK+tVN/g1hu
kjrE475vwUL3gXVlqOP5LaMkDJqfsPly483d1aLP5NyFdtvtqA9wOOxlLvuo
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
JA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
xKfDcyMNf3rufzGODc0cP9zFXGj/7UmEDTwf4OkTz6Vx7sNY+66r/fdTImz8
NhF+xL/9rYuY6GfA93U89rdcl9x4xl1mvrPTvR1D2Mv85Xn3KXtF0ZG58Qzs
rY1IE+ECA76x8IAe1seJ3iZ6kug5Qj3hDqWPFL0hHXld98pvJjpNtGlR8NWE
5kILobowTugujDXguwlnC4OElsJjqj9QdJ5oD8tQr5XLBwsXC22EoUUhQ/mV
wrnCybbpPGGM9bewHRe5fku3R1u0PSMdsmMtj9xA1+tqnfSRfp8lHCXclY72
HhatJdpaqC0cK7QV2tkG9NW3vbUtV906sKmn0Eg4VTjfPHnHWJ56pzn/fPPQ
XsIpbqO+01cJVwtdhLpCZ+EI4UyhqjA1HWUPpcM35DW1HUe5bycInYQTXb+u
+TpCx73KOzsf/We4jabWeabzKDvcdTq6Hnco3IXwHOzlvmD3ePP0fYk2r1uF
54VdwhvC68LX5smbrT5cJtlnRS902/2KIo8+XloU+f2LIhabWeZC29fP6dNk
R6PcWC/P9zOAvF2JWLv/TMTcZ96zfn2TiHVuRyL4Xn6GMJ9GeU618/MC+cvV
xmjH0am5sRbTHnwPp893HjzratvcWAd7WK5hbtjS1uXMu8ut8wrHPW08ko7+
PpkOXw6wb0dbBvlRHpvOjvPmluvkMvKfSIcf5og+mo42nkuHn863r55Seojo
/HTMKfhWzifG7zcd6hjG/yPdzkKV9RV9PB2+6Gt/XGrfdXZf6APPE+b7sKKY
V52sB1tPL4rnFc+wPk7DHy+0FzoUxXOMufig2yyPTWSOs9yDibjTuicR8Uls
slaz3rFubhT9Gt8LbwofCNuEv4gVrRPbRU9ORtkbuSF7gtI/87wW/SQ33oHs
yI370PeErcKa3LgTXZ0b9+87LPeBdf8tvE4sWu+p0vWVaONklGPDnzzvlc7V
obGV6FtKfyd8nxv8Oqd/EA6QzI+5cRe82m3/6Hzu7Ne6j99aL/rfd3/esB2U
r/U4/Ct8KPwjfGT+X9fhjvd593ex+/yqsCo37pG3CO/mxr31Iqefc9lsy26z
HvTN9Vhw37zB/cH2M9Tnj0XrJ+N9A++MeFdUTenN+DIZ775esd4jlF4pWsPl
3L1zZ11T6ddEj0mGX+AfNebYV8hgB3fj77pf2Hx0MvpaVfSoZPSxVjL0on+h
+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
jwHrLWtddeuqbt313c/yPtIWa9xhGsfZGs/jUuGHqfbPQ/brBMf5CJfNdj7l
wzzPJgtP2s9POH2x5x2+m2n/jTNPXiYVc/KYVJQ9YP9WUXqK6JGis9wONrSy
v1raHw3ts1OdZi9Tw+XIYcMU29jd8vR9nbBW+DYv2hruOcV8muW2uKtjX89e
fjVrk9KbkzFnmFet8iMuiU/OA02TEa9dRBeJPou88IbwurCLZ63wt/CBsM1p
+Fe5lxR9Phn81+LfdN43e9m61mls2W5d6P3a7awWVglfCF86Db+Mey7R5dyj
iK4UPhGeEt4S5gkrhI/ps/ARstRzG9tt5wrnI7de2CA8LSyR3pdFF4ouFeaL
f8I8Mi8lQ26e6603T9sr2RuIvsPdnuhXHq/FwrvCe8IC4XZhqvv3MGMmPK46
s0VnJyNNPuknlb5DdDr3ZvbFIo/HI9aBzELGIBm6aYP0c8kYl8eSwRMrLySj
z8s9Novs2y3C2yrbic3JsHWP8Ltt32P7d7lPX7nsD2Gry343jw76v8Z0p+UZ
m/dd5w/zyN8m3Opx/MQ+xQdvC88IG/NizzkjL/ad7GXYj0xiLJNx5mDfOzPP
e/+8yLslL84at5qSHrpX3q1umzzOJ/cLD5iiZ6b13yx6TzLao93rhWvyYo/L
vmmYMDwvnlnQ9ub7WuZap9tadrz108713ntdJTrRdZC/IRnnFM4m8CPE35iM
sj5uv73bG+Gxmem+35QXNg8yBjpvvseSMX3F4/ypx/kdx80rzvvM6Wdc/qLj
cpFjDXnmIXOSGPzcgEeOeUqsEpPILrQ+Yph4pow1jDPnBPsefxCv9wnT8mIv
O9pp+NsYC9G77IsbHAvlPltuGc5xnPvQMcZ1ybtxr7EY6PQUyU1Hh+kYt83c
etj9eca2TzWmOI+1kzWqorGv89jb1na6j8883ZOxB2Uvyt62kuuyf2W9Zf/a
yIDPuLySdfdIxvrHOn6MddNGFcufZh7KHoEzJc9w1lzOMOXr9hFO57oMGZ79
FyRjD8H6e04y6g9Ihiz18m0DZ5d2oom8WIOTpg3MV7MsdThrsU6xplGP9azU
sinLJ0w5NxWJFufFvTD43HncpScsw/msMC/K0PG7z14tk3Enzd0+5zjOVm1E
y/LirptzWmXznNeQL3ZfeB/FPoZ3Ul/6fMYZrIXrd01GX1LuT033o4bTKfeJ
McT3nH2KbCO27mP5mkYt533vcyHnlf7J8E3PZNiBPeynzk9GLJyXjDUcf3Au
PdDl+I5zEHo4Iy8QHhf/qHnWUtZi1rwXhRfyopz1+Im8WIefcPrZZKyPr4g+
uVc5YO0g78O8WDdYT7dbJ7pfchn5z+XFmsG6tyIZ68DiZMxx1k6euXOUflB0
luhcr6lPmJ8s/j7W3LzYW2Azz6pZebEuvGye+sjyXCufk1Ocfsh1XjE/y+lt
thedrGOMz2N5sRY9nxfrEfcvZY4Xzvj1zBPb3IkQW/iVvSl+PjcZaeKtuvMo
K9+zFrtOvnXUcxuVXVZk2W7JuEcamAzf1rV/T7E91GH9YB3hDPye7V3isX7P
POP9KGNsWr4OYyf2c3+11f1dYhnK5+bFM5kzwNUen7kum5+MMXo5GeM11+Vt
/J6c70fG+7zW0+e5CT4f5Wk/2lm0ULS/6FlCM6FA6RaifydDpq74n5Px0Sbl
f4ofYHnqnSOcJHQx31Wolx/1uriMvJOdX9/nL85hqVTsdw8Q7eG9O/v2gcLZ
+WFHp/yw80TjBOcVqc4por8mQ+9Jbn+Q6w60zLmixalo9xS33dIyg3x+bGn+
ZNtKnabCmflxXm3u/tLvWt6f1xYaC4dynhBOF84QDhcOcxp+J2uD6PfJ4CuK
387diOhprnuccLywX36UHytUEppYP+18ozr7i36UjDFgLA4UvlO6muhXyUgf
4DHCliNsA/5v5Bjoaf7U/NBXx3Wau38Xud9HWAftYtuPolWdT3lV06Zu7wDr
+iEZthEzf3BuzI87gd7uzwVGE/crJaTzY+/JXjVlvjQ/9qfsUzlrsKcpVt4G
6fxV/MZk8OyTOXewV4b/TSjJjzrIF+VHXfZBFcTvmx/nmazHnvPHX07DU7bL
sluScR560+ebX/Ki7beSoW9NMmxnD43NW9z+7rywfZ/80FVsG7BlE2uH6OfJ
aGOX5b5yn+Ez1olu9vjJ/Bib380zRp8lQ36b44t4bOOYauy+tXdscf+xJxlx
UJoKP3W03451+XGuj7/Qh++Oddyis5f19rL/Glu+tufDcY5Z6nSybtro6zgh
lvo4Dd89P+Z7D+s4xr453XJnOLaYfxe6L9xVHW8c57x+1o/ef5Ihw30XfB3H
7V/JiL8KqZhjlVx/VzLi8PdkxO1B4nck47dcvL/htwf8HoDfZ/HbrAdz4jcA
s4T5OfFbg42WQ36Z3/csc/od133bMityQvd8vyOi/krrQy+/T+I3U5sNeH5f
xe+q+A0Uv7d6yPIrXR89/Ibi7kT8poHfQVD2Sk7ITktEu/yWYaHtwa6FpvxG
Ybbly38rONt1ZySi/bsS0QZtzbNOxoLfu92biLG5IxF/x4LfGfL3LcYn4ndf
kxPxtwH4GwH3Ck/kxO/9b3KafH4HcQV6c+K39Zc5j7InLU+9qxMhx98cgL9P
/KREvFt7Yi+d5I/2mPz//ZvodOue5j7wno7f/5M/Iyd+zz/WMtPdB/rCbxkn
u+/lfrvNOq5JhH1TE/E3AJ6yznGOA97/TUyEfmyAp4y/n/CUdSD/Q17cWXwv
TEnE7yhnJeI3kfRniXCIYvPg/FjnWBePFqoLv7AfFv1U9Kj8WKeaWw551uGD
TEmf7botLMPaiW7qHun66GQtZG1lfrJmsF409HyF536KtbCmkMgPG05xXis/
E86yzmaWoZx1uLLbpY0atge7WjoN38DPiIZGd7ddkgr9/yZDL/qrWV9l9+Wn
ZIzN196fc65ij77YccVvb/g94HOec/y2dK1jiPLy37benoh4IcYedSzMNX3d
/D2Wvdd5jzn/DfPk4celjsv7LEsev+17yfFHPLzlmFjruMeeThnVKdYeKBPf
BnDG4D4Qu15wrFJvveuuc921tv//7ToGp7vNOxMhNzsR6enW9bjHgnYv9vOd
e3zu7HJF8/LjTu17x2uLVHyTe6Zoy1R8s9vQ/HvUF90pukb4knhQejPxkQp+
EfEg+rnoq8JnBvwrwiZhofCO8G5+6FxsPOe816x/p9uAXy08lR/3xeuEGcJ0
4UXz0JeEjcLbwjPCGangzxb91Ha84jZoa4tlFhC3tn2Ly15z+18JK/OjPnXf
sh3YsMD9oD+rhC9s58v5cUe9Ij/uhqnPffTxqbgL546aO+55wtOmpHk/Mdb9
ok81JTeN+ZeKNm9x/6E3m0fnM7Z/pW2krfkegynGZOc9a3s3GZud94XHGvv5
Pntpfryra2pfdkpF+l6XH5uKfjZORT/p7wNuf7ZtuM39K297stOnqs4Loo1S
wU93H9e6T7wL4H0g+3f2/IlU7PHZ88PzPjGZin0t79p418d7Nc4KvGfrYkqa
fQbvm643389p3lPxbqqzx3KQ2+ScwLvJ8neWpDk/VE6FLfulYj/FPLrY4F0B
efuk4l1aOhXv6Xg3x3s92mL/xHu+ibahr20ebf30ZYD709GynVx2jmXx+2Db
29nl6J7kupzdDvTZr6JoE+ET8R0cI/hgowG/QVgufCR8bN9scBmxN8bjvM5+
wT8NUuGfE0XbC+vFN09FvExzzExz/OBj4hk9+HhHfsTMCre3w/zBqfAZ51Z4
/MI73xvcr0n2R7nuT6xnh2PlZvtuff5/82mZ+7Xc+NhtPW05+sm5lLM0a+Fp
qah3kt8rUYd4vt+6SP+WjLXx22Ts11nPWMfY37NGsvfnnMC6ydrIGsg5gXWL
NexXnzeq5/93jiGPMta5j5ORtzUZ++cK1vtFMs53u5OxTnOW4BzRyDx5hUJB
fqydhaas/+8n49m+Lhlt/5wXe4bdPteUuQ+nWufBtvUXn2Fq5v+3JyDN+STp
vqeMhq77STJ0co4rcR8ZA9b/EvPsi37Mi3c8byTjPcQq312/bftYl3h3wo+d
f/aYUf5aMtYq3q386/KPrIu16wfnUfcjy3/nvnNn9q/zGRPODJy7uX/nHr7A
bWHDT3lxRuedGWeuKuY5S9JHfMXejLMk55vt1lOwlx/QmS+6Nhn9XZ+MdwI/
uY21Tr9kv2xyH/Ndl3Fhjf7Y48EZHVp+FwGlr7xT5106ayTfF7Belz+j73X6
UZezprG28W6etY41i+c93x2wJrAO8F3CCalYr0/39w63u5xvKfidzpv5sUfg
u4q5znvMeaekYi1vaB2sBawJMz2PyucWc5H5xXq4IP+/7yhW2Z7y7zbesM3o
vNv66WcNfydyl8sXWge66qXCrjqp+H5ikeXqOs33G6s9brTF/NjfsZnnseYu
pJp9iU/wM/OReYkPD3K8vJeMWPkyGT7JtV84jxJjxB/gXSx53D1wH1Se/tZp
YvMw1z3YumnjQ98B7fC+nWdWT/cFf7HXWuO+rLa+/8d8XjwDCtwP7nLQQywe
4L7ub/0/OT4/SEZf303GOJTH3Y+eW9TjDvJY30POTMdvCu8WnZ6O3wnx+6Aj
C7QXFI4SRsq+k0THpII/RPwg0SNEzxDOtGxzy7cQqjt9slBZqFcQ9eo53dwy
R1nmFKFMmCC9J4iOpq0y+UX8KNFjRPcVagsDVVZB9ELRigVRdmxB8Ps6PVB1
fldfLyoLvZXdzgClkwWRP1T4UzJDykIvddE7WOl0QeSvqabno/ihamsf0VKh
ZkHUzYheLHppKvo8kbVP9CChLm0Vqp/CWaakLxKuEM4TzhUO11i3EN0/HTzl
R4iOFe0mjBHOFgYKg4STVDZOtHY6ys+zzBjz6F6ttr8U1hjwO4Vtsu9d0bdF
D7fvjrD/mgpVC2LsDxQO2KusqvtDDBzscuROFJoJ1Vy/qfmqljlxr7E4yOkR
qahzjf37j8b/EtE6yttfON50P/PtTY8TGggNC8IfV6TCZ6PYr6UiTi4231j8
1Y5Z2u5iwHcWOhZEex2Ea9lrid6ZCr1Jt1PLfm5lHtraZcjUF9o41rDjNKGK
kDUljR1jU2Hz+FTYcI7HcR/rR3fC+tB7eSrmwrhU1E079lpZvqUBX4MYI5YL
Yj6d5TT8damYa8xZdNLGYNF+ohfaV/i2n/mjhbOts5N9dYLzWjp/mPz0V37E
/GvVwm8fVwvf4K9K9tV+9teQVOQNSEUMt3Acn+g28MUdqeBvSoXNjM8t7NML
Yk5dZLRwv050PXxJ/PZ1Py50LJb3q6/7Vsc24evDCiJOmpiHnl4Q/m9mHYem
Y14m+L2m5yzzt5bS14geL3qJ6Eiho1Cm9AjRo0SHirYRWgsdCkMOmaTKThfd
Nx18b/FVREeJdrKukeaRR7aPcIZwQWHINzEaO6+vy5G72O3SfheeEUJdoarQ
VKgmNDMlXU84R+hqXejsJRy5l2wz95u87kJDoYFQUXafLFqUjvKjLHPUXs+5
06wPvcOF9kI7oZFwqtBTmCtMEh6lv9I1B9tYi4R7aEv0PtHnhaWm9wpLCiP/
XuedKblp6BW9szDGdKR1Xi96Qjraeky4wZjk9ut5rBiL620LZXdZz53ud4+9
7D7V6YPSMe7V0pF/vvu3xLbRhxHuO2NwSDpkMumIpT6Ogbaiwzw+yDB2+6Qj
b7jzO+z1LOQZf0phxOh+kqsu+o/my62itzkGbnfbU+2Hq+3n6vxOWPRY0QnO
o6xGOuqcInqH+80YEr93mO9t+QnWO8L2DRZuEYYY8NjS3zF0oeOimfOy6YjB
SqLpdMRr5XTEcz/86TaucZvIk38Yvym3r6hD7F4ujDZ/jtNN3WYzp8m/zH3v
5fFnbKfY/inuz3D7urv9y9pavzDG++jCGOcWHnNinPW6vn1RLkM5z7lWHpfy
McEnrZ0/xHxLy5BXNR3tpvzsQSdzrHNhxOGlHhfmO+M0zjaW20r6Svv/Yrc3
xH4Yaj2drGuyZZAdXxjxQFwemY6yeo7Tni4fb/5Kt3Wl040kd21hPA+vTMXz
/rJUrH/sixqx9rBOC9OM6c57UniK57zwmOrcKzqfuwLSwo2mj5t/gvXBaeRH
i97PGaIg6l4u3CbcKswTrmT9FGYa9zvvNpc/TfupsGeB6HOidwt3mZJebNlb
bevjtuFG1x0r+qDoze7PLW6LdmcURPkMp5+yHmSeVp3J6OOOVnSu8Bp9TEU/
l7p/93nspgrPYKcwQZglPCQ8y9opLBTGCw8IVzGOwpSCaOMZ8/Ndj/pXW+cU
lz/oeg9YFzpvFx4piH3knILYQ2Ljo06vdt4i4U7bUi6HzDOpsOmhVJTfYZlp
7hN9W5SKfjyXCv4a8Q8zJvbHCtFrRWeTXxD8NU6jH58+mwq7V7gfL5uu8Hi9
LbwjLCmIWFnsWLnM6TcLYszx7fP2xxupiIHFlllrmTet5/mCiLl7Xb7EYzPX
fX/B/VwqrHcMvWXMcywQFy85XqZbnnqTvO+527GNnXe77EXLvmFbHvc4LnX9
dW4D/ctTIf9qKnjaI86ftBwyL6Wib2u5x01Fv1aaRy/z8TG397jjp3yMwUrn
LbJvNwuv0B7xkQqf4atXkU9FDL6YCpkH7LuNBRGD8+2vZ+yzt81TvqwgdOJv
Yvcq2/Gwda8i7tCLH1Ixt+d57J823WA9Mz3uD9l+6mxxHzYb9GWT25vpeuin
L8TqJsswV1algi5Lhb6HPCYLUzGHnkyFrbNs+7kFcQbtKnyXH3ey3xrw3M1u
y4871/K7V9IfcF+RH3e+P+bH+xbef+wRmpbFnf+Zouem4t0H73HOULq4IPLb
puLdCnf1rVPRTjPR961/qe+D+Bsu3wgNyuJ+tr5oPSEXu0VPKYv7WnjuXn+w
PR2lK18yfVKRRxn3s9/nx7uW76z/DbdBe9xt0T620b92qZBdZ/lfhd/y490G
/YLvKXpWWbzTaVYWZxLO4yVCk7J4x9G4LN7n/JIf70Y47zNO/UU7q/7P4rv7
bNTV/uDugHNc24I4b51aEGtYW+dzzmvkvFMtT1k7oQt/6E/0pLKweZPbPq0s
3lU1cvv4a3d+2I/NzcvCV7tdttl10YGd9IF3XucIp0v2/WpqW7SgIHQy5g1F
t1aL92MbHSOAPpJH3SLJ90uF/ZxJWZ95x0Y8bM8PHvqh0CMVdya9iJOy8FUr
0QvL4vzIGJ6vsnaiH1QLef4WUBvTP+zT9mUR08ihh3uVNr5red9yfzmuib+O
ZeHzDo417ia4e8gxT17nsoinTqIXqL2/xffmXKz9x8vah3RMR/52x9KfbqN8
/sD/7X4iw71D17KI13NEh6XizuOiVMhQ/q9t4zxLu9tsP7qxj3uOPNt3hPnu
ZeGDbmVxF5Jvuarmy2W4D+khel5Z3JV0s2+5dysUepaFH3s4fn73vG9ZFn9j
6WzRbqmg26pFvaNcd4PnJTHRNxV2DE/FfVuR5XqVxX3cBaK9Hbvw/S13SSry
uTfrI7qqWtz9cO/XtyzmYx8/Y472HDzK+rFhdbW4d+POoabnaQ3L1rA8Z2/O
4L0LYj85mz2u6COFcR68Tjhc4I+3HlYYZ7WDC+NsW9f8QcK/BVGOXB3hAPbn
wj/K/1uoIv4vYr/wv/TfTv/M3lU0T+3mFcaZOV/4nftN6qWCp2yX6O5UtPmT
6I+p0PuF6L9CUvm/iZaK1hBqFobuSsKxhdHuobarmtup6j7SVq5woHCCcKLr
ULei8w9wWa77Sr0St1XqsgM8Br+moq0/RM9T3z4U34dzhvC2+G7pODtztm4r
2kF4j7MA5xvhJfHtRdsIz3JeEf0zFWdmzv5VfUfJPeTZwjPiW3CeE7aJv0D0
GOHuwjjL1/C9CfckR/oMxtl53/1ycioItYX9OE/Yd9iPX3eKnryP1h6hbJ8o
r2OZ01SnsVBlv7gXnUGeaB3fHZzq+4TF4luLNvT5lnPuyek4+3He+YK4FV9c
GPznTieE3eLL7B/G+wzjTOed6HHvZNs72D5oR/PcgzSx748pjDM/vs1PRwzu
ScU9AbHSzjrR19lt0e7pngOnO12cjjT+/TsV9n5jnrsY7gTquw+cJ3PTcUd0
oO8c2tmGjJAujHuNTu5LR6cbuZy2sJ/7q46WoV+HFMYcPMl9QZ67i3buy7Hu
cxWPQdr6/iyIcTjWsb2vxwWeOfS7yvcUhNwfBVGP+GY+7WOf/Ga/VC4M/lfh
61T47v1U8IUeE+rVct3CdPiJ+f69ymozl9LRJm2nbCs2n2Z5fHOwfXWaywoK
Y/5Wc7+wM+UxYTzquc0KbpdnRca+ru38Wu5ryvXL3Bf69K/9V5IO3x1jO3n+
EB8F6fjNNe/YeI/Pb6h5R8j7Mn7XyW+J+W0ve2/2v2+lYs/PGYAzJntXzkYb
UrFfZf/NPpZ3GUf7+c9ZjP0x7wt4H8e7R74p4t0i7/n43Si/yeW7Ft658z0J
38rwu06+YeB7DX7TzfcGb3rPyXpU4L0i32Pw3Qe/GV+cin045z5+m8y3pnwX
yvcYfNvK97H8bpRv5fk2g2/U+ZaC3wLz7RnfVPC9Ot/J8x0G33hwpuMMs4T2
U3GW4Xy3nfgQ/0Eqzt2c4ecyfqm4g5gj+kgqzq7z6FMqzszs57nrYN93g+hd
qbhv593BfcKggji77ZPV/qdE84Y/gpyKb1b4lmNmKu4gOPtz7z1S/IxUrLnF
3qfxXoP3DNen4t0Ed/q8K+HdDXH/GTGeivWANWiH8J3yP8SfrEniP07FezTe
c3Cvvj4V5z7Oetw/cC7iLDZZGC5+GmMgDBV/byrOodz78z7rXeEX8Z+k4k6q
fM6xX+Junfd0vI/jPQbvYmal4+/98fcDebfI35GcCxU2q16PdPx9SP5OIn/r
clE6/l4ifytyjXCv+NWiq4SHxb8lul5YLv4D0TeF6eJfS8ffKrxW/IuiT6fj
72suTcffReRvb/L3P/l7ifz90SXpWOtZY34Q/TYVz0bWa54DPIO+S8V9fgfP
95eE+1X3Dd9Vcg93dDruftv6WXpAOu4KubsrTcczm/tM7sm5l+Q9Au8UuKes
Kfp8Ov6eKX+z8WVhlvi1rFfp+Hup/F3Hd4SV4j8U/SoVz5Rf8AtrmPLvTMc5
jrNaV+JE6TLlX52O73nYJ5+Xiu9hOFPxbQ/vYji3cEfH92C8o+fbAL4v4psz
vgHju0G+leuSivd0R3rfeCVrjfRfL3pzOv7OKe+Lr+CZKH4iYyOkxF8jOkL4
TTZfLDqUcRc/RPQq4WB++yI6WPhX+aNEBwh/ib8kHX+7lb+dens6/iYqf992
iujkdPwNyXtF+/K8lvxwr+fsT+70Wlfm9Y53EoV+Ti8sjPvtBUJ91XlQtEk6
eO6/uQ9/qDDunWcVRt4spxe4LnfE3H3eXxh3og+YkmYvMb8w9j/sKZ6xPO9r
ed91U2Hcs5bXe8Z6keFdAffUvC+YWBh7Xu67iTXua3kXcVw68nmXwZ3uU8I8
53PXzd34icKN4uumo40H3SZ7HvrP/o39Gu+JpxfG3uwyxzPvIrjL5W6Zvd/M
wthH3eK2aJN96LcFsUZ/lIq1mX0v/Dbxm1Kxp/6gIPbE20w/cB3qflMQc6Su
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
yTbc6DzKRnuc+3rsqH+H9d1peofHlnGd4xiY7TgYYT9MFc5Wew8xdpkof9gy
lN1u2eaZiMNTbSM+4j0E7xB4p8V7hAeFWe7zVOuf4rqTRdt6TB60zEP2MXWy
mThv8W6CdwXslXhnwbsD9k8tLMMemb0W7WPHrZZDnnk43vZg1zC3P9xtTHC7
B/jdYcLvUsrfARKLM133tuKw+WLn3e98xv3e4vhbtPc6jT86OFZaZuJv1RKD
xOQNxTGvHhMety+Ru6c4Yu3u4ojBcr8x95iDzKtLXY7cE677uGWp08m+mmh/
3WObLrd/GJuhtn287X/A/P3u41DL3eB257rPQ13eKhOxdZpj8jK384jbfdgy
xEl70WaZaOMczy/eE/LOCN393a8B5snj3nqL8G5R3IXDk/eV9tarRT/mbqko
7klfKYp7z2eEBabl96AvF8X95woDnvcI84t8/1oU9+kLhWfN3+70w9b/qtuA
f8jP7p1+ln9lSvrrdJxV/0rHXT9nas7WG9Px7m9TOs6I3Clz5tmcDnu3pKNv
9HWx87GB+95VtgMbnnQ96t9m2+nDLPeT3yrwmwVs5LcMH6Wjztvm1/qchV3L
fC7jHPaC907ch28vijvtD5xP+VburER3mf7/Xt1YYpvneFxY27al46z3STr2
Llstu91top87e96RvGk/TbZP5tt/U9yvB923d61jseustY7Vbpv3BNvTYfc3
6Xi/9YbbmGO5Na77uMs+9Di8ZJups8E+xGZs32NK26vsh88dK8QI9wtfpuOO
hjuQLyyHDPcjb7s/K90P7kfm2YdvGeudx/j8Y7vQudCx8VnRfzH4ufnPrHe+
22H+dfGzYYDn0A2eV8wp1rbOLkdupW3hzob3rtyPcNYlVokt3sd9no42P3Sc
0pfyu63yecYzkzsQ7mqWezyJrx3pmG/8VujTdMQq8f99Ou5e/knHWR9/fG1/
fO00+d/ax385Frc5XV7OvOPu5HXHxh77CB9zHt3psvI5+qd1bXP5GsfE+y4j
/9t02EHcbvTYbvA44TvuregL/vrCfdpgOZ5Pu23LDsvT/z/T0d5P7vcHtoO2
sJ97p3ddd4/jipji7qqjv4UcKdybF/9T9h4Dnv8tu4hnZXHsyXplYp3olonn
Pc/jJcJqP5dXsQZmYv1v7zX9VT+rV1nmYcssFO2TifJVzkfX815LHvOa8Lp5
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
D/EM5Fn4aUnYz33V7xVln7BHePFQ+Vp0uWiPKrKzgtacKpG/WvlPiX5eMWRW
CUuVfld0kehO0TXClxVD9kun91g/ckOkr5UwuEI8G4iDH42Njgfi4GPHBXGJ
3M/mNzr9sst5bvyViXq7RbdWjP78IXyovI9KIubWC28Re8I/mcjPzUb9FW6P
/OWOT+q8VBI66NdXwmsGfSJvq/tFewdUysn5QXT/SiH7umWXaVzeF118aJQh
873wivCZ8Cp2Cv8I/5qS3k7ZoaF3s2iO6EeW+dD0I7dDe7uEvKz9mg0fveo2
fhU2C5uEX5yGXy29O0RfODR8iTz13rEcMluE34TdwifCp8JK42Xn/Wb96F1y
aMi8dGjw9POJQ0PPZssWZOPZ+afG+TfRzSURl9j/CrGg/FdFPxM+Fypn45lb
MRvPI57PPHP3ZGIt5u9n8oxfWhJr44slsU7hP/JZA14wljrvecuS/lfIKY2Y
qJSNWCzNRvpDl++f9VqVjfWMGDywNPCT4zff8+oTy6PzIP+NT9bGdcIPlCn/
AK+Z37vsB8cmZf+63X+cJh/Z7c6jbG1J6F3nem9Zzx+Z6O+/HsNXPI4fejy2
W+4t183JxvP+90ysn6yjS9yHlZ5nO5yG51nCOvGOfbbJeSst86nn2vfu02bL
IMt+iTX5DbfBWkib+PBNl31t/g33BV9+S5xkwjb2YK9bFzK/ZGKNLsz+twbz
7EceH3/tftEWa/ZXlkH2OedR1k7je6zv32d73Bg/9mYL3YfjS8Mf+AI/HGpf
HWZK+gjfu3P/fpLQRTiH/VA2nrXc1Y8RPY/7eKGF0Fy4yHnnOr+O2zresVLH
7yWqqH4V9Gdj33Wc7WG/Vddtwh/kdL73XlW9F+a+lbgc7ba6Ol3eD/TTtwO8
F2PflC0N0C55x9mu/Wzb/ravqttiDFqq/gDRVqLnC2MZC9H+omcJzbjvLY10
M6Op81pkw67TXa+70M2U9DjhamGCcIHRy3m3CUOFWz3ujP9l5qGXm5J/qW3B
BmwdLNwiDBEGCTc7b7D5W4xbLdPCfhvo/uLH+tnwQd292oB2dt/oYz/HSD+n
r7Av8Emux49xPNF+PND6DnLe8dmINWLgNNHG9g358Cdlw0ft7SdoB/O8mypw
XCSy8c6uhs897J15V1QtG3uErGMN39POsdmYJ42yMU+YL7yr4p1YI8vVzYb9
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
92Snv9PjDOPN8Jrxj7leNaMsc10e5pUhBTHPYKuMvw/ZhvvZjicUxPg+sSDm
p8HCIIe97nDoJLtX2P26eUnDPLB3OuZn5l/6fR+PCdPt7m2e+0T/UF97wuMD
Y8YT5sHfxf3pQY8T93u8Gex8KM80y0VmpXSMXyWWPdxpepkPHuZcdOtsdHJY
Ih3lyaajjoY4j/EFsT6gbvhvH3U7SOhu28BGuN+9j7/Fneg4wvknF/+H5R8t
481Pn+xgGYNt1y/Z7obaTZvNrBn9eWLNaFP63IiaETfPbcqcPLAg5tSuwiMF
MR8zvz4pDBAy6WiX6ukow6tuz4cLdq0FBpp/lsMetm3McjjyCtLBy1zf1fmM
czj57lQ75qUjz7285mLNxPNInsm1LIg57+tUzIefitbROvgc4VChtnB2YYTV
sfsc41zzXCDUFY4QDuTOIOEg4UbllxVtJnq90EDu5qJNHA9fW57Li14nWln0
YOEQ4TL5a4le7vgaQnXhGvkbi94geqHzJf/DhfOtAzzocRF3/5rvtnToe5h1
viId8i4QPc7vHo4tDB32th6ElTmc/NHjBOdzgfM6RThVyKCzcDTlFS4WjhKO
FFLCyUJauFb5nSTaSvQS81zs8u7t9xcNnS/vSc5Ox/Nt3l/kuZz51gmehtYh
7TyQT36XiF5k2eiQdJ1T98dYT/SlfZp6/9PM4Q3MQ/zlbkfKeHM69kjlTlPf
+l9iuSc5n3qFkfeR5iH+UtdR2vo2Kox2PMCo6bAarmP8vGti7f6dgZs1fK10
rPdZ/+PmHSHv1CrWNLxPYl/EeynWqUelY0+T9rs71susedlb7FMY62bkbXDf
YI2/xXnx7hH57AHK0/Fe7+h0vCsjr7edH27C2IvxnL+u9SGOd1y/Od9frRtr
LN4dHpKOcjb0nuYl57nFZX7TfXW+9VvodKRnH8D7tM0uI5T3ZbxDe895sr5n
bcd7Mtb+rOk/M3B/ah7if3H45+b93TKwM/airG1Z457nfnSu26ym2+yqdMTd
ko73nnu7Px3uvoLdLnGe5H1YOtabB3svRlvw7pF9Ke31hcvxrvU4PR3vcBun
Q1/KxbvOV8xLnvXS0ba1RY9IR35Ju7GHI/2+lLSrXdaXXd6DbL+8661pu+Td
IX3wAI8nrOlZyzMXsvZn3X+/8YDDGE8ZpxmvGadZBwwwcLMeYL3LfMn6999U
zNfF6Zjf7nHcbc7nCcsnr/vcDvfZ39v68A5gRypk/5yK/NGD8f1B64N7u/ef
7EP/SsV+iv3Ob94v/Sj6SyrmYNYAvE/oZfmEkzfv6fo4X/KnTzBHs5dm/cE6
n3X5vS7LEGOow1i/M3+zfp/gNN3tH++wXpZ9y2588LAuQDfef7RwmXjnxH6N
vR57NvadF7muiWtsXtJU7FFaOoy6KUrHeqpyOuqEdmPe3CMd+5jf7UZ/nifw
HIB9GPsy9qmT7WZfSn0y705yPVC2QW5v9jDM6XfZLu6yjk86Lem6mneQbQA9
m7gcd7h8/Qzc7Hfoi/t5XjvUbt7f860D4ynfTmDTvFs9yOMzYzPfPfDOnOdf
tTzu8y69xGP8np4f9jDd0zKre5yuadkVczNx9M861gMdmLuYi8mbMaDA40Bd
uwk7Nx3+q9PxTUQ963aQ05H+zHSU88p0jBGsS8hnH7urGHWcL/0W3Wp6Tit1
+fa3/xi7S+3nO4Ziz2d878C3DGnPVxmHMS4zPvMsJWFe5rc5DiOO/X0X2xZ9
DT/POvq6vdrZ5lqY7xv3ndfdvrRrf+eNDszl56fjexC+P8kV7vqeotxtV8nY
02GXpmPtcF462rnY9XlxOsrCeuxCfy9yTjrkM+6xZjjK/KT7x/mjB2mxA74D
4dtH7uznW0ieSW7xc8kFqXgG+6boSPE9Lp4+PKMTfVp4SlhgN2HwTBEdJdqr
MPinCsPNA+8wYagwV5gkTBYeExaab4H9PRw/PB35DBLtaf4ppj3Ne4fi2os+
mI41aMvCWL+0Y70o2sFrpzsLY/30mPytRDulI+wuh5/kdNcWxr8G+M/AbKG7
+O4RfVi0m+ijwo3mu87pyJ916R3CeGGC+Ya5rPOEtcILwvPCc8Iau6cLbwsz
hGeEZcKYwviPwRj7JzAPok860q112rG78YLlDhuXDlnDnO4FpyF8Ke2SjvzI
9x3aUv7uor0YF5m35H5SdDB1L7xoHso1Ih1l6+ayznWbvlQYMia6/Z4X3yLa
yvaALUwzH/xD3MY9nOYO1+EFrtsmbss707EWZo3drjDWJLcJt5qybrnd6S9w
2HkOZx1zTWGsa5qb4mffc0th7HtutdwHvBep4D3HeVTIudppr7af/QN2wbqa
tfZDSv8g5UmHPv2sUwvL6yI8wt5NtH865N/iPAbYhvq7zA+5DliXY6us028y
bWW+9pb/sHlJ0zodex32WVcWxr7iisKYD04XziiMtTtr+LsLw/ZxY//t3H9u
8P6Adf0NhVH31+/mx/aJvycd+rGPoI3oC/emQ+4lln13Ourm9nTwk5Z+t6Qw
7HC09SFNB9K7Pu9xWdC3TTrKQFkauhyUh7Hy/nS0x13p0O0U63pVYewDqQP2
n9TJmYWx17vddtLcbdPYvMfuxg/vWdZvVGHoO7Iw7HlxYfQd+s2zwnaNm38I
HwjvCb/zbxQDN/GvCV8JX5vif9U82532HeFtYZtwUkZ9VrSu6JeirwhfmC63
G561oieLzioK/nXCpZnI45xM2GMXl2FAOmwE+xzl8JG20+dsU8v4Fl74vCjC
nnf4KfJnhHRR5EU+7xbFd8mcP+CdejP5G5B/Ucin7h60zKWWu1qYKawSNrss
LwtnS9etohdkwr1S7saib4m+ybwk/CtsEv4RvhFed33+4/CNrjvq8HunIe0W
4UzJ2il6uWV/b75PLPc/9JKufd2mpEUf8v/beWy0/muoG2Omw551mfCfmIky
NRT92Ok3us2Wu9zIeN4yXnM5Xrcdrbc97LD7D/OShvbu4nptYV3R+QnaMR1l
eEa0Lf2mMObg+4TOhbvmbNydCoOHeMbm0UozQnSIaO/CmJP60AcLY47t6fSd
LaOPeWbYPcM69E5HvvelYz6/z+l6e/5m/bC6MPRc5f6EDY5wf1rlMq0yz7PO
Hz1uFsY4/QvpSLfYtt1VGFe4a07qZj/zF3PXHPfhUU7DnMN4ynzFPMS4w5gz
1G7CZhXG/D+wMOZY5tVHjIcd9qT54KFvPeM48hzk9IPToV/PdPRB+gXzMnPy
APex5+3ub37yelr0AdcPbf6A6wn/QKcfy57GerPWaOUyUbbHPE8zpz+ejjbv
mg69H7auHV3eoa7fm1w3s63/QOdJ3ve7nZ91W/dw25DuT9nlX8KGohhPKAdz
E3PCtc7vWMUdJ1SjPzBPMc6kI6z6buGV6VOmhwj7CLVND7G7jlBFqOG0x9sN
PcG0uvOblA5boD75txTnfd7hmUNh3I3OveisS1ifvGU3dKVtclthnA1ijcr6
9OPCyLtCr+Xp+C/W/HTYFu5PnOZH2/I79q9yPHzY/tuWTzz/4FrtNGVFUV/U
SVXh18K4w/1kISWcJBQKBUJdhyUd3lg4QGgkfMmzEtGv0sEPbz3hSOFi4SgD
9yWMOekY639kX5COev7C7n0Zf3juItSkrUVrie4l5ISjhWOKQs8PFVfJ9Vzq
OML3Nn8t42CHZYXyomibhi4zsj5Kh3+L5eWc/hjzVORF2k/TUXerXc+L3Q70
+xe9z+GfYvwnjXUn/4JjXc769UO7ofw/bWY67IG9zETzVuxXoCtsB9gD/1Gb
4X3RRMt/w7z8h4x1Of8zeykd7fhaOmxrq/C98F46/q+2UnRZOmzvOfaIohuF
vwvjXBr/aaN8O503+U5xXm+a72PHb7T7b9tdUVHIWGnb3mq7I5x48uVfbS+n
Q17FHmu96+cl181ch210fyCPWemw3Ve8t6C+PzWWuA2WuQ5edjhtAS97Gfoh
exPqhr3KL8Y6h9N2pJ/qPvuLw4+yzdYvivZ60/XG/+L4bxx7Ffo9/3pjTmAO
4F9v/PNtWjp4+G8g+zzG69muU9p0vnkJf89pX3TYlHTUx3jvh5D9qmViKyOs
w3jnjY6XWk/6I332XdEm7rMHFcVak3mTOZm1K+tQ5ton0jHuPpqOeZZxt2Lv
08du4iv2JdfYz3jNuqCd0zxhN/zsOXpbxq12I4v1HX3/1KKY0951naxJh029
mY5/+vGPwf2KAnlFu/7zhzvfZTnT5WFcwo4p57p0xFN2xmT2qvyDj/L/bbuF
Z6vtMOlw4u9zvVAnrP8r9kPgZocxX7GPYM560pQ9yJ323+Wwin1Pt3TM5czL
7BmYoyv2N1DWEMxb8DCPdXAeg+2+2/5u5u/qOqAutlg+ctkTMX83d7vwDoY5
l7m3czrWNqyXCL+sIs57nvakTUdb9k1HWc9weUn7/3pOR7s/4Dw62346Gbiv
cDrSkx97VfaZHTzO/O02Yjwq8NxC+9LWjPv8Z7G651j+scn/GPfxHIi7st1V
HP92Ov6vuSIdcxH/omTOqGk3cavS8S9O/umJ/O3O44N07CO+8Vy9h+eHzbaV
j0UPs36HCgd6vmvs+Y9y0Lf2dTx85FXF81cj89e0/RKPvMNtv3m7+StsGvcR
zot8TiyKf1hWdvmZp9H/d5dhu8O+TseeaVM6/v1J2Q/wWHzkbvNvfY/vRQ4v
No5yOP/VRA59lLopcZr6dlfwZFxf6aJd/+2kTbe6XbOOh+8bty1tzDzK+MvY
yjjNXMvctZcp/jfSMeeud1kOcH3wX80KXrC3w1jDUAfUyW/2434rHXXHvzhx
w896j29xP/R3sSuKYj/0jfFtUYRdJFwotBcGCS8Kg4VHhfHCBNpW+67+6CY6
TrSrMNbhpNsvE2GPOHyM3Q9b3hzLnCvME4YJQ+3HnVH6x0TLRCeKThJ6CM8U
xT6X/e71wnWWu6/47nC+j1rH7sKdLseAopDT3XHjXZ5ultvd8Smlfwn7MB1i
XefYjc7Y+7m23zst+0lhoDDbdTZd6C1ME0YKi4TFwhJhtDBK6OV4+KYIU4XH
hXLlPR+7E10gulAY7rie5p1i92ThiaLYG/ctir1xX/uXOi/yrCNZM0QPt+yn
XO/UM3VbOxN6z3b7zDMPbVEvE/V1cCbKhZw+RdE+k60H8tGjpughmShfNhNl
H+Hy93FZkXGe6496pJ+3EFoKzYui7zN+sA49vSjWsGeY4r+6KPYeVwmXF8Xa
lbUq61P6XlPh23Q8K/kzHf7THE+fPHU3vqz9V1kmexn2P2cVxb7jB8Z/0V/T
4SaO/RRr+buKYt1RKRN6/0M/y0SZfk9HHDx3C1dYT/Q9eLcyneDyXFMUe5Er
rcOV1gn39+lIvzMdac60jMssj7J/l44y/pwON3XHWp16Pr8oxlb2NYzd9Bn2
J+xTLnTcYW6Teg5jDPhF6c9xWc4uCncdt1djt1kLu5ubn77BXuYnzwFb02G/
2AA2fL31QIft6dCBfVPFfpK6ONt1Txsc7XJSxjzV7Q2ie2Yi7QVy/+G9F2W8
wPQIl+lal5d56jevBbd5v1Xb+VxnHnifLor+hp6LrDO618pE3zw0E2cKPvKZ
hudT8b381FScBeNMDmcDOaPFWa2/Pc7+lb/r/FjFGYVZqeAZ63MMFefDCu0m
bKNlcP6AM16cK+CsAOep+Lae81UlpvjhIX4P82XtPs1rGZ7lvp6KMweLU3EG
7Xvn+a/lIwP58CDzpVScR1iRCnl7Wma53YQVWyfOiXE2YptlUsadPmfB2bIK
feel4iwC5ws4S8A5L85LcRaA7/r3MQ/nvDiPVtlxhHPOLGd+4jl7UHH2C8r5
gaoO299uzh4Qf7DzIs+b0vGcu6XoolSczeIs2BKfxZrvMM4YcH4LvapYB8qA
/pSpjsOJ5/wBNsB5rZzz2cvh2y2LONyE7eu0deyGcuYDfdCZsw+MJ7fK9qpk
Yuy8pSjmjQeE+22jNxbFXNaqKOaxVvYXZGLOSmZiDGJ+Yow/KBPz3v6Z6OfM
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
8q9c/kGMDry/YOzh/+D825h/1zIuMU7s4f1KxfMz/g/LP2X5PzX7i3qWj10d
ZNvijjjuYOH+HP5nzf+P+QcxayXWrEsT4V6SiLXbGtsh9rhAbXCM+OeLzmOs
kfvlZNgBdULdLHa6JZa3zDI3+7/ynybjH7v8z4//qy4zH/bN/5f53zb/9V5q
GZ9aB/L/2f0BfWjXq8tjrX+r6O3CN3LfI7pa+6XTtW9aInqv6OXCZcL2qrJJ
4XfhbeF7YZvQR3xV/NzjP/n3kPtT0UMlb1+hjnCm7KR5NY19tSLtSqf/WFgg
fCTcqbjB4mkvOt9hxC0SNgmLhTsUN0Y8nUSPlNyLWNsLVZwP+Q2THj+Ld0Au
9Pik6i69PqsaYSVK/7v8KdH9RX9RWGlZADfpc5JVS9hL2FvhBwuVLQNZewoL
rSPl+ElIKKykLPT913kT/qPjTpCsmkKN0tDpE/MRB09xWQD3D0JN6bdT/nL0
ld0/xbc81SO/jVUj/3quB+rjO/m3Cm8JHwobhHnCm1UjjvDOkrVQddijVsTN
Ne+N8ndU+HWiFwuXy31BrdBjlfCO8EXVqIsvqwb2dp2slF7ThLeE92wj77t8
i91+D+eiXe8WbS25wyW/g+g9wjC57xI9QGVoJDQujXKstM6P5sIO7smFm7I/
lot6WuW66poLHbvkwrZWui5uldxRkn9vrdCBOukumpWtn0xblEf5qYf1whbh
DeFbZCnNEqXtWSv8hK8QXjIvaR7MRZonRM8X36XiP0+0TNihusnUijrCfg4p
i3bgmSS6FZSFrrj/FP5ymxU6nPgnc9EXupvutL39bbrT/ZA0RWUxTr6kdvip
euRT4Ly2uc/Bt3E3GeAf2xN5ocNQngPzXJPnvsJinqF4TOA58TEeF57luayf
+T5hP+5vxNeFfHh+K9rPfKOFZ4SHzDNS9Idc9LFKpdHnZpofOcgYJTwodFM9
zlHddq0Vch503BbnsQM5astjJKO0PGQhs7w08nvQ+dMGtYV9yqKuP3TdN5Tc
RpJ/suiQXNjsY36O+2vVGCcG5cLW+omeJL5jxN9YtKHyOJbnytiv/PUVfkKt
SPeL0z6dizFjeC6et5f5+fBmxVeSe6+ycH9uP/y4H8+FPrTRU7mwux276f2h
/f0Vl+dn3fuVhU1is0cyxkmfuqINhOPkblIrxvM/hA+Eb6rGs+tvTfez+wjx
JcR/eK3Ql379G32L79VkY8szkZ6+jrym4rtK/BeJHi80kfvUWqEX+iC3by7y
HZwLN+XpRj2XRj1Shzw/J5+Bopcp/X2Sc4Poao+ljKlNGReFrOcnbPLosniP
c7TfHZxaFnzwnCS5SaFJafT960QPKw87PsYyys2PrV8i1BeOEhqK7x7W6aJp
+U+hX5Of/I8o/ETRw4X75T5etLZwBfNHeeiQcZqc/M2wSZ5hyl9PuLAs9DrI
uh0vf3XhuLJ493FOWbyf2sCeV2vIzaIF4ssXjuAZm/zrFL6R/Yh1Rvf3eVbD
s0TROUp/kMKm+L0KfM1cL+iGjg2clrh/sqHTPuWR9kSFLfD7HN611RWqWUd0
PdJloUzk04QylcVYgo0eUBbvYg4vi/dB62rFPPaLaH55jPfVyuO91bFl8R6K
9IxNyCM9cmrafaBlN1aankp7SnmMdUd4vCsrD1tiHKgpXC33IeURX9c8//Hs
VeH/ZmPcwP72KI85qKbnIcaKM4Wz3E71nP5I8T0IT3mscw4T9iuNshzIekE0
KbRgXVIe9UPd8D7vJNcNdZSy+yTjZIdVUZrjlbZqecwbZ3rc2s9rHPLk/SC2
ybun+bmwy2l2I2eR6NmidTzenWM3YR+rzKtlGx9lo0+tcr9iLXWJcJSwxHM3
c/gUrTv319pycjL8rKGI36r0f/M8OhthSx3eMxfrpMe9FlsrrHH4MtGOol8o
zXaeY2Zj7XKx811q+aTvkYt0D+ViLF3n8XSdZeJm3THVa4/KHte/qhp9hP5R
l+eQsrOXNYb0Ej1XuFbuZoR5vGXcZT1T2Wm/kU5/SrdfsjEOsaZ5V7hWaToo
bUunXeb0V8nfReGtagUvaRgrW7DmUPjNtWKN/HXV0G8fu8lrm/L4iedX2SgP
5frZuhxiXtqtituR8eEEoUZZvBfl/fVh7hP0jcbCOzzflMy3siHjLKcl7kTz
Hus+zLi+gufV4l+TjbBj3bfTpbFGOqU08qvu/NeK733xfyL6pjBT7jeykc/Z
zut54QVhgMeMC913eC98flm8rz+vLMYE9D/fbsJYb+REZ4j+mY0+SZ+iTsus
N3qhX4rnokJ92+4LuaifeaK/856edUB5xNW3jTV2XTUSfhbPr9L/h2yML40c
hxz8k/yNwHnWk/3RTaJrRPu7nJRxrDBO6FoW73vpb7wjbmtKvZwhPbp6vqCu
2jj+ToU9KdxVGvXO+/CK9+LHuT3OMi9yVirv60VX5aJ8x5XGeEFZ9vc41sLt
3Zx6pa5Vd8eK1iqLumWPV8v0jLJ4X0Z+fDPwUWl8F8D3Fe3cNue5bppb7iu5
eFf/FmtDoRVzci7CG7n+b3daZHQoi7nlbuEi5n7xX5OL8l1lu2om/wD6TS7G
vDYu9+Xyd1f4Zbmoy3NcD1fL31PhV+TinfrxlnWq/O0Vfq5obcZBuY/hXb1w
odzHi94hvva2S+qqpfsGtnqHw1fkIvztXIxFrDvYVxLO+M2ceGdZjO3Iuthu
wq4rizH92rLYm2zzuvFix/M9CnsH9mb35yL9Rc73ZKdFRkvFTRfPrbnwX+/4
Q9Q2lYWDS2NtcUNZzON3u57/v35RmqZKe1QuvoEh7FXP541d7ibytxPP2bmw
K2Qtsl1Vs23daNnk0VBxZ4i/QS7WEJe6bZua50ajlcOaOZ5vQE6g/ZT2TNff
tS4n/es22xjf5NB/1jF3CC/J/Xcu6ot6e1J4xP2MumCvgJ31tf86x/d1OLa3
l8bf9aJFtUIOMgbCWx7vV24S3ZQLmZ/lwn2D+9fHuahTvh2aUhrfkPC+5P1c
fK/CHgd3c/eF/ZTHKrn3Ff0iF9+o8A6ad9F8k9PRYN3J85WduRhD2L/8kYs9
1PZcPAOb5+dgV5i/o9ugm+uYfkv/vVn4nblf9F/RKsr7I7kTov/J/57cBbVi
/Hi8LL6VaVke76ralUc/I7ytZSKvtduknduFeqDOvs3Ftzy06SDhq1zs/fgu
6DS3O+MjZX9K9HvWrrlo67fd7/q7v8B7mu2E78RYg7/u8Zu+TJ8+S/7WspnT
GcOE3sy3ufjui/Z9j3KXxpjFeEUaxqUT3L58O3VpeejAPvATj9sDrMMW+78W
/TQX3yh9l4vvnW6zHa633u+5HA/vZmfX2T/A9tne9UL9YDct3c8eNHCzr92W
iz32X7mwxzstA56HnA47wz6xu+ZOR3r06WedH7UtYBO9vE5i38RelecBY3LR
tlPd7pXL47lWnug0+aeXxbdJP+ZCBvZ/rPs+e7FThYzXAL0sh3QjZU//aG0z
VXRGWXznhCy+b3paGG6Kv7Pznua8nlKaDUo7pFbky7z5i+icsrCtF4U/c7G/
5/nAYzyrEv+jtaKPvOP+NUvIah+xUHS/8ngO+Fc23LXlLhAdo7g9xDNddJHS
jRAWmt5vPUfaT/zqsnieMNM6LBbdQ2n7CZ9Kh6dFewsb5R4musb8pKPvrnLa
VQ6babmLnc9ApdmstCNqRd0Mtx5bc/Fs5KdcPMNgHj+6NNZQT9o2sJlB7oOz
HP6CdUf2A5bzsO0cOsZ2uiff8bN/KI9+TNpZtoe9Fb4jG+GEYZdjnW6M5d7v
fOjvtDdj1Oe5GCvW2N1D7s25GDsIf6wsykBZSksjnLCeZTFeYR+MD9NtP9gG
Y0f3spA1WHX0gepqUK3om4yXH9rm4WH8YIxhbB0mDC2LMfJeh3V0+DC7hzrd
TU67p58P8ZwIW1tSFs+IlpriZ3ymjfN4niP3JLl/y8X8i43tI6xU2Nu2/5sV
94L64B25sPeVDp+7m47kTZ+lHBNMxwvzzANvN4cRxzNtniuPY14SZkp+O49V
9BnmyAVlu/pcG8VNFE/rXOjHOgF96btvlYVePC/iWSTPLXu6XSaXxVzDMz7m
G+ZsxjH65HEeExgbepp3Sln0VeIHuS2GuRzU1WO2h/uE15VXZ9fJW64X5in0
/tdz11NOyzsFnkn1zoVtHuwyDHFelLlTLvaBj+SiTSvq8p9c2OxPnlfXlkUf
mezvIlYURz1VjAHP7NbmE6TPXhornhWdJvwl25tcK2QuU3wluWcKKfEsEH1J
qCX3YtF17jsvuM+87D603BR/Iz9b4D3Au+YnHeuOR8w3iTFO+U6sFTots44T
3Scq+gZ+bLFDLvbw7JEnu3xvFEddTDT/baxdxNM2F/Wxznq2z8X7GJ6Z88yh
hvdK2PIM2+07dhNWWCvS0xeG2+aox5zS15KcjNds2DhzKPs9njfzvOUEvk1J
aK2XjW89X0zEtzVLtPdazF6S78iEZTyzEt7hjBzvw3jWyHcUhJXEs4sfvV/m
2dcv3rudzLe50r8pz5EsA1k8o9jo52bk8WlJ5LkpG+4vLWOt8LOBe42wmjNs
wo/CSvIsCV1GKZ8uwkgD9wPYp+LuEQbzvYf0/k7p1mVCF8YayneecL5wuHCY
/bhvFB4VWpXE84CfrQNlXUUZhUXo7fp62/psM35w/Ww030LX6WKnWeS4TeZd
Zf4ThEZCTdcJdbeOd7auP3TeIMwX5vHMyG7CeB65wGHreZ8r+no23G/I/aHo
ZNEVJeGH4p9kTITfeWwuiTz3VJtX4p1mcTzDJM9V2eBb4XRTSyKvN4W5wkvk
bzeU55602U/F0YavO6/XHA//B8K7kvsqbmxAfGs5r1kcZZrvck11Pm85DWnn
lMTzs5/cRsiZIPpqNp6NEP92NnTAfn7gW2yFjRNeEV4UZgvv2Q1933HoA+8E
64vePJ/4jXyErpJ7ruhA0Ud5NiJ3Z9GeQhO5nxC9SPRIoV5JhCdF7+e7CYcT
X1e40DxfZOIc3C+ivxZHXXDupZfS1Fd8d75/yMR5F86G9JX/GIU/JtpXdn07
+wj6nsJOE8qFPnxfJdrF+Z8kpISThVOEtN0px6V3i79XaQ6yzndlwzYp44El
8S0XZe4g/xGi3bLRZpzZQ2/C+EbrcOuRLQm9/nQ60h9bEt/RNhSOcp1cbDf0
kpL49pdvgGuZt6r5OY+0l230cOfFt27oWKMk+tPRQgOhmfNGh1NJ6/o53Xzw
Hy/UFs4SzhaeVHmOE32cZ3cOJ54zRJwfqpyIM2AbhA+Lo0yNS6JusAf6cm++
bSiJujjfOMJ10sNxg0VPdDrSV7cuNVx2yn0w7kTkTb7od45QR7jUZcQ+Mi5f
1mVu4PgLbWv1bA+0ez/ni60e5LoizWX2o8+J1ue43ernbOeLHf5G2TMRD181
63Woec61mzDsGLvFrnlPQl+iH31WHGMN48xqyVrDWQnRQYobWBL9835hhPCA
sJFzycImYUBJPF990nSW3c8KTwgzhHc4V+2+z9lczug+VhJndBnjuwtt1Gce
F9oKw+TvJHREZjboNNGnHE78M8IY4WFhpPVCv02ZyOu9TMQ9ZN5n7B5dEs9o
n6P+hS5Oi4wFSjefb0WLww39WFiovJ8viWfI3a0z89NKP2vfWhzjWVdhrLBY
fI+IPp8NN3ouz0Y9DnQdzbKbuhrkOmb8e8QykDU3G/XI82TKRD3yrvHekphb
mWNHWffFxhKHrc1E3/xMtJvljTMYUwl7WnV9n9C5NMbwNa6XHT5bSZ9a5bZ8
x/XLXLrI7kXOm+fe8H3k59+rLaeN0FN4vCSeqw9Hv2yEt3bcDNtJH+Ff5fef
8Ilt61+7Z2fDXl7Mhpu049wWPWxHTwudS8JG7nXdDBV6C9MtHxsebt0725ae
Ms808/Wym7A1ngOZC6db1z6Wgaz7XP5RtqO+ti3s6kHbGjbH2or1x38lseb4
137aZ3NxjJ8l3hf+bL49SiPdFpVzi+h32Qj/xOnpp8zpH2RinmS+/FLYWRJz
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
k/AM7kYqfe/qeM85VXVKVbfrhLtnon7U61r5Oyv8ZuEd5D8sE/F3KP2etCkJ
92ZyT+UOlOg2E/20Uugg4s0f+nz6yH+++NlTeLygSjSTSlGnLTJRx10EOwuO
FBxh906CS0S3rugvEr5JsLHc1wsvVL7HK36x8I6uM3U7wPLAG9wFohsm+sdL
wZt9Xd5dSeR9WxLlUuYQ+l50HUR/YynqtIXTTJC/icIvLAWf91HYPUmk29n1
3TsT4Z0y0e/0HeetLdyf9NNQpX9BfBheCp1YB7ieyDhjo71hE4+T9g7fWDAJ
fgpPT+K85yvn/bfPUdp4bK6TifG5dib+lTbJxLzM/PxDdYR95PC/na7OaTZ2
eZTDuN5GkBNsnYlx0M50lLGpoKPb+T/W55K1BZpbRqhtn6mNZ1tmuluWGDc7
2J1JYl7gXfZ5omsm3k4UnpzEWGG8X6T1wVPKZ0I+ymzn+m3julGfbQXbeV7g
bKm7vwvjlOZTpR2fj7GyrWnoD8Yj/XOWyvhe7pFJ8Afe/Cj4VvBddfwLOVB1
mq18DhPeUzBD7v6liHvRtC+Z/nvjl5z2INFNF30/4TOS+Dc13PMl8wn1H1SK
Ng4rBU9X+ht2pPzPKvzEUvBqZ+a2JOwKNBJdY8E/1WFrAHsX3FP+5j91etF+
vvM1mfgGoNOAfOr9Tahx345UGR+prLOEL02iHhf43XzZ6c5R3ErRjCpFWtIx
H3apDjlGhvdV3F2iObQU9fzAdUXOkLe1MgG44QX8Rya5k5Bzf5Inc8wgy83g
TIztQYYdHX6N0pSFrxC+UdBV7puErxNUyX0xc4LqMUH16VuKcMYlc2Nb4VSw
m+B2+QcKL2COEu7rsVfFd0JpN4T/gjq5W5YijjEJ7QDBoZa/vOJ2EU1aivmg
3nPXZvIPVfg2wpt7btjQ462N20N9mZtaMt+I7jjRb1uKuael43ZznXc14K64
DMqCF62VpqfStitFGcwNlLmL/BMVvkcpdPdxf7aDvxub/Yeuhf278Q0W/a6l
qCd17EE75R+n8N6l4HlGYZcIZzPh3tLjbIB5spXgIM8dBwsO8dh9ROmP1nh/
uBRpSddNsFj+kxX+pHD/Wn17mjVqdFRtpPs/p23IC/d+ihshmr2xVSH/M4xv
QS/PEw3zBf7egv7Oh/zmJhF+J3LOPKV2lWmvoI/c7UtR1kEub49MzHe7Z0Je
tnff35qEzMxMwt1B7muT0OuGfivODjs4Hen3djjxhzofeLWJyhuicrcS3lRx
uwv2qI7697bMHVYduhIHVof8tXdcW6XpobSJ8M1JtHOecHUmvq+Mja0Vd7ho
tkQGBIfJ3aUU+iDREUnej3nNME0wnzNbpVsqfJTlD7kbZT6OFKyj9InyqS4F
D6jTcYbjPZao3zGCYwVnC84x3wbYj5vv+O7mYWPl9fe6gtZRRn/3VzOFt1VZ
2VLk38d59jbu47GFHPMdXq30TUW/din6gDva6ELb2zR7Wdb3sr+H5Xyw69vb
ctPDYYcLflSejZVnI+Qkif4pC/+l8NWq85/CvwrWFs1ayLj5dpT7gDXYAcZd
3TfI1lluYzePhQMF7ymfxcrzbeGVgo/l/k74W8F7cn/VOnT8oetvT/fhDu7H
jpY1ZLZVxvOK4HOl+VRpf2gd/i6O75mJOXE3h1U7/Pok5pirkiiLcvYSJJmY
41g3tVA726u9uVKE1zuONUHz/9SDtWJHt/dMt7mb29rPdaB8eHZvEnxgPscN
z+YIDzXd0U4/0nwb6LZvL1iSRP89KPyG2vmk2rtC+EvB23J/0TrG9JmuS+sk
dGijM+dDxa0QzTfCbwkekPvN1tHX8HlD4QeUZpHgLcGkfHyjL8uHbiH2N+yB
XkemBa9l4r/HAEF/wVPyrxJ8Jvg1iXw+TSJ8meM4G+E+Hmc68+WfJ1ieiXMh
xiX3cJbK/4lgpWBjrbuKOX0j0rD9wT2Nr/Khox78fRr0S5yGct8U/o39Sibm
TebMzzMxfz7NWKqOf0Z9Bfcpj/fUxoW+i8U5Afe7uKPFeQx3q5a7nq9kou1v
CO4zLHQYNK9mok0vqE5/Ks9xkpkX07jr9IXws/n4n8v5GGdWt1TFWdYXrht1
vN/50wbuKXEGxf/LNxxHme/IP1vh79J+tfNJhX0l3KoQuqlbCk9S2GXIGmNN
cZcLvyR8hfBkt6ckur9E37oQdHMykQ563B8lwddbBE8Imoouq75YT3g5/SL8
I3pN8nHn65d85Ev+cwW3ul+WOj353MzYKYSe9ubCGwlqc1GH6Yp73DSPOw3u
ForLi2ZDylOdFtDXjF2VnVP45mnoseK7z7uWBZZN+uZTyx48ylCe6LOFkMVl
jidP+u4XMLqn4KNwItwoF37ypgz0U74LjwSLBQ9lwo8bnpREv0UaunAXiSeL
+P+YhNx9k8SdMWz4YYdxM/8v5N8lOpF+sX6YlcKfcgYveEnpXnbf4F+ai/iV
dn8iWGKM/2fBa4JXHf6x435x+M8OI+4JwUfK92Pzern8PzntT6bF/Yrgx1zE
Py/4WvCC4MNc2DtckQvdV4877HGH40b3zsfWizWH9ghezoX7XvsvRwe08GTh
1wQbi9+/C69gXhA8mgmae/1/ZIXz53/FHMs4fOL/yYu5yGu56/yTw4i7Oxfn
rNyXY2wf7zmAueDbJPj8k/A2kuO11tZaKh9vrZjfmOc+yESdqM/nontf+A/h
F4RnC56nHqrfp0r3XRrhLwruNkBDGHcFsePEvbW5nlfmuR+WuC8+zMc9wRX5
mNeWOJ59KGHfCs9ymeS7Kh/n85T9XCbiZjKHZKLej3re4G7g28Ifmre0hzuZ
sxzOfIXu3XnlGIMfuT7c5buzKu4lwqu5nh++FNxDPsIv5eOODffuKP8514+x
8rDHCPfx0Gc0txz8e9jxtGGi641+ZfjOW7fLPZcwp/yYj/uAPzDvCe63+1nV
eRr7YXAS6+KrkzgfYG/GXuIZxV1Du9NYC6zt8OkKe6VppGdvzDqfNfuP3i/j
n6q4/4nmunzk843c55Zi3cE6gj3xRUns/c4XvhYemf40wT9NGjU6Fd57zcqe
AvcP3pv3Rae/5G134X0EG8q9bz7qR/1Zo6Arq2d16PvqrbjPlWcv4V0F64l+
t3zQQU89ODdjPTLVZwDUk7IP20jzqeiHbhRhDXv6peiEV/gxCu8vaC73UcJ7
8e9FZe2Zj3M0yu9laOc6rbJOemwojEti336e8GyleVN8mCV8lmCF3CPzcf7B
noH10znyP85ZSj7WFrtVx1qDPQNnlZxpnMG/ItGczl1dwcdyn5ePvQU00I5l
3aDw84WvTCLuliTWZ81dHmcv7G/Zv7D3YY/FnpxzAvZyOQNu4ulfzhrYv56m
/v5S+Y8uxT6S/efX5h000D6fRls/S0Nv78HVoaP8wiTOKrAzi5u07N+h2dp0
rCs5S2CfOxmeq6wr8nEOQhxrz8amwT9Dca+J5vZ85F3luj6XRtiqNPKCnv4Y
nYl9HfsT9iLDMrFunZGJ7yBrtH+QW/S2+TvOWob1At/xWzwHvZXEXMZ4X42s
ak79k/US80smvodz5F+tus3Nh752dOZvZXyQ3dwbfKQq7q+y9rkzE9/Ilcr3
GuFX/c0k/A7PVdM8jz1q902uz6XCLxozFzWsey6z/50k0n8hnE9iLKEn83f4
rPb+lo/96gjvoR5xGeR/dSbWXKy9LvEcxVxFPshqiT2dvletxIe1hG/MRPqb
THe3062juB9U1trCbyQx730mPE9lv2NeLVOfDRF+X3iQ8E8ad4flgyeUz1qa
vro9E+uZgxTXSuP0YOGn0V8n94kas0/JfZzCPhA+XviPJuG/MhNro6sEH7AW
EX47iXUSbZySCfdVptuesaa02+VDTm63rHSXfx2VtWM+0lzldDszB4t+p3z0
89bu64nMV2rjJcKHMHc3iTp/mISMsZY7Sv5fm0T7n0yj3e8JX5sJeWAvcZfl
AXl51v5nLHPIHusw8qSdr9C/SXyDvhMeofz+Uv7D88E72kL7D3Y9qe/HScja
u0nw42rz5FqXz97oJKWvXTvy4V8SOtexv9CvVrTNGjU6sjb0YJ9g3cvc7cBu
C3c9VjM3Ko8NFP6i5pEr11O88PeZWL98l4n1AmuEb9yevzLxfXxJdBeK/n/C
j5fjTgz3TL7KxDf2OdP+bXrS/umwd+wmbKHrQp3+4Zulem5YiTvI3KHkjsj/
XBfq1DgbawXWCc2z/+6lmlVij8g+qx167QVtDbjXFvyo+Cx684XXd1ry+MZt
/DoTa5NG2cgf3NjutVwu/r9Uxrdyr12JtN+aT0+7vtzxgYc/ZGINBz1t+IEz
PKXJKI9CJfj0lcuFT++bV00qsQ/4O4m1GPVmP7dOJfYR7AtYX82jvHyE/6zw
9SrRVtZntLekvt9QMlAUblyJ+qwr/HE+7iN8lA954O4Ra5efXM6PTk8+rPFI
Sz1YizatBL8bCZeVbxflv5nwb5nYI7Iv/DUT/oZ9I+7faZf74WPzhf6ET/e7
/6nLP+YD/FjT1kzsZ583n15w/q87rmk29k6furzXHc+en/D1suEGN8sGXuV0
H7lO1Oc3yfHzkuefS7HPh4/rYgfA8oLcpJYn2lCl9rcUzlXC/Z3lgXcQ6GPh
3QTyU28ZqmRDhhJBXTbaSRufUHnHqtxHS9G+Fsh/NvDXlo8NsnF2gMy+nQk5
/yMTYV84fGv07gsOEjyrvC5Xnq+VovzEdVjG/waFL+d/YDbqj+yiL72Pddej
A4u9POvvJQpbKrhVcEs2/Lh5G4SessWmJQ16gBiD9HPzStTjYNcLfvBtRUfN
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
KLqR
           "]], Polygon3DBox[CompressedData["
1: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
u+6XXYVb+3D+a77OHMIHg+fgjam/LPr2ZvyXJXyf7j6dBQznAb8A38HfAet0
Ngg/m9Q38uxf5xPXZFrGfh71ffYK3FqH+/3jdEYn03OaEfA7wUnwS8EDUc93
WsDPD+7360wf/HhwL3wIOA5+STDrfr/6puLQffkPsHsbt2//T/qUF/Wp9IT7
l/rSpmDW+fGz8HttOH94O2its1dgjPIOLoIfE8w6r3kFvF2mz3N/qDE703OO
9ZoLgg3wN8En8F+jlt3bMH8DX6s5GPx1sCrq9yvOJu2HhvcKJP8le+VnY/D/
ZabHBJl3Ri37fsX8HfzrqMNeDlbA3wWvZfo/q0J9qm6agKYJp++bTMv0TUG+
a2zYEMzva/6aaT9Kv95nUN1dGN6D2BB13KvAx1GfP12tsQKsiXr+pbHp/VAe
B/CfpnluU4p/s+aPmR6ztof2pLpKw/yTeNRhlWiMi/r9DcmmP8L982ujnmuq
DQwO9aW60ZnpgVGfJ1Vdqs3q/qfOq47NdJvXfUq1P7WtgWBS1Od1R2e6TnX+
Vu+TSDbuDPfn9f5EQZ5lmt5PUHtU27sDPA5/TH0u021a4U2Pui+pzUwN7Udt
6bZgXkuffSHbc0iND0WE+Y/WKiAX3gjsh38DGiR8/155L8vzffgn1Acy3ScU
v96vKMRte67f3y4FaZi/xVyst+LIw9fwfSG8lTHP9d7N9n2efXGvjfaG+OVf
cUtm7YXPI44pmc7jnKjPO8/NdJk+G/rvyZm+4zIU3j/quyonBbPuu2iu2SnT
56l1vlr8ukyff01LOK1aM+6Pu3+rr8dC/eq+i2TZjZk+D3111Ge5W4f61v0S
rW3Uh3X/Y3nUfWFOps9rPwguy3QaJV9mguGZtnsy6vPd8qs2oPPakteS/V+H
/Kt+1VYmh/yrfv9Xl0Fear2rtfDGkH6d31ZaH8r0fSGd91VeH8j0+WTdJ5Lb
K5k+j630SfYNC+mpoTxiestGMiHh8lfc6tOL4EfpzT69VRLcdZ9Md8e6gWzc
SxVfhu/YNYAnwF0ZvoNXGPV77WorK8N7CzlR/3cQqIRngfMyfCcvHV6nPgN/
Dhyq9qb8wy8M/nV/T3f1ugb/+6p8t64fyIw6fPltHdKn9q22WE36q+EHYTcx
w2vO1lG33whuNaAWXhR1WGNAedTvSehthCPDeyl1Cc9F1WcUXkxtMsN3/vKj
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
RrXPy2jtrjma9N/UVfu/2oM4utr7G9q7UBgqb+1PaO2+K9/ux1R7b0Fj7sHw
ZLXHQq35VV5V1R6bVWapaoev/64J6VN7UNt4JZT3XdVuOx+A0fBBasPw+WBk
tcdDzUU0pn+U8PiuuUWfYFb8qquVYTyuqPZcRG02rr5R7ba+Pej33pjwXEdj
9mrtd1a77avNX1Vt/VMay5ZH/N7TN/i5Jd9zoJUJv1eyLuI5gd4PW5Pw3GY4
+Bq+I2FZoP9sgP+QsJtk0K8Jy0PJvk6h/6q/qe9eEOKXPJDs0Bzi09Df5Vdj
8IdhfqGxt19wfzvhsbYH+CCM1xq7Owb/l1W7r6oP9AvtT3tB6qN94TeDewos
E4bAr1CfLvAeUS/4ADCswHsGl8L7gP4FbqM9QntV27w2mLW/pL2k68L/VZ8P
FjjMm0L4cnsgmMeClwrsR/Wt+y6SfdpDlD6pTxLOm2TuF6G+VFYtg7zS+2ea
W62K+H019W/JAqXxOqW92rJCebgBPrTasnGI/MAvr/belcrgmpA/5eW+8P+e
1d77kozrHeSbZFmXUH7XVjsszbml/1XzTc1ld4T+p/FeY/G/YfzWekZrm5Zh
vi59v1pbaM2eU2N9UcNZD16Wbn2Nd2J3EGP3mWBYjfU5jMCtd7r1DY7GrhVu
5WBojfVpTsbttXTrY5L+woHptpN+TemXmgp/I936ooZrT4X/ng1G1Fhf03Tc
hqZb39z32iPBbRFYD/8SfATfAb6qsb5N7eUvTre+uV3Y7Wvk/2yrsf60L9O9
pyp9eHrf9jzcjg7vz34L1sNfBevgG8BnetsWfFJj/WDa238/3frqvsbuE9x+
BxtrrL/xtnTnSfqypK9Pe3FL063fT/r5nkx3mUr/lvRXPZ3uMpQ+jGcI45ZG
TpPe2z1IOpmpq5dBSrqZwRz4clCmuRV+HsLvjeC5Gs/vPsbteVCZ9PzzU/iL
IA5/sMZ1dzWYUOP3dvvDx4M58Jk1dhsHnqrx+76D4N3Ak/DSpMO+F2TDi8DT
8KWaM8L74ye3kdvIAO2dgYJGrtMba/xebmf4EWAMvCLpvE0AhUm/B6y6KAWD
4Y2TTvv9IB9+d43/WwwGwv+jTY9u4DJJ19yxxm2hWG+UwXeCvxq5DjfVWN+g
6k51IP2ISe1ZFCLzQDG8AoyB9wMl8CIwGD4NlMHzQH/4eBDVXg+4Cj4WlKes
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
Y1o=
           "]], Polygon3DBox[CompressedData["
1:eJwV0U9Mz3Ecx/H37Nc65H+j/GL50ZbNakxyyIVbLqwDmwNbq6FWDXOwkhUu
XHTiYGRTa6tpUsOBi4pIiPy5yYa1ZQ7R5pA8vofn4fn6vv/t881UN1U1LomI
ImShIR1RkIqoz4uowzMfjsmWyw7w/TjCa5Ej28crcZi3r4+Yz47o5l14qbdN
Nifr5LfwQtaotlDvaX4Kz2XN6r6pu8Db0cDL5cVrI0rzI0rwgZ+Vf1V3Tk0L
TvAa87LN28v34CCvR76sltdgVG/fxoibKyKe8Me4wUvkuXZkmZ9CIX8of6Tu
j5rfmJQ9kA3JfvJZvJWVoUjvFn3FmOIt7plx3xU1l3GSn8cv2XV+DWPqBs3r
N2+af8Fr2ZBsQPaDf8cb2V3Zbdkwf4pOvl2+wd60nevwjrfaMWtHh5qrOMPr
vMEab3A0+WcYUbcDGb2b9GXwng+Y2WvHZzWfMCHrl3XJxpP/iDv8uHmrzDuU
vDGG1V2056+9fbwX47JtSNuRa/7q5G34LmyVlfOd+MhLkSdbxpdiM79k3oJ5
g2bdx6ukDyvVLfJ/KOD33NPjvsnkX6CHV7sv5b7dvAJV/D+Zj21U
           "]]}],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1XdslVUYB+ArdCFdSMctdGIn0oUKBUNLUaaRUaMME4FiZBnK0MhKmIZp
ZGlkmMgysoxMlQKxFDCyjMxEhoksI8vIqIkMnxv+eO7vvuef7zvnvOd8WdU1
VWOeCgQCdX5C2YjGhNExGAiEywgieUkdJZvwNE3pZCxaxhBLuTpOxtOMCvUz
sjkJJFJpLEkm42/gZT8psgUteUWdKtNIJ4OuxjJlFl0YxmzWc4hrRJlAAb0Y
zUK2cJzbxJtcKVVMYBk7OUMDQRPvwCCmsIq9XOQxH3jhTAtTSTWzWMdBrhJp
sfLpySgWsJlj3CLOQpbQj/EsZQenuU+yRS5jIJNZyR4usMuzH8kMG9CZocxk
LQe4QoSNyaMHI5nPJo5yk1ibVkxfxrGE7ZziHkk2tD0DmMQKajnPQ9JtdAVD
mMEa6rlMuAbIpTsjmMdGjnCDGM1RRB/GsphtnOQuiZqmHf2ZyHIazHm3PMcD
0jRVOYOZzmr2c4kwzZZDN4Yzlw0c5jrRmrCQ3tSwiK2c4A4JGvRF3uRDPucH
fuM/UjVvJ95mGl9Sxx801tTZdOVd5vA1P/MXTTV7mf5tI19jDJ/wLb/yD83N
9QWepz47EGgrSymhmDpjRbKQNvyofk62poB96nyZRy457DWWLZ+lFbXqrFAP
kxFaW3W6TCOVlnxvrIVMIch36mSZRCIJ3PG+J9jKImroTSHRBM31unkfZgNz
GU43cgjjknXbz2qmM5hy0nhgvc+xm+VMpD/tSOSu/TrJNhYzlj4UEcMN+32E
jcxjBN3JJZzL+qWeNcxgCBWk81CfnaeWFZw130lyAO1J4p5+PcV2ljCOvhQT
y039fpRNzGckPcgjgivOywHWMpOhdCaDR87ZBfawkskMpIxk7junp9nBUsbT
jxLiuOWcH2MzCxhFT/KJ5Kp74iDrmEU1lWTy2P1ykc9CvSNXMYVBdCBIg3vq
DDtZxgSqKCWe2+6542xhIaPpRQFRXHNPHmI9sxlGF7LCnnx03vDs3921+/iC
qbxFR1L41z19ll18yvu8Tlua8bd7/he+4WPe41Va04Q/PeYnvuIj3gl9f2gV
ePL9+x9dhd52
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz0VoFwAcBeCfc6lLXfw9GBOcAebBOphggs6JOPWgTsEazjpYB50KJthg
HUzQqWAi1sEEnQrWDtbBBBPMg/Xt8PEuDx6vuKKqbHaDiDhHfbZmIFNZxSFu
8o4MhQ4Mp5INHOceX8hLiujGaBawjbPU8YtmDSN6M4Gl7OEyLxhTZCA5opgB
TGElB7nBW9JTItozjFms5xh3+UxuakRXypjPVs7wmJ8k0iJ6MZ4l7OYS220/
l/9olR7RnwpWcIDrvCEtI6IdQ5nJOo5yh0/kNIrowijmsYXTPOIHRY0jejKO
xeziIs/4S8vMiH5Mppr9XOM1qVkRbRnCDNZSQy0fyc6O6Ewpc9nMKR7yncKc
iB6Us4g6n3fKCzzlDy1yI/oyieXs4yqvSMmLKGEw01nDEW7zgawmEZ0YyRw2
cZIHfKOgaUR3xrKQHZznCb9pnh/Rh4ksYy9XeElyQUQbBjGN1RzmFu9JJCIy
CyM6MoIqNnKC+3wl39//D/9lyQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV1GeMCHYYB+D/EWLVOkIdt6xYtU45JPY6I+nZq4SYxx2+cPZK7D0Se9PE
au2RNvZuKijODLHPDLHX48Pz/j69H978kjeuV1pyakQIIcWoXTSERJrRnM50
IYVBjGEsc5jLGtayk10c5wRXuMpjnvCJz/z0cwh5iSGWqlSjEY1pTwf60Z90
RjKDmaxgJdv5k8Mc4SKXuM8D3vGenMVCyEUUxanEL9SjPr+RUSqEZNmL3gxh
KBOZxEIWsZFN7GM/ZzjLDW7ynBeEqBAiKEgkpSjNr9SkOS3oQlcGMZixjGMu
81jLOnaxmxOc5CoZPCGTz3whb/EQ8hFLHNWoTmOa0IGO9OeumwfIdEYyhaks
YSmb2cLf/MN/nOfOj11e84ZsJULIThGKUo7y1KEurWlDD3oylGFMYjKLWMwm
/mA/BzjLOW5yixe8JCI6hCxEUojSlKEmtWhBEl3pxmBSGcd45jGfdaxnN3s4
ySkyuEYmT/nCV/LFhJCfOOKpTgJNaEpHOjGAgYxiNLOYzSpW8xc7OMox/ucy
D3nEBz6SOzaEPJQgmspUoQENaUs7+tCX4YxgGtNZRqaOl8stbOUABznHv9zi
Ni95RZa4ELJSiMKUoSy1SCSJlnSjO6mkMZ4JzGcB69nAHvZyitNc4zpPecZX
vpE/PoQCxFOSBGrQlGZ0ojMDSWE0Y5jNHFazhh3s5BjHucwVHvGYj3wiT0l/
iGhiqEJVGtKIdrSnL/0YQTrTmcFyVrCN7RziMBe4yD3u85Z35NBDTorxhigq
UJFEatOSVnTnd9IYwgQmsoCFbGAje/kOzkrjTg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0WeMCGYcx/HHKAmx53HcRBHEpocQaq8Qaq+IddzZiXL2aFN7t2Lv0uYa
65yVEHsnBGeTEJxxuIRQfLz4PL9X/xdPvjGDkrsk5QghJHoSSofQiDa0pzf9
GMVopjGTJSxnM9vYRxqnOcct7vCCV/xPiAihEEWJIZ7a1ONnWvMLvRjOSCYz
lQUsZj2b+I+9nOAU17nJU57zkc/kLxNCQcoRTQ1q0YwWdCUjPoTudjBDGMsE
ZjOPlfzJDnaRzhEucJl7POQN78hZNoQfKE4pKlKZBiTQlg70oT9JjGE6s1jK
Crawnf0c5AznyeAumbzmCzkiQyhMMWKpQB3q05I29KA3I3jsz6PsZFL4nfms
YR3/kMoxjnOVa9/veEI2H8hbLoR8RBBJVarTmKZ0ogsDGcw4JjKH31jFX+xk
N4c4ykWucJ9HZPGeXOVDyEMJSlOJKjSkEe3oSF8GkMxYZjCbZaxkKzs4QDpn
ucBt7vGSN3wlZ1QIRShOHBWpSwNa0Zae9CGRJFKYziKWspEt7GE/JznDDTJ4
Riaf+EKBaD2JIpaa1KE5LelGD4YygklM4Q8WspZMjTfYf0nlMMe4xFUe8Ji3
ZJM7Rk9KEsGPVOUnGtOeTvRjIKMZx0zmsJxVbGMnaRziHBe5w31ekUWI1ZOi
lCCeStSjIa1pRy/6MpJkpjKDxSxjE1vZywFOcZab3OY5L/nMVwrG6Uk0cdSi
Li1oRXd6MoxEfiWF+SxiHRtJZQ/HOck1bvCEZ3zgE/l0KEAk2URRjRok0IQO
dKY/gxjDeGYxlxWsZjt/k8Y3b1fihA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0Xl4CHQcx/EfNh5UbsZcs7kfetzCHiJyyxGSWzyObBhS8TRy5MzVTI4u
c8Y8KTTDo6LI+bjK3KVck6t0qPX64/V9//19PjGDE7sl5AohjHLio0JoQQde
oB+DSWQ8U5nJElJJYyM7yOQgR8niMtncJ4eI0iEUoSSxVKMBTXiejrxEf0Yx
hilM412W8hFr2cZO9nOIs5znBnf4h1AmhCcpSgXiqENDWtGWF8mKC6GPDmUE
43mdmcwllVVsJJ1M9nGUk1zmGvd5RER0CPkpSTTVqEUTmtORrvRnCGOYwDRm
sZTlrGUTO9nNIY5xnivc4QGhbAiRFKUUcVSnIU1pSyf6MIBX+dnPY3Uyycxl
Iav4mHQ+Zx8HOMkPXOMmj3hM/nIhPEU0FalFXZrzHF3pyRCGM4E3mMU8lrOa
TWxlN19xjFNc4Rce8CeR5UMoQCnKUp3aNKUFnejGAF5hLBN5m3d4j/dZx6d8
yR6+5zgXuMpvPCRXhRDyUowoKlODRjSjHZ15mYGMZhxvMZ1FpPAJ6/mCDL7l
MD9ykVvc5V9yVwyhEMWJoQr1aExr2tOLvowggTdJZj6L+YBsG6/RdLaxh685
zmmu8isP+Yu8MSEUJIpy1OBpmvEsnenOQIYyjteYzmxSWMF6NpPBXg5zgov8
xF1+J3elEPJRnNJUoSaNiac9XejLIBJIIpkZLGYZa9jAdnbxHUc4xyVuc4//
yBMbQmFKUImq1OcZ2tCB3vRjJIlMZioLWMKHpPEZO/iGg5whi+tk8zc5PGGH
IpTnD2KpTV3iaUkXejCIYSQxiRnMYRkr2cAWMvgfAUThuQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV02eMCHYYB+C/EauhqZW747irqxO7FYpwiuLa2qNWrbPram91Yq9eEdvZ
YtY6qzhBCVJK0ArSa4l1ceKMmEH06Yfn/X1+83vf2KQhbQfnCiEMMhIiQmhE
C9rTg34MYyxTmcNiVrKZnRziOOe4zD/c4REvyBUZQgGKEcUnVOZzEviK1nQl
iR8YySRmsIBlbGAb+znCGS5wnZs84CnvyBsVwoeUJJYK1KAuTWhORzLjQugu
+5PMaCYyi3msYB3b2ctRTnGRq9ziPs94Q75SIRQmgrJU5FPq0ZiWdKAn/RnO
OKYxlyWsYgu7OMxv/MGf/MtdHvOS3KVDKEhxSlGeKtSmAV/Thu/ozWDu2nmU
TGEqqSxiDZtI5yAnOcsVMskih9eE6BA+oCjRxFGNWjQkkXZ0oS/JjCGF2cwn
jfXsYB/HOM0lrnGbbJ7zlvxlQihCJDFU4jPq8yWt+JZeDGAE45nOTyxlNVvZ
TQYnOM9f3OAeT3hFnrIhFKIEpYmnKnX4gm9oSzf6MITRTGYWC1nBRrbzK0f5
nYv8zS0e8oz35IsJ4SMiKEdFalKPZrSkMz0ZxHAmMo15LGEdOTreItM5wHHO
cJnr3OEBL3hHgVj/QhSxVKYGCTShNR1JYiAjmcAMUlnGGraRzhFOcoEr3CSL
p7wm78fuh5JEU4Fq1KUhzWlHd/oylDFMYTaLSGMTOzjIMc5yiUxuk8NzQjn3
Q1EiiaMStahPIq3oQi+SGUEK05nPUtazlX1kcJrzXOMG2TzhLXl0UIQSxPCS
eKpTkwY0pQ2d6M33//8mPzKTn1nOWn5hDxn8B/B/4e0=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0XeYCHQYB/DfRWWUQtY5zjlEj3X1yHzMSoQ4e1ZGZNyRXXGUcaeQVTJC
5+xRtqJkX7jKlj2yR1ESis8fn9/z/e/7e983pmNifEJECKGHp0b+EF7hdVrx
Ft3pyweMZByfM5uFrOA7trKHg5zkIn9yl0wFQniCPBTmWcpTmdq8RjPa8zaJ
DGI4Y5jEDNJYxlo2kc5ejnKOa9zmAVkiQ8hJJLGUpgLVqUtjWnO4mL/TTU5k
EMMZwyRmkMYy1rKJdPZylHNc4zYPyFJQL5HEUpoKVKcujWlNR3rQjyGMYjxT
mcMiVrKBbWRwiFNc4ib3yBwVwpPkJZqSxFGFOjSgOR3oSm9OmzedJHkU45nK
HBaxkg1sI4NDnOISN7lH5kJ6yUs0JYmjCnVoQHM60JXeDOZDPmYyM5nHctbx
Iz+xj2P8znX+IRQOISu5KEgxyvAiNXiVJrShEz3pz1BG8ylf8BWLWcVGtvMz
hznNZW5xn0ejQ8hBPopQiuepyks0pAVv0I0+vMdHfMIUvmQ+X7OezexiP8c5
zw3uEFEkhGzkJorilKUiNalHPG3pTC8GkEQyE5hGKpfdN4MV8no2s4v9HOc8
N7hDRIxechNFccpSkZrUI562dKYXA0gimQlMI5UlrOZ7dvALRzjDFf7iPx4r
GsJT5CeG53iBarxMI1ryJu/wLu8zgrF8xiwW8A3fsoXdHOAEF/iDf3kkNoTs
PEMhSlCOStSiPk1pRxcSGMgwUpjIdOaylDX8wE5+5TfOcpW/+Z/H7f9pClCU
W+wjjkrUoj5NaUcXEhjIMFKYyHTmspQ1bOQhdGnknQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN031wCHQYB/DfzlQXF9nNy9qWMTfKxbXkmJyXvM9aUpKwRi+ozVvUdNXI
+8sl77XGWchLpCN2Y+3yVnO2crhW2404nLedl5ztiM8fn+e+/z5vCZnZQ7Ii
QggTlJ7NQxjIy7zJGLL4kM+Zy1es4Tu28jP7+Y1y/uYMV7jJ/9RvEUJjmtGK
djxHCn0ZzOuMZjyT+IRZLGEF69jETxRykKOcooqL1FBHREwIDYkinjZ0pDO9
GMBQRlCVGMIhxstTyGE2i1hFPpv5kSJ+5RgnqOY817lDvSdCeJRoYkniGbrQ
g0EMYSRjyWYaucxjGV+zgW3soZjf+YN/+Jer3OI+D8WG8DjNac1TdKIb/Uhj
OBlMYDLn9VtKrryApeRRwHZ2U8IRjlPBOS5zm3s8EhdCI2JIoD3JdKcP6Qwj
k3FMZQZzWMxq1rKFnezjAGWc5DQXuEEtkfEhNKApcbSlA13pSSqvMIq3mch0
ZjKf5XzDRn5gL79Qyp9UcpZr/Ed4MoSHaUILEnma53mB/rzEG7zF+0zhU2bz
JatYz2Z2UcRhjvEX1VziOnep1zKEx4imJUk8SxdeZBCvMZL3yCaHXBaxjHw2
UGO/5eyS93OQck5xhovcpI76Cf6FZsTTjo6k0IvBDGU07zCJj5jFAlaQxya2
U0gJRzlOFeeo4TYRrdwPUcTQhvZ0pjsDSGcEmXzAVD5jDktZTQFb2M0+jlBG
Bae5zA3uEdnavdKUBNqSTFf6kMowRjGOicxgJotZzlo2spO9HKCUk1RygWvU
Esy+AU2II5E7nCCZbvQmjVfJ4F0m8zFfsJCVfMv37KCQYh4A+U7j3A==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0XeYCHQYwPGfeXiIjLg7jnNGVg89J4nDg0rZF0oSzojnZO/ZY98VaSB7
lJBReKSMnB57c3Y5ZKQoZ15G6fPH532+/77vG5vUN7FPthBCstGoRAgteIPO
dGcAQ5lACjOZy3JWs4ltHOAoGVwik3tkjwwhgqJEUoEqvEgCr9OSd+hCHwby
ARP5lFl8xQq+ZzN7OMhZznODW/xHjqgQClGMslQkntq8QlPeoiMZ5ULYRbIe
yihSmMZcFrGadWxjB0c5ySWucY+HRESHkJ9IYqhCdRJoSEva0IUeDGQYE0ll
FvNYwRo2k8ZBjnGey9ziPjlKhpCHYkRRkarUph5NaUVHkujLIH63737G6Wl8
xiKWso6N7GAvJ/mFa/zFQ56Qv1QITxNDHNWpSUNepQ3t6UEywxhNKh8zj8Ws
YT1p7OQYp7jMH9znEXliQihAFKWpSg3q0YhWtCWJ9xjEcCbxIV8wn2/4li1s
5xDpXOAKt8kiZ+kQ8vIM0TxLNV6iPs1ozbt0pR+DGcdkPmc2X7OSH9jKPg7z
Kxf5mzuEMiHkojDFKUclXqAOTWjO23SiN/0Zw3imM4MlLCPTf4+wQW9nF+mc
5gp/ksVj8saG8BTRlKEaz1OfxrSmHV3pyWBGMJmPmM0CVvIdW/mZwxznIle5
wz/kKhtCPopTkko8Rx0a0JxEOtGN/gxhPFOYwRyWsYof+Yn9HOEcv3GTu2SL
CyE3RShBeSpTi7q8Rgs60Jn3GcBYJvAJM/mS5WxgE7s5wBkyuE4m/5Ld7QtS
lFgq8IATxNOAl0nkTbrRiyGMZApTmcNCVrGWLaTxP4Py5Ac=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0WlsCGYcx/GnUswtsaCtltYszLkRhLmLWEapq0KYOkfY3HVN4r6KLZib
HRlqrm4IYVV3omF11JG4rzKJTZ11ZJ8Xnye/t//nG5/6TfLoiBDCSE9i5RCS
6clghjGRycxnEWtYz+/s5C+y+Zvz3OYez3hJsagQSlCZGD6hLp/Tii504ysG
MZYJzGYeK1nNFrZxgEPkcJbr3OJfCigSHUJRPqQSH1OLpjTnCzrTjwHc+CiE
k4yyp/Id6SxjIz+zmz85ygkucpkHPOI1bykVE0JZYqlGfT6jDYl0pxdDGM4k
prCAxaxlA9vZRRZHyOUCd7jPc15RvEoIJYmiCrWpRwtak0QyAxnMOCaS794c
Zts/sIJf2cxe9nOK01zlGo95wnsiYkMoTwUSqEEjmtCBTqTQlxGMYhozWML3
bOIXMtnDMU6SxxXy+YdC3lE6LoRyxBFPAxrSlvb0oDdD+Zo0prKQdNaxkR3s
5jBHOcdF7vKAF7zmg6p6Ek0sdahPS9rQle6kMoTxTGIuC1jFWjLYzkGyOEMu
N7nDU54TWU1PKhJFTWrTjBZ8SRL9Gci3jGMmc1jOj/zGVv7TN5d99nFOcYmr
POQxb3hPmXg9qUoCn9KIdnSgJykMYwSTmcYilrCeTewkk2yOcZ487pHPSwop
kaAnMcRRlwa0oi3d6MEghjKBNOaxkNWsYxs7OMRhznKOW9ylgBcUra4nlYim
FnVoTks605UBpDKG8cxiLitYxWYy2M9BTnOGa9zkCU+J8O+RVKAiNahJIXk0
JpGO9KIPwxnJFKazmKVs4Cd28QdZZPM/mBTlMw==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN1H1wCHQYB/BfukgourrG3mxzXGQoiruKkbe6o83btupOmLcx/+RtxvRH
Udi83BXK+9wReR8uR+1N07VL3lZ0lbex0OWlZhtbnz8+z33/fb7P3RM3bkZK
1iMhhExjYEQIoxnDZKaQzTyWsoz1bGAPeymmhDOcpYpr3KeWJ9qG0IIookmk
G/1IIoURTCCDWcxmMZ+wli/Yydcc41tO8jOXuMw9/qVpuxCaEUFbOtOFV3mN
YQxnLO/zZ4cQysmSc1nIClayhQIKOcj3lPMr57nBTR7SwFORIbQmjnheoicD
GcQYUpnCVOaRwzLy2MBG9rKPEko5yzmucZ1a6mgRFUJLoomhG91Joj8jGEkG
E5nNHKrtW8FH8md8zja28w1H+JEKfucP/uE2TaJDeJRneJaOdKI3fXiTt3iX
98hiBgv5kJWsooCtHOQQ5ZzgPBe4yS0aaKR1TAhtiCeBnvRiEINJJY2pZJLD
fPLIZyOb2Md+SinjHJVcp5o66mkZG0IrYoilOz3ozwBGMoqJTGIOc/mUJXzJ
Onaxm+8o4hSnucJV/qOGx9uH0Jx2RPICXXmdvrxNMuMYzwfM5GMWsZo1fMUO
7rjvKQ7LJ/iBC/zGLf6mkRCnV54mgQ704mUGM4Q00slkGvNZQD7L2cRm9nOA
Mo5TyS9U8xf1PKBVfAhPEkt7evAiA3iDUYxmEpOZSzZLWMo61rObPRRRzGnO
cJUqarhP8wR/iEii6EoifelHMimMZwIzmcUiFrOGtexgJ0c5xk+c5CKXuMs9
HtN7U54jgufpTD2VvMIQhpLOO0xjOgvIZTkr2MwWDlBIMSX8Dy5f51s=
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1, 2, 3, 4, 6202, 5, 6, 7, 6203, 8, 9, 10, 11, 6205, 12, 13,
         14, 6206, 15, 16, 17, 6207, 18, 19, 20, 21, 6209, 22, 23, 24, 6211, 
        25, 26, 27, 6212, 28, 29, 30, 31, 6213, 32, 33},
        VertexColors->None], 
       Line3DBox[{331, 332, 333, 334, 6377, 335, 336, 337, 6379, 338, 339, 
        340, 341, 6381, 342, 343, 344, 6383, 345, 346, 347, 6385, 348, 349, 
        350, 351, 6387, 352, 353, 354, 6389, 355, 356, 357, 6391, 358, 359, 
        360, 361, 6393, 362, 363},
        VertexColors->None], 
       Line3DBox[{661, 662, 663, 664, 6557, 665, 666, 667, 6559, 668, 669, 
        670, 671, 6561, 672, 673, 674, 6563, 675, 676, 677, 6565, 678, 679, 
        680, 681, 6567, 682, 683, 684, 6569, 685, 686, 687, 6571, 688, 689, 
        690, 691, 6573, 692, 693},
        VertexColors->None], 
       Line3DBox[{5973, 5941, 5942, 5943, 5944, 5945, 5946, 9433, 5947, 5948, 
        5949, 5950, 5951, 5952, 9434, 5953, 5954, 5955, 5956, 5957, 5958, 
        5959, 5960, 9435, 5961, 5962, 5963, 5964, 5965, 5966, 9436, 5967, 
        5968, 5969, 5970, 5971, 5972, 9432, 5974, 5975, 5976, 5977, 5978, 
        5979, 5980, 5981, 9437, 5982, 5983, 5984, 5985, 5986, 5987, 9438, 
        5988, 5989, 5990, 5991, 5992, 5993, 9439, 5994, 5995, 5996, 5997, 
        5998, 5999, 6000, 6001, 9440, 6002, 6003, 6004, 6005},
        VertexColors->None], 
       Line3DBox[{1321, 1322, 1323, 1324, 6912, 1325, 1326, 1327, 6914, 1328, 
        1329, 1330, 1331, 6916, 1332, 1333, 1334, 6918, 1335, 1336, 1337, 
        6920, 1338, 1339, 1340, 1341, 6922, 1342, 1343, 1344, 6924, 1345, 
        1346, 1347, 6926, 1348, 1349, 1350, 1351, 6928, 1352, 1353},
        VertexColors->None], 
       Line3DBox[{1651, 1652, 1653, 1654, 7092, 1655, 1656, 1657, 7094, 1658, 
        1659, 1660, 1661, 7096, 1662, 1663, 1664, 7098, 1665, 1666, 1667, 
        7100, 1668, 1669, 1670, 1671, 7102, 1672, 1673, 1674, 7104, 1675, 
        1676, 1677, 7106, 1678, 1679, 1680, 1681, 7108, 1682, 1683},
        VertexColors->None], 
       Line3DBox[{6038, 6006, 6007, 6008, 6009, 6010, 6011, 9442, 6012, 6013, 
        6014, 6015, 6016, 6017, 9443, 6018, 6019, 6020, 6021, 6022, 6023, 
        6024, 6025, 9444, 6026, 6027, 6028, 6029, 6030, 6031, 9445, 6032, 
        6033, 6034, 6035, 6036, 6037, 9441, 6039, 6040, 6041, 6042, 6043, 
        6044, 6045, 6046, 9446, 6047, 6048, 6049, 6050, 6051, 6052, 9447, 
        6053, 6054, 6055, 6056, 6057, 6058, 9448, 6059, 6060, 6061, 6062, 
        6063, 6064, 6065, 6066, 9449, 6067, 6068, 6069, 6070},
        VertexColors->None], 
       Line3DBox[{2311, 2312, 2313, 2314, 7447, 2315, 2316, 2317, 7449, 2318, 
        2319, 2320, 2321, 7451, 2322, 2323, 2324, 7453, 2325, 2326, 2327, 
        7455, 2328, 2329, 2330, 2331, 7457, 2332, 2333, 2334, 7459, 2335, 
        2336, 2337, 7461, 2338, 2339, 2340, 2341, 7463, 2342, 2343},
        VertexColors->None], 
       Line3DBox[{2641, 2642, 2643, 2644, 7627, 2645, 2646, 2647, 7629, 2648, 
        2649, 2650, 2651, 7631, 2652, 2653, 2654, 7633, 2655, 2656, 2657, 
        7635, 2658, 2659, 2660, 2661, 7637, 2662, 2663, 2664, 7639, 2665, 
        2666, 2667, 7641, 2668, 2669, 2670, 2671, 7643, 2672, 2673},
        VertexColors->None], 
       Line3DBox[{2971, 2972, 2973, 2974, 7807, 2975, 2976, 2977, 7809, 2978, 
        2979, 2980, 2981, 7811, 2982, 2983, 2984, 7813, 2985, 2986, 2987, 
        7815, 2988, 2989, 2990, 2991, 7817, 2992, 2993, 2994, 7819, 2995, 
        2996, 2997, 7821, 2998, 2999, 3000, 3001, 7823, 3002, 3003},
        VertexColors->None], 
       Line3DBox[{3301, 3302, 3303, 3304, 7987, 3305, 3306, 3307, 7989, 3308, 
        3309, 3310, 3311, 7991, 3312, 3313, 3314, 7993, 3315, 3316, 3317, 
        7995, 3318, 3319, 3320, 3321, 7997, 3322, 3323, 3324, 7999, 3325, 
        3326, 3327, 8001, 3328, 3329, 3330, 3331, 8003, 3332, 3333},
        VertexColors->None], 
       Line3DBox[{3631, 3632, 3633, 3634, 8167, 3635, 3636, 3637, 8169, 3638, 
        3639, 3640, 3641, 8171, 3642, 3643, 3644, 8173, 3645, 3646, 3647, 
        8175, 3648, 3649, 3650, 3651, 8177, 3652, 3653, 3654, 8179, 3655, 
        3656, 3657, 8181, 3658, 3659, 3660, 3661, 8183, 3662, 3663},
        VertexColors->None], 
       Line3DBox[{6103, 6071, 6072, 6073, 6074, 6075, 6076, 9451, 6077, 6078, 
        6079, 6080, 6081, 6082, 9452, 6083, 6084, 6085, 6086, 6087, 6088, 
        6089, 6090, 9453, 6091, 6092, 6093, 6094, 6095, 6096, 9454, 6097, 
        6098, 6099, 6100, 6101, 6102, 9450, 6104, 6105, 6106, 6107, 6108, 
        6109, 6110, 6111, 9455, 6112, 6113, 6114, 6115, 6116, 6117, 9456, 
        6118, 6119, 6120, 6121, 6122, 6123, 9457, 6124, 6125, 6126, 6127, 
        6128, 6129, 6130, 6131, 9458, 6132, 6133, 6134, 6135},
        VertexColors->None], 
       Line3DBox[{4291, 4292, 4293, 4294, 8522, 4295, 4296, 4297, 8524, 4298, 
        4299, 4300, 4301, 8526, 4302, 4303, 4304, 8528, 4305, 4306, 4307, 
        8530, 4308, 4309, 4310, 4311, 8532, 4312, 4313, 4314, 8534, 4315, 
        4316, 4317, 8536, 4318, 4319, 4320, 4321, 8538, 4322, 4323},
        VertexColors->None], 
       Line3DBox[{4621, 4622, 4623, 4624, 8702, 4625, 4626, 4627, 8704, 4628, 
        4629, 4630, 4631, 8706, 4632, 4633, 4634, 8708, 4635, 4636, 4637, 
        8710, 4638, 4639, 4640, 4641, 8712, 4642, 4643, 4644, 8714, 4645, 
        4646, 4647, 8716, 4648, 4649, 4650, 4651, 8718, 4652, 4653},
        VertexColors->None], 
       Line3DBox[{4951, 4952, 4953, 4954, 8882, 4955, 4956, 4957, 8884, 4958, 
        4959, 4960, 4961, 8886, 4962, 4963, 4964, 8888, 4965, 4966, 4967, 
        8890, 4968, 4969, 4970, 4971, 8892, 4972, 4973, 4974, 8894, 4975, 
        4976, 4977, 8896, 4978, 4979, 4980, 4981, 8898, 4982, 4983},
        VertexColors->None], 
       Line3DBox[{5281, 5282, 5283, 5284, 9062, 5285, 5286, 5287, 9064, 5288, 
        5289, 5290, 5291, 9066, 5292, 5293, 5294, 9068, 5295, 5296, 5297, 
        9070, 5298, 5299, 5300, 5301, 9072, 5302, 5303, 5304, 9074, 5305, 
        5306, 5307, 9076, 5308, 5309, 5310, 5311, 9078, 5312, 5313},
        VertexColors->None], 
       Line3DBox[{6168, 6136, 6137, 6138, 6139, 6140, 6141, 9460, 6142, 6143, 
        6144, 6145, 6146, 6147, 9461, 6148, 6149, 6150, 6151, 6152, 6153, 
        6154, 6155, 9462, 6156, 6157, 6158, 6159, 6160, 6161, 9463, 6162, 
        6163, 6164, 6165, 6166, 6167, 9459, 6169, 6170, 6171, 6172, 6173, 
        6174, 6175, 6176, 9464, 6177, 6178, 6179, 6180, 6181, 6182, 9465, 
        6183, 6184, 6185, 6186, 6187, 6188, 9466, 6189, 6190, 6191, 6192, 
        6193, 6194, 6195, 6196, 9467, 6197, 6198, 6199, 6200},
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJwUl3c81I8fx61KkqQk0rApUpTQeGWkoiSVXUmaGiqjEglZKSOEsrJHMs/h
3Nkhe9+dcWdT+pbZkH6f3189HvfocXfu83q9X8+nhM1d4ytcHBwcf6Q5OLiJ
f/efo16T1qYhjXRpr9BDDzh7tXuIuNLxM3TO8bEWDVo8Ra210R745OGlEkq8
3lhib6tzmIZTva8pLYMeuDBdcOuhGx27q6fEfA7RsJBv3Xv9iCcOLL21pT6l
40r34VdGB2hwiiwql6z0xHyrqeCFZ3T4V1XLftCgYV0ARwmPuRfqteIjT3rS
sdN5n2CmGg1KFzi/ZnM/x7e4ZQPPntOxy+a1x3lVGvK1wr6/pD2Hc8Dh3998
6FC1OSvUpkzDT0eV/ilfbxjW7S739Se+j9nddWKKxPurjm/abeWDfwqCGjov
6eBLrt1wRJ6Gb0ccLYb2+qL63K55oSA6BOaXe1+SJr7/hEVzq5AfMm28rkyF
0DFwVPvCk200TKtQw8W++0FP1PlfbRgdxom3VsSL03A57UrB3s/+OPEt70p0
BB1Ppl7r0jfS0Fkt/OZn/Avcm8i7c/ktHc0FaupKwjQMnny6Mex+AM6KBUkK
x9Bx93auc8JaGtJvXN0Xtv8l7EXLMj/EEa8XbFbQEqDBYs/H+x1/XmLHtIqe
QgId4fVP5PhW0XDgamC5c+4r3OakiT1PIv7/3F8FTl4ahOb8+ocvBKLwoZki
LYWO+OicL3LLaPhl61pixRGEZTum9nal0WGfM376KRcN/0Qyz7ANgiCxcDCw
LoMOcUvOoBUcNDA25Xv9Dg7C4dIoocgPdJzQmDha9pcKljCJmtsWBC0H3mVH
PtJxpvVvcuofKs7ZtVhLCARj/vpazqZsOurqNZ/SflFRXtM7dU03GA6FBsN7
cunQnuq04v5JxXBrTPJHx2DM+LrRHufRsd/XJ+L+PBUCl+w95N4HQ2KLel1c
Ph1j/5qurpqjIvpciCtXfTByZaOMUwvosHjnP/x5hoqfOc6qTlPBaHURp4aQ
6JA+rimRO02FiqFRSRF/CLZMLHt4qZCOvbJacpQfVPS/8SrlkQ9B4aPz34XJ
dBRffMA1/p2KH+L+Ra8QgiiHTeE5xOuScSNl9UT+L35utFx44YG3IxHHzYn8
Kz7ZWncCNEh95wr0F/VEcO9tSyUi58Kpa3ZSNGlYPp/5dEDcC+9DJmjeHnSk
XFbZvncPDabcNh65gc9xeUig3IjIrV0m/Vf/DiKHw3ciDW/44OuMU9gdIp+m
cpdbJiRoOLu64CFnrB84itgDlFAitwITLgEbaLAu+BgXLx2Airawm+ui6Th0
snuSk4+GII9ZuU1Tr+Dh1/1TL5mOLi9Uei9ScTnjmP6TuSCYllis2kE8lzPf
9qiafqPCTIzifdc3BNFcfY9fF9NRdPe38IcBKhyORvX+kQ/FmlteHeeq6bC6
5e1KbaHCpP/oLYnWMAj1xN3Sb6Fj0TMikVJOPN+MI103XN6gJThf+iST6DWH
p257LhXeOdu2/JGMhNhDk/GDo3QEuF7RkU+kwpqlUBpXGYWTL3ZNcPygY8up
sQxmGBVKfbdeNpi/g2fY2iS3P3R4jcv2r/ClQr4m0zJ4MBpcc8sqEpYxcKyO
Y7L8MRViI6uHIixjwWW7qcF6DQN1xnY8Yneo2HiFevnFpTioy+sNpG1k4PLB
4VXiNlT8urt8undVPI4s7NNzkmAgSMhWqMWECnOaupthZjwmrykIlykwYKaX
PaJ5goqd5peb3mq/x9i7zmrP3Qz84l0RfEGbilONm5kpTe/hzDbpoakz8HjV
ZIemBhXrXZW2Oxkl4FOTtosDGMj303jduIuKTarSzdK1CSixNz+QcIQBluzw
znUKVIQbXhQf25sItR9GFYYGDPhF7x1YLklF1F06N2dUIg48IAU+NmIg3eXM
wvtNVCR79W6tnE3EkZUuTdvPMVBcWyfJFqbiuQm/qY9eEmLX+EjZmjMg9HNv
RLEgFRY36vizApOwy/+l347zDLj6KevI81PRGfe78W1LEqQzT6h4WzNwpOXF
qCQvFYz9124WrkyGo8jN248uM1CpzK+ewEPFCdZru+v7kzFaLRXKd5WBQR0j
GBC9SDpB5tVJ9YDmW/MuEtELWbHXsqrEnZ/n4tdNq/NE/gWjhAfEnT9SrTvK
VKFhlhSx/XTvc1yP0RYy9KVj3H7XahcZGg5yj2806/BF8wSlewtxb2W6LptZ
rqehP7xLUj4+ADu+r9rykbiTAW2CG+n/qGByyjtLvgkCzxuv7SXEXVLwUf51
fpxKPO9+980qr5F3Oc9hjkoHhVHhZ9VE/M47Avc3rw/H3H377yvb6LjQWFln
QOTzaquGPbdKJFbKZxjGE/lUY70USAilwp7peufJk3fYFfyB03aRjihX6dtd
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
9aIJq+ssmDgd49TnEn5R0LLxOF8PHrZp2xhrs3AkpOAr14oKrAsdObZ2Ty8O
JDYso21hgVeRIV5hUQVeyewjmy/04eaWlDOi84Qf5YTvTvpVi2C3ernP+v3Q
NXCRY6czcW9FfPufsEbCV3Qofv8NgEG+671ch4nED63VqhtaIGD7j5UzM4C3
z71HFisZqFWz8jQlcjRRvmMypm6QyKvb13fN0HFHWP5pL3cnclyeui7zH8L0
z9+rajfTcW79j6GOIBJMpGaTsjYOI27vK71vUjRIndSqvbaahif5suSQz8MQ
2CfGXSRPBS24tlBKi4mva6P9rNXZEGhwN9I6RIH24xpJpSkWfKOYekur2ODw
r9EIOkNGnBuLRt/TB+vqrUHrFDloDZDrP/iIhN8Gzq0yHgOgP9lbJviag7bg
NvMN2d3w3LfW/nDNEHoUu47/N8uBdb+tXs5EFwR51gyyCb+4KC6MMwQXlNSH
drKEX6xnGQvOKY6iI1I8wDt7BBElPC3udzvh1TrXT1UpgezhayuT9/rg0Yr3
NHHf////6Bh16Hcx0sT8PnY1huDQzNHksiwSDoYsU1/3qBgfGt35novHwvFU
5rIvgmRYC4rqNPwowtJG5XGa7Ceif97c+iOAjCWyO31W/yzEoICLakdzBgR6
XX3T91IQV7gzxoFWgJd65on8dvmgi3M3uMxRwBgql2BG58NIIdk+9kMZ9DKN
W4b6qNCpHntcp5QHkQXXO8eSqrHkblttyBgNhlIXBH98yCF6k9WupWoN2KD5
4ECFCAMlh49fqRnLwraeI83rt7XgFR9L4uJOJg5Vvrr0Z0k2FJTEZs73t6H4
4ovj5x4T638isLIoIxuu0jdLGj91IjU8Jpi/iIkxy6WnGQ454JURT4kkrn+o
557tCcR8Li7val0qlwv5X61mBiFU5L5qlsrQZEEoZGEJ6Xcu0feNDWs/EXzm
/VbP82EhqyFBsEelCHvUDwZx5piQyE/Nf2vHIuZaCuttP5EXErsL7m7qga31
W1+fIyy8yHb1aFStwLf60otaR3qxP2HWmH8zCx/fWI8xn1chV645cca+D7pz
ASG6BKdcr77zWGrXQUBlGeos+nG79XO+RzITlKwYf2Z/I5wTXAL/KA6g90b1
iyliXQrJeoXu1WxBgoxz+zHeQYgx3c0yc4i+xFm93sSvDdE/f8hKdA7ivvBP
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
QYvC1/wX0SU4lrt5iD2YBcl1jmIypRQ0HyKZNYUX44eDZIRVcR44++2zuCFU
6AiIRfiaF0F6UvPV9K1S8Ce/N6t0o8FlamGhX28B4psvLRM+VoVZjp7SAv8+
jHm+m9QyIsOhMLPJQrwe1ZtiXlck0UEP22liepmYF3oPjEY3tmD/5p/pNF4/
nCvPzJW150GuxvqNzKZ25DHMtF6cI/I7d8rV+DYJEuHifz1FurDv7Dbpg9kM
ONroB6bvzYfCS5+DxkK9SFB+HPr5OwPVH7Y5KYqTcTpns6HDShoOfL4rfojw
Ystge/pSChlCq3Onl6AfnQ6z/t6XmagNTd7pmVqMN/gz6NLNADf8vZG8NxMb
1ch3FZ6XI/Dhtsv3fzJRmF9NWWHOhAL/xihTVgWWBT9IOr5qEGObiul/FZhQ
4q6Katn0GVK/swqPGQ0hWVY1888fImcb23RifGtxKiC48bfhMOi3vf78//3j
pmhyoOZIA2jxTusdFowg8NlOO1vCbxYNTAzdfd2CVbI2mlJNI+A9e5/S+rUf
v2n7RC83tyHs86Gj1fGjCAi6s39WtR/mu7JWTI134I2TUZvUYRZkpwPY3t50
aHlvsL+u0APHyahwaSYLLw8Kfube6sOu+MG6niNUVHyY2XTsNBuyo0vla9Jo
KFweXqFyjQ7BnZoCIyNsiJVY2u+rpyK1xPbyhgYGlpeN3n57moPSabfVt79T
kFfRVGy8fwDMeLHzcUwOtqiLHnr+fz/fJ1/0/fQQhpQrrW4QXNxd+KjNl+DC
tKP3bY3PCBZvLH9xMZ6Lj4c2WZkU9cArki9OwIcFxvKsAxfZxN8Nl82bXNKD
9eevcr6f4sC80tUsdjsP0Py1++yZbvxp+604SviGn75xdstdHk67R3c/rOpC
gkhe8gaCC4Mvi2cnv4RDjm/lrPTNXpxxyRqTGSpFyaLo26cz45FL2n9GuqIX
V58PLW88UAofa1qQ+fArlBXciX+vRsHExQLbkbASyARHhBtefotjw7nW058p
6OhSfyrpXwxbekiXiDYJy/f9cNC6TUXOzw/yPK0iBKfonl2wqQx6M+zOBUE0
uAZX30srLECYXfxVt7oqLNdjuyXeJvzOeknOnDQZ++aTN/18VA/LV+yaL6V0
lDtOh3ZZkfCRqvHk7sUW7Lo3b94KIQYO+07JXB/Jg/uXr9P04HakpDgmKBB9
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
fsoMZ+Kr69Jrrwi+fWWvXrddNBYrmXtKdeqYhL+bvzq7i44wpU0DFc5pCCMl
Xmjax0Jy+jGX4NPFKP2oX1BG/YC9Dzauf9rPQv0BNWrHoSJQY5bcUnYgY4Gd
wtjIOzbGlphErpSkwXebh3PRNAMV//7A62E3rhtL/kiqpsJP8LCGY1IFWhJP
7JIN7MFe70k5b1cKZnbtaBNyrQVnXPpqc0Avvqb4fShdSsayk3EPa4804tXW
f1msQA5mk0vyEz4UoG3l+Cn9qGa880q3DNrPhayj1pXAkQJErDO0abjfCtfJ
8a6QG1xc9y7TOn2OhOO5WrMul9pRURqrUP2C8L5z26put5LwKtTJ8MTWTihf
ObTycg0Xf2/kfkvcR4b3sDdNldMFrdpyaeMxLs7w6f9Me0v0SGAco/E2Cylf
SysvSRDzqbvUny5CQT7zi0aVUDfeNp3e2kDM1RNx7rCaM9Ejhyyfbb/bg09v
5Wlxljz49jE2W1ZQsIwc5On+lfCuFv1MnjcPrFPcsaxwKhT2K71cRfjht5Xn
j5iG8rAvcknWPnsaTExdCs6GcnHsh3zVjRs8fGvcV6ioUAzLzvvxRgSvsG+4
m6kReTm5yMsskHh/F/0dNrYi/GXrTyUvByIvr2hCpmoowT4VDSvROh74E1+U
LyHyImN8puLz0lKoDAzF9xN5OZoRs0qEyMvYf8sGbxF5Yaiszj9I5MUaO2Nt
iNdVJLP6zq+EMig7Rq6N+9mHlcZGGd+JvGxfszb0j3U5dG/5e2+z7McqhSuC
DCIvYc75OoqrK1AgYLj6TF4/pvNWhRcSeWEKXLy5oL0CW3La6i6JDUBzwdxW
NpGXXaYqShKPK9HvTLnwwHUAZlsM/ltF5CWxfOpJlVEVeha9CFxE5OV2Tmq2
K5EX6mH/TTtCqvHxQZZqKpEXPTgsbCDystjPajZtvAZ79nwTP3b8C152jZyU
JvJSG5p6PVeDgftHrFWCvoTA4/JPH9cwJrIoy2sF++i45bqJazEYjQb/GJln
5USPUEoqOo/TISq3xG7VglT8Mn9yTm47CysDVn3tCC3GwqEYA3GtbMSL0QKt
ylhII3v3Mx8WwTDYNnFrUAGm1ug8FrjJBv70Bud70DB9ROXDStdifNUY7ttt
0o3NfHz/FHSIHmE2LmQIlGOuP8BDcnsPXN15nb9/UDAiYCfVFlGN+bPHLc/L
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
lWysnW3bVxJRhL2KYVfVCH990aLSaeLLho7JZfXhSSIXmyTcvT5TsWAyXSp3
hI15yzDbW2Y07Jy98rD9EB0nNlbJKJzrxrEXBusn3xQi8t6izz3+pXjunGIT
0tONoohlpykzVJj0Lf4bM1EO7gq55ia7HlD+uneu0qdiSIuhdf1aFWTfuQpJ
DPSg5FdlGsIoEIlctPnUklosLTjNdXXtReO18JW76sgYCeZuDH9bh1PSuydk
Z3phLa9/ckiEDHGzW81Nxxoh+9eRcyuIA2fL3s3Sh0lYYbCCruXfhLp978d8
hLg4U+R40y28AOXaYzqLO5rRtzNTO/gY0S/H/Xq2lxegzFpsu8R4C/QVFvX1
Ej2ix818OyhEQsCnuZj/BNqQXqJUJkH0yHt7zwBvUxKWvthet16mHavurZDQ
TuTC48/yHyXRJNT7nDxnur0DlpePvDck9mjJu0MbaV0k5J6PVN+5vxN1f32K
tT8R/eLQMnBSloyX9cnBb8y74K12y1q4j4vMNT/eR54jY6vSwJ3755mEB9Yd
oBL+vrxjz9T5dDL++7B/qMODBU8z9fgD4jw0WblbfP5Khnm/w64Ht9kIkZJ/
kLWJB4mRtLmuLRQovOhcRQnrxqh8n84kiBxldq8KcafASFR305WoHnRtlfCQ
PsmD2UjSaVYOwVfDScvqE3tRsU/Df537/z8n33+fO0nBoa/NfaMvObifHSIj
TOTiqYGmcYZsIayEBCeLtbio3P1U8yXBXTIn21PniFwofzM7pXAxCFEfb8wp
ELmYzoojxWxkoG9O2GKxLZGLPe22MZFMmG+9WHfsHx1HHuZrVZVF4q59HpX9
ngnK7Taf6jI6WpYU3W20fYqsjXT7cBYTe11P+rdeo8P2a4hq1tBzPK0yEZyX
YCFPYSkjYBUdSXnxhQfk0jET3XT+xkkWvoPxaFFWMVYfNb07qpQJ9xW3RZe9
YSE85IMETb0Y1z4mhjnP5GB31Kp/1YSPf1ozeX1xZhHO898f+ZWXj3X89F3J
F9h48e1Mus3qIujf6ZV3oFMw3XR/uV8jGxP090s2+9OwaJOiXNjSYoiYV723
3teNEx/PVn1mFWLsiuVt/U8lCEwOD91B6YZehWf0S7VCJAiWVwYql4O+rT9i
+c4erOzabt0ZQMWmYCludlwlAj7f2biE1INNOx8EPKqnoCFw2LNRqgb8wm9m
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
snHkI7VHz+XIaq4b8URgW72iKXX+76iy2F65NQ/Lp8pe33vuJq4OKXzTdmeC
KVyZ7KySh9uR/EOf3W8h4qPc1yVeTFx+YuZeKJuHR7naa8H1wn2DlCW//Zng
iysX27maeo/svGjWpXoHJaaKI0L3mbC0kTlvsTAP3kcip1QL3cXBRxbCPqFM
FA//+nRMIA9Ldw1a5GX7QfPvsVOmUUxknhsTfd3BgMPux62/VwdCwM6zybSE
iWfhyQOrqPve2PFr2eZT7mP62k+qzdR9jxVzR+tdEwNxdqEev82D0Bl+0Va3
holosS8588YZMFcS0fXovY9VC2nTyhOZeGiirzA6wsD+9e+6TAIeIGf7WMm2
NCZkdNSXpQwzoGRglJ059yGk+qa7HKMzUbXw0ombXAaa46UeV38PQFl4bfGf
IiY+XM0rPrs+D5zobJUH626j9+PtFDNvJnI9hc3DVuXBxcD2s8nhO3j/KLbA
n+rDDT+lhYr8eWj+qGQU/tcPwfp2FarRTDwQOi5Ut58Bozy16wYJz9BnIyua
L8v6tw9Ok/rATf+uVTXBwKOuL51C6fexpWHp8htvmFBZczl06DUDdWdqx1tf
h8L9+vetTX1Un6O+SPJdYcClUm7axLmnkONpe/5BgIWZshn35d2oz7/1KX2g
LQIJfYzyZXOp9+A1mbPNFxkI/NXBOfjhKdZKO7T/EWLhPqnTjNTZT+qcom43
PSaRAb67tw85XAuFm7rVnMCPTHT58Oad2cCAuMC7OYddolHE+0PQczsLYwL3
G9p2Uud1t3vPn7AoiK24N1VhAws6rRFaxYsZiLrGPuPRHAONFv/Mx8YsXPdW
2LF6LgNlkWM1T+piIZOgr3TbkoVrxN9N8rnq4Rop6lQfmvdtjNocDfGqlXzH
trGwb+tgXcmSPEh1+J4PX+CDkGC5IYNgJgwvd7YHiuSBuYlH4nigL/jVrPs8
I5jYIPLhzcwWqm9rTMYDpILQcXZ92esqJpT3iC+LNciFe+peY7E1SVh29Iri
g4H/61sY6Zsc6Vv/xs2GxiVUnxdyh66IPoKeAXvpq/dMLJcRWQ+q/nYzzZX7
38ai/VLk0YuW/9lHix8Mn81F3VqxvyGP3uBU+YqG0CYWniUs2rn3eS54WOP0
qlOvsFIi67DHSxYuxprGTR3LhVt3dvGJhjh8M6ozbznLghKp05vUuZzUmXF/
NOJVYi6WlyoEyQ6/BN+v+5ePxVB923i5fM2MXKRnlWiVyqXA5/oNfcZSNvYt
U6Qn3M/FAj/BlmMvExCiu3bTkmwWDL/d9+2vyUHkqZtP1XNSITnrftA0XTaa
1gsfLovJgeWobPFhThoE28eUlE6x0UD8zCS3sHQoKDHJhcixu6IrxxMxV+eM
gdAHFjpHFv56OicPAqd9r6k98EcLr7SCeCwTTeGVuZun5EHu0UYLRd/7SI5f
Wen4monaPoEw20cMaPHZR99ZFwb1y/XDh8aY0BtOGlDiy0Hn0xd2wmsyIbI8
fnYYkw0n0jcP0rdh0jf91e0Om28xsMZZ4LGAUgT+JpgfT57Jwl/z0sI+Peo+
JlGa57o1CZcjGwwefmKhfs7E76q51OcL9j+JFM/ER6UAsbQWNpiyebd3RuVg
4mBQsOxwGvJ1JCVn27IxUfNeIcAlF21HVq55MeUNVGw25dRUU88/qXOA1ClK
6nzHErA5uSMHjXopyR0BdExdkKcdk8jG7ewVAevvZiPLpshqLDEHt5dvS6vc
0IrN27+eLSjPQWv0Ax0OJxVa6uyO6j1suOZHHbBcmY2Ds50d+q7mIUugJrrQ
vRXbAlpd41lZ2C8/509NZT6CfkQcMspoxVbiR4gHE//UY+a5QycHPIt2vdts
S8dEiuDQ/ldszPbwGhH/ycBrxoxNtfce4FmExsVV1Ln69N3f4LWDDPwofpgr
WvoQe2Z/WrKWuufH+u1T7zFlYOLvri7TzGfYVXzPym4NC9Wd1jfkY7Nw2/i5
wZs7Bfh4RvGOb0frv33jkr6pkr6xd2Uf2qvFAE17WtPvlChsfRHWvXcjCzfv
uatau+VgrFLsXGdfOjwlVeSe3WTjqs7duk9OWTgveNeSR6UQvTMn/L/xtOG+
hLZFuVc2BAvEdJSp/pmJhxzR29SKzgkJPqdfOSgeOyUn4JWCU6e1tITWsFFJ
6vQldfaTOqO+585p8c7Ck9s3Pxf2FSA6yOr7k2+t+BZHb03oysQFpXbxgo3F
CNvtm3XrbBvCe7a+y/iTDVXW/dtl3pmoPlxs7NbFhmDFvV0uuzKx1JTPbehE
KfxF7tNbOW0QXDBPU6UmAz1f7D/eECmHufkbs3eb2sFP/DPxI8RFtVIdS9Zl
Y2/pyc8ndudBuyouyfRqK56xjH9bdTHAnWjsDMoLwBxJvg9hhdT72qwpewOT
AftVrvN8OYGI+vL9iXAltQ9mRcmdFGOgw3M9cwViwRf92ovnEAvO8iFzxlQy
4fKnVWpuTCmMkisOpHxqoz73v30rmdQ389grYQPTGfC79eiEomwcorZJxkic
YOF0aL2AVmo2jswqfHs6IBu+RxLXHpdoxci9kfiU/AyY9L2I79Moh5KUjQnP
jnZMXIbIstNZCJbrG/5wpBANwYebn8xpQ6apw0iCew6a27YX5HDSEdjqsiXR
g41LpE5XUudeUmfz+fCFiZEZ6ItVUgxKKceoWrmhm1k7vmdb3pBZnYHitTe3
B1lUwizyfN9QCnUfNvzS/Eg1Gw1DomYs6v4yY8ov/5CLrcg7qf64WZuO7TVP
jC461+C9zYeOkv0dsPe+kqwUQkPdyYQDsf1vIRO4VPno+w7YEWcSX0G8Sa2D
fnp+FraN/5h3OKgIlas9hX/qtSHIfFsVbz0D/TFPz5lUUPec3x9bxOqYUDJ1
2/C8jAHdwDoF88Zg8K8vGPjRzIRIeLBEHisXTd2O+Rb+8TBZnZBb6snCmV8f
acVldIRkXFpamlYFwdm9e2N/tSOL9K2F9C2I9K3wke5Bt6pc+M0/rTp88gWO
+tzkjtxjQTDg0qHoz1nI9m3+0HozH7VuwVHPX1DP/9E5Di3T6OB1i5h23q4W
o16Xlp/w7kDBoqWen40ywXgqMrVSoxThIkKZCsw2CC18apUpkIOip2+7mnky
YaYxoOn/jg1bUmcEqVOI1Nn81T5HP5KGhwk/Zbg1bxH1+4nb2YYODKlI3Pl5
mobt6XcGT+yuw5fVp27pjnXgYaPSxJBzFvLfuzGMZQvBWtfkypjSBsPAiYt7
H6Ujbu2tKA2NBmz8sDw4xowD8/C98yI/pUOZX2+dWkgjVogm5z524cCC+MZJ
rn1YI1ZuPAOxrOp78rZlYP1StIwWa0f2i4I5EvkM2B7WfDj64hGOL1H+697K
REGpw4trdAaWXLgu5RQRAoaYTEh9JxPs6PytTtG5EJsSdf3l01cIe7Ln74HX
LJxyvTqj8AR1/38w8L7doA47fm0QPjbegfmkb2WT+pYetVjcOigXQud6FZxs
EnBpVb7USzoLzR8uyL5RyUJMoara8gVFkFDq5xFXasPRaKHqtIB0ZG0/f429
vgEqNbRg60McbOZEjSZpZeC8y/GLG39VQFnMsnQ8vB2nLhfHJsdlQ75iTnbS
YDZigj9eDV/eipOkzmpSpxap82+UOs28MR313V1z/RQacW79mSzXc9S+8270
tkxlOjZt6Kqq5WuEsORJax07DvqV5168UJKJ3QFSH+ZHF0P+UdnDlJtt+DzG
HKg0omHQ53KWg/Q7CI6OvZ35hIPlIzP//MmjYUZes2BoezPOHRRpelbAgTRx
PuIOxJcP7g6/9YMOl762rL1CVTBffyBV+H07rEa9jX2SGJih1O3aaR2K46+u
Cw18YOL6dMNTT+Kp77GQb9nmnY9Rf1Rvee4nJnw/Wl+3csiFuWZB3G+nNzi+
eTZ/XQML3/pHvHjj0xFB/3qh1qMBm7oV3jhYcv7tm+KkvqUtuGpkZZ2LPUI7
HSLXJeLx3JreQ60sKFxQ49W4nYn2Dvkzl2+WIPjr+Nb5KW0oHE6e8WodDS/d
JbycHjUh5F67VrM/B3ciBU+E76LDPHLxUTO3GjQZfbhuc7ADb7wrNgnszMZP
XsmH06MY8P+p9Ri2rf/WGTmpzm/Pp9/ad5cGudX3ldLmNiNm9cFjhxI5EJwv
cfa0FdXnZ1bv40+/Q9dpjegVzzhI8LCK0pDKxKyn99Kyv5fCUO6xh8VEGyym
zUz6Np0OxdIUBfsfLYhYMuXuAJOD9ubOm3b36Kivm6ZvKMGCy6k3hTGzuf/6
O+KXiWd8lFi84A8NCgweyW9etUjJrdwlcq8Dl89dXq1E/TxX1owtO/D7Mb7t
pemfH2ZinlXObuZjBoZ66E2zq58g1GXd7nc/mdBVPTt7xfZc7C87P/+HdxLE
3tt1uvxgoWTtj+qmhTSscY85YGHUhCyNVxKxdzh4Tfo2OqlvW92XioqqUvfn
yAN+4R1JCIiWvLpvgro/ayT6zerKwKjolHd/S8vQfGGvTr1sOySOahzKK6Dh
mKD81yc9zcj4qiq3rZCD/V3jBwQP0CBs6D/vx6k6FAcvvCbCy4G64MWtEv1Z
GI/4tuJ3QD60xj9o/kloRSmpU25SnTvnCr5y3EZHKOteZXDze0T6FFje+cRB
/Kqaaye/0yDftHTe1cQWxEuNZDY2crBIi086+0YGtC6/OOu6tAKCp6Nnq55v
R3+Ukt7idDoYTVPP3UpkQeaw7YEsMS51LhukRh/KgGNU/6uNaEOgxaWyFsP/
8wuTnKfsmfgfQRqmW21rsOipg+9S+eKKxRz0xd/x/hjIgAGjr7HUKQwSgQEz
1/9hwlgu+ft8fwYitcfP8m4Mh9RLldOqU1mIEiy4qyNKvXeCRhtPFiTje9ap
I3GibOzWruIP9qZBY9fi9+XTmxFhViCa94aDTaRvE5P61j372rS5fLnQ6enl
2zQ/Bfb12QE9i6l7+O/hxVt0MyC7+fODOz0VoPecuD8Y2o5yvnemhoZ0XNEL
sa6UYOIb/W6f1TcOjF0/egV7Uu/FwUW/Hv+oh25O03QZEw40kyukFwRl4bRE
9LqaggL8FJVYZjbQCm1S5/ZJdXp8f77OZICOx2uMFIO92OD3UD3lK8uF9u9u
J5obHcJCMk3JLCbaFnxyU+TlYsadW1IzhujwHH6x8bhsFaYsEVB839qOH4/4
Tc4fycACB9kfRw3acG6teansXi6k/qYPGoVmwv5iivSoKAf2UxaXvb3FxXLi
5yZ5j7Zo4p6wdDiH6nGlTBrQOdgcedScA6faVQt97jBwSJq/f3FTOMqUF6to
Taf2x3i94BUe1F5fNdMv1TsCiTXzer/PZqFR3TH/5GAOvtXvfc7oSoHrS8ns
WGU2nt+brez6lYYpU90rWqNbcEnFJ66u4f/6Zjupb+k2G552cnNwxGXRTjv5
VKi+PtRvvpkNK6E5AV+y6BB1Tfi+r7MKliYz2fzTOlCt/FZLuZmO91LHA49R
f55JslzqhuVcZF057jNRlw5/0za1xSsb0SQZoffSnoPgxebM0zuzoKQdcCij
tRApLyOk6la0/Vsnz6Q6T7d9StZ5kIGwsFz3v4vacX3qXR1Zay58W66/N+bN
QPfSY2YbB9jQ177Kr67EhUBqaZLGCToWD2cEPhCqQfTTuh+D2zsQ3Duw6MlE
Bh6Wr9ZOqOtA17tTjou8uaA92FMvWZaLWdKfnnOluNhkkjEx9TgXucT5Jvna
gfXY/yEd4acWXlnt1ogu8wM9Zy5xwHfwU8YvVwa6tzLlQxY9xbbLX5Xz57Fw
6eLOPWOXGDjjvlVipPQpLK7JZK4UYqE4d3qcdGkOFjqOhTp9S8UEvmtnGLLR
nx3p0GhMx8dh1/6KtUykFGtu//79f/dtbZdfjFZODqIemz/125SGia7uvSP7
2UiK2BG9W4WO+Xmntjvl1yBGX0uDfaIDx18oJd/cn4HLdY3GRdT9Q2uNBn+h
ARfVsRt/zZSgwV6g94bqziactqzTSPDiQGOV5PHbY5lIjlnk8rS3CEVjG/8W
mLf9W2ffpDptBQPV26dl4WjKmiYzRQ5MOg1Y5z24WDhvIO2URwa+XWpQTuW2
wTLJeWLiCBfNR4enPu2iQdThpN779lrUHQ3tm/WsA3khNc3jJjkQYQp8Vi/i
QM3zwufUc1x4L1tjytuTj8c6MrLyizsxZNLd57+DCz/iYZP8mIXy8YXyNPys
ajqoEtqEj7ubd41T7+v+RVlCSx0ZmLp2dODE6kg47K9d9p//tze+d8j5qh0D
NeJ9/HddIsFJC5zOot6HD9MkczZG5WCTdtbtu8NpWO11XU3Ylo2csGOLPiXR
Ibl9mUVTBAvhp7nLdolyAdK3lEl9i61C8KeQHNC3Pbp0UyUd5YF7+bod2KC9
rhS7nk6j7sM5Ec883mKXTdUYp7ADJ9VmTnOuy4DXptuXyhd0wMCvt038MvU8
rk1KmX6EhpyPl8XlTd5BIPj3i11POXifNto6npqJMPH3rQLcYgzu6G29cb/t
3zoXTarzNvYqJlvm4vBP1tFb07mYo+x3bpsNF6+3qO5XHsvASGDU88V5HVid
oPkl0ItL7d10g/PUPd/y7vKNJtp1kLT+/jeBuucfcK08Hh+cBxlbXearB9Tn
CJ1SNjflYo2005qaukJoHzcbzBXswpcHq4KuyHAhR1yX+BBxqYN3cwcdaHh9
3q7eLfod1R+n0wpxHISYXIvpt2Hg9OneM9aZkbgw/VyA8mIWXjfIR4VYMdBC
13b9xvsMhk2MNsllLNS+3Rt1itqnVsXzjD3rTIf7wBYLLrVPaVYOTYjNpt6n
0nwyShNs/NkjpsNV5v7Pvi3qrdkU55wDC+aFP++W0hBysyPEwJuN1bo3Rj9t
paH/k/KqwKA6XFuT1as/jwOrdZoHky5l4cRV17QKfQ7udorz1V/n4oXOtevb
w2nIOmfBu86EutcF/pUOSOcg7Cxno9P5TOyb++iwUU0J9i85omFc0IYdpE6n
SXW+XPH1bKluPgo23DpQWceF0EpVI4M9XHgKbBtgHsiGy64Ij7ueHAiZa8am
OnNxwca+ZPlIOli8lkqzReuxsu2gSvQqDmJyvPmvHyzA4Mrdgxb7O7Enoi5Z
cwsXtl/eZvI+L8bDB9s2Pv3VhcEH2vJFM7iwJx44yaN+zn4vmETD6m0aAjJP
m9HqPb1KMoeD7t9tYboWDMxZ8JhPXPMZ3iqM2OyQYWH56H0PrUMMWObN4zvv
/QyyKlumflvFgqG7+DIvyxy4Ghpun1lCfd7eVIudj9lQVnLUDDHPgJtqDGtC
tw3vvI3PtBtx/+2b8aS+2UqfpG0/mIMBodcviv7SUC71oXt/JBuxV+Ycm1OT
jgOxC+78OVIPm4EyedoGDgYNMx6s+ZCD1DkBDmc//Ofe9sdV9AwXr3o/v/nN
pCElZcszpV0tKLZaNS2+kgPPDZrtYUqZMJE073ZIKMVgPN3MfqgNKqROj0l1
JitOtDPqCyAUcFHN7mEneGN0p4SqcCEi/6pzdm4uXjhc87JeRN0/BFfbGVPv
F0ehFdaq3unQtfaosW2uh+Ou/qoQQw5odvO9AhoK8SX71LeI+dS8GGq1H6Hm
5ewPlvVvm1LISzx5/6ulG2cLuyOt+zlwIK5I3I641ka9zSUDNFi8f6wr5teC
Z4syyprqqPvADMd+ZVMGEtXK1skVPYN7Fv+Vz2tYSMiYucLJiIEFaot0ns6I
QmG22WVbeRampy5xtNPMQWyEGq32MR1rfiUlHE5iQ6DFRTj5VQbmy63UUr/d
joNGFW+N7bj/s2+NhRa8T9RzwF8p52TcQEfE8G2JBTQ2bOs4uc5302E+cER0
xvwGPFdLPuu1n4Prjzfp9W3Mw7m/93xVr3BhJNQaaXaQeh4skrbaCdMx1816
mtTa9xg1mEoLaaee89S9XRt+ZuD+8dLxA25loOU41vIsbIcgqVN4Up2LHnQt
Ze2k9nNUHafpdkHOUYcrspiLaUU2Blen5oOxaiz1WgIXV1zUxL9Q973h/Z/N
70SlY7HXd71huwZslf2k5m1B7ZvBCd+V1Ish69RvllXUBR76d1r0POp7Nrwd
kxtfAfE/9fn7z/cA/NwnPdQep/s//I2IRCRk6CgyTQ2Xs3+P/A/N0x26ObjX
P/NamD4DTmGCheu3RiF96/u1W9ZTc9TruFtKmwH+/cfpU69FYZnr7Pl3VKjv
a2/9nNEVOVAdSbXpOJ6BUhOfVVtK2Jhh++fYk5EMvD2Yu7sqqQNTGk8EmN7m
/tu3B5P69nqKZ8dDqRzcbJI7bh2agfGN+1e9qGRjWDxheW5iOtx6ro0HPGuA
YYVSq5Q11QfD5O0r0vMxwVeZ6jK9E4qut08G7eIiZ56McbEOHYFJ10RSpzEx
XWrznktfOVAJyprGl5eB581TztbsKsdExaKuTVrt/9ZZN6nOiZGNNenUufQ0
YFH/CHUurWi+NE6nziVTxYqprqIFWC79eb2CaidOzrhQfl2Di+LxxxF+Jek4
G8Zn6jnagBqpOM9kW2p/d1qx5Pe9Evwqn1f6164bb4fmKfONcjB83EH0+9tq
6Dhf8j02tRfDdU937TrMwff/4dOc7p5NPETHXrUn36R3UPeiIbGxPyMcpFie
p1/VYsBKrEAqKikKi6S3vlXayMKDhbe56hoM/KxOOM33KQo6q34m7FWn7vl7
N32bNycHh+wmZk6RyUTw54j9v9+zEdW9RMXgP79/Yb+yk/YODtxbV9+Z6c6F
Mulb/KS+7V+Rv4mfNwecp+2hqaaZcAkY+LC4nY1nW7ftndOQDgu3oZP6axrx
UnY0dOY5Di7lXK+oyiuAf9ELpzvenSjyrzuRrcrFx8rhXIVrdKQcMT4TWcdE
kDHPhOE0Ljbf67Hu9s4AT5rwJo9pFVgbrbpO7Uw7Ykid9ZPq/Bq5TnfoZwli
+HxzrkZ249udA1Yu1PfuEyydsXphIWgML+FyWieOPFuv/UOBi0N+oovf9Kbj
4jXfkz6ujVi6bqvXeuq+vUaPz2K5Yhn+yKhrOE3pQUn4fmxjcrDxtnv8p7dv
8dJvde8Zn17YdDwtFF1A7fXEEya57yY+SfjSYXxeyit2LguMRGkrn1lcBPpW
z6rcQu1fRx5nfFwcjbpWg68tW1iIqG+oLVRjoLP/XJ3UgWho+0b7VIMFR7VE
96Cv2bAxEkjoeJ+JDeszjV5Re0lDjuWQb002lNXutCVR83z9g7Dv7wv/u2+B
HQskfvRT73Hz9oOfZ2ZBlz9m2OsLGzslBkXchtPBd2KfcNSrRnwe/xmrd4WD
oPMBlTdzClGxZCszeUYXisMXVxau4CLelb6u+TUdpes61ns+ZEFs2fZ7yiJc
vO1v7A85kIGbaWoeYrQKHFFfWyR1v/1/1jnDdtTf4FsZej9q8GtL94DRdGtg
TTkHByMvWUsKFyHJfeOCwPVdsEicOaizlAseHt8x3hk0ZMSkRTv8asTg5fkJ
Qjc4WKpRZvziQQW0jPdcUDvbg/en6m/1R3NgSduY2m5Sj7TOPm7c3A/42JL/
15mab6tJ3ks80I7PQDSHji2OLqf1qljo2uz3YoUEF3t630a7qzJQ9f/4+vJg
qt8/em1SSSlJEQopWdqV7ZSUkiRrRYWESlIhUraQRElpQUr2JUm4XK6dhGRf
rru9rRelQklFv/dnpvn9Zr4z9/eXmTPmznmf53nO65w7c5+36FkFu4A4PD/1
7N5GbTq01+4Nf72pCG3qB5dGFcRhu3Gl45QOmfPvLvJy7yzA7CimkIQ/Fdvf
vbW2nCLnToqaveF2GmpPZ3bz/ybP7Y95WhEOBOr/6RbwP7pt6oyr3tRcAPMl
16teZVLhsezO1okZDKjblSZtFs7FZ6PCoCm5FswN/b1ynMxl17sTdxFp5Qh+
27pB60YPbA3273wpSsDiseM6RhcFhUZOE18OkDyyGzOUyPn+cIf4smn5PKSI
p2SsOlWDC91bVgq+ZfHk+Yhdtve5Xg02bNYv23m3D5eGugcLHnBQx47v6J4q
x482H4+uhB4ouz6/fkWYQIGIoVKaTC7KXp4PirzYAs2A4Gcn7nBQ8vHiCefm
WkRkP9pr1NIHjasHB05c4uDEinyO1usmKFua9OsEDaDMuTBslyqbJ+4i/LDC
dJACkXcyM+K9uzCzMF+1ax05N6//OPhUuQiDhn38VwbiIPfWV3O3Lh1vHoxu
+K1QhBvVmg4tK+NBK9eicg/QsbzS+9bLsgL0rFj7Z+/aAihUHvJeJcQAP8Pd
LOROEZRj/VmBhwkshMtQHdkrH/zTLfV/dDsVnr0vs7AAGSt3ffc2LEDJBnOL
a0sY2JcRYaBF9sTw0QrvYrInNjR/ODPvHnkOEhbNvHy3Am23bqdd+dwDvvWR
hYakP+j0p5WenpuH4F2jwecnumCXIb5Jj8znMVLq0p9/URDclnti9d8ako3p
S4kWFgR48NxnaPb0vl8dpPXEboSP9eF6Ju3aAhsOChPjlIQYFchae/ZJz9Je
hDx+InWW9NuPGJumIBcbSxg9tuwWWLnsuLQyguwRvgcdnv34gMUf5BR+bOvH
1Ssx6V67OViRa6+RNNEMq0kFfY+pAdj25rKMKliQ+Idb/w9+7j7z22qRPAQG
dcRuVWCgpacgJVeVwNDqjZuF1hVhKFy13lonHmIn+LWE9Ok4qF/z+7lsEXx0
x96udI3H5MrnD8IN6KgOmBfN96oAxoSLfW9xATzn9EX+WcXA13es8XX1xci4
udzo3HMCCdu61KKMyfz2T7c7/3Rz/afbLwU260RSAY5fVMwfHCgA46umtNQa
Bmo3ZlfnHciFRcvNF9pzW5F4afr8gyccOK5nEEW2lUj2YYs/Mu/F1n1uGZW/
SJ9hvZEK3ZiHeVckFl6NYsBEZDce7iZweI2U6+7/fncW/+Ra3KNa/JwvuvX8
GAtj/3i+/h+eHlHM5wei61ERHHci0Lgfzo7yi/m2cPBlVU25TEYl+GDp+8Wz
Fytj3+5bQ879351ldruP52LHxNLd8gdawfDVfGcYw0HO1LF1Rn8+QtJlebN5
eD/8CzRvbBHhgJ2h8HqPRis8Kb+ips9yMTYhHHXHlIWef/j1f/joP3xxbYXn
U4088PFlOHrWMtB4We5P2V4CcvWWjM7VRdg+ulHPJzoeHVd6I6IM6Yi4qPTq
iWQRJIIfpOXXxMNRWbx72ogOPYvOjz5PCqC14vBDtyOFWOrpR+dXYiAk+pif
n3cJ6qw77bhDBOYZHpSbPEDA4J9uD/5Ht3l52d3rHhQg26o+1oHszfr6mtdH
NzKgPzoaQzmdC7fOChrDqRVtzmZJT8k5My1se1NfpQoHLR8rDRT0osL1V/rP
zxwMv1Ohu5F+q3xW51zIdiZMxOe5i5LnZnq8V6sjiYJd+wSypNbW4T3STggL
sxHKg+ctzuGcK/oN8Bs2qt2f0Y/I19vcfPg5UGJ0z0pyqYL0T8MDu1i9OG3+
Je7RIAfXPD4csLySC+V5sv1bX7VC7OEtztwkMr/Ipe5oG20AlXJ1d+pgPxJb
OjOqmtiYKcxlqy1ox6ok0Qe62VwMbTPLvd3GBP8/XPIfPvgPXxEecI9uk4cF
C7MTvp5mQvledfJ8cl8dd1ARmRAvgl6nha/Y13hUL1ki9tmEDtfyqHUcsSLI
mKi+mBRPgM2ixTabzOmQripbtiSgACP64k9duwqhGNNcsl+dgQeX37/wXFSK
oitOB7Zv7safLBqHvev/6bb7n241/3T7NZh9lc+nADXiOSdc/hZiyYbWOj4w
cH/xPYvD13Px8kHyW3ZDK+wSNHbKpHKQ3yM6s+T0OyiaT8imzuvD1eX6m6kt
ZH423qmpdT0P2+Nkzki/Z2KlmMTcLgsCLL/N0mG+FNQFnvAUzKiDwI2qp/JK
5BznwVMiy+NluUYjpPKUfAVnD2BlA1/UQB4b13YKfzzV9w6yiw8+rpXuww1q
10+b9xw8X62WLHEnF4eedQYxF7RhR0Zoxr7XHMyfLbeup7MRs743v5fSGMAe
w9kSw75snNIwY78o6YDt8g2mbr+48Iv5evrOSSZs/wf3/Yfb2W2XnHkrD4/L
ZiXMHWei5RCl4PEpsv/Vi3ZZiRahPzjT5hIS4Lo81on/GB37u6/fvrS0COee
TC6SPpuAKF/fVCULOtL+ponFXy7AuaDll0xP0nDG1/1A/X4G/BIMM+wfl+LI
ojUOt1y7kbdemrl/x//T7cP/6NazOu9Ky4UCVPbLUbx9aBgykxkx1WdA41bt
mwcPcnFZ7s6cSKU2jBS5/dyexQEx9UV2/ftqaFuTWeBAH2av3K/imkPmBW8H
978xeYjtyzaKM2ZBjGOVM2xPwPWT/dT+ExRc7nvS3qX8AaduCl6t1GXz5Bkh
85HxQqoJArOa784yHYDRUuNlN8+y8VNFvc9lz3u4hW37vOdUH+7KbBArI/fP
8ohUWkRsLuodaj9eONOGsc+hrKUUDgZ22U3S3zZByqtu0dDtAfgkyUbEbWPj
cFJ01skTdKQ/6NybqTGIYtOJXMPPDJ64u5bbXMUU0g9H2nxUrrMw9Fik+8p5
ArHuQdZLhItAJfbs/hicgAU1a1YPW9IRFZ4mul+InF8WXYucsxJwxDx888RJ
Oh5lFknJWxfgZ2BraQCdhmvrzk+9NGXAMeSCSdryMqTnhT9bmNON0k09NKWN
vHXb7rFmT4RlASSnjA9O/qKh7krjoamjDKQWW0c+TslF4mrLw+YBbQgsFPDs
yudAr6czT2MlmRuy7FweB/Rh/9nTkROPOZCat7+klex37Cmr575tLMRefTR+
hMznifTPLT1qFJRIm7B+J3/AIuttOTOs2Tx51t6UyI343oTfXRFHTsUOICTe
c+ylJBvxbxT23AqtgZMNV1Yhsg+t6lp2RCgHrvElYvTcXEw7Lc9UobaB2kEh
XItIPvskc/f5NmOmbtTvnc0DyNkrL1fymYWOga1sy+4u1AvqZq/0HMR8y1t9
T/0YYPwPLvAPl1L5oHrlfR7miD4NbP7DAr3tuUuyGwGn2FC+uYJFWB/GVHFp
SkC08OmnMVZ0eDW3a5yaV4T648FRCj8TEHAlzvS+DR1ESOvkHTLP1XINL1w2
LIK04/KZTdYMyGQU7k8OK4P1qlkGk1+7EWGoYRa0jrduZxyTW7foF+BjzOgS
/YtFMNi0aXLGGQa8qOYOF4pyEbI75YlVRxtGM5xXLS/lYL/17Y4B81o03q4V
1i3qwwPqmhzF6xx4LLWz62Ll4cTxL8qyRmxIXHo9IOpFIKd/6oX2SgouPhZc
3y5Rj1/fVS1G3dk8efqFrD+vUNxM+t49B8PBATzxkwha3kH2tZ0sWb+KWvSc
1d2R3NgHlVBPg/TLHFT7xKf/rskFt0jt7bn57eh+v3vsciUHxnJyW19ptyDv
FtIhxoU4Ry9aOJWFhOPz4/wMmRiNn1dAzxmEfe1Tb3lJBk9caGlO0beBPLRm
UMIt3NhIkrDw1vIlIJjTsFVtLqlXkobuC9FEfKbMk5e1pcPzjXRw1uwiBN3t
ar6rloinC+6a/T1Dh8+N4s/luwpgofhmhn9JEYx6+mXtLjBwzN/bjTazHPtF
hj091vdgplZgotFq3rpt93C9F6tRgA31SbVsZhG2Gq1OdnJmIKaD0rG2KRd6
RdoP/qxtB+OhuMDXdxxsyN/9TfhmHSzcBWxTyLydTWzZxUfm7Y2z5IbX/8mD
U31g3Ncqcj6pzTi7J4jAQfsi7P+di5NlE/KtwfUQMWusTr/H5slT5Lzg797r
LXAcEEvkV+Ji1b7okTcRLPCLea88OFiH+MuykgNz+sFIMygQOkb26H2BrAWs
XFSs6FO0NWvHdY0Vq4TrOHCatW04/GcLbifYOygc4+LNneGYs+dYcFPoUc9J
ZmHcLnjNss+DoPomxVKLu3jiex9PvCMW5iPmYj+b6Gcjqr37jWowgQ/HkyOT
ZhZBTk+Pdd88EY7RvjO97en4s8IzVZOvCCbq/ZvoHolQ89O10TlLx8yrea9K
NhVA882uJdIbijFn9FLvWXfSx2Z/kdB1KsdWsT9tBSd7sMDIjB64krdu8Vlq
mg1K5Of87tJfoVuMYFZD5SFPBsa/MCVbe3MhE7u77uKldgTeS93iWM9B4kf/
+ujoDxgzrMvpl+vHbgGHaycPcBBwwe+AwbV8PB6P19MT4uCK2NsXNYGkb/y7
/2f+v/t/Pv27/4cXz5d/JcO0NFshcVaJufYcF5PHx9/tI3N1oYjS4rI/H5Cr
H1crpNqP6Gcey77v4oASfiVM/GsuWBVr7U7FtCMsIUHdrInsa2/SIsXGW3G6
OK/0xi0uVlwZUVwlw8LRF1W72ofZ0Bg5sG9EegjZ9ifWLLPv4o3PmOF4Njkf
htXq4jkrOCjdhVTTAAIlLtVDetM0jB1cnh8QkYhwGbvDWefoyBaKsf3zm4ay
wrys/bmJkLSXCT/tSEflZr5DLjIFOBtv4ZsSVowsHRn3AdJv2/7dk5P5756c
p//uyeGl23IB+flZUgXgbhivP55WjKkF4u4pAQyYM3xGgn7kotdToOUPpR2Z
g06O98kcaPV6MNo2oR6BdTOOrDXtR9MqF+mtmzngyMwxaxOiQjHv/pYlZF+6
L9IuucKPwMbTsk7tpbmQ671XX232Ea9n7gtuzGfz5Pl2/JDfiE4bPF4u2+T2
kIuVl+ZKfxVkIeP86cOlf+vxxttj674z/TgV832PvgIHKhVnFdRnUKD29HHp
s+525D0f4dvfwUH81Yj3gV/bsFRX/s30ay4e6IiKMplMnvfM8MLDDp2ckCLn
uun9gU2UhkRoznopWXqBjn2LdR4PTdDAmGs8LfI1ERrf2j6fukhHZlvT9sZl
BUgOCS3x+VaMrzHtbdwQBk8dis0kr+5cUgD99XQRvzkl6N09mXDnHgMZ7Vr+
RnMpUGwwser91Y4F76xNz9A5KOguf6kWRUW151OJNlMOjDZ9dUm5QWDHe7Pb
Ckm5WJdNfPTO+YjNWUubTn9gQ1j35pT4lgps0TDxUC3pwfNoi3OiQgT03Nu9
Vo19hMFRrt7bsH5kzP+RNmMZBw1xu15eE6Zg/6Je+kmZDox7WEwMMzmg2rwy
2MJsx/ZXCg4/W7kopNDvf4lmYsgmLX6TOIHyTruABd5DuBLnqKBYRQdlf2uw
dwUVm6soh4SsODh0pDHG4jqBuRbOKWt+0LAm5sZJq3lJiPOwdM5wpqNeMXb7
7HEarofk3HGXTwKn0/SCxmU6cmbtXVsjQPrJX5U5M+VLENjUVnj1EQPZD4+K
Lw2twEN3LlH5qQe4kzRoJ/D/0WF+odGxOQWYXugVuHNLCbrLT01NPWEgfmzj
q93LKah/7nzujFoHwp0qz31mcxAmP6fp754GKK+7fEsnrR9bdC+I/Z7LwY4t
4aO/yfNSrWjKzXHjYPeCc/evehAgfDQvUUJzUfXz1+GRuQ2I+vmWtYjD5slz
6z2lbC3ZDkgLrE85SXDxQn6R7OXbTBjI0hubzjfgxI7vf6/l9yO7vG7jrBkc
fNze6jcoTYFRzok4jlUHBJQ2+uv2cGD2aNCBSe3ACUfXR7cnuXj2deV6aSsm
dld3bS95TkC2fdfliJQhqCQMG126QeeJ/03dxiesW4AQZze30z5kXndd5qju
ToAZbzdtMErD+LDsFiqS0JZVve3GFTp8zScO7P1KQ+n47vI0yySc//vk128X
OqyDX0ka/aFCJXdVna5xCVze27559pyBJTECUW1EBdJdp2pKRHvhtcM/bMEs
3rq5TDS9mT1JxQPVOVEzTpVA1LPo57yXDGinMT+cWUtBcW63Hs2tA7Pz785W
6SPPQXnPXcqbBmxXkXjr2NSPnatmZoUNsqFt88fr8bMCFC7Z9LQhggPvPQe9
vV3JHrpl4Jqtay5uPxrfuGpLA/KVlQK439g8efJ/kR05OdUBm9ySs9tmD2Le
37MexCEmvh9ihQu3NyDDeq1OKbsfq7XE7b0YbAw+yx99pEKBWGrs9VNRHUh+
yR48xeVA6yo3EsGdOG6wZX3DykFEXtR/oy7PRM7j7+oe4t1oHdSLOdA4hOqq
1cb3dtJ54k1ra2r/+770YGzM2J8YDvxLQtuMXQhoy6fMiR2hoXyuf/yfK0nQ
WthntNGNjlnmOwdTPtFwNUtfuv9eEsaMj1+JvUrHWIe1reVXKh7tnh4qulGC
faxlgrbJDJw6rhGUu6kSQ0Z6nYe1eiF28/Phv1McnrpFn9jKVf5MhS379JG5
t0vwPPRQb14qA+JfKrgftlJw72Rgs3xmBzS4qUdVhjjwfVk8L1WsEcplKXoK
E/0QeMgtv11J5q6N2dK3RAqR6HrRQuctBzleI7a0S2T+/H3rptjJXGjWUxQ8
LBsQufCIuA95LnjxzDjOWnC5uhPGEd+namQH0a/gFLNBlIlJ3BhOV2/EkHC3
QMqsAbjdrJA9QPowq/Ex9b4mBSvTFxiJNnfAcdsePbXPHDBaO+8t0qdjcVbm
vsGdg9AOGjRePMqACL/7kRmp3Xj5WTei7esQ5qtFXt/6t5MnbqYQUP1KtRD3
8qOzfhaQ/dz1qWCsMwFq3z6WyDANkgfGqk8mJkFxesuLGney9xKZasqDNESc
9jU6WZqEbLf6VJVrdIxSolwZvVQwxTbXPEgswXTf7F/NmQzsD7/zmu9GJeL0
KA+fnu7FkxmqmpqTHJ66DeU99q0lqFgbubTb7U0JLrN39yx9y8DY7fT4IG0K
5G0SHNj9HQg9o3JjbOS/91GmHlf1aERS+v2nz1cMQC/ncWVxHBtGFpFuuwMK
scSo+a7yRw76o6v8lJzIuT+D3kPVzYWicfMMZf8GWNjW+GfP4/Dk+cPumLhi
IB1ZlHcHNPYMIkToq5JUNwOXy4P/zopshIGti7aJ3ADmXhA7vPcJG7qsMwe5
ehQYNFx8oyXQiaoFZcld3zho+SwqMM3XhTp7zYPfzAaxcl/FgwslDGi8SztV
uLsHJd0hmZbzh3FOJLPVsq6TJx7eqheflFgI/6LA9ivtHKxj7DeTukBgz/uo
7MQBGmal9E6KtiehscP1k4EnHZuUnzvX99HQNBlxSu9bEsRO2ZxPuU4HfdO5
WVWdVERtjF41+qEElgIzbv7IY0DlXFkGX0UlnPIdncsDe6FQNvt+yTiHp26z
NG6p1bdRoX95S4dnRwmsNkyPyxQwsHWsyij+MAWiptdXrBLvhKTr9XM+Yxzc
2bmLXtjciBw/ja+fdw5gxFBXcIk/G/pzfi5Q+1qILr/lDWmDpM/7r99cd45A
dlzw6S2bc+E8wsixS22AztIw60hhDk+eOgVemhqqXXCWZ9klnBpEB5EvEfKG
gZreeduujDYi+tCboR6dAcye2Bpm5MFGlYVPRbI5BSmPLvQsVu+Egd/FT/t/
cMA9HVyXm0LmLBv5d7MuD+I6cc1QNpyBwonmgpf1PaiZ2We1eM0wBvet0Vn7
rJMn7mg+NWfWYho+WQRVBZP7INJlvUjtWQLvAj8XG/XS4Puj5vtx/mSkrz87
XUzOO9WBhqrAbhqq+N9UsqWS0bHfz13Ymw6NuEdDgh/J82XDmJo9XgKj/RV3
W8j986nUeg7f3Cp82P+36VtSL+KNdiX6f+Xw1E1TUn1SoY6KD+O9CrunSyCT
bfjrWxkDilZV48qWFPBLO+eJHepE7sJjU/QJ0g99htZHrGuCkNRE4rajAzh5
wYNjZcdGfSK8CFMaUkX3z+yYSUC3SLI3wp7AzKQIxXOrcnG1u+fxoY8NmOEo
5axG9glePB1GtkXpM7pwM6zq5eprg7DdEVy4x58BufsLNU32NuHlK6nZ7jYD
4H9L8T9iycbBu/mTnNMU6OdHzKo434ngeLnuwF8ccj7+SuLsI/ucRNIN9TuD
6P5uUM1vz8CO6/mb1Y/0Yr3qEWOBHcOQVImNPn2pkyduKSb7VsWFzHvt25SO
zScgbbus6IUdgTcLJrGMoMGqnTHTamsynjs+eiTtQ8dlEykfYzaNnIP0GOND
yfA+6xR2zpeOQrPziglkzgz6+X3GhFgpHG13DblVM1D9wVhu374qrJrIkdz/
rhfPPOdP+n/i8NRNpuZIVWvpf+slZ/5tTSkeUmuogTXkuj/kam93oCAjce2Y
wI1OzFcUnJz7hwMPE09NMfcmzIy2Wv3IZQDeFs+uheqx8fPNrZcJuTT4acw/
Wk/2z8E9G6X/uz+qIsq1SHdeLhz3qVgLjjUgLvvJ4WfSHJ48/9qtsJrpxsD2
ZHGv2vBBhM0LookdZ+BwS8eq6fAmjF5+9EzFawB1UZvzZHaz0eFj7xFzkYLc
73fE7kZ2Yq7+c63IaQ66evXOrOpkwKjvsW3Wy0GcXvHiCVeLARsf7SyBml5s
FZa5e1x/GKsje/9y93fyxJ+sP5oT2UzDiHvDgl+rybmVP7s7+jSBdffOXRti
0lAjPnephXUyLjhtuHTFj44+/s6ejQwyb7yrqaR7JOP4s9VOlJt0vAo8OOBH
pSI8LerYqEYpbLgLD/V/JJ+LU3dqLKQK4Ts3lJn29CLMoVg8YIDDU7ccSdPK
MgoVsmtOXcvdVwrtI5pDQ40MPHo2O+vdFQoeCSSdk0nrRNxHt3mCfASCjThn
osqa8CxVvUnp3gCCjx/567GRDeXUztRvS4qQb99pmbKJQG+uxs1oawIGf5cS
2d9zsOy6k17dskZ0tN72r5Xn8OTZq8POn5rNxNwvjumFKYMwkXFUZm9mYPL2
L83KriZwPbe0rXsygL7B/bFp8mxcH3EPH7lGwcJvexTj33WCEfXwxS3yfPcn
NjfOs2bCTbkj3jdvEA4bdWkxKxjol/BWD97ZB37+eCeJU8N4evUo+45MJ088
bPSOd4ZyEfg6fItu7SCgwmSvKbQizxdVLa+eToOg1olBn9Bk6DsO6Rb4k+t1
RlBdvJMG/iOn/qQkJENI2aD2VwAdYhMLD0dmUtHy2pQrbVWKXwcFTm1oJ/NP
Z+oKoakqRPz4xjKb6IXLyUe6uWRP5KWb4Ixpxf5XVKjSuy5Qz5bitLWdsjy5
L828Yz2+elFQEvOsNrq9E1kimyqHyby9ZX2S5SWBZsT0BWNlMjm/so97zhNj
w3COzUHl80U4mq8x7adLoDtUr6jpJIESvTOPI7tz8LXXSyZXtRHSnPYbH5Q5
PHlqCkV3dZJ9SzqmQkSoeBBGKtGejkIMHB+Vdv4t1YxjYg8Jn8wBMEPvPKtb
xEaU+uPjrAAKVihdtlUb68SmOYxwY34C1xbMKtdkM6GcszGqtI6cg2oL7v39
0QXGxeOdai/64BXhn2TjPAxbI3U+mRmdPPHxG6pLmwOK0GsTxi9hQMCky0j1
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
hh/qCiI7dqThZknH6N8kOpquNWWayVBhqaq/M8e0HIrOGlsatJiY33H01vLQ
Wvwacs+ueEfOhTI3z4CrHJ66CSjyJbKlqODUv62baUN+zl3dWRa7yZwZdeF5
+YI8rKpQS6ALMPA+V2+8fiuBC6MBvQ8bWxHVZ8s/7svFWYeAVRGKLFxV/05x
3FIKpyWMnbN0uiH787dtpBaBs/OfRVTSyN73fYm+b2cTFosd/D1lz+HJ0+kT
s7q0nwMNQ99Xqk5DSAhXPv+tm46JQvOmjd2tkH1urRPjz8WCGVtS+dexEPZJ
y465JA+50Qc3ycsxEFO/8e9eVdIHljjLWIxzELsulPPw8hBijo0YeHbRoZ+Y
9up8EBf8dTtOhn8eRugi65OVczt44qtNJovWohTnhpRmNR3ohqN2bjpDk0DA
zuuTn5NpmJL4q9l/JA1+8z/cM06hQ8qA3yMwkQbBh6oTC1zS0Pfpu9zyNDqY
D7JCFi+nQjZCjXnAtxwn99wMbdRloteqsS2kpRYPDFoFAlr6kK7AmLX3Eoen
bllL02svLKViU41kwua75agef3Xxuh4TXsnli5JE83C2/XI6tjIQb5P47NEO
AtVTtBjZ2W1ITdjHXRzMxe6c+1tzJVk4bDudrWheipAZtR0U026ICb2YdVSD
wOwzpd2zq3Iw3X076dSvJpQ85g7Tz3F48rzN3ayg/Zv0sfGykVqXIWz/WVn7
pp2OvRns55tE2qBz7KJqfAgXnxKrfxisZKEj9FQfn2QeKueI+N85wsDlXrs+
GXUClr/v21fPJeCw9mxHg/sQvJxaYpsa6CjwSqHPieRij7776aCvwzAUZTmy
Z3TwxPf+Fnq8+XQp+JZGbUm3IPfhZSmfCPLzpY7zVT+Pp6El7xkE76Vhvqaj
2vV0OtZ/3Wcm+pKG0aCv80XepmGVVy3laAbpD9dUkjbPp+Lp6bemkxnl+NG7
BtpHmHC5tKnFXqIOS0yX+JkTfeT5HU78TerDSzdJQkf7FD8V05I9jXcLy2Hz
RKJxsQkTs4RcWwZX56HJJPCFtDUDPey/J71J/YMeaHoEbWtDE+ts+tR9Lt7v
SLi3XpgFu7+bq6mepeja+C6oyb4bYxFi0QJqBLYvz6qJr89B3Oau2cUSzaCN
tZ3pvMDhyfNn5OChA0IEwlfGSg9cG8KGRn353R/oGJW+1C25tw1DYUrjNx5y
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
mHt5dnVlFi4pOQgvXUsBxXIp6aJGAcrKlSL83BoRmWJSrpFDh1nnb7+SBx3Y
7n6naIs6B3las+0PxjME6mb2xdjGS6EA6x3ll7vGNeLymPbr82V0uJCuPoif
VwK/vbPe7sxm4nNTfF/JGRbMp8JGjsuQcYOsbhK8loeLWcvklgnRsF7+/bHB
xBrYGSoeO+Q3hDcbvr8c/8FErtLe/AjhfMTHNDnVjfTh5LGqvfP6mQJ5TrO7
38znsyCdPxqTU8nHmzrXqxtsyfAI9w2qXULk+oilJ3dt4CGLUdhw5C8Vq+bp
eU7cLEFBR0WCQgcTGe8u/v7kReSBao3ifZ9YEE6UdWip4qNk6xJ/G2syxtOf
f16jyoXI77w34tQReDxgJmdpkgTixFEJ2F5WA9dPho0frgxhTZuW2cLvTDy3
fGznxSvBNzfHN7TxLFTpTDvUrUOBXKFOQwC9BDoXyKcTdmTjp7hpDNWAgsvr
z3Uxv+djcd8d+myZJsxdca+uvY/IdeKG++dQO/Cl1+jjsD4HmlbpHctDGAJ1
y1mpOPiYnQ+xpDZxQ9MmXJXw2io8SIeYXPaK8oYSlKjuPK3GZKKV7uIv7MnC
tSXXVs6zJKN3Is3QfQsPE4FfD+l/pcJwm4resx81uGZgZdb7dAid9dxLt74y
cXOfcfKIaj76WhYv5LmQkCi0duvOQaZAnmIz9n0xHmVByYqYWTUfYh9/ua20
ImN906hJjAsZS7x4tRsMePDsr2ae/kDFs/pneea7SuE0uNKniNhTP9c1v/xz
jIXFr8y/4zsLbw/pnZpRw0fiyWMbrlmQ4Wtsv4g3k+ghxvV63/pGcPAPbVHP
epJA/E38NTeP+bXYl5cRMe/tEHKHf9xK+MxE+DOJUeHeEsjorOvIC83GeNlZ
J1kTCmQnR+xEG0vQ/HHWdFpfNr5OowfRzSnwharnlsp8hOfuH5tsaoJI582i
M5N0jO5QMz2q2onAEDths30caMjJTxkcZwjUzX6VRG5yZj4823JuDIs240nL
o0uPZzEQbe/7/tT1Usyc1Tv7kRQLe9NXML+5s/DLqePV2Vtk7Pu1zOKYCQ9c
ofYvKkwqjExar2+0qkXf8J+t2s1DWO38aNXQCBOPFSS/nDDKR8zSfcHedBLm
+F08vekTUyBPJ9VylvCv/95TYfp+Sy0f96q8bc6bkyFLmSEq9JTI9eVrfHRN
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
PQs3Gnvnrs7l4+CGhReeHiejkZITlfFoGDvT/1IbTo/A5ddzRxuhfoG4yiKr
LoNf7SDfkz4+NsKGxxGfoWvtDIQmufr/sSkCqItr/6ZVge62v1RFiQbds3dz
bykUIezY78vTLr4nen8gu3AHDWpTU8GxHXnwv1S9P1etD6sv3dxSWkf0r5WN
YrSOXsiU+a2Ym86FluGGGzvYNIG6jSu5XAnn/rcP1aOWBfdh6aYd7jltTHy1
7Dtbk1oLioTzrq+cISgGbWveNszEzaQG3+8eNCStZ03UFvLgv0YjyEeeitTA
2ECfnR3wle1nbxLjYMuauV/ac/57L8BbiRbhCkztN6lKfkPMgXP8TuNelkCe
hs5n+53KWJATavt1LJuPlTnvlqV6Ej13rVh+/kkatLJ9LXWLeGCX00sy5Yjz
/PKY68vndfjD4x7HfCKXivx1lCT4B3y/Kz71moUssbH7PW/48A2/PrDqHBn6
rk4VX2yGcVTdx+7WkRGUbvmmna3YLxAvUms5n+rXAasL5i0OChzEtSkaTj1n
YLvT6K7Jj4WwvnPcatHcajCrY8vG3GkYr/j9YtbLQmgcWirzdWYNdkkvuREZ
T0P2uR17dyrlg2xcM+JtRkK0zVltGxYTel5tD+9t6EOv9Ym1lUVcvF2zKvl8
E02gbr4td+Kp2vnwyW50ciXykOWjgTPafCZ8ErPTxBXqoe+840/PimHcEZ9j
9K2aCYe24g/PA2gomytx5nEJD0siG33iiR4bOvsT/9D7DtzuOP1dTpvov9qR
k03XGTAVFelI+F6B2Ku9Ne7qA1hCF74YSvQ+QTwnfi/aq5zKwt2kgJGn6XyU
qgyLfbtAhuH64w8SiM/94TnxNYH43OO78qcnEJ9rcuHOqiTFBtR5LJP6s38Y
/Fyfk7YZTHy6dtlMNoYFozDnlHUpfDyJti8YvUrGpYU/jBeIDiP/mcUqP7sR
bL+iEVOv3S8Qv3ZSN733cwcmVfqsvxtzoHmXHKYfwICR7blGYyIPuLxXvLE4
twZr+5cL25bQcHUl9XfpskLEzHg6Jt5Vix0LH6p6/KRht5eGUYpnPkR7Wq1z
ovrRdkR34s5fJvwNP6hX3eyDV6zsUukGLpxMT/2Zlk0TqFsW1+H06uv5WP9c
Zv+JaWSc6zyXfGEmC9UBzKbOqAbcomi15nkOQ3O2opzmcyLHmuuttL5C6Haw
vn96GZEPo9/M3yRNRauQwbNdep2Yt5gTP3CQg0pq76KeQwy8+WbXHjNWCW/K
VY3VyQMwlw/K91vPEsiTWX48L+c6Mc9bKW6hSUTPXdhUcv06Gc5KmVrrg2ko
WqoTFFLKg67tyZuyMlTc23MtdVVsIzwcFcsdEobh/aj/hvktJkZv+Zxq8WGB
ufpG2/IEPjRGc0oU44i5Zy44MpI1hNDWOcvP7xzBk+P6jS+s+gXiX+7c6Lt+
tBPCXj5LrE9xMEQRtsmyYmCo52Vr3OcCREzOVj/5sA5JqeGiCap0+Ja58NjR
Bbj8jhTyhF+P2QfuRc09Sgf1zWjvidp87LWsGA74RoZLeLtUiTILMUrBV6mU
Pqh9vX+ssoeLC5dICXse0wTqNhrzeJsBOx+DBbG39pyl4LqcwoJ6ohdrLeMZ
rRRrQlXiyjuSmcMomt4cp3GFiTssg93CoYSPqFovaiZ0UxXpGIsh5rVlyeOM
7oxOyJ76MrXoGgekfdlF7psYiFgsdSh1ogo7jlba+GkMIrluu1buYsE8vYv+
WvR7sPA1fLbCz/t87Ngv0x6dQIaGy1KlkEAaYkvNayqI+6XYfUPiAHG/XoX7
3KfNbka+ipZ5OX0YVqIVFluJPHVM07x32IIFqrSyWvJtPsYMeMyWl2QM93Pv
r3YcQqpj5KPrm0eg5vJgqdupfoH4pGjAKztSJ9r/Ptz5OY6Dg9QpecZyBpb7
vB/6aVmAP9FpQqs7GrDqmvPr/Ht0CB09ebqdkY/7D5Ot3Q81IXOa5ZdpXDpK
jxxdtW9FAU5FTyHrEhWBMs1FsmBhFdvxgIUK0Rv6AhvvMrmIe3Z4sjmSJlC3
TJKbWoN5AXSdt179K0HDnm93/Q7vZmHri8zf54Ob4SNbfmv92DDI9M9Xtrgy
8fjX4O5SPxq0r9mNdxXz8GnlPN6XuVQccQ32CFXuwjEJbrzxWw52ljaUCMsw
8KWrf0BLqhpmaXtDPTMG4SzxNMVJWjDPfic/IyNjQufXvtbsG3x0PpSpX5dJ
RkwRi3uL8K+l1YYP1xH+tTGhV7uE8K+ZASNuD6+0II200MB7MRvlyyufRO1m
4svRiVNzNVj4sPtryPVQPnQdAjM3VBD+ZSXq9+rPIGa5/bqZvGIE8ut2h0kR
+0kQHqowvSzTuAsTD2fvQSkHFulFt/YIM7B/Hav6WGw+TrpTT6ifbIZG39Ob
tioEXq377PacfDzyZzgc3tEKsfi0iogQBoTnTerNiStA25V3XVNriPx3+OFU
uxsLT2qmHM/tI8Gx5/k+Ex4XjbtOPP1KnEtBun3fEOHvV1qAZL27R8Rb6LiU
5th4idgjQqFTjz3HWuB9qOe4mw4bS4LPLandykTjliNJEc40LLd+HP41n4e7
nYFq9xSpCH51TSw7tAtCe4yml3Rx4GLzOcXoIx0FKvYnapbXYBVxXgc2D4FX
c/j3baIXCOLpZRqRmqTAQsnUsM3mS3yIaqyPvFtHhuh8i7zDRC61y5Q49Dr3
v7+7va46R+TSqAyp3ugvrRia9tQ22pUNo66Z5xNXMvFLJapdZpwJ7QVm32vO
8jFd7232mX4ymrcM3V53n+jVtQe7SxRGMBIZvrzobb9AXHpPCncktQs9K0MO
v2Ry0OncGHmXSccrKWH31Lw8WCvOuBF2qQ2RA173ZlYx8H3dY6/c+Xn4ZBhF
+UNth5TMgOocoofOO+hpusmgEDvlV6y3mWRg7sILzQXXWFBkfIvPuEiCtvV7
u9ufuai6u9BgzRli7wvQLS3Rub5BuwhChVGz/PWZ6PbUUWUHEz1TxUtxxoE2
RG/dKVzqx0ZgFrVh8xIm1s47t9Zbl4bny1o+/yV60G4yW6ZKjYqRx2kLXjG6
QOnkPOB948C3KH5aQTMdm0Ql81V21OKq+Xo5nbohxAk1HY34wBTIc6/ykvxS
LhPZn3zekE/xMccqsZjMIqP+gtz22Ro0ZJ70zpz1lof2F6L7W1ZQcTzz17yE
Ze2YNT/32JJnbOyYUfpzVJIJtQezPZ4R+Wj3Omd5kyN8TM6Y1/zqOxkbs/Ye
j181iJXFqeatoiNoti0y8+nqx4b/wVv+4UF8tQtbp3XDvr8GN6Zx8XcsXsuq
ko4dl9fO5GXkwkNeTuji3Q5EpPerVxPnWXTWKX3JvFzIfT7WVFDUid2Xlt+w
dGei3fXP62rlEgh1t5ZZ5BK5kGRaEnCGhe1rO5Vs75JAaym4u26Mi3Uly+rH
T9D+H93u/dPNU+HXno+rSlHpod6aTZzHP4t3r2YR/uEW+jTB2LEdaysz8zZm
s8F29qmcL0Lci6ynt2/PoOFTcIts90vCR4yCVuWvp6JGQ+pz7LpueJ/l9qjL
cvHyRPbC2Zl0NERv2CtiVo/3jRuUK9cPo2GmDCW2gimQ57l5+GyTzYRpXcmz
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
sn66woSYwrMvUTYVuNgydO8AbQhdEkhYM8HAr90XN+1Z3QyPS5O8yT9GIDOx
w2lpBR2rmx4evWdXg2nJ5NDY4GEcucd/OSyAgZnqFce+i5UgLT1pNCF3ACIT
HkLOxLwvmPd58R+fGYcO8JyQb4XPuZ4hA9IoHvxeHrxqGR0GDiuoAm1NaMpN
1knvJ/j5sg/Poz46mKKXlPyCytFk6fi7zG4Iupya5k0/GZCY6B3akN4CkU3N
d4O9R6FW/NVzSokOYanVFtGJbbhooX3KfzfR00tvuV572I918/qFed1zXnf5
JNZ8OZfgBJP7vK6Ow/B9yqg5HUv4/HhpOf9YNgSGbn8TcG+FZk3u6jdOxJws
3v+j3ysbavz3pbLmmuEV8nTskwGRq3317cOrcvHNskrvtSIDTslKE0P3mQgw
JDcYHKyD4qPnNizjwxA6s1VN9dL/5ZY6n9vG+dxU+5YoK/+kgE9I3VAtk47E
1x5LfL2YcAjjsqjYVo6Vzw19TdWGiL53jh1zDGx5IqC6UrsJD/VvjVFSRzCq
EPJAk4OBNkov56HzVXgnV39ZY9cw6lpej5tT//c+38c8av5FsPJxWZsxxYTJ
nqmCGW0m/P7xuW7e5/2LiSLr7Fogs2/HwyXXRqETmmDCrUNHw7vponDWJhxv
qdt5KHgEvX3HYrGSgRTTwRdr9MpQFXVEIaBxEPxhsmtEuZl4Jce2Y+mHZkzd
FR59TvTH/MwTO57epqNUlM9oYqwVruIZtUrTo1j0uE35dnU/iuf1u/P64nn9
jRE3b97rStwb/mXkLjiMDzPbOewaGDisd3s8dzkJ+pbBs5veN2Hf8bHLv4m9
tsjDunV4mARt7VPjJR0NuKajqGMWQ8eFqkjOGQ8K2lRvJU6NEnwz8uLEI3Mm
wi+pxpvdqAG9/5oJLWQYUiKbgub8F84tvLf1xN9jFBida37TzNsHvaeDYvVH
mIgtvngrb6IUWrtNOM5EEvtxmmz2ip+JualoifiJBnRqTty/f3YEH1K2YJMM
A+TPKn7S5ypgZDI8s6Z9CBtONb4sJu7jjd1ph7qXEXNgLGtbMnE+HHVV/vYR
HBU877N/3ueWeZ9NIWOp8q+aiXl58CV1K5Hnw28d3wPp2L8jNjX2TAN8Yyp1
M7VHsPZHzhsdZQa88veOb+IpxaHVd19Gyw2i4v25MR8RJvbfDH0Ut6kZIiEk
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
cG/Fj+d+bRQnBo6U6a6tIZ6vBbfNMVnHWDRmDxjErqVhxfcmj2wHKpTPx4WN
8sXCfog1xVeABtMjf0VZX+ZjsFXR6l5TFt7Tzr/zs+yBTMWfQuE6Eg6PDhRO
reiEkqvu387yhXN7sUc65ci7fKTDlNXlYRasfvGrsZ7pwc9RtjvqrmTIzWat
qMypwwF78tJgOTq2TyuaFzSTMX5P4lW4aA+GjpcdShFhYuOaQxu+1WXjS+7z
F4sFW+Hu/2i7hi0D1r9XPpm9nYu/Y3sPfxUqgafdqpny/71PcAGfpIsNcyUN
FMhXu5fN8dFx9wHNzY2YhzV75Y0+F5ORniwY/2KABv0Yq+Wy65hwNW475E0m
Q/2GsLjNp1psFbnT6beEjgO7dUds0ijgiR833Pi0HyfrHhZr2RJ7cMJv0ZJd
+bhpt3+0geChCBnm2aSrTLxYQGdXUH4SXJQNgWytVxlDLWATPRn404qBAteS
qs0uVAQU8qzf5RODvQz1q368RP/aH55+8x4V/WEn5DPaoyHNamr5nouGj695
BPbV5uPj8OrlWxozUbVyvc70kR7UmHfb3X5BguD1jz/YLnbA7K1f/jLy/+U2
N5+bx3xu3m2dnJlt+QjeeVePxzcT18ZdHy890AOlhz27DnUQPPDYQkT1fi30
lC8FzH3qx47Pe9xo8WTcllduzbWmYS4lyTifl4nwXR47cpOy8Xwn+curuy2Y
vqOyaO4MA/THSao7ybnYRF7M9Ua7GMKcO0v1WnoX9Hmeu7KyP5qCj4I3lonq
92MsScGUQZzzmX36TpHBZCjJ5aT93kZ8/m2iJde4mGh4eZrtLxcFYgbh1g9K
amAm2u36rLIf2hszjnveI/o4q85VmY4+2CWu+vnHlOhzLjv1nSXzYKAdohRw
k4G6dEeu3QTfOv6j187rNXvy5JdEZON6dEjWouMt2H77SuhHoi9wWiucdfCk
ouXYpIW6djRCnmbJaHLSwFQUylZ7RMXUQMrMUHwUpj2vnVzCRkP8b5ZFkR/y
4VTl5Ko5kIETXctfuSr04KLPEivyTRLyv981elLSjrqkyN7B5IVzOyEqKXz8
ez5xPhXX3E3IgPb3lS/Xb+vByJr9UR+kiHmidKygwaQGoW4Sa8wy+tFxhfI4
2ZmM5/0Nx8Nyu5EdkZp1YRET2yeUqXfds1GsKp2Cj81Y8kLmzWV9ogextIQe
+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
XhfDz+W+8XM5V34u9z9ZKg6V
     "],
    VertexNormals->CompressedData["
1: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
OYhu7Q2Sq/n3d7W2/AYyVFRq+NqHq7ECnjzYp9eHXy+qyiQub01BldoLCxZt
BOi6x8YO4OPH3D4r2tBDRhPBqlYK9WSgak3rW2EeL3kf5SzQJqMB3gSLW0UU
EDt4l70Q89J5K+/a0WUC9V3pDyFCqdBceL08E/cdKXNGXqcSAhVPzDV6mFfC
1mpOZhP8eaOkbDi98FywOdnCxH+mCo4Z++bP4jyZn8AtMnifQNsZ1raq/1cN
ZVkXn8niufOWzKDoY0yg32OGt8faq2Fm/KPdTTx/FQWVzaYwL6OT7yeWg2tg
7670K5cxRw1XuweLfQnErT/uNqdRC0N0BxV/Yo6suoxSunDv4OzJY7zKCaDc
kPbFGO9ju9+uaN8YIxCxeHr25xjuQR8nTj/G8yhBw1MmDXPB/Lqjwl6/Dprm
fzqejcfzZbhKdCueFwJuX/xK2urgvsOJ/cE413XsHmBhbSUjZZbJMzaoHjYP
pxUY4lxBL8uydk2Ugs4ytu0NgHqY9NW5EvEM5zrplOv+8RTk6momF1hYDzYM
qbweWF/fNqs7+paCSAEScMXHHia9SAXVR2dAZMZacZB1GnWtO4pb3PCFkIUn
h1v3zMHo2WtjD70/ositddsCroWC8cXTNyqNF4Dzx8MzHjrvkMKVp5+/90dD
8Vx2JfezRcgxW1CmsL5B1/7w/bE8lggj4Xt+DrPguWxKfRCb0I2sM0ybuYtT
ober4qrSNeyrox7fAknt6FPeDntHUgYwHT7CpO+OfSi/SVlMoQW5g6CXf0I2
OPDxVvyJpMGeuA/XdjY0ok8Nwks61nmw7GT8HjKwn4PYTbxH61F6fTDjD/5C
4PkzfHgzvr7VJ9TqJu7XodpE98OptcXQduqIfjHebztojPJH/GqRuHuN++I+
EoTJpnQsYC7+WtraqJZWI7cm1dhKlVLQojBtOGE/8x6Lf9t+pgohnZ7oS/fL
4N1N7aft2P+PZo//EmeuRF3HH/VedywHysbmGydr8fEHM37c4qGi2M75c+O2
FfDm562U3/j1lgcX83uvUZCfy9gY0y0Cdnebt17CuutRM4UXVDJavBtUeuoM
GfY2dcfL4PfNlIk/7HIB56VQFTn6rRRYFuc0HsW8NLTLXGqeJBBJfGTmXDMF
jtQ7z2nh8484HqJbkEagTamcnSuOVHhburiYhHNa6gZ9o4gTgUJF3EOd9lTC
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
OYaflK7FVWB97j6tuYtcjFlyUFhfnQr1Rw7kzuVUYKT3X9d3ZB06JbScflPg
ceGRqeA7Fcjb6dNSQvaTrhWUV0Dm36dLXJpPvgJvzr93KI0c9+g6i6rTExR4
s+MaNfV2Od7U0y25S3TUFe4ak0pyYXrHoy386WX4dk+7/iaSRw4zrjXrzAi/
6KZ7Kj5kY1xGfuAx4ie393/yMo4ive7QOobrdhby1Zf994rwiwHP6qEQLhXO
fE7rcDhSgpBqLpNAckR5c2dK/2EaTFy+1lhQQ0eekgn5f+/9KK5z+r69gQbJ
m9LS0mqK8KDUgj+LGFzMddP8WG1Kh16fJbyajnkY7HTmsz7hjgMmV7PprXS4
aMQy+CWdidkxrcM+hMfPvGwTPXKUAYK64r6hD+MxJm3g7yIy5x89Zp78nWDA
oHLxr4u6PqhwaF+YIdGL6fvwVCHSi2bLmf+pb30IMVOLdl8ifYydVHfkr0wx
CKls+8PzKQXU1U7ZLiI5lbpuSusYrRi+Pz3KUNyYC3c55mdj/+XClzfuw/tK
IH4odOtXLIRvKmUHHEg+sr1DRnyxBPaP7PJPDQvBL2nT1ys2jGCRbOi37mMf
QfC0AI+IbRwy+UdS3MzHsC+1Qmuw+S1o7docwvshDfdsaBAL9eRgYemigZTL
7aDn2q4jZfUKo/n8PmyT5OL0YQHv73MN4J35X/FbagFemzHZ9O9/wYS41KF9
ttXQqB1jbvmIiqW8r8POEV0c6NV9jlXl8MHnY9/oWiZuexormE18m2dV6JYe
Wzawp2s7Er1LkZdef+wtmfP5f//uOmWCcGBc6qdXKQv/k22rUiTbz27Y77u6
sRhqeas8hJaUIa/V5539vlysa/jqrfST9FL9NqlfW8sxLMyPG0L6W/GzE59E
4+kQckl80zLVCnxuYdRu6MnFS6MiVJ4EGmyeYKqHDlbgr03rI2vOclHz/pnN
UYNUkP1P4vLg6Uo8f9IzNf8UFx+fbXY+5kb8OS6P509hJV4fOql/wZX0ty3X
F4yuoALv7Uvsv2WV2HQ+QmovWe+dlB08/JVw9LS4t0dEJXIvvz11nuyHPbBm
yXOSF0rZis83K1Wi0Z17Jf+ek+EZD/6ydIYCC3x70vyuVpA8HvUPJTo6n2c2
1bGWCpVRWx6O3i/HrurnIduJrndsLUnKdafCLmbDuuv2ZShx3pA3kly3n2yf
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
4vDkqr+Jjg/9CyHrQWfpKdthnN33T3yXCQs1x/pfGyoUwYYGR9nCG8O4tOFN
1eF9LJQNvVX+dQWnX49d0aLBMNIqLMLsjTk5ktNidX9NCTi3rPzr9nkIpzcd
YGieZWEdj8vP51qlsOawpOediUHcm+dLYj5i4TmH8Gbm4////+2fEzeyB7Du
9wPtCs7n32N5Qoi1WAb0NtuT0tv78Vfj159//3Dui26Wq3C/Ajq5Sn7pHOzF
5hv+QmpH2Jh5Vq9WSLIKyMsJaYKC3fiXvy5qntPTe948dxiuRVh3zfmSPX87
intuMTEmsfHHe/pIQVE1UIepLhWOTXhpwJ9duGMOh2am1NqDa2Df98k+LfUa
3P8pymmEowtZuWNCzmacPmseKzS3owhPmd47VM3RRcKsy7f93HVgKPNwNNEk
HmW7f+91fzOH1yrfZqV/rIPuJ06nAm6/gUaHFauMYjj9RXryz6xWPbi/Znyf
kSoCJ/6htwd9OX35noFSdHo9XG7M/k8hpgaI3Zpt0gfm8JbmTEkCVwNU3wjI
yHQlQFLYnkOT39ko4bXxo59RA4j5a573pHXAh+Le6I8xbNQJtFvZ6NYAI+oS
LbRHPWCZLua3V5GN6z8Y8nP5NoA+4UJzU10fyKVIqYYQWGjgP7PRJ7YBSLQw
3XSLdFyhndJw0oiNbyzbXpyK64OYoVr69S/FqCFSsWF8ko1muzs+nE3qhH2R
N7/EPa3BZZ6w10UWHL3/GXi9Z7AOfJ0HFU4GNKE1hWtCbd8cMrsdviRvqIJ/
8+udYje2I7zJK9RbOYetgV275CQ+Q07AsiXPlm4MkZfQ7i1iYzyXtrO3aTGI
MHhjTjr34uOLD3YOOrGx/s97rriMQlg5eny/8MV+FGkxP8wvyEat0LdHFpsL
oMw4ROm28CAyr45E9yHH508d4VvlWQCjaSpTTl5D+Mp+sTH2DguNbiuHMLwL
ID+vbqrEbxi5aYY7WMDCKcb7xgP1BXBO+69Xg8YIzmV/cXwhykJwc5eTtSuE
NYvKK6ZejeBST8bJZ8tMPBcXpfFNtgiaNy2+EUsbQeWOYjmZRSZqn239+Um6
GHKZLJv1F0Zw1xOF86VcLMwnia2IP1IC96421i5XD+PRnpQ6LjkWfmDtrQt/
Uwoed/b/GWoawvjX7/fVn2DhvMmJJ6oiZWChk7Ip+fogVjbhw05OvjSt2dke
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
VYIxZ6zKdCcFdl29szXACYs2bN7Cfr8FwYcAno8nRAhwImJkRbGKhCStzH03
M3x6/8N5lsl5m3b+nCKOCsHDcrHWyYw6UrGuUMy3Ck5MwM25KirY1jhV5VLG
EQuLg8+u0EoIV3nsGbeWDDtF3c6GduCRwKF1KSrdpXD47MK4CsO/W57L4KPx
cSRAfez+KpyxXnIIxTHOy3fPufdt2zCob6Uj4JJ29ap5WM762oVUCki/6b91
7isWray47+xZVw7uXVbjK1bdsM+J84Rk+wR6sSm2+uuFWrDn25xr3tgFOW+/
mD/sm0BOB0RU6wfr4PnZ9fMcWePQGyR6dIydhiyO7D2USS+DEHRNgG8fFV5t
L6gkkDCI7fl1gdyXFX+9AdPbPqa3kZS2mi3PxmEykN38lBgN6RB/8P5sRkA0
k/L07CLBQGKzAYWdgGZKFuKPCpcB7vGaaXXG91pznvXWkiIG/WlJjeL6WgkH
IpSLjxhSIH5n8W9nfhxqaojif6BSDr1ulmpJTnjYbTc50n+RjJSOVpNU7/8/
p/8/nEVXrggEpFBhQgCvfo4Fg1Ib/U+YxFVBVpnd8eNOVHBNyhPnNMCgoNFX
VS7FlRD54LHdF3sStA5j0h1tCGhBfYGbdaQM7tXGFfl6UiGz6WORrQoGLa9x
TXLLrYLeVg3+ZBMqZPtJa3oaY1BEolCa5f3qVXNlwUPGnUcoILU+0nfkAg4N
Leuw7DIqh23uIvfM73fBTFz7W8mxCaQrrf7c+0k9PBJTEczu6wSC6CfWd+MT
6PLdjDv3tjdCcKUj29MN47BDr7Q9wJiGvuzlMepNKIc9HTx6LXUU0CzFij6y
xqIMY67UmKaKv96Emd6Umd5urJOtbs0Yg7kDHaSdTjTkuVbGiyZUAWyUmYfp
p0lwqj0vNj2WgGoaTyJnOQQcVsb7Ks5S4caBJs3BTxgUvh7tWT9SCRP1/TmL
BDJI3k1+zZ+GQ4V0M9MPkYw5Iqf/I1s/DqKxnSWa9WTU9ovFdpi9HESYnFr/
cFYuBpz4/oAKqedq9V8y1mXE5vtAeWUV+Ft/3omkqfD5+5XW3iYMCuUetttF
r4TfDlbCTVgicPu42j1eQ0TWjmfsF5cQbD2QsJObwflzqjzV7h2jb0S8v24P
VcGLE21dHHJUkPu53XljKgYtfUvQF3xdvWq+Xbhz6GYpGW4tapRtG8ahN+vs
hlPKy2HjOiMfdrdOyLTYWnmXMIHS9nmwo9JGqBEN2L8w1wHrK9T61DATqMrX
JlbMvhmOFl+3tOgZBfZS8ScNGTRk/0CZewVTAU6GHzUdzSkQ445uhE9hUat6
vvpjwcq/3mL+8VYz/Ckq9cko9Cbvf0iuoiGZrLVn+hl1/N7r933bs4ng2dst
H3WQiM6KeErX7S8Ht5/Hb6TMU+A60Ba7BBn3g/hVwV+8VTD39BRHlTUZuGY+
bJY7hkeVc1+9UtdWgG6HtpOTCg6CVBvkvJUpiO/6rMYNfDk4Mjlj/+F8nBXl
mCBDBfqC9khcPgYpOV9Jm6RWQVv2T6OWIQp8vtpzIFAFi5T4XhoG762CS45X
mx5dJUJ7bfAX7CsiSpGY3Lcpohy6Dh/8zrmWCpY8LpcnZxnzyLeu6CGOatBK
Cvu2tEiBvqpjoYtzGESMZ9+7/9vq+ablcyWc58iwFFEk3m6FR1Z6Bq6UAxUw
/yt2hBLXAcM8RQkmuAl0lzpETdrZAiXpZ0h3RTpgIPnBJdzABPp55pw6z3gr
fM6xG9H8PAJK6WCWN0NDPflb2XQPVsG3dLqL0xoKGHjq3P9ujUOzRwu1Cu9X
/vUW/I+3/IG1a4O0RqCOdym0iI2OFp7sjK3OYjwnJyTxmDgRHsssaW/NJyKL
CocY1fpyEM2iG+omUqB+Scj6ng8W5fJycjlqV8Foa/0MxzwJ1H9P/MqsxKPS
ICtJvicVEMgnos+diAVe833VN2MpCHxIgaktFX85DZmcc0xOT1m1HAKNAnpS
J49s4mM8/83prR+FqqF582xVvh8FOtpGFUpSsCjF/OM9uztVoIaxH+aqJ8Bi
yDtxMS4SIhumZ5xSrYCS/Hq3KkQBQrVZjLU2Ft3XE4z7zOgfLplOXcmppECA
T8jZwZNYtCbWLMd2ZPV8Jxv/eoNmEmR89TKencQj4atFJIP4Cug4TeMz7myH
c9+U4s0Z6yJaFSWuHtwGI8q/Jb1vtoPDG/un2Y0TiG+9/8lNWe0wvKPe2vvV
MFi8DsvTkqGjy2YCxdcCqhn7cu2kbBQZnu952gdkHMpPCa5YrquEgFW8dYeI
t5grDEOg946Pz1XpKMpQSFyKvwYGNofHWL0nQHajtbzTERI6ef5mV8bDCuCS
Nn/CrUOBHVlCTodnsajc4UOoaFgVuGuttz78jLFeL9S3RZwlIDnv4izT7xWA
mcceyuPBwnrpdd5hKxQk42q89nFlJdCYnG7/cJI0Gi7/+ESBw918vnq2WJQT
HiLhrVUNlNFh40YFCrzCvBhcZNTHR1+PbDNJqwKryUNK48cJYCtnvCnGk4Ty
N53mkaNWQFpr0lt7ZwpgRTFmL75gUdbZ9baeDtWQbXPcwZSx7uu7bAs132AR
J7/gcOnGmlXz60MsaZm6JOC/1srpzaiPPSN+lYEilcBRIHhsYVM7zBJsq/Lr
GPOyp7V+JXcHHKw/E0Y/2gYSG31+zWRPILk/xWv+/OqAJ13ukovOQ7AQwhtx
5zYdfbMNbX66VAONGWq7phXIILtM09YyYvS3K47bhqWrYHwVb5IakTtF9w/B
S9Nfikv36WjTjOwFB99aCL98qHZyMwH4Du2VUEohIaUXQ3KFDM5Nmnf2714m
A/I6YtxriEPWuJmf8eNVcLr+ycfEtSQI8Xn9YhoRkB+XgKTM40qgOPer3fHG
gPF8+ekZHSq6/mcl4vr//k8jk1PuH07LUyFHeUwpcKLf9/LuZiyaf6MhaeJX
DZcV8t9qjpOB5c7rhjk3HKrfdUaRe7EKHpjw+xzKw8Nrvqe15d9JyPQ+LfVJ
XCVEWG5/e+UwBcpmHg70c+BQT94GPSnG/ebZ5LJFQYux32yjSEsDWCQ0d9uD
eLpm1dza4tKKxRARjgfemQ0mEVCodK+j8KdKSFX4M4b70govSom/XmdMoKS4
BjNPvU7I1liTeLKrBXazfjXuYsxl+w1nKuIudUGSIpL94jgIHYtD91L86Ihr
gG29yNM6uLIudXpjGwk09+xiWWzDo+iArJsrjD6WvIq3hw3tgs3SgyBptul8
fygdfeQ+G8m2vh44+sr9OPzwcG7qY1wxPxn1KEh0/h6shKUx37OtSWQwMzta
taEWh3xPnuBMla+GUTFPp6/+RNhk423QeYSIPCZdv/GtqQKerzM3lpbG4e3h
hbv80VSUMcPzfbK5GnSYnFr/cAqFe8093E6Ba/dk1rFJ4tD7bZfW/WioBrGh
Jz9f+JHBf4uarRUJh8wfz9eJa1bDnX3cVw4dwkN7taT1zE0y6p/pO4hMqsBr
Odb9A5UM0mOfHgia4pBaPttG0x/VsKs8yFmPhwIs8qyYMAkcupp18nXFs5pV
8+RxdstWMyJsZE+fO6pPRL15s7QMBUa9aJ3icL/cAnoXPvBvDZhAV/tEi5PS
u2BOfqergEczhGDsTnjaTqD3irchLbEb6KI8r796DsDZ553C2V/o6FPoBP4z
SwOYTik0d1qSoOvOrKDUcQI6x9H1ctOG6r/ewpjevjK9+RNz/J4pD4BpdDc5
IYeOFAXoN+TDGyDnlg55jA0PAwOXeWycySi1Ld9rX3QVxP7aUmGkRYaXyZIN
wdJ4lOl/fufUq2pwjyY/+chHBP2Pm/FGCUQUahHwqfJtFdTauXHrO46DnoTK
1jAsFe0ZjDs+jKkBEyZn9z+cHvSaDPUOMnA3fMWXuuOQsd80af2WGoB5A+2c
Q2SwOjklv+sSHmnMkbgtP1XDmcqqteu+4sC/RGV7VAEZPe+6/jN7P2P/bM37
6RlLhmSXJ8FLRTg0Y3RTbh5qQDQKa7TUSQavIOcDPfY4tJjL1SpZvHpuHOom
IDNBgIbbztfe1xLRIQmIoDQx9kPizYvTa5vhyvJH98cWE+jAq4j5IY4esPD3
raqFJrh8d98FmbMTyFQ2d1/lml4wdbpxSDKiH5JyFapYGuioJ7HukvG7RhB1
mMv0ZCFBvVdnaWcSAd1jLzKv9qj+jzdRprcRo3NNhlf6wS9zW2VvKx0pm01o
njvUBJnKkTfee+Ggvej7mfw+xvkaOSaOu1sNLCVzFRt/kOBytI/TiQA80vYc
3C9HYZwXX+LFjGgCnEq7rVHGqPvKVByRKFcNSz0XxnJnxmC/lpXGT2Ea2m+g
9rSIpQ72MDkb/uEMjOqX6vIhw3f9U+0bBnBo19eDFWYGNbD+zksP/gESGG1+
10NMx6N7tqJfAjhqQK9DJrlODgeiW458EOWhoJtyHNFrl6vBz+bGQdVrZPDz
0PqmzotHCcFhkxkBNXA3j6f5bCgZcL7L4i5lOORefp84u7J6/qHrZwV6SgC/
M74fxw6QUHr8KX4PhocLcGtLUn0jhBmH8WGOTqBDP/LN6yx6YTyjcoG4sRFi
FNrc1vFMoO0WazO8TPvgm7us24WCPthOEjL+PUpHwr/1Mn2PNcMG+/P3Dd4T
YU+6rtLsBiK6mequNcBSA7/+8SbN9KZ+bepY2uM+CONQSezD0lGF700O5/5m
UC2JeH5xHQ4+5etqL8lQ0LqFUw6jx2ugBKxf8n9knIuFo2eoE3jUL5G67YAm
4/ljv3O37SfAgSLN7F02JHR2yjhYsbMaXDlCh9NWRuHZ29zbBddpaGdIYruo
VD2sZ3KK/sP5+I9O6QkVMuybFFf7KodHPQum1K60GggPjnuDdSMBn634lgRu
AsKevbZ827oGYuawrv7ZWDjaHxlBNKWgwFNrfxn11MBs0S/ywnoy1Ny9qNBm
iUdXaa3JRtgaqFWVOGR0hQzHCXcstDfg0RNbVUnWc7Wr5of+kKyL1hJg15J9
s9IbEsquPzgmvakG4j2JrheiGoDL4vRaX9YJJPR0e/uahj7oe7Vl+SS1Hhw7
80NO9dHRi/Dphy9r+iE3zdBVD9sLR80vXVk/RUdXfrcYX6W0wIYG/Za38kTQ
jZ81CLxLRILfNhtx+9TAs3+87WJ6O15j9TAzvhek28Rzfk/T0fiJjuNr/Fth
L4tz6bpXWPh+dHnwvSsFdX1p5WkWqoUvRjKPv5whwf7cHWmOGgTEKvN8w5e8
GjgZ+uQUVz4e9nAoZ6Q3kpCV2eyvey414GB8m+0MzygcMedVPu1LQyckIwzS
9BtgPZPz6j+cbhq9l0omSYC7bmf/3BuPTM6oN0qtqYWt6dfDtCVI4D+fekHJ
ioBO9ZmYx/fXQN+i40ODY1g4Wbib+2wGBWEdadqOebVQqsByD19MgjO1PmEm
xXj09iXnm95jteAtt17fZgsZtikMyu/VxSPvC/scDwatnm+l6MmrB+Mh++Fj
fA+JhA73RBskFtZASgmPZZ5rPTyO1lqOrqWj6HvrHPfIDMDFtcXJTV11gFmX
7Cz8jo729KnE3ZUahPR4VvJX/l7YM39ip80iHYkNBElMx7fBO8rpWeNmAkj0
HJH9Vk1EzVKhqSI8tWC/iredJwLP1vf3wNK2LsEIxnP+UDaeYdnbDq798S/a
Gf1kfV9G0kQtBTXCVJvRSi2EFURsXkclAgf94O6eBAJys1TuchSvhYBTBO70
c3h4r7kyHbuHjPpelrb/73fIUfd89kvKjIBgsEbEQhYN3aoL7iW+bYRwJqfk
P5zuChtPOcWRQPHmlXOX+/BoIGLOS8mA0a/q/cQENRNBEy9g+7acgM4UFPeJ
qNfCSMMjJdVqDEzTXs0Fz1KQyOnbuawxdSBwZK2LjA0J9gTxBo4wzmOO/Ckz
2rta2BWTeS+yhQTTnRWzTR/w6JBt4TGjsdVz2cXLS0EieHC0XymmqJJRE8fe
TZ/v18Lgm+3y8/frgEP/T6SVNx2pnnW7XhY8CEXWswqJDYy/x6x7RNCmI6qL
iXTt6yF4/fKLZKYOo75FGnY9+k1HJgfs1h/PbgeNLwoBdAsCDBVkF9zfQUKx
le6Jw3G18GEVbzkdlr0Ggj1QI6d7irhMRx5CPe/VOTrgBCx5Z0RhYGm39I1L
nFTkEbdlmwa5DlRnhrZqBREhS+4r7vsiw5uIn+ft97Ww87X1i929OJBWua4r
7UBGHjiWu08xtWCR36/HpjMMZwU/XD7YR0PiWXmRd/qaQJ3JOczkjGNyRpEa
PGMZ885tAfuvLPsYc4EKOb2nsBYW3Abm2+2J0D6PWUnjJ6KLUonXU8pqgWLw
4LmMDgbsfe4oiR6moqwrR4KyAupBbBfdeFmYBEWblG9J3CKgLONzRx4t1oI0
/cDgulckEGGTyRbFMe7zHl25B/J1q+ZtERynMrNwwB8pwvX5NRmJfuKZ+yFW
B7+EX4fIWdSC/wE7mQOMubVXM/Li0/kh0FM7772+qQY64tYaYNno6Bif8ie1
yWHYK9Z8ujmsGxx/7pfXY6xX3HB4idf7DvA9VXrkNisBoq89YW+3JqFbtUuB
G5TqVvW201ftKcaQ0W8eeYYXW6Ij+4dr8gmTHZBaavT5434M6Kv8esB+gYqG
Zfd6nxqshwl3K99vikQIy16SrrtERG4/QqbleOuAc6+ikLMVDm5IhP5xR2R0
Z15Aof1jHRzmC+/0fTYEAxInTVQWaKho16GkzD0t4MPkjGFyGjI5N07uddJf
RwIFzu3jT58QkOJE35aBnXWgWI6PPyZEhITpbxxOlkRkQf4cwq1cB7ZBRgX7
MeMgepon7ZQ1FfGw96kpvWgAy7Jzo087iKCE6lnFUwjIboQooHG7DtwenrXp
PEcCWdWo+PVSBJT/xMJA1W/1fE0kbx46iwP7NafTzjL6rhCWdSy6WMZ7H7It
ZtyvgdSFMuKxSRo6w717+8L1Eegtv0fQ6auGNZs8Pa2zacjWUG8l+dIoGMhH
dHhiumDzr/ZbOox7TOhRYGSnVydEhzXnDkXjYWiN5fkfxSRkRlPnc+ha3Zvu
D9OUobQuaPJfjH8xR0eRnDqFeoOd4NFmvPiueBzkn/BdsnSnonS2+ICfnQ2w
P12kS2+EAJvHS5SvRBERpfeiZUlgHezoejfavYwFk9rRth52CrpUcO7yJuN6
yOzoqjL+OgiBQnbrjXnpyEpLOV/XoRU+MjmHmZx3mJxUwynOljwiTMbORcRU
EpB2nJ71Tu868PFPlJhDBOB+e9P+Vy4RbXCVCtlVUAfJ281+SD8aB79fy/uV
4qmIGz/AouHZCE1Cm45WexLBaatOZt0sAf0uSFlQa6iD0o3XlETWkOCa9/Qn
U2sCmtVa+z0Lt3queOc7pXMAC99UP7HM7mT0n2vDvrol1wO79c6EXpdqWH68
JXAykoZCdxxZs5gzCneN695PT1TBDPGWEPEWDWlxFvlmJo9BdOHSouGRLuhJ
eW0awOg37FtXHL/YdUHiZhZrd1U8nKA93fRzHRkF8dSPEB1W97bZuVWkn6UL
vs8ZOapQ6OjCTOVzyYYucMwLN3h7eRwEtUIsc7OpKIGFrC/a2QheGaZYS28C
mK6NjH9LJqLfXY+uDPDUg42yuByEYqHJ4F37LXUK6s6zFv4h2QBawWvbTlIG
4DhyTxvdR0ecJ875dTW1QfwqnIfsExJ2WBHhgsPNQEtuImKdIKi5TNVB6HGC
hoglAQQMipQPryGhsKQ58yyVemiILfCX4BwHT+mLHRc6qaheasH+/Ysm2NK3
VmntESJcfKO5d40qESkVW1tpHK2H+S+NoRtLiPCIYPhdKJOAzGd/HM06tXre
fc1j7KctFjL3j/oQDCno7WWbvFO2DeCzvKwizJjvxVbUaz+fpqGD/IsWEhzj
cODqhybLTVUQrVB0+NsaGrKuojUmuI7D1W9tT2bedEK8rov3cQwdBWp91As2
7YZNjeHhlkM46HC1Kp6+SEYvXltePiK0ureJ+IF2m1udkLtVbtJugI7Wktnv
thZ1g25Mt/6mljGomgt9Is+Y1+LI4UF2jPtT2Fng/Io0ATw/2CWFHiKh3DUe
S7ci6mEap6xYI42FAXV1jJovBemLe/BqzjfAjZ1xJsNSA6D8NT7/+zE6+t6i
4KsX1g4bmZydTE4fJqd7eI2KJePee+O9d6hKl4gu5/gVdRrVw9IF3lejmwiw
ZjGyRUqdhFhcdcnRVfXAxz19fMf5MeD8dEXm2woVBUWVtPYHNAMri8apqwQC
dFtpS9Z7ENGDqQeP5VLqoT/RWiL/CeNePSEbtOM7AWnUWDkKJ6yev67a+E6V
Ewu9cWNOmpEUJPeap9gIGkFu/DDr1qJKeKTrMNVBoKLxsUdiE5njMCKbz6Wh
VAmi+tUBxxnnfZsrITpnLwY0g7Z9GZ3ogCyvlgt+jDn34eCo4p9rPXDIYCHu
kwsOGDYpy2/ISDjt2KkDVf/1NsP0tuazFvupsg4wWLDcrVtDR3wWybLNGT3A
iwxja1jGYAPn7pwd3DS0qevh+QhsM/Cdw+kf7cbDaPbatzeektC+BLyWsFgD
dCXudXhYiwFVyy6bunIK2nflkclAXSPEFnpPUm374ckbLcvWC3RUP1VsWqjW
8ZfTgcm5h8mJHXlxp7WRAPt7z9l/iSAiDqnci2s664Ej/pHiRca8kNN+1IPE
mIP0u3hflF1ugGj3arUk11HY+8DFN2MvDb09259Z+LEF/DVFrnaHE+A9h9Ym
wRoiok+xuvXuboA8riTs0UNEiNMW2X7zIBH5H1lDwnKsnqsYy75OSsKAkUF1
uH4nBeVObRf9uLUJVNcS7mqQKqBsr/9QnzcVyYxUTOrcwED/71vnFO9XwGsZ
FvGfJ6jom8rZo4L1GEiM5Wpo0O2AgZkjxpH5dEQ5fmbY/mIvVLB1e+juwsHh
N0FrjzWTUcLY74ZYu/96a2B6Kz8JgT/FO+DVRsFXHOl0ZBqunPsxsRfq2LMU
Dh4bBd13tL2ph2gIz4FdVJttAX2NEruDrngQPK2sRSskIa5Yz5TFLMbcaHBR
7owZBtK+857m/EFBTzRm8CYxTSBtenmTZFkfUGWfPUq6wpjvxNGr+mXGe5mc
R5iciUzOTKredetnBHhqvTFz5xAR3ZeNaSBeaICGmBcJbsaMOejkLy7HNsYc
VKa5gTrWAIYX67yaikZgS/e+fY/UaKjUJVhkIqsVOF/dEou+QIAMj6PqtHUk
5MlbJCgS0QAXt2ZxpdAI0DgkrVNlTUQxd/1DsA9Xz5XixySVzmDgeHn61DF2
KhIj+BGq6E1QVJRz+O6uChgxP6xxQISKlPTcNfGLGCiZDdvTk1wO1G2mn6/2
U5BujmushSUWiG1sP01RO2RnOJtGRNFRBjG5xup0H1gaqyw6l2Oh40YDroZR
949JUHjM9/7XG4bpzey46/T50HagJSfV5wXR0YJj6zT60AeTa749knEagZ1C
h8d5dWmo5AJr8KENbRBgyfbrjwQeDnXfaDFYJCE8eXt67dlGuPy6n3yaFQNk
54O3j0sy9lvxx9l0l2ZQ42x9rcXTB5IhWwoSbjL620dLeudyOsGCydnJ5FRh
cqZrKbEayRLgkvArEi+jz1d1R1J3GOcuVvyDdggnHt5+eytE2UhGnPfJTssO
jeCQJ3T1wcowqAQcilWwoKHBbTbvxBj3fEe0mkTjLzwkJO1aPnuWhI5clSRO
8DWCdU+rimgyAXqmbDt0U4joezirLvtQw6r5Pbq15A/sOJzvUmjbrkhF4gpz
jyMbm8HSQ/b7jlvl4BF279qZAgpysb6ReDoCCz/5KxPTexC0ZFrO19pQkPm8
TN0lVhxwBh+PMj7YDh9+PLNIdaWjZ2IBa4yO9cMzeT7CfnMs8Aq4+pQdp6Dn
sSdlNIeaVvVG+fTmM35dOyjWz259aUtHV7mCqzND+yEqOpjtQ+kwfE0T1fO1
paEPj32/sfK2w9mQD1+KOnDAYRBamq9ARu+KqrabDjWCgWDCN5sExveSVJ/x
v0pFEZu51F/caoGSJzRL0Xu9EFM0mD+jT0dGkmp+E9Zd4MLk3MrkdGNyBvoJ
iBeM44E/W4wl6Ob/fmcycd/gFGNdTp3ne5eLgxMYdrK6OhmVtbdNdXA1wetj
3aV3zg1DGutmHlEPGpLQl3vp86gd5s49S7dJZ/TJCcLxEu4kdOac1CvRsEb4
JSr1oNCYAG5z/DWsOCLKLF4oVFT/b57FzEcsSD9Hvcfh0tiVz3tNqejlnckE
8pcWUG12HZU+j0Bk8ulQsCYFyfs1WW+Xx4F/yAcXrHUZxJ75GVjJSkF7dNIe
eEbgICq5WfnPpTZoSrrmtMDwMEZ/xNshPwDCjuke1lxYuHGd3nDKjoI2LAWs
yIQ3r+rt0vPHf0SWWiHmByEn/hIdFdKrx6f8B0An7abxNY5hyAyw+6TwioYk
OZdTCuPaQXnLiXx7VxxQngfu3fyQjPTq33/7/LgJir15X1WfH4fvt4vOCz+n
ouscs7NfT7WC1NGGKov6Hnig6bi3UI+OTqW73H0u1Q27mZw3mZycTM67n9UM
g0PxIP68bMe7UBKqHip2/1rZCOeGO9ViTBj3/AexmVQPMhpOPeyk9qkJ4m/E
jQeFDEF4+0MH8wgaWnZ5FfBlXQfMR5ovxjDuT2N5u8K3jHs7cHbfi7htTdBE
fvjbcwcBvAg9H5u2M/qlkWNshkWN/8nzmPkZ876N0/vG4ULG7i0er6jIux6C
noS2gtWuLyu78aUgFO264D9ORl0avkL76nCgUKu1ppS/FCBq6GjhWzKS/RXe
2iqFhwz2m87rzrTCiOWWn8lH6Ehr6nDTaelB2HtK9otGNgZuuWUfs46joMj5
29tGrras6u12dVLDrrkWEIwt0pUVp6Pm08cj/3gNwodLaeeVrg/B8p7hlgux
NFSY03k/7HAHcFd8Ix3djwNuMbetDkmM8/VuWtBxazPEDIWoefSPQTZLS+3u
RCpimbmt8WN/GyRSO3ux0j2AMbx3Ycc1OpofDBDOJXaD6CqcLzYZnFo5jwf7
wrxzMs0kNL8/T/6sWhPj/nwwU7gJB+L8l5N25ZPRelHuP8fON4NeK0avGT8I
horHh/Z9oaGJMjn3oYgOuD/yW8eWDw82l5ufhk2TkOwGdvHLjHr6xJxSF9yL
h3fwuytNm4S8qVncZrL/zV8wc/FKcQ2N6DF4etoEXf9KRZr38uO4n7cBV4Ob
hF9wCXQ+YQ9PsCOjS77PYhRv4EFEptItv7kY6FHWMULiZNRSM8LNkYeHzfIG
a+6cboHQvUJt45x0tGdfvuhRsSEIuNIiXH8LA44HQqmGrRR07WD2t4OCrat6
u1Gp8uXKD4bvsdNyur9oaAMuL9/cZQg+HjkqIJw6CHTfohXyNxpSPTMbZF3X
AVyy+r2C/VhApl/M5vvJqKTZvDAjpxlYHMtuF0uOgfdbzJrMWiqyVLK028Ld
Dp7WK23Gb7vh+O7guyqadBRSz4fVSuqBN/9wXmdyOgbvdty4hINEea79eqxk
VKi7n/d3axPIJ7jNzpZgwXRcbU8OhYz456/K+pObwbvUIXxGZRCOzDwsCCmh
IcUedSJVphNilVyEp+txoJ2T6nOQ4W1dlLHdFilG3XnTvGshGA8PUWRqvDdj
HX3UTh5OavpPLsfMj6rkb/s+OQpK33dFNrZT0TBLD1JWbId9r2z1SZrFUCjx
QU5tDRk901nTtRvLmCftTN20Q4qgcpj7klYOCVnMR+lvPE6Aq+8bj+ZoNMNK
5e34lhEaMuB8uaSwfRhOCLRlUDgwINuzS/vgTwriAougP8Otq3rT1xX9YrCm
GWRPzxw/1kxD9YINh77YDUOLNhIisA4CV5Bkn0olDUXc440WMuwE7Luqzbt9
sdCyWfPZ5w0UNLZFu0RarwV+XBs4sN9lFE4pvc3/wZhHdiVnX3jm3Q6/BycK
0td0wwXlg7uPnaaj7u93j24w7/3LKcfk3MjkPKZh3dHxFQdubwW6RRXJaAyv
aFap1wyqyusO3HyAhWVxIouHEAVV/X52RzCgBY7QqvnH3g3A00ENvroGGprP
jTj9rboT1p73Wiv7HAdzxNRamxtktAuztL0ptxkoat+wlZp4uC/1+mdmHgm9
8RgOKdj93zyAmf84IZ9be2YUXn7MKv4zSUVrQ8TXH/vaDmzJf3iLthUBB7tM
5nggCbmk4T1rGfN8mI6+zQaLQqj2b0gsOU1CQ2Hh7O1lBEh8tnP8nUETfJjf
hAlPp6FJOudw0+YRaEnWe5qVMw5Lb2dlWISpSPblrx8iyW2rehsZieod5muC
lpZIlY0faIg10BdrYjECKXEatebGA+D8xiTpTisN2a+w89vNdcLB6d+qV49i
YX5vrEjMUQpiF+CntbK0gn+Hhn5Z5whETYUR+VhpyFdT60jC73b4HmN87b1D
F6g1vgpXZNzbutbNh+PF+6B5Fc6zri63b5rjYMH+xKNQSzLa2DC48SmpGUx+
2SZP7cSCo3f3/nfnKYhtLDIaKbYC6YBDrPXPfuj1LW0kddGQRbj3ng2GXeBB
L51RPIIDneDXQvq+ZMSbufzA/FwLSDvR3q5l9JkzEed/9BNJaOST5OPRyOb/
5KPM3M6h8Hxx1Ahs5r7qI8hJQ+GbdpTSpDqg+7HKVu/vBSCuJBrYvYuE8uW8
HITJBNhoWJFhrlYAN3fJH6puJ6IfkvaWF1SIkEeR2FvwqBHe90bWWTjT0P2j
lW9frR0F/vOqfCJm47AwbuxOPs2YFxzf6ygqr+6tffPP6x4HG2FLblDyD0Y/
PPXBSnSH3ijQ3CInnlX2g4q54jvvPhr6IXrW9+KbLrDut9eoJGNg9p7lObop
BTnHsiY7prWCmphBi4XsCLxYOjK6fwcNdUipj9517gB9n1GWH5ROGNfcOqwl
RkcCatl5/cQ+4PuHcy+TU0nxZlD6DhzEtbAfyA0no5mo5kBWxxaoTuctrWjF
wNEvt1I2MPoTOyOO+3ewrbAzxuqRs2E/bB3oQHxDNKTms0em7kcXbPEx1RKg
YaE76Kj8Sg4Z/alrgdq+Fojg8DesrcWB0dTs5t38ZKQcbdsUJPTf/Bgzb0zN
uVC6OAx3rdhzD4nSELfLxbeHkzugJu7Oh4a+fPj5cp+QRxoROZy+CBJmRDhz
2+YXRSEfONcOc5QZEVHPZcF8p29EMO+RK6gOa4DOqe4rVmdpyEb/QeeG+VHY
l9HecGTrOFgF3LJde4eKNh98YzwS276qt2Nmm+J+6TaAsVx/xp6DNEQQe6lt
rz4GNVPFRHapfhAbtpotYty3dkg6xV2yG7YUc72x+YABEwUiPd6fgpY+XO3d
oNcGU42RP7cEDIOqJtK5wZivv4fc5ctd6ICdwyH+EXc6oU5iB0fsZjriwhYn
P/jcD5L/cG5hckYeN1cb7sRCQirLeEgVGfXuIE5d5GqFiPCKE90eGGAZfvKS
FkFBt6K5RohBjDnLUNAKW9sHr88J8zwYoyEV2+GT1cHdcFUzcqUnHgtOUur3
zBj9G/Ge80T3g1bQcZgXFvTGgY92frH3KcYc92sroTiy5T85FzM/bE8cLNRn
zDVZkg8fHGXMC59KrX6IdUK8jtbE5qY8KHhZTj2uTESIi0sK008E+iUV7p2H
8sDdw/neMp2AJFb2kR7uJUHRsg6vQ1k9xDhGStRx0dD0CaNIEm4MBEUuGA35
jUEHbe3Fe55UZJfEOft9w+reZporv/55Xg/Gd/FCRT8Y9/PRJ6LeO8bh7bmT
GeOhfSDUwasujqEh0Zo5c3JlN2QHJBEML2OgSCx+fW8WBWXKBX7PYmuHntyD
4infh2BvwFbrfMb+0bk423T3SSfM40gCN3EdMC49ev/8Ig2xUQKlhe8N/OXs
ZHI6MDlxlwJ+TLzCQuwB3s1Kk2RUf/HHt2NxreB8uSBYWhEDQwdvF14uo6DB
K7Kn+Pa0w2GKErvXkT54+U37DCeDU6c+2LVfpgcSXrj5PDfAgqBRalQEo86G
HL6m5sTWBnrJjX4sp3HAZ9umy/uAjD4PoEeXdrfCzX/yFGbueqSW4yMaAt64
TYZ4dRrCtc2cEErohKDyWzwjjbmQIlgQYVBHQN7zvyhG6iQY2kF181TKhY0D
K/6NLgS0xeTA0xPBJLgYdTPXdbIO8qPf3vvK6FsKh9hv4i3H4WGF/KfA6VG4
nNv5TCGaisLibvgYP+pY1ZvX7cDrl7LqQIOgtYteREVRQSzXK4PGgXfa+g+J
tQ+mHwlGjTE8GO0jz+rf7oHxgChsKBsGrN0VjCN6KIjQR9M9YtQOOZtEsrfr
DcHC4T6KxTUaohEVJax/dMLJWcuZjRYdQEwvRIbjNBQiKU/4xpg7bP7hDGdy
2sZvyaeeYayXYHRGpgAF/bzS2ZGn3AYyKKi7kTYOM5R1SxcwjH0yuzV9nUs7
HCqGhGPJvTAt03ufk/H8j17dhsONPVD7PEhCkB8L4ieK2FIOUpC2We3rD9Ft
cOQ4q9hrFhw4Rlyfa2bMR1k1en5yia1w+J/8GzOfVpRgvbJvCDqz95Xm6NGQ
s0OyuodYF/A0PG3J780BB35/T7HrBGQTi/XKzSFBUPaTocSLOXCVqvHsARcB
6bvc0P3zkwT34iUDEsTr4NCMcYxmKBWlsH+2OzA8Dr8OOlQ+1x8F92tTgc/y
qegDbrqef7xjVW/j21WTYqm1cPF3gzz+GRVV7PAWv8hYD50kH8ulx72wtabq
DRvj85wCpeTM5R5Q6XQa4y0eB1n3t8+Wf1CQ8UdpxZWCdpjjddXRrh4EDkv8
XnczRr3bW/o48WkXnI1UcwqjM7wSdI6uqaGhIm5ZETp9EBb/4Yxich43SzMZ
WMEA+rCNa8NxCtpJ98j83N0Gui03VrLjxyHncEUtZQ0VGQWUEZV6GedryzNr
8o5eGMPhr/sM05DSlUONn616wSXcgZrUhoH1ndF74q5RUMKXoEMhu9rh+BYB
o0qEhZe7TW4VF5NRyICb75UDbX/zV8w8jJnnhfMZVL0dBGMrJacFRn3f1i48
tTWpC+qKeSokJ7NBpbWtoY+AR4dt+Hav2UGGfgujPK572WDTHnJEOAqPHvxy
rOgwIMMhr1rTT2a18Mnvsk2rLhWJZ6QnJGlhIEu+9WlM3Qjca1w6cL2Vinym
Wt7/vtS5qjcOudZb5ftrAUVakFpVqSj2MjZ88TEGwur4r/6iM+Y1gSqPdEYd
vyyI1ayK7IXJmALRYftxeHFP8R2fABXtJKybWuHrgEO6dnJHDg9Cjsf7wzsf
0tDTa5Nn5he74PpO/HTTE8a8ctQo+uInGhL3OcIenD4Emf9w+jI5PQy3JaMC
DJiVRH/RNKGgbbpH/JeV2uGdccEPkv44bFXKO3lWhIpSHR5djZHvgNw9rY4P
wnqA1DuREt5LQ31fT8gIcvTBiZDpajl/DFRZX//4xpGC3j+Qt/z9oB3+LGz/
nOqGhcgPqp14Rl2jvIwQS8hj9M//5FRm7uvVdnCIbRDc/ExVauxoCJs635rH
qOMvFEQ+5G7JhpenLO5mP8GjZ+v/r64rD4fq/aORSkhEiLK0yFIhspU+ChGF
UJaSsiVSUiiVFCq0kFKWtNhlCyHUWyLZwizMMMbYzb2YKJWUfvePeX5/+D7+
Pc88954573vf95zPP8dz0vXyCIyVi00ZxhVBxbXVSGrLAPo39suF/mYENtcs
t7HKqoUZz7KAoyswRKq6rbwZ9cKJCtvtwzrdoNfDWUPrI9bRaDM/fyVpXt1s
rxac9z9bCxJKElm032xkOCnkkjvYC8vui6+pPUGF54z7aJKCox7ViBIfvQ4o
t8ic5qiyILvkxe3JrRhSklFcpOTfBt/30xUL0+mAr6j7ZXMBRzcCV9mbXKGA
tJKfVwxxv0kWNpy0v4mjyXfvG076MsBzDk9FLs8sv2KFF+d7gYRtgugwNsoK
yor7fKsVInbsrvQUZ8FVmRBVb2Jf+UjfiVaJaYMW/qefMldQQeBfGa8tkTvO
xFne5MnoACS7NL3ctBfEf6roXEpgo9eZnitvviWe4/PygoUhkfczHggc4GOj
2PKt+TeJezB8HnzM/p592AU6SNs2Xd9G+PA4a+XPVi8pIB+Xfww3KAJeXb4T
GP8AWpdN2b+APgJ5GlEirZ9ewTtRl4BbH/pRYEKanoEYGx5N87q5f6uBm7R8
MZUWNrI9MzSVurkPtNJij5m/ZED3nTgbySkMXc+l2MqpkOfVzaduSUHouxpA
5rJ3Npex0dhp134T2z5okogTNBiiQNGitBi8EUcPx9T3htM6wEysIy2pqQem
YzhtmfsxdInRvMm3tQ3ORKn35snQYcUvfr3tV3EEN6vLg3moUDc7oXlTtQXc
Rsg1Oz1wdHevH9lwUzdozuEZxuVpsGtHQLhGLzz4IRXyJZWN1FKebcmjt4Ls
QG730ZQeUAp8zDx1CEMhDF3LpvE2UJF7Z345jgKLuveJkT7i6KBr4rXdJjQY
Bvloo0W9EO+k9iqwnI3e5sWKKSwnfp8cfTyHpw/cZoxW8CuykYr3kspqr9b/
4+5cXJWLP9GiXk7n0GDxRGLZ0VAcrbG99q9GjQpryzyq7AJeQeVY56qc5H6U
vk87k0eDDcIztm57+F7BXYsoq0eH+pFUeTtH0YsNN2Sy1hYZ18C290jdOYqN
tN1L8sYT+iD2wCezKgUGvFhiOLRxEY6ynEvGNBLJ8+p2/Zn29jLRGlhk+HfD
NJFr3gTYaeS+64MzLsHOxl4UCHJzOpz/nvhewogUGUSDmRc+WSNGPbB8edMp
E08MjdzpM0FqJEj1O/NT4iHh04vc8rEwHK1KXlt16QYVDLLqEu7ZfYGP/m8S
ZHbhqKG5sauP3Q0xc3hmc3l63kt1PMlhgat48Nr11Wy0wTps11PVNpBPvz0a
KtEDaNNecD6NIdeXBZGBliRIz8kaa5KkALZwpEK5DEc6VrWhrwdokMdc/4T0
kQVBkYHvbxO+6EAb3eXD8TYQ/jexpuljL5R+TtJfQeRuXdWW39OFrf/Hy7i4
HhfXK+0yUfWmQdFj9Z2HwnGkeXL50J8SKohOzlhfLS2EEzIe11Zt7UdDN7c3
x4az4YWCQZCmRSG0Fv819BrrQ9HDSTMfytnQ9+OM1eLkj5D394fgOmM2usuj
mDi1sB96owNuqyV1Qdy2JMU1Yjj6S+++sFmQMq9u8o72HgPeH2Hdr0Wmnqps
VLFUb+zzxn6IPTe0590YGbabyVRaF+NoU6Kasr8kHbr3eeLVb5mQU18x1kX4
k22vHJ1EYkiwuvLUMqooDZ7GL5UJvIGjTuonPjWhdtAVGT/HE94MlwsT45cQ
OTqa30pcLoMJrDk8Z7k8c8n0Ypt8Fjikq1MeM9nIxP5VR1xIG8zYekurxTJB
RDWq0iIcQwvyKuxkCkhwWyL/9pWnZOgNlV59JgtH9uhBqXY4HXSVy/VOhLFg
6sWbf/Vf2Wg8h7Pa+XUbjMi6PS+50QseWmNLLrizkc9evy/rf7fC8Dy4X+vr
k7PDHWB8806kOvG/Bi1bgKnfDusvDS2dWVAImwyYmY71fSjktPSmbjIb+n8u
fWqjXQAxSplPpG70IVy+cNH2RRgUx0zEqE9Xw+D5gKUZf0YQ02T9/TSffrj+
pEo+XrILDpxflrRUDkcGvz40/rtMmVe3LMVXB2j11SDCqaan9I+g81qgF3m3
H0ruhk3cDSTDy87kh8OphP/nVQv5V0qH1YbJ6zboM+ENfdOpS7EYkls4nWwz
QQLqfWN2W2wH7OfXOjxB/C/3cwZ3Lt1vhxMKv3sz3jSB0Q9+tdXfMNS1KHZH
3bGe//O04fLcyeW58uvjzF2nWaCWZ7JGb5o45096yoeS2iAKSy5xE2aCUPvH
PWaPMRRqdXc8V4QMheMHfvkT52gA06aw9BGOyNQPW1PXdUIM1UKA15gFuTbK
A/oCGOo4IhPDXkoC150rFE+Y9xL+ff3a3dfY6DPHpljfuA2Oz4c/SajjP9kB
I3+qN/EQ/4saaKli/aEdhrXLm0uy8qFq1EvohmsfGjgTqiIqh4HYFT6ni8N5
IKP0Kfy9fB/ybEyyQ/sxKBce0ec9Ug3brPzCl5eMIL81EQystR+M+t5e6I3v
hJWOlUL/lHA0PJkzEc+hzKubscrvavct1VAX97OwMXEE2WbEPOye7AdhW/Pg
JF4ytIhlbr55H0c2s9navoc64d3DtCn+N8T9U7AtXDMNQysmjnldsCXDCiv9
mz/FOyAtamHgmQgc1a+rzjNb1QE6JsKh+6YagZncluhfj6Ev24HRIcSC3fPw
NF6umK2txgJBsWMuooSPio5lnHLcSILvEZ8XSt3thtyCJQ6uORha14m/XXOO
DG4NOyful5PAjzntIE68t+9QwyStuhMOlOqIpy5igdnKTSW4ArFet27JHXEh
QXB8pf6QcC+8f2ViejGZjZKr83Zp3muDi3PwJ1xc7XXdRa2xdqAXncI7iXNe
cYvlOn2zDiJHFV71OJYHn0YCRV//7UWZRV3Jhz0x2KeU/kAgOxdyb0lZnnvb
i3zEPltdvo9B0ndbacuaDxA+bZ9+03sETbN5hCo1ByDaKyiVd1UnpE9R7wpr
EH4p32tTrysVtOfo1sLVLV/BBjvy+AP8Ehg4Jn6AWPfywoo3dgPgf4U9Vh9L
goh7gZpGhH/YcrjrYcJUJ5T2Ckqd0O8GiYHHB8VeY0hU1XHn+VIypDReVlFP
aocWPZc83uvE/cjDWBvyrAOe8D/V/aDdCDBykbSOyMVH4+1a7b1Y8/J0+iu5
2q2vB4JsxRo3K2Ooak/ulpVXSFDoLH7aWKQb9rBi2FlErle6c936WDsZfquI
rK/ZSwK5Tbank/xwxLid87X0eBfYtcfExsX0wKrG1qsjOsQ9a9ZonfOaBD8u
c1o0KSxY05MGiqWE37g9o7K4qw2m5uCqXNx2xblBn/Pt0PVCpb6F0EFpne3y
8JYOeGmutEBPKRfqv98/9SuxFyX/yNiPZWOwbtVC2R3BL+HmgukfcKQXqYhI
SDwlY1CYlW4xovEBWlfm7NgmP4Jk3yxpF3gwAE8UbTyxJ3Sgv5W5aaaDo3X9
ij+a2qmQPEc3F65uQQf64OGSDxA0brD66WIi72sonxEvGYDVA7LGPOtJIOH8
lbTFG0fFU5Qetwdd4E5+ck7nHQOO5v8OU67BUIm6Q52uNAXKHFV8PNe3Q+Ot
1ttVl3F0zbBXjE+JBhmL/Va1X2kAu7buSLOzGKJF9ni2VrPm5dlAeqbn5tUD
X/BWh8SdGDKtcfuRRSaB6ouweNYDBnQ+PXhRhdhvosmRTif0KXBdR339eHcb
/Ppi1XTUCUfvN/iqr1nAgGN58UqYZA9o8FVLG+zD0FujhLp6ITKkqXw2PpDI
glmbLPKBL2wUaP1I9yXx/abOwYO4uGnKws8Js1Qo5khJTVzE0assCUMJexrY
bnbJ9/yXA77XNB866/eiBLZcAsbGIP+9tb+5Uw6IWZy7o/GXhY4dO6hoJ4qD
XFmvVEbae1jc9PGFAXUYvbnqP0iaGIB7i4rtIjfQ4dBl79Kq7cR+CPVYuNei
HdLn6Ebn6jZ8QdKt/9J7EL+6Pj6mchjJjNxxHBYZBJc9ek7Kb9rA04eCjtji
6KIP8szdyoConnHDs8YMsN3LqxvehqGnMUAqD6FAht7wrohCKjg2Hf6ZF4Cj
f/4HV30soMFAYrnq0YZ6kOh3VJ7ejSHvX2kctdW98/K8EHNAx+crE/7cNv/o
aoMhKsfaX0CVDD4ZSRf7ZRhwZTRYYIqKIc2h26UbnlLAfP8fj+nzbTD5NaTb
bzeOhFZfaxp9wgCFiO20Pc+ZoLUvWnLqKIaKA4uMC93JIMBedA6Os8CY/rOa
b5CNxLddNpcOIMHSOfhKLm7xiXd3djQVKI6mN6z8Cf+5uCWYzqTBJb/k95sG
s8EVf6M+3sVCLOts6UhFHNRdfv++YJYNwlbVj6yesZByeI9knQUO4a8rmM6r
30NqUk9yTeQwIvPq5wjvH4TRxtaBFkInqVizXcE7cZR/T8jE+H079M/RzYer
28vpKV4ifkJa+xa2oN8wap0lt2zxGQQ/8W+jKgfa4OYXacMefRwJ8HcRXyQD
/CWs1wk2d8HpLCMFjW4MqTqZ2g33U4Dlbi16AajwZ8pBa/gUjoZOSRml6dAh
Ns/JasvqemC79NTuF8PQMvqkrCeRh+fjORTrXRUUzATKH8mw++4YMn540Vct
jAxRFtduGqV3wUrStY0SvRjS0jrhcZePCpzLR3RbhNsg64tpWj9xDzbI1S/g
394NeOPtsvRNTDhotrhGxg9DFu1TabZvyeB9+l7FrBILtvt8rTL9zUZtCzYe
svhIgpNzcBIX56md7omQoYKLgpbKjBeOXiqbzJZ60uGq4bOQVloWGLlsDS68
ykLP/QS8J1xwCP6wc8cK4yxQ8BIJSjFhoWXxj4+vDcMBizzEadZAIKdmYjpq
MIzCZhdvrEofBFKq8PX8HTQolrQuvwc4+hb6EMvb1gH3uLqNzNHt15bzN/SG
3kH8x5iwreuH0QOXkTR29SDQbFtiOXgrRPhnaH2WJ/KRhjYP+HbDrwuHds3Y
d4GnYeMFg2EMLWwXO1m2lwoMmTt5Km0UiPl7YCbIFUfalUdkYxEd3G8Jr1pz
7jNwZsykjvaxEToRJ+Te2DsvT/GQ+2nhi5lgPhTUqBWAoSaDd1+WMcjwTq+s
8od6FzzNFRhMxDDkpetx94E3FdRjJt86vmwFjkJ89edlOKqWOqxl09ENVxKM
1vJWEHklrF6x6ipG7P8UVrYEBWjSL6Vk+3uAHG7gtE4YQ4pKjzy0V5D/g2/k
4tvvmZxMoWeCcnJDWuYGFjJagIb2x+OgGuMycWJfJny6aB0JnT3I88HTzffK
cHBz3+egqfUOWDn3+agTQ0jqbNzbrplBcOXqMD5Hh6LR6Qt++FtQmdkmtZ42
hFS7j0xJSQ1BjrtM4fHIVtCRCpRXJvLp+SYRD6ulhC/v1HON9KDAP7fxkDOH
cPTruHPlOdNOOCXqWczbUgfb1QzO7ypko7hlFeqrFfogUGTlk5VNHVA24S0v
SOisvsfYPeBlB+SJphdNvusE97Dlg/cmCd8oeeeqahsVsjfzDIWZt0KUlXyo
xgSGDgezeQr9mWDx4GDLob3doFgY+Jd1hzjfhNIFsv0oMLtCm90T0APRzy9K
PpMnzrFrvvHk48Q5plA1e8iIAipODyuDDhDrErPH2SuwEyrNCq2xoQyYFHzg
l5XUgxq/JNyrq8fBv40kRT6WAY1WMjbpm3vQTwMh3W1sHAbzV1mmwFvoZ42e
fZI+hOwzX/w+YzUE62KZb6acO6BqC+n39A4c3dri4xGlQAOfeXSQMIiojZuu
guefkh7MRg+hvQvHviHvIfhkV3LxlHIrdAQGbxEbwdCo0nCZdxoTZtLPMUvO
dwKvCkcq8weG9NLVLy2VbIcstd4foX/IkHf1eyDDDEcbrjUWabd0gmt2aHW5
Wh10Nfe9E77CRoluy12uB/TNyxNTdHwavb4bJPksDv8hcpbTceOhL/coUFks
/HaTVSdsTQt24pnG0Lmcxfl7dNshgN+8wZ/WAiqivi1byBgK0ybvXLKsB5b9
aht80smA8dv1lQ8SCX+yeo+1aSMFJEuM9+4S6CHWocL6kwaGGqcUV8kUkf+D
N3HxHQ6nRtd3kUHbW8vI0whHv/3i94rOdkJkapbT8gUZcMRO54vXVybiRIgP
RvzGYUxXarI4NB0iOjwcvSKYqF5Ls0xfahRKCi27qm2roGuwxcXVcQj555i4
Xnk2BKPe2CWYbAepqdp9J/Vw5Py6ZIjxiAbH59FN0FtY0EGkCk4skZNhwhCK
mQor7a8YAlNdq7qfj1rgeLu29iPCF72SXrspaGcPXNm6YNprcSc4qTk9W/0H
Q5tWpPv7h7SDp4FG0exDMkRbeSs3E++dVBhTqT3UBR+jLM2lH34CZ7VUD4YZ
G11Zu+h99Oe+eXke1dy5I7iUAd/sfj3RJvwkr04n5wlGgRHX5xMJvXRo28O7
bOYvhqwmn5XSn7aD6N2xw83yLbDMpOpAWzGGPHg6F0BGD0R1yYq0+TJA+odF
dG86hsLl0n8FK1KBdPrWT3jGBB7BMYOUXYTfjjqrvmgh5T84m4ubW1KZ/gFk
GNvmbdqtiSNKZkBOSEQXbKsb+H1mfTqsu36y8tZeJsoTqKXkK42C4lnW+NmX
aVB8zIXvam83eruef1+N8SgoTfaUHPKrBJEp5Zady4bQc3N+AwHOEIjtrC7s
v9UOej+mMjy0cFT457SSszAdqufRrQ+XijunVgmPpjx5ur8NIs1MO75o/mHY
rxxlMN37BVL0rFBtNobuV5/SPtLRAxRObpZZIh1WPzwms3YBji6I6U2aD7VD
4qjkka8aZGgzYPlbKePIfvcJhgCzCziLdR8t/FcLzvGbD74XY6MdKcmft0j3
z8tzb9+nIBtzBrza0Xp0GfHeJbnnFv0zocL7oxU71ALpsPngNudbPDhi3jx7
lLakA55TbcgTvl9gXfx3R+U4DOnkG7bJybEgUyn3DpuXAV4X4y3aCjB0wO2e
u/51KhxRG5Sj6zAhc+8ER80aQ2LeiepRdpT/4OJcPFb5buMW4j75SQsNw9YS
ebwu1y9ZiAG9tWI9AbZpkG76TOJvRjda9+F+rqfdKEjImydcYqVC7gLBB4xd
3ejEDvvp76dHobhcQ0v0YQWwZl0mLT4MosOHojxltw+D+sK/DmSFdpi0ebBp
ZjOONJ5QSmbC6TA+j27QdWJfyqEKuO4TTRLLGkTtKiEb3tkSz4n2ki9X/wK4
wwa+glsYSoilm13TIXynunWDmTodFjXVZFTz4qhVPqXrhmUHlGriO41bSTD9
5WuznySOHGryJL67M6ByCa+yjW8tmPcMfW3pHkHLVJrU3bz75+UZUEUJWMbq
AsuCJW5RRRgqurQjduQ5FRZkRJ7uFaJDzPoss5KFOAr4ExWn7dcBPyZP9Fai
ZjDoeD2+h8gLDk3L3C56s2CxvIYRK6ELauOXxPmWY8jax1H4MpMKiaKOPkvb
uiEEt7UMc8ZQoKvY1RcZFEjg4lfm4P2qPiqmr0ggf1rQNkmEOOefwAb7OAZQ
H59pjb2dCg3Z2z6X8XejTquT4q1XRkHoG9Vvj1wqfJfUfXY2g4FekQvlx+NH
4eyum3YvP7yBZw4UjecBg2iN5cSaj+HDwHNhsOBfFRVONAknblPEEaZg5Zo9
Q4eKeXRTuNLyOTbiDSzVjbFLODKIwvWfltxIHgZLLe0HIuHNEPEm9ZurJ3Ee
tg7L51xngYFHi+LRz4QfHrb4x8+Ho2gzEX3psg54fOftRrYfCcrKFjjtJPDH
XeI1vjgDRKbrng701IDKvxEB+cwRRNcpHFF40z8vT/N2X760oC4wn1i9sawC
Q1NZAxIHiNwYLPHKND2dBsr3t56OJJ4v7FfnO0LrgPdeSjf5JZrhIyOvUc8S
Q84an14qvGZBZ3tkfd7WLlgnzyxACEMfmNRI7e3t4La1RbjZpxvSplNWPjuJ
Ick64ft7pin/waW4+Inh5KkcGxJoX/Ms/0Oc/2iZ/VjSqm5ofxB5e3vLC7AN
W6GfdZqB+Hz2LhNKH4X96zOR5YkXkKLifWPTcgYSTFsY3lI1Cv2kgaKeqXIo
dorQtFMZRGKat2i8TcMg+mNIw8mJCrQ8Hwv5NTgqPl1w0N6/E5bPo9vkqd0G
S6vKIVq6Oea66CASPpnhz+kbhgdeNfysria4r223dYLITe0oyFy2mQX4mbaQ
K6402Os8E/GP2OeLLDYZTcvRwKvor8cXMRKoJpv31nAwdHBRqK/H2W4Y3sbM
STxUA3WyBYyaMyOouaxEyGPxwLw8s5ap5giLdsHVQQFW8gcMXXr6VFPtcDss
fBQSfsaQBl82aq5YQaxXbnyaWt8uwp8sP7mk1K8JbhVYuIqqYEjokMcn4X8s
OLdz7yXz5k4ovJ+e3VqLIcFBt/Bjj9vhnOMITY6/G0rElNrvnMfQ0BH1r6f3
Uf+DD3PxkzVrs/f+aIPGwluuMoTvikitu+PwtBtKlQfiJ6RfgDuf4cdKWhei
3an4rtcwCvflrtXOxqYC3+zbkFP6DHSarSB/9tUo+Gx4cc9boxx2rXUcvNAz
gDY+/yLBFhkBZ4ve5xRiX1jz7N39aQWOXjx34Ps50glD8+h2RVhl67rccqht
TQr0HRxALRG2GQ1LR2Bmy27VRbpNhJ/slj4pi6GOIIYoRaIXnpbJPUya7YA0
voPGhcR5GBxCtZeKpMHsUHBDf3kbbNy6mynSiaG1vi8N6n90w+24aJfOFbVw
Y3lTQKD7CKpN+HZmIf/AvDyP4ceLTXI7QcWy/rJxHYY2bNBPuVjeDuYnmENa
3R2gX9e01oF4b+SHLaZSL2mgriR67NnLJqgTeJa7cgWGFMom1VLW9AJcFr+W
f7ITFosM7s5uwNC9nWK1X6faIUGtZuffdAbsa7L8ZhtCfI87bdTFn1H/gx/l
4hoSQoZ7SG1QPKC4S4/wn6PqhpIGC5gQsHNLlat3GoSni8ibH2Ugh3yB3wuy
RiE4pL7OMPsNKPyqekjHBtBWD1rF2IIREHuSHO6vTQW/bTmpgv8wVMZusM7i
75pXn+Nhdl7m/U1gVb/71BNBDH3Vtat+otAL1lb8JbN/O+BLxUFBM8Kfj4g/
UxJ4T4PSR2YronlJ0NDB8+g+sT9F7qyhKosz530vVZrtkUDkkmufmZsOEL8/
ZnGi+u+/diiz0rDWWUYD6dAPb0O/EvokJjn6NtDg7I3nQc53OyFgfHqJaiWG
DNMO638W64BG1TxbgQ8MkJW/fsyUuI8e/xx+/7eSOi/+ZeFz5o0lDWjhxWfs
RcochBj7zOSVK+Dc5rQLefQW1KyhcTu4YxxtlGGbel4vBz5Z6/RLURQkdMuk
zUFpHF33+tVsL1QOpLumTik/6Gj3/azQDskxNLP5uq2HRDmIPQoIJYsyUVbt
YTnrlaOoSH8iJfZYOfyS3y/i51yJdkz4qskUctDJSMuA2p5SuBU1amge9wZ9
S3d8nFDKQavqrtEaXpXCuoZhl+zOYrR6WK1gXy0HbcssWLVwTxmk9OfZezln
IjczMwtjEgdtONS/cfXhcni0TOHitgVmyItBeRVG5aBrpnh40dIKUF5boVVw
exSCmrroZ7EudETP6O0BgXf/76H4O6eHInSz4KIIo1Hos7uwPfsOA7XENOKC
wdXwPUw222Ech83L/znsyCLu3ybV7acezt83MXnm2nOZfAoctbe+u/Aojn4s
LLj1eJw+by6mJske1hnshK8eqnylxHkbv2bCZnUhFVZWxEneedAN5Z8X37IL
J86B/esfJ237b/4t4uZfnhuGP9tiG1CSvnOuuwIHyeUfvmWzuwI83FZGVZan
oiFDRfEyk3F02/J71JIEChym62oe/1uEKpYvKZpw4KAjf/vNMofq4MByzYM8
7Cp09Y+ozPkrHBT5uDcq5cEHCByXN/ogVoNwYd2vq905iJ9DpQtZvAXf10t5
7UXbkLNReENIwThifzt3Rfh9OZQKvP7acYmK9O+S4pr/jiH+fEuXtarlELBB
lzob0Yli9RZkHPw5iowvSIYekS2HVNoF94uCLFR9UFkEDyf8uWO0PI99OWx8
NHsnYrYC2T4UnnR8xUEmSqS+DX2lMJxYZhyUmYqad8oerv89jm5t3+/TVtAC
h3/tGhvReYWMf2tlKDziIO+Ra8Hs69Xw+qdeykd2KbIUnJk6m8dBUtu3jnyS
rILIP5sqas0qUIUKv4VJAQcV6FTJPDxeDh78emcryeVI8XzHFdU3xHOkxNyS
n5WCxq4dgr0vi9Fo0mMN3k8cpOq9JxOplUGw3tHLKCkT/S3XvbKH2J8mIaqy
DhblIGnqiUJ+XkSRe5dbybVzkC3v1Gfx5jfwkdtTc2hOT00Ht39nH7d/5wC3
f+c1t2fnGrdnx53bs1PN7dPZw+3Tceb26dRze3OsuL05vtzenMXcvpvROX03
R7i9No7cXptObq8ND7e/RnJOf001t6dGZ05PTSd3LnePO5fT487lLnLnjYbc
eeML7rxxkDtXlOXOFSO4c8Vo7vxwmDs/XM6dH3Zw54Th3DlhHndO2DJnvveD
O9+rnDPH8+HO8YLnzOv6uPO6du5cjsKdy6lw53L/AxKAXH4=
     "]], {}, {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2\\)]\\)\"", FontFamily -> 
      "Times New Roman", FontSize -> 20.5, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\[Gamma]\"", FontFamily -> "Times New Roman", FontSize -> 20.5, 
      StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(J\\), \
\\(P\\)]\\)(\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\))\"", FontFamily -> 
      "Times New Roman", FontSize -> 20.5, StripOnInput -> False], 
     TraditionalForm]},
  AxesStyle->Directive[
    GrayLevel[0], 20.5, FontFamily -> "Times New Roman"],
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->Large,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{0.01, 1.8}, {0.01, 0.5}, Full},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7554486060127301`, -2.6980566559986725`, 1.043499148379728},
  ViewVertical->{-0.16817999782097487`, 0.2584861561725668, 
   0.95126252706604}]], "Output",
 CellChangeTimes->{3.545825155715281*^9, 3.8309996916521387`*^9, 
  3.831002657723015*^9, 3.8310030433171787`*^9, 3.831003899206377*^9, 
  3.8323052372373915`*^9},
 CellLabel->"Out[141]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvddzHEnX5tdvOzR8o+HR3sE7uqH33oPeAgQdQIDee++9J4fDGXK8eb/d
0OrbVawUq9hXsVJIu5L+h7lVhC50oQhdKEKRep6TWdXVYIOcDQkRp7q7uhpd
lXmeX56TmZW9evepA/sP7z41snd3YumJ3ccOjOw9mVhy9AR2ef7mcrn/tcv1
tzsJlxfPlctVePNfuVz/X3a0cuNX1su7Y99yeZTL8ecpsE9e3HI8bxvvoPuO
5+3jHXTP8bxBnpZuNa9PwvbDms3xPbCbZv9b2GruDIz3j53XVq8Pumlex/jK
rfctMP/4nx3Xe9O8ruOrovG+4I7jeZ0+KGZeyz/zyrectJ/pb6h0/h9vgf89
yI1UkU8+dtM+r6Iec+FW/d00hVBpn0flp+e0wJUrTesLrZJ0OS56mvO4Qhc9
qE/ZukarIP35Z6kv0z8tdzJyFP+r9Q2uik/PssflKDlfgW/XZ+n7Z3Ncncvx
PwoV4245Ge4q0+8WKnh62gJrn3y87NNTc16wdWqsBcstrVOz3Nb6h8p+T05j
r/2sJne61mXog0sdz43LWtcbc5w1y3Jr/pfn17K4tpcv94390rzPjvel1j/b
6vhS+tk/j/lSq2QoUtdooa+yP/HJV2mtS0GO/beV1vUW+KoFBb/KKqXPflWd
+Sr5F8V6X7PL4U65f1ut381zyll6XwKbebDE8PCw6391fEtj/mfkPxo48RtP
WqeX+5aQvPZWmm+wSny67C7iFw3CPpq3VHl5udq2bdvVoaEh1//i+OKm3Bfb
X2L0+9blcLHcF1fJax/L1MIJT0AUMkXeK7Yuk9/+D9if5vmg+WeD+/btc3n+
sX///v/ZcSrP7a/QEpcy54ntt9/QlWWf1MT8i/2HuVA+XjWnYDzQz6/8yIvn
e3j8E6/n7d279z8WPIFyl/1ltnjNCZx05dgkZ4eKsk6g0PUqfJku0CLnOfCP
38+3pVL+p8+ciM/SFAuctRzLfXne1f9pHu2rt9pgx7daFMo7G9Oe0S9ZLTTX
/1jwjEzd3HQWQ2f+mVhOZxWDnInVKHzpTAwxnHXk+h8+dyY9LgeU2nJnctX1
aWXImZToz3380pmYfXm19N87zuSpnMlN63R0aXicTaxpVTw2j/gX+wuFVVfg
dPx6X14V/Yexp6OBwLaSorF1OaYd8uRc2f7TIBBXnjdO6fG9xlyhyBnIh/S+
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
4WRj5rgYh8q7L3G2+Reuwp0c8yzHKxnXqXwS6Xekd6hMzW0YHKpGvKXmHtRW
cx811lzzgM/EmqvxWH2fB1Tfc9P56FN0w6o74lsttReMso+qTNUNlQnegE8F
r8Olgtf47CohE7wKmV+h0bsqSaR05WW6GE1ChEvcXKTvXRBlX0A0RjtPP7L8
ia/pU+Xn6FNsjOBYCDjKTqt01WHVntioG3cgpzW8k/uZIJadcouP4QJr9+lm
Jr7BJftK6U1oiUpPCLyO039MFe8WNyqlG5Ubl+nM6GwE7oSPw4F88kaR+FcL
QhYeoCE+U4PI4Sh4bqOswewL+nKRRqE26cb47mEGaP7CDaWfIKeygHdEZVus
myAgJ113S2Xq4CH1d/EIqwdj6uEMdQ/oDPUPsKl76JbXCDhrH6JsH9DEl+7T
S2ru0WlgIFL1HVTIMfnPmWr85xCi1EwIAWomdIPRBz2n6rpl9Jtr4jbiPFds
5xG3AXgqL7FboPIi/ERbc/0BnUXiEb7DJqrivGQC5+ktNJwYttx1Fh/OhI7g
jPoRyCzSsSlcJ419yfIz4jJnfOI9HvEr+hPMVUxfgp+UMcgtlc0JOcNR/T/i
6+lFpSdCKlF6HBwoZSYDD+Ez8Q8etWzBTrqOe4zraOTMlEe+po9V8Bi38RWy
yWKY5T81/sX2JINCbdj18f3H3Kpa8L7gr/KdyJlN/iOZTP5j0aJF1nxUdijY
TqS7k3zWQJVlcruCPj4gPYFtqf0q3XBLpRvvwOBcjfdg92EPoJPGhwwIGx+p
bINtdLlH3F3/kH5njE5YS2Rla+FntXdVR2an6ulYRq6xUau5Ldtb2ueqbzEm
qr5JfwvdpOdZ5tZOl66i01VdZdNWdUU7njbW8WUcELxEZ28Y1ciLDNKnKi9y
g5QJfqfdzodvOQqP2iTY6squxqHsAU9VnKUPYpMsP1tEV3PTreAy5WwKy06L
f5XSv9gXX3YCpzFqOR9fa++CS5WeCNLFqLLa3byDT7yqLb7ediOSqKVpW504
oYNcwQMcziw9BqSVHvUZN2Ir5TJzxQq1UtccbvQXZhaavqa/eD94ob4rf17f
lSt3I6eeP1UxdkT9T2seVW/XVNXZistvRePdOl31dH2lzH0/9EQNzRIdWPXO
VqkwnDB8GwZHDN+DwQnDD1QmAgsDb5kwXS/8mLdKPsazRm4aHrPgxTEfEoXG
7gskezuXwQ37PaQmPa3ujsrUWoaMbRyn5OYG3CxEPwxd40bgV3VV+2KVtJzY
0jcvA66nANNZqj25BS4VROOZCl4UmlykM+KfHUcisFgcsD25Ga91GCRMrAQP
K8TEKRmzwTVVUhvDJzpqsoIxG7kocVXdfr5RfiZAb4V3lgsITxWJt/K4Dea4
vcJPhmhlJwCwshMAYRnDMfgrTjA4Ij5LX100f43asGGDbm9rd7N7tvR4lfFY
OK8J+XazU670WBE9ls5agpDKo0MqMwU6r828kuesX5zTaZz1i2sHjDNd1jn6
7LwF3b7bWv+DGouJg85ZkL1d01VHahHwsBwFt0Ylq9arrtbZqjmyWDX6N6r6
onWqrmiNqi1arhrKFqqm0Cx49GT23ml8++VftWaHVCoKT47eVqnYXZWOIVRL
xx4wB489VJnYI9hjlYk+lsds9InKRp7i8ambT+jgTzm61/SEXm4M3t30kDAm
lXFGVzXz4qjYTMN9erZxeLE6fCMc3k0/dxtHr71lOXrNTZWuYVdEuuYG8JOu
vgG77rBrLvF6j/H6bO1pSWO7mtfSN6suM+aruqRaY7u1V2vPp/cGkY2kghfE
rS/QwW0nPy+eDp+tPOcWv2brMaSdDY/YU0Qf53un/XTqUjo1v71urz5Ku3L5
SQ/92QsvPllCf+Y4D7jcEt4uOYod7yXWq9mT9qtVi0ZzuK0aYadhGTMU+Daf
GW5rJ6cSJCaMS0wo++Dbf1pOV6hNv5zn31+cqav9+y8tSVFwQkpx7hTsaeB6
Wrh37FxMNx3aVa06kksQrK9XMd8+FfXthe1WEf+gDOeG/f0qVqYndyVCq7SL
B+DigZWqJrBEhQLzVU35DNXeKm5uZm+UiJ9ns8dUKgEfT9yB3YPdhz1Q6cRD
2CMY6JxJPOHmKT00/kxlaTEx+Hn0Gf08+tRoQFsm8piIhz0i71Vr8gwahzn4
L02MRDJGAmIND8T93fR6bujxdXcIe1KdQXO6libOXnvTIx7PbZ6nY4uYpR5O
3gEnb+mDq52Gc+9hp3PPLIYYTaMqFbosru+l68PTqy6Ku/vo7vT580x84O/w
b9uyDcMmNBlgBFFpYE4/F577uC2mx/uMs6dDh3RGlJCMqJydeeX083IZpwkZ
P8+uNMHpQvFz+D/zaGjBr2Z0Hxafxys5VrcCe0j9E/XG96EDZ+xaRj8P+qeN
zX3ygo5LeX7+xU50k/IWWOjki4tkjDdRPXdXw2okJNvdKu4bctXArfeLa8f8
cG8/3Ntv3LsI7l3Ur5qKdqhEdZ/q7Z6qGgIbjHuvUjXFS1V18UJVVTxbVRZP
UyYy1idermOSCbNVMnUbBg8Xg5enH8AewuDhqccqnaY9wfOnDB1Sz0jZ5DPY
c5VNPmf+lXhO/4o/194vBpePyfGxJ+w5gvtnxB6rjpZBNCrLRQaZ8GN+PvyI
bDJNAFXgpvdzI+BntN5Au0vDt9cz2k7XI46qozGkwdYjOuD2BmVAEUgTcJ2L
PyAR1KnmLDgN5zdVX4WbVF/x0u/xMiQuf4nOT8JXCeGDF1QyeJ5GXw2eF2Ud
U93ti1Rn82rZR9ZXnqMyzgLqlYJ3xiwVkstVH8LBC2kiBQogUXEKzi7GV+Xs
ukyFDuKsduS5PV775G0edEJ7/WJRQfkJaTT0MCbUwThG9lERQnxowGoFrPic
r/zcVhk5NBRvtFO5QmHNBe3S/ynn+p8dODRyGG+1HSfuZQ0mpHXy1aKFsTeY
5wthB4TgPUA1DLvqqAmoAebfLxalKoqgiiKoosioItAP26maAkBJ6yzVlp6r
6ov7VF3xaqhiuaouWaSqSuaqypIZKhGbzKhen39A+iO6e5eqRBaqyEARmbsq
mb0PgyqyCM5T2cd0jSwEkX0Ke0Yfyzynn2aeq0z6BewlZPISfpp6wd3QiaWX
TOKZbiz80lhkIBNaT/cK1dG6m2Jho/GEoYNpKDKRRzQP0wP+MyYLTfcto0Tu
Mf9rvGvJA4bcosEoRITBzU2qsOkcWoClIgZpCVr7IBa0ErVsJVI1iIdSNcxG
IQ5qwzIKhZ1m0kKELtFcIhnuuii4vUjJGNkkzfa8CAWmxVNEtSCGD55ljMRg
qPIMXlaeZpZZcRrOv0o8NV19WGIkbk65qRc2DFBSS2RnTiFQFV/zXbh1xUm3
0cqM7iPQyUF5Ze2jvCgpfJizdMtPUDAcDmDTopuP3dwjmiky+oiU7FHev1Vc
degjLyw6r33cMbmi0L0T5Tmp2NH++Ks+fXZ8jn/Wik9j5jZ/ciOuhJNBNAve
EWrHA9UccHE7rOJ+MRROzC+tSxE0VGQ0FNgjwxSRADU0oJqKoaHi7aqxZKu0
LrGaFaq2ZI2qKVkBDSF4Kp2vgqUzVUXpVNXdLRmvDt+qZMC/rQsV1HJHJVug
oZZ7MOio9SHsEeyxSrU+UamWp3h8ptIttOewFyrdDBE1v2Q7k30JF8+8FHW9
MOoSo7rY6ljqak7f0pFIlqxGG0QNUV4x2hMtLTQ//Ej0kZHVQ21haXDCDzyU
FL+q6Z7pIrrL7iK3yAlpRMNtNFUXVUd2pyTzHdkd1H49cumezqUUmYRedddF
VKlatj4pSMtLaVFZllFm7FvU8ros6mKLxHao+pJDWWhRQhdhF8Q6m9dI+wV9
+SkvCKRKBMXmJyihV/AMVUWTcIwJdStUIj7ewPswKDc/JcbXtuSMmkpFTmyi
TqoZPaIjdt5UUEM8RNqRCs5PxLZWGh0vdSP6YeEjHKsz0kqFRlSydoMqCdT8
I6egvIDrnPZpM/ls7H0yZnr2FxcmC5v/7PrCEIVptPLWTHNMdC8oI94cyxsB
5M7uoLmzO7LGpfXkhY4OWHqCmoYhqSJbUgFIKrAXUqKkdqtwMSRVDEmVQFIl
OyCpbSpeu1r+ZV1pn6otXaWqS5dCUgtVsGyOqiibprIZSd+1pExK0onmve0O
DHISe6CS7ZBU+2PYExjS61T7MwYV7c9Vqg1qanuprfWVyrS+gpO3vKKTN6OV
an5lHimzrFbcCyO1lxRF+gVdqPkCIsW50p65qTi2Yc+opMRT04Y90YZgjyHf
Yw9F5qa6XGWmc4t2XyzdRLuHhu6y6mjuh3iW4XGn6Z1lk9UgyU3DLeqKpmUm
LdoNysxILVV3XbbXKDNLarVXvSIvbi9b8qKxWbtEWVRfFFm1p7aInLJNrEoI
DOoInfdSWZTXuYBpqoIc8ck27tdpS3KjmJWE4znDr0pk9IlKamdG71Hd/lSa
YM9tBNRmdVjV7+Ukv4qTZdic8JjQjYmP1URRU+zJKpdMBjrSGdEKmSI00zRb
odIJdPKEq3D0dkY7/f9jHNz1mdGZQE4YVy1h6IQ7MM4dIEv1rbRBBqheWRDK
h2YGlizVa190pJZSI/4DrkatjSLLELcFhiAMI5BiCEQMsVvxoAqXUCDIaEoh
kNJtqqF0C5ILlErbDFVbhoymbLkKlS2CQOZBINNVOCyxm7mEkKQ0rJl4512V
6IBKOqGQTjQ6nQ/w/JFKdD2GPVXJrmfYR4NEOl/AXqpUxyuVFnsNP2t/TUy2
vYa90o9QT7r1JRXkpoLcFA/l8gpX2tGxV/X0rJSWSkTjtlqn1DMT+z3VlpCc
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
SE7LJYBzTfJe3paCH+9LwaAZnhU2f0Vs/so6U/LXJin+FTXnLxoH9OFtFQv+
jJbzJ5jzR16UmfNHfCnm/NKKf7Kcn1sl5+k3krOiDga1gSCg84d24MMLtrN+
6rDl+bHTDuT5gUstlCfjDcRhXuMpI/01X7qmvQY6r3rtOKFPH+HhdteUcaIz
4E3q3ZuStWwp/BmEPEOSxIwMUR6eqqniDI+YGHW422yQp2omDI4abixyEvrZ
bQBOwPt4hC9MrxXjDfKS2EjKfn62ofWwnT60yk0H11FgD4+fbntFeJDXJi2v
+b7m19wXbemjMfrw4elr1QciPbbyL/SZ8rY+EvtVp2TMq5eEk1wgfvcaDe1J
rVd3vNXnv+EPnj+MP06fPed1of/cC95G/azVfEz7sQAaJkDaftwHmiWp3ogD
gXS2xldnRwd1tBZ5REdrCJf66Y/Taj/9jC7/9+sG6D4zW9ur56rt6dUGhOe/
Xbrcv7OHBiG63L9d95dp/eky4zXTgDq9DchSCH+O1Q8kpcY89/DbiPW8uhgt
iCs0us+ZBK1pIUEmq5hmbwHiqzTogzQqQMoQl2d0uGb88Q3YluhwrY4HD7jn
WPTgW1QhhAcPwCD+ggsfESIvRpyxASFDEBI161vxVPDE/ayCGZzt1pyTCDgU
MfueiVnEQXRLgJai2Moz5hkW3wIjLuTcVoD4cEvZ0Tbk7UA6deOsbcb3ugWN
D8QmKGPPW9gE2kM1UsHvf2y8OamPk/jRjUuWLPkvCxMlyQAT/ZuVGR8wqDif
LJPgzwDMtNW+epMwR0JCN0oIcAkJR72JADAuABMJYKIATDSAiQEwbgATa3CJ
SNguaZlVkpwxV0ITgUviQQn18L4CoUmH8Do4NPmwhKYcMUk9KqFpTANMYY5B
lWMqS2gmt4nRFusWmarKSb+D+3ls8mQedalTM2PKGT1lzHtVC0Aq9vESVbRH
9305fCMzXWuhKkyAb17m0AozGY8XoMoF+LJfMvPLJbJiP4C5wDLDh9oLHKfN
vEBl7ICcWfypQbO+AC3MeQ3ViS9fBYbmqDoUZy6j6uAxAo+nkVNWgM485oQP
neUzgc5CiduzHOisBzo7JP3qAcm+e1xymi9I7sC3kj/2vRS8uSuFPz+UghvH
JG/VIin5eyPSJKV/a1J4iv7Kr6SiXylO4a8tUvCXFsn7My+Oyf1TC96W+6dW
CKShQqf3UqE2lh8u0mT9DHb+0OEXcPMTw0WazB+5LpvxI8z5odub9B964A/T
C37wXJL2GuKkveojO7xaM3Uc0iDZ9UslDdqkjEGasUEnyBlywhsykzQCXkZG
fNQM86kxcYjXgCQOjQKcUZsbBx54SWN8/xgyzqg6vOIkXrVBbXgCLpfUS/K5
yypO+sbtFAddB6J0vmLVeeVXddxtrxlWHfWl5bVpOabpcLMZH56rL89eUxqT
J2Tnsb75EX748PXEIdvUt4dskjEff6Ytx6wp26uJUzanPzVcN5tbz9Vgq+r4
ne8ZYG60M8U+P02zfs8hSTrfY3edAN8Nr1/Y2PjGbGdH/MuO+xBsWXFEUhdu
MWVnsrfo+AZtg7TGYZoOfNGmw6PQDvbbyFhlp88PmV41hms6LDq7e+iMCaXZ
2e2ThpWnyztj69SDbth3OsQzd59kFVfpt2QmvaLOELOBL48ITaCO2yLWtZqy
s5ZLOGtanXSG7/M2nSZGsWHTaVRinCTGoe1mkm2LuOdeMqbMvaiLODpgM7aY
cB1noZoCWVAN51wTz4zt1lU4q8Rde96v5tzHh83hw+x7XAeaRVfuatxV5mBP
NyyJmKn7ASxR7N1mbDQmKgsfuHZjWk3l995W47C6TVDGXvskmoDYd8zPPvIX
ZbL/Sc/2oIwftkLfMvWdSzWZ6QXiCp4jwZ/WS/DnKyU8tB5f8mnlAR/Bkw3w
ZJOERMAU1xYJidwqIVHbJCQapsTAE7efJ3FIPDcUpWVVsXHQEw+SpJ4k8xZp
oSnwJPWICS1JP2osyWgwlmRqY8k6zj2rOTAvt9Ry5KTeF9O69wsY0THYaT9E
zigiPOWFkuh1kSglVMTa+hXgsFuJrtdTDW0lsEPlQLSVkIrqC9xCVL5VGYEe
AcqHk3qAkFn649m2GF8oEFyrCZt5TOWIqdoCKvDbBM09hz4zj1deBs07Ax6Y
0wwUmXcqIESmz4ca86HGjOX4ZMuDGrUSs3EB1KiXxIZ1knIer0uv7pPsOw2S
03Re8vq/kfwX16Xg1S0p+sM9Kf7TI8mHGoXnd0vpP5qkDCmFHiV/Y/sv+Rte
ihX/jeOBwr+CDvCRTz58hPyZL+VyVy6W3MZvQEk7GGlD2mFIOwz5hQd7ZP/S
AU1gx8+dVrrgSJdkMj/hyzvzJ17sn/Ej+Pixx+QHBnwwbzgOSX/DE3/TXvch
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
Nu6gor5Sc77sVnhcDyAhwZzPr8AeePOZbQ98WZwvM1/exYjE/VTKzkfXyI7W
DNYHrB4A1EN+tGdHdt67rvaQnXfAzju9Sg+KHTsuSzcpCeqwfntDwq8YfaZu
Wifh+/dSHiak13lGHXIS6hYFMvXqLZnE4nTT3duQSBXi6gr1R4PSHTUI5YlK
TEk603RXk5KNEdTV5X6ocWc69KyL0NXrlaTkZw6gDjp9u9HgaLSuquhgm857
VcXY/ZZEEMlq3RmRBvYVyatt58XRSa8Vf8dNXhr1bKu5M+32w5qZbuqyCk9m
Cn75hork1sTkZ3vEchmUBlgoXdcKXVCtWWnkfjj0jO4a/hmXHoZLapIpDU5X
HJdC1p+RCcWrZWpcooSs484kyMTkdNmQxFUVypEM32TNMm3U2aQNBGls6XYF
KbjxBKJTJ2HSmaYOJzO1m8zUz+SlpjY7M1EkRqPGVsclhiR1aWT1ET3rgjWy
6rCZcFp6QU1Sj5wenmJUa0g6b7NEfqq5fKKKE0uVZzUkuTUhsXN32uSjMu3S
Wb26UzIuTXdhuZym3UmdadI9Wi/I6HnrjDbgaXTGOqtvt+i4RiTOOLFVpxNN
ljX6zyP/Fpwgl+dAChsce6ldn/1R/2Yaydkz9ZgvWzpNZC0dzPZGyDox1ueo
ccPRCCcBjZqcAo5KwFG5DJxeJQNn1sjAWXXyaGRfjlaCIpAUjxfyCU0ejlLA
USo4SgNH6agMkDQPHKVbHCWBo+zNvG+3dQvV3K1cAMCbE+VbVbBdT191jsfr
Z06MWITsk7PS9NaKdGWCcWiXxyFttilDbtXHTzUKmV9LhTTk8L2VSlUlOKrS
UnI0EZGjai0+Vs0e3ZjMYgmbm4q3trP4MGGqVpiqAVP1ZqsIU/VGfjPVgKkK
MFU1y7CFNVAtRgIq18KiyjWuKbiuRjVZBZcqGlFwqQIuVSzHV10qk55cKcmv
PSXzPn1Zsr87Ljk/nIRLZ2T+X87BpQsy/z9bJOPufpkNl6Ir8iTn7x2SA5uy
/7PD2OTVuHMy0Z87YFOHRJblydzTW9UnDUV/7IROnZLIok9qVBd86pK5rO8R
iL7Hy1LoxPP+vrWM+oZ12diEivqaLlEnf2SjbgoFoK6wmI6uQI1ZvzkjM9KS
VCetT64iHbGuASmw9DFHMCCFL2GI6jE8fQCU4BN5uq484QPgE6rX6PROL/t4
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
WfyU7tMmHj9v2QVCpAWLUDq3VK9XzU7niJKuhjhnL4SocXJT9Vl7IUTVGRYf
Q3pCIFz8oozPaMB4FW8OmEN0smKULojgjFPpKWsqSqkq0YUPS/S6+CShYrmM
VtzXe9zWSuvXsyopVTAH+od/Xiqv886dCSNLqnDvxwY4Ug3wqPQvj+XT7bsP
JDqs9eXqfoTxCzotPmvxhI1okOfp6gnqvBfaT9aNdp/Rh4dr52/K9Nkyblqi
hM+AZzPnSeDschkYXS8DY5eqZaGzEoxlibAsqRGOwbMUeJYKz9LhWcZaOAbL
MlFZ8CwblmValmXAsjwokL/ZOGbuFVu4lQmEji3apie/ahXrQglzFhGPieUB
D1xtxx1IZGyXbi7aRcusVRC7dfLJ094DYtV7lLI9MjZziYTNTeNbtYStTo2r
R6Kq38Xip+E6AFfAudRTw5eslPDoOBlaqUcgLSVxS5W4pSBu6Rar8A0txTdW
zwJx9SCuHsTVN8uw4lr95h+rgF+1JK52DReR14K4Wou4GhBXYxFXDeKqDXGh
c+LBXJaM2Vgnya/uRbJ6XrK/PSp5fzkjef9xTvJBXP7fWyT/H62S/99tkviC
0TTxhVWS+z+dMv+/QdXFbRK3vsJ0Bb06g/P+oxPUdRrm/orBAM65CR1+mVP+
1CXJLMOcG8ZxCxOMk3jWD3ydO/cHDDYADvHq+24Mb7HfW7ahIuBZZPdB9U3j
lRYnJLx1u3Zf3XqgW4+vbtdVN/zMwZtMZ73fa4q+3bioC/+m9V6EcXCNBd+m
bXnCHKvU06K++fn4dsvY1sc3N2i77b7XNeYmwCaT2trNvt3Wdq9M1V/mUrM9
T/admzKyPfxzsjmNwLGnDGmTK+pc5j67D3rt1b33YIpJK/TO7zTsgi7fO++1
fuLsbZWNm3U1WdmundR05UvbTV/a8PChG960cVEfdzeN3fSyrvcbsxGiHaBo
L+huXM1WPU5PMGTnecrGzU86FWVQQ13tA9uV+8DW7YGNAesyR3knYF0iax7Q
lj1PzDYTM7j2MFzrJGum1rM6NFkFNx5XzUKzylU3KOcy8cpfo9WwNVZrcHUb
Z6lanWylpK0kaU9bdxFholrOeallFzg5paesG9AUNSdlnXNS1lkD2IMyovQl
GT+vwdoH1SAjlrzI/brmfiGFe/AiWhdNlHODUxlPmijVgFV60paLpY0/vKga
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
E5/dvnWGM1zNb+zB/XnDbTX1f3Aw25LaA/deEKfHF8PpEzLDMcvcHyYf7Vcz
nCP8XD3Almvc4PTBPrUoLAvD4jXUdnPE9r0S1/fI1H+3Nlu5fR+2b2q2hwvb
43KqZSduaHa1Ed15kMOH201IyGezyaf7Ghcf+3zNHtyvugZ33onkgPuyHW6Z
/OOrzZeU3Xa/WeyGi/bsztfDA295PITZHptYbv8SdDPTNeckvnMqV3az3Mpv
jvuc3ivOsOGqymRtuOy07LQ97WQ5K158Cm/2yNpOD46NePvJJ59kvfX+IJer
Zpz1llON9RZT5t1+7qXC20+ejPCYtpwenZ0FvPOAdyF5zktTeC8A3ktKADfw
Xg68VwLvWOC9SuOdALwTEbyTgXeKE94ZjRruJr4+mW+XlDu8ns5r1XDbFNxy
YmORXLYCt59e0yF52z+xyCxPLAxTMbtEV2mXjFzMKmSDb9Fb8nU3dNW7efKr
zCw43lrN71XD71XTxU/m1eL713bay6tU7SHyKeTrzUbV8i9jVC1+VahRtTZ8
r1b+/rxNdFQ1SK/WpFeB9Kp6/KRW8skrwk8ahl8GH3cyqrzGFIhXTXoZSC/T
pJeW4bdQiiohr4IC0L5Skb5yOaJ4NkjPB+m5ivSCTJCeTp75KTRlYxFF9bXR
st9spVhE8Pi/HaJEHsP88wylfHYOBdY/v8CqU/yrhymyUR2NsuSCjV3Hrwmy
C+wwPe6TK8jhV5Tt2nXnHL7kj0flepml2vYlXDKTYdNZdjda9J4O4u+y6Sy7
m1MQ53EqZMfbxPW3bnLhbZCdr5aB6xHs+hu3KIzrdaD+Ov6uQ3Z86KdnJdKs
Q11i+2yVyJkHTbtK43/hJK7iuJPqCE/TZUbfR9PPq90nArsey0gO/22/obpJ
hfHhNO3OOfXg36l9oH0AYXyAw7iSfeQ9snMQD7t8htJam13HMt+JOl9K7TSn
H3f+Ij0DzSf0bFDP/w2TNG6gzl/yYGaorabfOZF5XsGucDc7ZB8psgfug+Sr
IHmp1WkeM8Cqq3mMm97x08+ya9GRsg/3KdVdZL/jJPtwLXuvlD2N72bId8ka
rhrPoyR/b5edpcDdv+MkjcurUY9VtJ8E7jd4LMOab5RHJDZcF9E5k/NMxqdH
8rfhOt6h86rhOquO4oEiaDez6maXLM5DlyZ+0Y6rEI66QH4VB9U+Du5xirbQ
6LrzXIxxrdwfU3uOLedS8xj2/Kw9hnP4Lj+Dj/Lo8tPMtxTj7ZGzgx6eEW9k
bT03dzmA+B6tD8vXvV/ym7oAKmdC5Vx6bH4BPRWZo1Re6KTyCq3yKqgcB5Xj
oXIiVE5ilRGrU60icuiClRBZX1/PV9nzTb+5LUrkfNkPX2Dj/fB8jq6cVIg4
vaZdSPbK005mVvCOexl3cDYulTkIT73Lux1hmofa/FLVw/+45quDsPhLcMxR
mr+tlv+vlh9Lq5M5SF0H+RSVo8uJ4B+8rp1f2lj/OpuSuLYVhWRdw3eajKpp
Mj2BHw4UV2uKq6wUHI9ucWEUU4xCsq4AwxVV5FHOVUkeoNijrBxVRh6lpeRR
UoxaR76ZGfpPfhRNnTOHfNOTyWN1LnkUZpMHU5yfTqNyUyioOp3mX66nmJd6
aMUfd1IcJ+y3j1DSByco5dOziuPPz6PA8ReK41nLFwrHca/y7YMM8qNqMqKn
I3GfOonspDIfJxJ1pg0qX6VlXCzyhxxclvB8hEEeySALx4vevc4cU9S7ErVp
Idc7+Bu04J0bvHCIpD3/7ZsQWTQ2c9Tmc4IZ4zdvIWxrjN+Aujf28DNtJhHZ
zEGbl0tf7QXHvawxl9mes1niOyIxfjinoYhy+AVl67PtdSY1G3lQWfw7bbH2
+BmbhZ4pLRo8Ix+QM0YG7LMRlJkxxpvDr5xWBPNcRAftIdZMn1ejcffBo3Ho
vnoNj8QdZ9ibnE+2kqdlXE62GmrD/5ATkedlIvI8P3sNf/0v6nCNCjxwkSbH
JdP4Mrh79i6na5PrXHzA1eERYjAPQLgcq6RiMJt7UCYiymAnh/lgYG2wctjs
QHi4Rhjodp0ScBle3228LLr1piNd35CBiM8mNRDhhA18VboeYRhspGs1F+m6
ygw75iJXVLYernK17bKRrdlh1CWHxTwcb7xIflWH+KE13omDtie5HH/15VYV
6wWJ12MswNgiGNfJI2o8HXGAzByjzgrJbHUlh+wzzLJJcObUnLuDHplpd9j/
OxwedLKtEnlMXvCUufTorHSInAOR8+0i+0Qm0eNLIfLyUnp8JUSOhchxEDke
IidA5CSInAyRUyBymkVEnhCBnJzVAI0b1X3ruXyZYAtrzBdr8EHmkFiGwKvl
qWHWeG27nCnho+/T8MmqUM8+lbLHZbLEWN6lPJblR6WxjJW7mWSI2SOzih5u
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
LyVa8kS0pYdG16olKb+SqmEgUs7db0XGtKnytuHH8rZ1uuGFo6a3rZ3GpqVL
D+/diqjp3WozPYpXwNnSQqOlmml0cxOqkUY3cTWg6ml0o5VGQ8/RDXWMJ/mv
KaDR1mreoGytwufgaEslqgJVTqPrylCl+NWVoIppdM061Foepy2MNHnR6MpC
FL5/RR6NLoefZdrP4nQYmkrjYyLFT5/sFeSbuZQmRcymZ1Ezi1bSnIpEWnTJ
SjFn6mhBZz7NWjKfIi0ZlIrQmfbxCUpH6Ez/4ixlfHnOzIAiFzKhSdzNF8YJ
obHo5h2EXpLsic9TR1N/xYifeo76sHq87NOrg+OnKLr0z8dpDqLmohd2iKQq
gnJTz629m0gqin7An/fOGfQmlyOD8l8gzSgriq/ZGR2pZ6i9FMb1Zi/NrCmk
mRtq9UaBOyqHPmVv642WfkZVEUX8+jJF/OoKLb18gJJ2dFNGR5OAyUEzCXgy
oisPb5evp7c3SQh1mqWanJKoOx/RKZtpp53Zf79JKg9R5SS2uwyp6b5J1KQO
YeMD/qclJ9GUBqvjqk/OfhfVRq7xFy44ds+qE9hC5fgdedxMOvyxPFbVo9Vv
7fDvqrqGhv3aXSb1roNU2bl1V7r7oEM8+wWp+LQQSA8A0nMDqs5Kd39mQLZv
9ZM/d/i6y3eC1eSQVVR1khWKHuo1ZNVd/m2W1SwB9UEN6y1ViKiTlyeKqv7r
T9K4ghp1o3XjLk6o3Nlvl7HqtutsKvlslbHqFtZ1M7fzm2TrgJB61TWYcj/l
VbuPRvhPMC57fPZ7+fn2ww8/LAfcXJC3PapuK0b49A9fAjvnwc75aNJhZwLs
TCpRdqbBzgzYmQU7s2FnLuzM44f9ISeaVb6DXu6j50t7i5vUfVLiJqq8FW7a
tJtt2k1UrTpKhu2UJ6ussrdU7GzoYjFl9YjnnN3SjOPPDOlS6OQvISbTKStO
rCfCpq2bV/pt3Wyno9r4h/Ruw4/u3dYB8mztQGFSTAyNXxWHr9l0tdLoVi4w
2tqsKG0BpS1gtBmMNvNlA6ObrKYZ4NRCvlVlaky9FhTWV6OqUGDUyqUptYBS
CyitA6V1oLRWKKVJUZEUkJ9Go6ucKc2h0aB0dGkmjS5RlBpRNCB1CfmB0glR
c2lqSjRNXx5JM1ctpFmJiyi8JIGWXKinhFf3UPI7Byn1gyOU9o/jlP7JSUr/
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
h8NhUJUaI/p221BMYXcLf1C7QWEXFyjsasSbOxv4tsoOaNhhhYgWVB1MrKXJ
MVEQMUFp2CoatlaaJsBEaNgiGqJK4SEkbIKEjetQa2lc8gqaHB1JvvXQ0AoN
LfkQMY98a3PIlzWsziS/qnQKWKt2HwTnLCf/0niatGQefoMRNHkJKiuGpnWk
i4bhR4pp4cUaWjLQTCt+3kVxv99Mia/soJQ391Ia+uX0Dw5RBjJi5qcnKAsZ
MesLiPiVZET8muEhv5zHPwOLdcO8GA1zBhLi8sutwmPSG4d18+zm3Djjbalv
n8LbMl/cRbkH2yl/Y71m7ynKwdfTwWHybw/bs6LshkRO5KzoOmO8Tsu4XGaM
NyjMWkBzUTor8trzBzeViW4OD9/jzTsQkc9zHtpEIZGvQkH/LD30r/VucqRF
p1Ejr6+ghZZR44zqIrERoVFGjWbpoEfIjDFq4JSAyLUQ/z/zz/0OGIdsoB8Y
DCJ7KLt3pvUpB6e1WtQOHnxSDzqCX5Kj/ZrCn7OHCsUBWWgZsN9PaN9r7jZE
Rz1yyNQ47jxgTAKMFsAYauzncZd2emzvAJiUYioHODUOyI5z+LhL+7hzP3fU
rLdmkpVUpZw0u/TV/Wyk9NX9csxoPwUeOCcs8j50BEf+Nt1ZM4rKSC6TghIR
8VivASUFd6rVMEDJCzGydQdGeq8/Qo+tSDc2KprmDy2je5fWkC/Uftpkv7CJ
wezSbzIuUOUfi7d1GZfwKSMD2x5ZmAQjV4qRjycVoZNeS0+nFFDgklXKyjmw
cnk8jU7LpyfX1lDQykSagN/u06XayIp6dVsd36tR06TOcOczhK0t6pA18dEm
x1WMqbboDdzl8miLPOJi6+BthrJfhlNiJ8vYadajQYmFcBCd8GIKrKrgx496
OFz6ru9EdXAxW+uZxvVM43qmcVwWYtiSGPLraeXCh7anxfQw+YFGv+4mVV2N
qAZUPfl1clnJr8NCfrAxwKomBkFl+fyD26pM+DXbKsmvtUJXOfm1lKFKya+5
BFVMfk3rUGvFRfbRt6GI/OoLyM+aT34W2FgHG2uzya8GNlanU3BerN3GgLJ4
GpeyiKYsmEuT4iJpStJC2JhGM7fnUfihdbTgfBUt7m2k5T/poLjfbkT/vI2S
X99Nqe/so/T3D1LGP1RazPr8hNiY/dVpyv76DGV/cxalE+O/zlPqmwc4KeL3
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
m7dQi5UMsYroyfy19BSLtaZExBpVUk6jyipp3NJlNHHhQr5sWG7D9GKxLEos
Oda9sV6dsNnSSGNam9Q5SfxkfEcLa0UT4lfxo1HquYAem2yJNcs2Mdk3YUjF
Sxyb23mJQ8ZeHQZRwlVoaZFQNZx9gkk75IGDHW0om1H4A1u2CB+p7S28a2O7
+ITiKz6DtjXib0bQVgC1tR5IcVkpaLMFVUdBm2oppLVETfyRjII2MFBB6ytN
M/BaQUEAamJHGU3H+0Q0FtPK6rWUWpgHiNZQSvkaSU7RcStoLl/r2VZIIbYC
/Hh5FNKSS2NbcmhsczaNbcqk0MYMmoS0NDU6nMbVp9D4+mSa0JCMVJYsKWuq
LYWeXb2cnp03m2bhbeH7iyjyeDFFX6igJbcstPJHLRT3yw5K/P16SvnLFkp7
fQdlvL2bst57jrI/2k+5nxwSoPK+OAqgjlP+1yco/5uTlP+vU5QPoPKRtvL/
w10kKzVclEp+eZMIxV1kzn/Os1JmZgofwmyNFEovDQxjpOTpfzl5VKUufJsx
MkOmUIekXHFe1RwcuUyumevTQZkLP4hrJ6liV+SZDtHJpZPkM6Jkp+4tlkor
5U4L0VTO3VKrriXt2yPLmoMz18OOedm9MzPRaSby98yaInsPGf3iKa3TCBma
8dLALOfTUoY8i/Qep+59lOHZsiLHNjVkr2c4e3EryUip3GVSQg1XQjmUglH9
CF797FS/tJP9aCdRP9X1E+Son/QzWfzy434mi19eZKVe4KgEq2jCRfys0VE0
GX+lJ+zfp6Dat8/EywJ4x1DtlJmZcsQuXhO40Q+k+sjv4HF6PNU+91r5nTY9
quOVj6tNasT1YNv42XMdNuWwTWvoqaJ19DTavqeLYVNpOXmUV5gZJtMTQpNc
HlkHmqx15F0PmvjMdD47vaUBLDWqo9vamtShHZ2KpqDKEn5USVjyW4/aYJMA
1caT+E1tahqvJ/IBW5go9Hs8qtrWTkGd6ljVsfXlZkMlpKgg9dKGl53ywkFN
CdXKQNGE/FT8P+/IDdqB/BS8vYknZNsbKXgbF4jaVs+xyorfV9AWCLUFQm2u
pdDaAiSwMJqI/m96WzlFNJfRyppiSq5YRzkla/HlWnx9nQg1o6WYgrtRXegD
G/Jo6uJITvIRc0zP0sT05RRqQVyy5dHYViVUaEs2hTZn0rimDJq6KJymQajx
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
P7Wh/BdVqPhVNSp/W4uqP9Sh5vUG1L7ZiPqrO9Dwp51ofGcXtv9tN3b+Yw+K
T8gswfScFbvJv3uutZJ3D2DvjTbsvdWO5tsd9H67EEWeXVWSjIare7GPQms3
eva4oZkd3Iw++uY0U6q8V2iAxXZmJ5OfSUPCzbvYyU3k5P9kPwsn2928nVbg
Rj4cc7UDSSWpYhVmR9cpUXYi/cpsIvsqUTbnzzzEbzrI5qtey8XTouTNJtEs
f6cFeZ6ro28rGfQDInvm7XBOucV2uDhbd8S1SrbAYerNL7bIuIyS5xk74hHD
WnuVesm0j53bUdKkWV1OrTufS1G5F9s9zP8tFP8ugnLRluq8oq8QbzGfX8U+
vaeP5Xj+xc8+QT5ebCEfV2fCLylSthWTl/1zVmPF/gK+Xw+B/5+19wCP8rzS
/icj45Kyu9lsy26+L97spm7K2omNTRVdQkISAvXeyxTNqPfee+8FRK8CgRBd
dGOQsY0xtnGRbSx344J74f7u87wzKkDi5H/97et+kEbvjKTR/XvOOU976yO1
m1I0R2tnxLbFquPg5DgX4Xiu7PZeY5Q9oLLtS3Z+YOGmBBvDFixWDFvV2pCl
5HjpzkQs7jPYzhiKUAPPzoOiZDu+elvcJbzCrqZ9BHnFPpU+bzSoZHpZqxxQ
5z4sx2G7DyfCQ7TPLhmzXrnPKo2F2d5KIu05lDCh2YzIC5M8sGqvpNOr9ppk
hnGPEavtknMlBmWC2mswXu60KZvJdscpyWoSt4YA7bRI/ivzTH67ZYkqSWZe
bWd5Os+xCGUsDiPT4QfjEXHIANd0d8V1zHET4k6ayXQCjGctiumE0SRYH09W
TCdfSkPKM+lIu5LJWJuFzLEcZL+ai5zX8pH3RgHy3ypEwbvFKLxWgqIPSpHJ
nFvismf2apR9VoWyL6pRTq5zrhYhuD2MPM9DcEcYKiF5dSUapZETsiuZWFey
Wq5Uk1YVEpwrIEtVhe9yjW2dRO0OvltEnOpUgGuQyyrPIsmyCyGn707FO3xQ
ux22L53jzoLZjcpW42N9U4N1ui3XnlJD6yf5ttOt1rr0q4O37Ovc1un001a5
rVeL39cjcrwVC6LdZZ77lmg9Aba9ir4bwVe1u7aK7FPczody7CT/5laShSdt
Smn6DrPvaP9oiz6n7yu772+kdY+6/mcj/xm7Ar9MWo3fZPgoWu9buRD3Mxr+
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
Q6eQ6BQRnRKiU0p0yl7LJDpZqHwzG1Vv56D63VzUXMtD3Qf5qP+oAA0fF6Lh
kyI0flaMpi9K0PxlKVq+LkPLN+VoJT6tDBNRTF8dZX5sNNU2dsCg0S4VVodC
p0NMr9QgcmAjKWIbCakcLyN5LojsiOBLNav41iI5pOyRbrKh06hOSmqQpaFC
z3eFHsXNzeykjOYr4wg7FbL4hODovm9Dp1upZMow4e0iV54MVOSqW7ndSs6M
CXJix6rx9/f+k1qCpY3d3TK/rJVU0/dFTItMP5jKzF/Liu6aFpJC3cP98btk
N9wXt1w7CZuwPERYZtUGYk5DEOY1h8CRsKi78XbZbp3RG6FOzF5Y6gsnwuK8
KUZttnfdGocV2+MJSrzaPyBLkVcOGuG5x6RupbWaoMiNdRbb5pR8DtiGtSl/
giInageIjlgQeESgYTY3GW50ig04Z6zEPG8ZoNAgOS5fiDhuoRJEEmaOs1yK
4of3qA0F0VMUOhCNhwmFf0+wWiQVe1ziUuwxMhR3TA4QipdJp2My7i1Jn+E4
kWI+J8dd2LI6j0x3LPRZoBeOdL+dIMlOUxJpSj5rRAppSj1nQtp5ocmMjAsJ
yHw8AVlPWpB90YrcS1YsDVwED6sLCq4ko+iFFBS/lIqSsTSUvZqO8qsZqHg9
E1VvZqH67WzUvJuD2mu5JCoP9R/mo+F6ARo/KUTTZ0Vo/rwYLV+WoPWrUrR+
U4a2G+XaSg3aN29USwCjmQB2olrPpkaaWmnqpKmXpoFdUgcRiZY7pjH8RJGk
dqLTLllgG5odCFGL4qpVsFJoSWxq0yuuvq+YtPNZpzQJVuF4NZwZVCQQ5Y/X
2CuxLn5PiUkxg8kKpOzxOntKKKu+ZDDDzlXBJFc6Daw7p4IF41gV/q/jrwQk
bU74lqnih76No7tDf/azn+HHP/7xiJeX1+2Yua4u+5V8iOWebvg9sbk/ntjM
nYmZZb6YVeWP2XUBmNsYhPktwVjQFoKFHaFY1BWGJcRmQbGPtkSR1zpviIaL
3Lp+S6y6M6277K0hNnLXObX+l9jIHWe8hkzq1hM+w9qsz5JUDw0XGZY+RB1O
QCAVRGQIi1Q+Git3qcOohJcwm+SIivksmFwyV/ItjFDYyHbYyBMJiDoh2LBl
TDkhyVsMH4w5YRbxs9gTEn4CerXDQ+Tf+BMMP/EnGH4MJ4QaGZQznpDBOaGG
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
igFNVESpu+rVaXE9/S0H6bbS6a0vGtD2ojylnUb/uTJ5p+hlI7qobhq9R0Sz
9141oe81VtYXtAq45EAI+mn2dW8mYP1bCdhAs298x4JNNPvm96zYcs2Kre8n
YtsHidhOw++g4Xd+nIyBT1Kw61OKht/9eSoGv0zDnq/SsffrdCS3ezNTn8Os
xEqfZdFxWcrg2crgOXRorkgnZs7T44jUCkek0z8qfj8qnf5Rdvrfxwg7/KNK
pUo76PbFrnOR3hHEJ5Sh0zbrpX1eIa9X4cCXrpTvI5W15vtq8bzSmrEsBOQt
VQNHxVrnfvME1Y+U0TFZENs83qabclMiW/Uqn7fZH7vrr7zufu1qu8dvm/fv
nTC6+nF0P3H8j5k/xcNOD2NBzEK417hhVaMHvNs84UejB/Z6IXitN8LW+cCH
lbJ06NFb/RG7PQDxOwNhZM9o3hsMCzPe+E3+MGwJQGSnF6LZcwazWBCX+2S5
wC1uqQZJjqseHoaleqw0LtX9Hd8xzeGBVEzzasQwQMRSSXydpK0BSKbyR8KR
sl07ciyV/9Y8zSKg9jKbumfY1D8rN+hseDaefhaJWelootBMX0uX3aJJD1fJ
YsTO30c7jd3xkqbOMQO6xmyGpnpeMaJX9KoRfTT2mqsmPda+ZmJH389OvOUJ
zd/lB0Owkd7eSG9vorc309tb3rVgK729jd7eTm/voLd3fpSEgetJ2EVv7/4k
GYP09p7PU7D3i1TspbeHvkrDPnp7+Jt0lA6G0IZz0DYaS59l0XBZysvZRP8I
/X2E/j6qlEcLSzk8IhY/JhY/hkK+EcdYDx9XkqXN0t6NgfEsZHQEYgkNLv8e
o+FHaPJj1M7xbD28meHcwRctpyrE75rnj6BSvnmlRArJ++l8rBvLRKDm87Lp
NrePj/7wtjZXN5++c+Kju2/z2MzpXfTNG1V2a46fdhCg5uHfOv7BZaa2Jytx
CVbWusGryQO+9HBA1yoE08Oh9HD4eh8sCV4AR485iN3mj/gd/jAOBMA8GATL
UDASh0OQfCAUKYdCkXYkDBn0XebxCGSfiEDOqUgs9ZkPP/bSBWejUPhoNIrO
RaOYGW7JaAxKGejL2O+VPR6L8idiUfFkLCovxqLqYhyqnopD9aU41FBp5EYl
HHWX43XzUP9MPBpE4l6bg5tEV+Lp3ni0iJ6PR6uI3XEb1S6ie2lmRJe7o5MO
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
EvyZaS/jY62DYQ64iFydtHl4SknmJZ+Svvgp6YufEvteZJJxF9tiPDmhEuwb
S4Zb6P1iFV2PZpFp8yjKZnrt+P6wScv9NStKvvW6FdO7XPvsib3b1WbJpx+g
UX4bF/9Y64YnXDzb6SH41CxHIF0cShdH9nggZs1KxK9fBeOm1VhIF4fVrkDS
Tm+k7PJB2h5fZAz5IXt/AHIPBSL/SBAKR4JQfDwYpSdDUH46FJWPhCJlnXYG
TTory3o6uOFCBJro4OYnI9FyMRKtdHD7pSh0PB2FTjq465lodD8bjR46uJcO
7rtCPR+jHBxftgL9dO+6F9kNr38pljnkBna5G6lNL2vaTPdueYWm3vqq9NLb
6NztIrp3B7VzPB6edLC12g27xL276d6fY5Du3fOWpr107hC1j+7d964Rw9R+
uvcA3XtQRPceonsPf2jGEarrhObibmJ7jO49/qkFJ+jek59bceoLK05/mYjT
XzH/pIMf+ToJZ+ngR28k4xxdfI4uPk8Xj1KPsQe+oJROt6arnjRDdw+2jGq3
5giwObeow4fWzMYlpRw8jRxe+7SkzE+r2cXL9PJl5IvUZ7Ty0zJs97QatrvE
vOISbXxgLAn/fu8/qEqvz9YD3jRJop/i4ikLBpN0k/+JK+Wx7//lL3uqz/7y
pojvT3y3itvY9d9V+8cJuy4KmgO/WmcEN7sivMMN0T3uiFu7Esb1nohpd9fW
x9a6ImXAG2m7fZBBu2bv80PuAX/kHw5A4dFAFB8LQumJYJSfCkHlmRBUnw1F
GtNn6XQbHgtH44VwND8egZYnI9BGq7Y/FYkOWrWTVu26HIUeWrWXVu17Lhpr
RLTqWlq1/4UYuNOu5YP+2PBSLDZSm8ZisVn0ciy2UFtfkTR426uSBm+/Gocd
1M7XNA3QpLtEr8djN7WKhm1ioNhDl+59k6YdekvmDPe9bcAwtZ9G3U+THqAO
vsdC79A1uZXM4fdNOPKBCUfp0RHRR2Ycu56AHvp0Cf3ad1oi+KnPLExXT9Or
Z+jVR+jVs/Tqo18n4hy9eu6bJJynX0fp18fo1QtI4XMeZ597D92Zxr5QlM7+
MR1t7G0Dohcrj8q7X9zhzWsvI4ux5TK9+oxSjkiPZ5HrwCZPmnxpCuSxQvrz
GRRSRTDkLbDbQ9ev/vgzbp7dUOb4jrbX17bm29572gP+393+YZ/pfejth4T/
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
HsVlzijVukDLtqysckV1jRtq69xQX69EY6MSzU3uaGlxRxvbsqPNA7fYll23
PNHd6YmeLhW+32QJD/cx2PHDBP78HSZNfF3fQejbTu6Hn3yi9cQwTTfYqUt9
xfihjagfiuv7AHnYPsLQeYvXeyYaVt7Nb0cphs7z4bXXX8T7f3yFydE7+HTF
n7ElfAKycu2QW2CPgqsOuHbDEUp23u5s1DLGW22FC6qqXFBT7Yq6Wlc01Luh
qUGJliYl8nLm4XSUBbZ+Pw7bvv8Ybq6/xYTxr+uhS3jjjTf0jSd5/9vhG9DU
APesUQM+xo2Jfj74N0PHOnFoo+pR05/6ulg+5DHUphrVXC7UuFEjdN7Ihipe
xJtvvohf/eoljB79Txg1ahTeeed1jBnzKsYKjX0V46hf//ol+e3PGUNm3Fai
CHmR4pO3V9yQ9hr2Vjcvm2hDOQQ+9DLw84/ZXjPkA5DfLD772muvSW04UtqO
GKUwej30aB89/ZE65Ggf95YpVgqj14ihrSI5YyG3wCjFI1dmDdsC8gXzp1xl
mDXk0B73ThqiMq8+cGhTFIMzhApL6W+mL+7pspMhT+c1dVy+T3lc0sfkqSr9
jMWwt1LQHde/6d4nh2H5GPTHpbd3jq5aiqEJtHSWvf3221Jd/sPE4XjKf3ua
MZv8uHrj6TdTX63XDdX0M7WQqyBtVxu9XWE9eADmiodkkO+aOADnhx7A4w9g
tPIP3aTyg1/GlrOpZ0Qr60PwVl2rKxzkg9c3+4Mny78OVs6Q8tr+L1RYXr0t
N+aUoVXQQ60f9/7GRBUG596fPv1sNarC9J9WwXj09txgFR646ePQak0drNaT
5Wi9RnWZKf366Nk73bk25Fw3VaHxhgo9Ud5zz6g68nn5vL5pHuxP9FV41UTp
Hz5G6aYve0olP2NUi7lDDdLnpyIyqB5y7P85fOmmIrdU3M+MirZ9NBu/NFH0
7/+Bol8xKtphEIWVD0Ph5ybKH6X73FNdlJBKftOoFi5DG+BBAp7T/bdxWivq
oKvQmz+ty+N3N1L5bxvVRflTDozrIvetzw7p243q8spgWz1pXyGV/q5RTeR+
5wV9TR5M9sXLUA1TEwcv/YN1+aNRXTRDW8U4RxYLuXTFD2mVkQ8t/vGDuFT2
h0a/y4HoeXPFUFLEJVOt7nvLTzizI+12vNHv8oznI66bSrPmUor+lvxWg0PT
pk17ZDFTjX7XTecNf0lusDjpc0FG+5AdGv6yzssmd9Ejv1N80pCVjJb/Nmw6
+cg96lOA9432+HhP23kRhgMyvKQ/+Q0p4H3dn1cbFfC4jzYR+56i3/dIk4ch
95WGC+PSsX449NCkl6mZP10phjkl6V+PKuVV44b50PDOwXmAFwYba9Gj9yiv
z5Wa2tCCH5jY44uDLWaYnTR71B717fjyMHt82bglHmuPiwx7fIzBu1zKSHF8
xkO0h5QxUl+G+LxwXJ6AHX7MazR5a7gK9pAyntGX8b6uHIk+OYIMP9zUFSQ+
Y8jzhytI/BQ73mpU0LBnq5yeS1m78aDop8U8qz+z9Acu6mU1WNKww7GfD7ad
oYSfFvOcvnb6l/HR6cp66GhJd3c8/Ud+UkTnYFUNL7PBqkY98LdFCqPW18X+
B4c3ugxMT47CUGSgcZHPibY1XiWhP0qpPxwxtNrvG/ZxRn6z/PULQyyX/JXn
gYZei5VPq60PfLp7aMX1yOvOopeNKyZ97LTR78b7+f/nD4r/8z9WqiKN\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"d6ec4cc8-2be0-47d2-a6cd-4d74ae2e6672"]
}, Open  ]]
},
Evaluator->"AlternateKernel",
WindowSize->{1248, 1382},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "C:", "Users", 
   "Ravi Wijesekara", "Downloads"}, "Mathematica-Solarized-master.zip", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"624cbdd1-a9f2-468b-a072-7e686cebf149"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 707, 17, 107, "Input",ExpressionUUID->"d671af8e-fd56-41b7-b27b-8ce6d7646568"],
Cell[1268, 39, 192, 4, 77, "Section",ExpressionUUID->"15234ece-b67a-44b4-9977-d6d04d5fba83"],
Cell[1463, 45, 186, 4, 34, "Text",ExpressionUUID->"52f34a4c-5b7c-4764-8409-5795a00667dc"],
Cell[1652, 51, 347, 9, 58, "Input",ExpressionUUID->"e29d5f8c-c6a1-4da1-8094-202cdb6a20a1"],
Cell[2002, 62, 247, 6, 34, "Text",ExpressionUUID->"9bc403c2-a914-4e24-9516-cfc1eeac6172"],
Cell[2252, 70, 1514, 45, 176, "Input",ExpressionUUID->"0df9b3ed-d030-497b-98e5-628c5438c928"],
Cell[3769, 117, 242, 10, 113, "Text",ExpressionUUID->"0bf11d63-e5b0-45c1-a58b-531739e6c096"],
Cell[4014, 129, 566, 11, 34, "Text",ExpressionUUID->"a24cab13-9e80-4840-a8e6-6daaa770b362",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[4583, 142, 1335, 46, 85, "Input",ExpressionUUID->"a44f2f14-deec-4899-8469-cbc377bad219"],
Cell[5921, 190, 205, 4, 34, "Text",ExpressionUUID->"4bd21f33-a9b7-4df4-b8e7-83bde066680f"],
Cell[6129, 196, 801, 21, 82, "Input",ExpressionUUID->"b1673655-73c4-4177-9c6a-c4cf352e42bf"],
Cell[6933, 219, 220, 4, 34, "Text",ExpressionUUID->"a277fe82-d62b-4ad1-beab-4d37cb169933"],
Cell[CellGroupData[{
Cell[7178, 227, 928, 25, 132, "Input",ExpressionUUID->"db3b643a-d4e1-4e7a-9676-1eb89c0c3321"],
Cell[8109, 254, 2020, 48, 188, "Output",ExpressionUUID->"b3dd2986-7d3b-4a03-a9ee-64a115707a00"],
Cell[10132, 304, 2018, 48, 188, "Output",ExpressionUUID->"995c261d-3bcf-492f-88c1-d8df54083bfe"]
}, Open  ]],
Cell[12165, 355, 215, 4, 77, "Section",ExpressionUUID->"49fda821-4793-4a1e-baf2-394757c5b469"],
Cell[12383, 361, 1241, 25, 46, "Text",ExpressionUUID->"5fc54701-5055-4f64-87d5-245181042ff3"],
Cell[13627, 388, 1067, 27, 75, "Input",ExpressionUUID->"e39f3744-f3f6-4edc-b130-03c7b1208656"],
Cell[CellGroupData[{
Cell[14719, 419, 566, 14, 82, "Input",ExpressionUUID->"a189e330-87c5-4daf-9fb2-d0cedb31d837"],
Cell[15288, 435, 1911, 43, 184, "Output",ExpressionUUID->"5568b1c4-5b65-472b-acf5-dd5e43156047"]
}, Open  ]],
Cell[17214, 481, 200, 4, 77, "Section",ExpressionUUID->"8ba8a6a7-ed95-43cb-b770-bdce56c58a0c"],
Cell[CellGroupData[{
Cell[17439, 489, 361, 7, 82, "Input",ExpressionUUID->"2dfbd488-f988-4924-8087-0d82c78417d0"],
Cell[17803, 498, 2690, 70, 188, "Output",ExpressionUUID->"0df32765-a93c-48e0-8787-56a58ea06703"]
}, Open  ]],
Cell[20508, 571, 277, 5, 61, "Subsection",ExpressionUUID->"b02a746f-25d4-4db0-8d3a-83197855c130"],
Cell[20788, 578, 334, 8, 56, "Input",ExpressionUUID->"da31ad8c-2523-4582-8c10-df6d88225e29"],
Cell[CellGroupData[{
Cell[21147, 590, 281, 5, 50, "Subsubsection",ExpressionUUID->"31f87d67-043c-4a02-9754-5d67d21efa8d"],
Cell[21431, 597, 252, 6, 34, "Text",ExpressionUUID->"4d0da22d-57f2-4d29-a8d4-e3a304f06e98"],
Cell[21686, 605, 697, 23, 58, "Input",ExpressionUUID->"51d966da-8a9d-444e-97d2-7770d2d7ef39"],
Cell[CellGroupData[{
Cell[22408, 632, 1032, 28, 132, "Input",ExpressionUUID->"2484735b-6b0a-4693-bcc7-07606b3649b3"],
Cell[23443, 662, 4248, 123, 123, "Output",ExpressionUUID->"9118461d-9672-481a-a734-2293a5166ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27728, 790, 2250, 59, 207, "Input",ExpressionUUID->"6343c475-d89a-419b-b0f7-2cf6f1198032"],
Cell[29981, 851, 3269, 63, 492, "Output",ExpressionUUID->"6bb063d8-1ada-43b6-84ac-e1558deaeb7c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33299, 920, 307, 5, 50, "Subsubsection",ExpressionUUID->"dc95a792-61fc-4cdd-8792-a5081b45ef22"],
Cell[33609, 927, 252, 6, 34, "Text",ExpressionUUID->"e3c4f946-992e-4440-8b7f-f1166b2d042c"],
Cell[33864, 935, 948, 26, 58, "Input",ExpressionUUID->"e4fe9f1a-2c51-4812-935c-d838fbd45ae6"],
Cell[CellGroupData[{
Cell[34837, 965, 1312, 33, 132, "Input",ExpressionUUID->"a0fee1d4-72d4-4c06-8615-0e0216dcdf9a"],
Cell[36152, 1000, 13752, 342, 596, "Output",ExpressionUUID->"c9223c16-e282-4e14-98f6-7813ddd387fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49941, 1347, 3958, 95, 282, "Input",ExpressionUUID->"1a23ea5c-df5f-47e1-bb68-2d002f2a2906"],
Cell[53902, 1444, 4540, 89, 662, "Output",ExpressionUUID->"fc255e11-1c66-4e05-90c8-e4b95397209e"]
}, Open  ]],
Cell[58457, 1536, 267, 7, 34, "Text",ExpressionUUID->"8487854f-8319-4084-8e84-ba0677b7c5a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58761, 1548, 420, 13, 50, "Subsubsection",ExpressionUUID->"4fcd1df6-c12e-47a6-a4d9-1fb614b61241"],
Cell[CellGroupData[{
Cell[59206, 1565, 3430, 85, 282, "Input",ExpressionUUID->"3677a2e3-520d-4c72-8f28-d06fb316a7ab"],
Cell[62639, 1652, 4112, 84, 632, "Output",ExpressionUUID->"8844e986-a9f3-4b5e-99ef-21713a2a18aa"]
}, Open  ]],
Cell[66766, 1739, 687, 18, 124, "Section",ExpressionUUID->"f95bafde-b5b7-4308-b8f6-ebca337f8e00"],
Cell[67456, 1759, 308, 5, 34, "Text",ExpressionUUID->"5b24a646-6077-4eae-9707-8945053b6fd7"],
Cell[CellGroupData[{
Cell[67789, 1768, 558, 13, 56, "Input",ExpressionUUID->"e3476dac-7803-4209-8d7b-8cbe6d83ad66"],
Cell[68350, 1783, 4146, 121, 123, "Output",ExpressionUUID->"490ffbe2-9981-4328-b5c4-39abde0b0e84"]
}, Open  ]],
Cell[72511, 1907, 1815, 52, 141, "Text",ExpressionUUID->"62f43982-593c-4187-a110-c6aa3e6cd300"],
Cell[74329, 1961, 1532, 37, 68, "Input",ExpressionUUID->"1d23a527-0dee-45c9-abb5-42e012610892"],
Cell[75864, 2000, 308, 5, 34, "Text",ExpressionUUID->"91130947-35c7-4097-b354-55336214010c"],
Cell[CellGroupData[{
Cell[76197, 2009, 2138, 59, 94, "Input",ExpressionUUID->"1456799e-2a3c-4aba-8bb0-83d30dd13e74"],
Cell[78338, 2070, 6765, 184, 169, "Output",ExpressionUUID->"4a332e35-596f-44ef-a0a2-e03d29c736a1"]
}, Open  ]],
Cell[85118, 2257, 182, 4, 34, "Text",ExpressionUUID->"f1c5db49-029d-4ede-9e50-ef0b346d638a"],
Cell[85303, 2263, 13946, 427, 634, "Code",ExpressionUUID->"ebe1173a-cb83-45fc-af93-c08a92afc37c"],
Cell[99252, 2692, 5051, 143, 298, "Input",ExpressionUUID->"1f02f12e-ae66-411c-adfe-9f74696d0f5d"],
Cell[104306, 2837, 210, 4, 61, "Subsection",ExpressionUUID->"a877025e-540d-4d85-a7eb-ebad7df07845"],
Cell[104519, 2843, 519, 12, 56, "Input",ExpressionUUID->"e02637be-9073-4058-be19-dd3cbf9db3a3"],
Cell[CellGroupData[{
Cell[105063, 2859, 873, 19, 107, "Input",ExpressionUUID->"a244ab46-79e7-4f42-abba-2f6bac8918fb"],
Cell[105939, 2880, 2562, 69, 188, "Output",ExpressionUUID->"0960b116-08dd-4398-b0a0-e899880bb0a2"],
Cell[108504, 2951, 2464, 65, 184, "Output",ExpressionUUID->"cefe65fa-dbd6-4ba6-811b-88b21962ab4c"]
}, Open  ]],
Cell[110983, 3019, 374, 8, 34, "Text",ExpressionUUID->"156603cb-1a8c-4fc4-9284-2ffe6e8ffc8b"],
Cell[111360, 3029, 898, 28, 37, "Text",ExpressionUUID->"27dc4553-2ec3-46ad-b7ed-da70452761e0"],
Cell[CellGroupData[{
Cell[112283, 3061, 561, 11, 82, "Input",ExpressionUUID->"0dd8c683-c1dc-4ea1-a53d-7747a8e15443"],
Cell[112847, 3074, 2877, 72, 188, "Output",ExpressionUUID->"8d54b8a7-916d-4dc9-91b5-63f3ad29b1f3"]
}, Open  ]],
Cell[115739, 3149, 211, 4, 34, "Text",ExpressionUUID->"102a54c2-d053-47f6-acc2-95bc124fc01a"],
Cell[115953, 3155, 1534, 39, 159, "Input",ExpressionUUID->"125355e7-f4f9-4a0f-9762-a393b533788a"],
Cell[117490, 3196, 419, 10, 56, "Input",ExpressionUUID->"0a310794-d1f0-410f-b45c-851f981b0dc2"],
Cell[117912, 3208, 242, 6, 34, "Text",ExpressionUUID->"55b0f637-2bf4-4fcd-80ed-22fd97ce8ab0"],
Cell[CellGroupData[{
Cell[118179, 3218, 308, 5, 82, "Input",ExpressionUUID->"36a0bc90-b44c-4691-aca0-b4397cf7a8f3"],
Cell[118490, 3225, 8439, 222, 312, "Output",ExpressionUUID->"3b6317bd-7c52-40de-9bfb-bc3fb53edea4"],
Cell[126932, 3449, 3353, 96, 204, "Output",ExpressionUUID->"cf9bb2b7-657c-4ca5-9798-45f515b3a5e6"]
}, Open  ]],
Cell[130300, 3548, 294, 8, 54, "Text",ExpressionUUID->"fbb03292-783b-40e1-88a2-e342a10f655c"],
Cell[CellGroupData[{
Cell[130619, 3560, 244, 4, 56, "Input",ExpressionUUID->"2eafa0e1-00a9-4717-bc8f-104bbb7a1cd1"],
Cell[130866, 3566, 1437, 37, 184, "Output",ExpressionUUID->"19654a1b-8b7c-4e1f-b578-c76cf6ffd4aa"]
}, Open  ]],
Cell[132318, 3606, 187, 4, 34, "Text",ExpressionUUID->"ed633ab7-f6ec-4f89-8ab6-ca1811d20ebb"],
Cell[132508, 3612, 1020, 27, 58, "Input",ExpressionUUID->"4adfef08-7de8-45e6-ad75-542f44f97949"],
Cell[CellGroupData[{
Cell[133553, 3643, 1405, 34, 132, "Input",ExpressionUUID->"3045c0c7-3e10-4b38-8ac7-a91d26e1c244"],
Cell[134961, 3679, 3496, 104, 123, "Output",ExpressionUUID->"785fecc8-00f7-451a-8807-2a072c0e0183"]
}, Open  ]],
Cell[138472, 3786, 187, 4, 77, "Section",ExpressionUUID->"b2b76611-92bf-4b8e-a83a-5623b2fb3d96"],
Cell[138662, 3792, 670, 16, 58, "Input",ExpressionUUID->"e3cbe740-64a3-4941-8f2d-a1c9c955cddf"],
Cell[CellGroupData[{
Cell[139357, 3812, 329, 6, 56, "Input",ExpressionUUID->"ab82a063-4a6d-4c71-8af8-2967bf7c83d3"],
Cell[139689, 3820, 3024, 81, 148, "Output",ExpressionUUID->"973b8ab4-daa4-431c-aa89-3b73d1e04478"]
}, Open  ]],
Cell[142728, 3904, 551, 8, 77, "Section",ExpressionUUID->"207aaa3f-5710-4d10-b9a0-b8cf19561f82",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[143282, 3914, 200, 4, 61, "Subsection",ExpressionUUID->"9305683e-8010-46da-b20a-6f168888ccb6"],
Cell[CellGroupData[{
Cell[143507, 3922, 384, 10, 54, "Text",ExpressionUUID->"640a1c7d-e5d3-4b6e-9b54-678478fee12d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[143894, 3934, 2334, 62, 104, "Input",ExpressionUUID->"1fa7bf3e-8b08-470c-afaf-e8e95b165053",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[146231, 3998, 1551, 41, 107, "Input",ExpressionUUID->"93dc9512-919e-41af-a58a-ad90c2662231",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[147785, 4041, 2496, 65, 79, "Output",ExpressionUUID->"52714077-bb60-4375-8dd1-36e018230965",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[150318, 4111, 621, 9, 61, "Subsection",ExpressionUUID->"5d58b7fc-e32a-44a2-9f01-44bacb81d1ab",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[150942, 4122, 2983, 84, 252, "Input",ExpressionUUID->"e202a417-1cfc-40d5-8113-6d5be1defbe9",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[153962, 4211, 474, 12, 58, "Input",ExpressionUUID->"3e230628-896c-494e-b2eb-ae6ef4ff05a1"],
Cell[154439, 4225, 2057, 49, 123, "Output",ExpressionUUID->"a7bef05e-a068-4aaf-bbd3-71b37ad0c1ee"]
}, Open  ]],
Cell[156511, 4277, 988, 20, 64, "Subsection",ExpressionUUID->"72ceeaae-279b-4c3c-9d96-88ac60f275b4",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[157502, 4299, 373, 8, 34, "Text",ExpressionUUID->"fdc537b7-f9e2-4de4-9a93-8d2e6fcf4c47"],
Cell[157878, 4309, 1239, 25, 112, "Input",ExpressionUUID->"878efd94-6690-4445-94c2-ab58def7b53c"],
Cell[CellGroupData[{
Cell[159142, 4338, 794, 16, 58, "Input",ExpressionUUID->"ee2614ce-76de-421c-a954-4db1829ff342"],
Cell[159939, 4356, 16315, 437, 223, "Output",ExpressionUUID->"248f0c09-a614-4b24-a427-4face3187b22"]
}, Open  ]],
Cell[176269, 4796, 398, 7, 77, "Section",ExpressionUUID->"c68c482f-ab49-4407-8ff5-c6f89f8aa093",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[176670, 4805, 200, 4, 34, "Text",ExpressionUUID->"90f07d16-0605-448a-8d51-8a5e0f93c7ae"],
Cell[176873, 4811, 576, 13, 56, "Input",ExpressionUUID->"7f97320f-4a16-4ea1-9b95-0beda200655b"],
Cell[CellGroupData[{
Cell[177474, 4828, 298, 6, 34, "Text",ExpressionUUID->"5a24a1ac-1dcc-4eba-91ef-aa2f3980b4f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[177775, 4836, 771, 17, 56, "Input",ExpressionUUID->"708550df-2975-46a9-a591-d7e94b048f60",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[178549, 4855, 317, 6, 34, "Text",ExpressionUUID->"7676bd16-e87f-4842-970a-8b1c7fda4db9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[178881, 4864, 8084, 226, 682, "Input",ExpressionUUID->"010f6d61-4625-40f9-ac1f-1646d2a8e53c"],
Cell[CellGroupData[{
Cell[186990, 5094, 517, 11, 82, "Input",ExpressionUUID->"3038b914-f8d1-4dbc-a308-701373fbeca3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[187510, 5107, 1980, 31, 78, "Output",ExpressionUUID->"f3535653-8e9b-4e41-9484-25084da3474f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[189493, 5140, 1727, 24, 60, "Output",ExpressionUUID->"5fe8b717-cc5d-48f7-bdd4-4374d3288a8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[191235, 5167, 214, 4, 77, "Section",ExpressionUUID->"933eddca-5b08-4cef-b47c-471dc165ae02"],
Cell[191452, 5173, 853, 26, 34, "Text",ExpressionUUID->"239d19c6-0e18-4679-bf9a-2e469e58c76a"],
Cell[192308, 5201, 363, 8, 34, "Text",ExpressionUUID->"8a295d25-72c8-4372-854f-7f097225a04d"],
Cell[192674, 5211, 610, 19, 71, "Code",ExpressionUUID->"32340860-804a-4d70-830f-b1251d813a3d"],
Cell[193287, 5232, 543, 11, 34, "Text",ExpressionUUID->"02b6a424-d9dd-453b-890f-6d5ca08b61a3"],
Cell[193833, 5245, 222, 4, 61, "Subsection",ExpressionUUID->"d8a2f5b5-60fd-480c-86e2-2fdc8ab1f3b4"],
Cell[194058, 5251, 1080, 34, 119, "Input",ExpressionUUID->"ac8cc80a-e305-487e-ba0b-f7d74df392d2"],
Cell[195141, 5287, 436, 12, 64, "Subsection",ExpressionUUID->"8ddd61c6-dfb6-4d4f-ad88-44d312e3a935"],
Cell[195580, 5301, 1704, 40, 95, "Input",ExpressionUUID->"87415e51-beb0-4827-83b9-bd33ca86fe8d"],
Cell[197287, 5343, 427, 12, 39, "Text",ExpressionUUID->"789e37ab-7870-4463-9ff1-6d384a7d1c0d"],
Cell[CellGroupData[{
Cell[197739, 5359, 1059, 24, 82, "Input",ExpressionUUID->"1789a65a-28b5-4a6f-b6ba-a0e08e1fdbae"],
Cell[198801, 5385, 7206, 192, 337, "Output",ExpressionUUID->"6bb71d38-7fb7-415a-b921-a00d1f4d5ccb"],
Cell[206010, 5579, 6373, 167, 328, "Output",ExpressionUUID->"905318ad-2f1d-493f-9701-62b802d9fac0"]
}, Open  ]],
Cell[212398, 5749, 327, 5, 34, "Text",ExpressionUUID->"950981fb-57fb-4fcc-b6bf-6524df54058c"],
Cell[212728, 5756, 7067, 209, 290, "Code",ExpressionUUID->"060c91be-c1fc-4985-b958-1eb8a4d30f26"],
Cell[219798, 5967, 3940, 107, 161, "Input",ExpressionUUID->"d516fb53-c7aa-4432-8872-7bba64ee9928"],
Cell[CellGroupData[{
Cell[223763, 6078, 6100, 146, 456, "Input",ExpressionUUID->"34708e38-d52a-44fa-b7aa-83974b3c2ef5"],
Cell[229866, 6226, 5925, 111, 450, "Output",ExpressionUUID->"930be0ad-0c0d-417f-9065-ffae6c3a5458"]
}, Open  ]],
Cell[235806, 6340, 2911, 80, 429, "Input",ExpressionUUID->"b3abd7c5-dcc1-45c1-bba2-18a7c3997519"],
Cell[238720, 6422, 3056, 82, 429, "Input",ExpressionUUID->"83e28f17-43fc-47d4-b333-e641eb3aad1f"],
Cell[241779, 6506, 203, 4, 61, "Subsection",ExpressionUUID->"ba84a286-31f6-4f8d-9911-6c967ed5b1ce"],
Cell[241985, 6512, 411, 11, 34, "Text",ExpressionUUID->"c7774c06-066b-42fe-a001-ff286cf36e86",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[242399, 6525, 4287, 110, 396, "Input",ExpressionUUID->"c285575d-2ae3-49e6-a8a7-e1ba15103689"],
Cell[CellGroupData[{
Cell[246711, 6639, 1103, 26, 54, "Text",ExpressionUUID->"0a13f418-b50e-4b16-a0dd-97f585ec3206",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[247817, 6667, 1726, 44, 58, "Input",ExpressionUUID->"4d13c236-21d0-4b3e-82ca-7ee264826098",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[249546, 6713, 334, 6, 34, "Text",ExpressionUUID->"8dfc90c9-9c1e-48a3-abb8-dfa9ca0836f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[249883, 6721, 1916, 48, 282, "Input",ExpressionUUID->"234032f6-9b53-4a7b-91cb-61bb53b5b060",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[251836, 6774, 5007, 137, 402, "Input",ExpressionUUID->"2e3fece7-b857-456e-b2b3-20908367836e"],
Cell[256846, 6913, 28973, 829, 180, "Output",ExpressionUUID->"add6034a-77c9-4e3e-863f-3f1221a1c955"],
Cell[285822, 7744, 28975, 829, 180, "Output",ExpressionUUID->"1f03d8c9-5397-4afb-b6de-99943d864eda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314834, 8578, 328, 6, 77, "Section",ExpressionUUID->"e4865143-5b2c-43a3-8140-142d0bdacff1",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[315165, 8586, 373, 7, 34, "Text",ExpressionUUID->"accbb881-94b2-4cde-96d6-c369101dbae5",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[315541, 8595, 630, 14, 58, "Input",ExpressionUUID->"8b23ba98-3632-4daf-a70e-8c5a049d5554",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[316174, 8611, 610, 12, 34, "Text",ExpressionUUID->"a7d7d0eb-73f6-467a-b105-b5170c07a049",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[316787, 8625, 1227, 23, 82, "Input",ExpressionUUID->"f444138c-4145-47f4-8047-cc7e3c7b80aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[318029, 8651, 55475, 1587, 180, "Output",ExpressionUUID->"06b82b74-ee68-476c-a9bb-2896dff0381e"],
Cell[CellGroupData[{
Cell[373529, 10242, 2736, 72, 244, "Input",ExpressionUUID->"eb258627-a29e-4fc7-86f9-42213800aafb"],
Cell[376268, 10316, 44803, 1292, 180, "Output",ExpressionUUID->"8c7f72e6-ab88-46c6-98f3-e03a8e628d2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421108, 11613, 379, 6, 34, "Text",ExpressionUUID->"e59c2e6b-0611-45ea-b843-e97e84d5429e",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[421490, 11621, 662, 13, 82, "Input",ExpressionUUID->"43a91459-e60d-47b0-b883-7af32a09c543",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[422167, 11637, 3873, 109, 148, "Output",ExpressionUUID->"1c0800ec-0952-4d80-b10f-b3c5caaf6960"],
Cell[CellGroupData[{
Cell[426065, 11750, 500, 10, 34, "Text",ExpressionUUID->"415e67b4-aa8a-4c94-97f2-c680e1d1acbf",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[426568, 11762, 1464, 32, 58, "Input",ExpressionUUID->"f30548a7-cc5a-4ee1-8471-aa63bb4c7368",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[428035, 11796, 2805, 69, 198, "Input",ExpressionUUID->"9e154674-20d5-410b-a8c7-54b998e36f6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[430843, 11867, 318, 6, 34, "Text",ExpressionUUID->"8fe7dc6e-134c-48cc-815b-74f8a74b5933",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[431164, 11875, 809, 23, 82, "Input",ExpressionUUID->"dd0c4000-204d-4609-a57d-e44f9ff3e96d",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[431976, 11900, 441, 10, 34, "Text",ExpressionUUID->"6cd7f25d-73f1-4510-b199-02b778187edb",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[432420, 11912, 1811, 43, 157, "Input",ExpressionUUID->"73914564-c466-4d93-9c87-1b5e5bd07b43",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[434246, 11958, 4343, 123, 149, "Output",ExpressionUUID->"6731b061-ccee-4363-87cc-34697d528f53"],
Cell[CellGroupData[{
Cell[438614, 12085, 342, 6, 77, "Section",ExpressionUUID->"5c9c06fc-756d-489e-bac9-7759fc5c6865",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[438959, 12093, 477, 9, 34, "Text",ExpressionUUID->"6d7891c1-5669-463a-be0b-e45770c16ab7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[439439, 12104, 877, 21, 78, "Input",ExpressionUUID->"f15e580f-ba26-4944-a7cb-328d2c47be47",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[440319, 12127, 839, 21, 88, "Input",ExpressionUUID->"4bab286a-5965-46c2-aeae-8ea8f456c46a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[441161, 12150, 1869, 52, 107, "Input",ExpressionUUID->"40ba1843-90b9-4006-91e6-4e8c5673122d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[443045, 12205, 3085, 61, 468, "Output",ExpressionUUID->"81a1e1bd-3ca9-4544-afa2-571f60a233e0"],
Cell[446133, 12268, 2703, 77, 262, "Input",ExpressionUUID->"eb60ac93-9125-43a3-81d5-7cf613f93e86",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[448839, 12347, 3069, 60, 468, "Output",ExpressionUUID->"3a3dc818-776a-4283-8286-23ccc442d067"],
Cell[451911, 12409, 505, 8, 34, "Text",ExpressionUUID->"54c65f0d-e18e-441f-9921-b056c01f6969",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[452419, 12419, 483, 13, 59, "Input",ExpressionUUID->"6ff41bdf-cf4c-4e27-94e4-33522737b25e"],
Cell[CellGroupData[{
Cell[452927, 12436, 4432, 121, 318, "Input",ExpressionUUID->"d83e4430-22fc-408d-b7df-6ec2c836364b"],
Cell[457362, 12559, 2615, 67, 78, "Output",ExpressionUUID->"4369324d-28e1-4cb6-9c23-fd49c328b120"],
Cell[459980, 12628, 2613, 67, 78, "Output",ExpressionUUID->"d0b1abe7-529f-4e84-aac0-ba83848ba23b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462630, 12700, 271, 5, 77, "Section",ExpressionUUID->"df2b7edd-ca5a-4c77-922c-d9f6602ad183",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[462904, 12707, 734, 18, 74, "Text",ExpressionUUID->"af51ac1d-8424-4aa0-9b40-c1e0754edf4c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[463641, 12727, 1056, 32, 54, "Text",ExpressionUUID->"c33d467d-3d8e-48c6-ac10-eafc92301bdd",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[464700, 12761, 522, 14, 34, "Text",ExpressionUUID->"5bc7f8dc-a572-4e2a-a8ab-8099e3af9516",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[465225, 12777, 998, 28, 48, "Text",ExpressionUUID->"fdefe953-6113-40f2-9bcb-4007e9768921",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[466226, 12807, 664, 19, 50, "Text",ExpressionUUID->"f24d64e2-400b-4705-a484-bced260d6201",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[466893, 12828, 624, 17, 48, "Text",ExpressionUUID->"e463be18-b801-4326-8bc4-e2a1b7e1e733",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[467520, 12847, 949, 28, 53, "Text",ExpressionUUID->"b93a694d-7e06-4404-b3fb-3384ae99c388",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[468472, 12877, 364, 6, 34, "Text",ExpressionUUID->"3e226b8e-c798-47f3-9715-5bc0459ef4df",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[468839, 12885, 596, 13, 56, "Input",ExpressionUUID->"d9d91d96-6e62-403c-8bb0-279cae31b034",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[469438, 12900, 669, 17, 157, "Input",ExpressionUUID->"aa524f09-c3ad-4fc5-b00d-e26c6ed417ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[470110, 12919, 312, 6, 34, "Text",ExpressionUUID->"2eb7d33e-431e-427b-9d14-4757bd10ff74",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[470425, 12927, 692, 18, 61, "Input",ExpressionUUID->"f3e2b9b5-634a-4a95-990c-50ec9d019f8a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[471120, 12947, 1130, 35, 261, "Input",ExpressionUUID->"a8ae1775-59d0-4ffc-b4c6-a4c1e33f33da",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[472253, 12984, 601, 11, 54, "Text",ExpressionUUID->"6d602678-5c4f-4393-9d3a-fb9f885ab325",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[472869, 12998, 455, 9, 77, "Section",ExpressionUUID->"e9b350b6-c4fc-4a2d-b17f-bfeedbdbd21a",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[473327, 13009, 297, 7, 34, "Text",ExpressionUUID->"23d73fbc-d93b-4c8b-a39f-645d10a223a3"],
Cell[473627, 13018, 1769, 37, 56, "Input",ExpressionUUID->"c456a4c6-e52a-4832-9488-bf5ef125962b"],
Cell[475399, 13057, 349, 6, 34, "Text",ExpressionUUID->"241162cf-bb8c-429d-9f0c-a573b8287d1c"],
Cell[475751, 13065, 542, 12, 56, "Input",ExpressionUUID->"4fb204bb-b5d8-4213-832c-e44ff7a1b75d"],
Cell[476296, 13079, 401, 10, 56, "Input",ExpressionUUID->"06e9d7f4-2d8c-4417-8158-5b5e7bb47589"],
Cell[476700, 13091, 825, 16, 56, "Input",ExpressionUUID->"96e7ce11-e6b4-4f7d-ab5a-263ec483cd67"],
Cell[477528, 13109, 289, 5, 34, "Text",ExpressionUUID->"2afc037d-3fe9-464a-94fc-5fba27d238cf"],
Cell[477820, 13116, 941, 21, 82, "Input",ExpressionUUID->"57aa3a13-8bf3-4a6a-9e33-67d663af806b",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}],
Cell[478764, 13139, 1523, 33, 140, "Output",ExpressionUUID->"2a8a36bd-f543-475e-aa78-0220ccb00c4e"],
Cell[480290, 13174, 1525, 33, 140, "Output",ExpressionUUID->"8ad7397a-51f9-47dd-a93d-c266761d1704"],
Cell[481818, 13209, 452, 9, 34, "Text",ExpressionUUID->"4b83e4e0-9c7c-4724-97d7-bd5407339eda"],
Cell[CellGroupData[{
Cell[482295, 13222, 13250, 350, 1579, "Input",ExpressionUUID->"e8b9907c-9e84-45d8-ab3d-a4a6ab9fab80"],
Cell[495548, 13574, 47228, 871, 336, "Output",ExpressionUUID->"aacffc59-5d0c-4f4b-a275-858b38c53355"],
Cell[542779, 14447, 167977, 3014, 672, "Output",ExpressionUUID->"59f67af2-99af-40a6-b405-6560d198c1d5"],
Cell[710759, 17463, 45745, 831, 306, "Output",ExpressionUUID->"5bc0d4c4-bf02-4b67-9417-ad02d2d6a3ac"]
}, Open  ]],
Cell[756519, 18297, 347, 8, 77, "Section",ExpressionUUID->"17d12f9b-202a-425e-a70d-c6c8a1f4e7a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[756891, 18309, 949, 28, 53, "Text",ExpressionUUID->"cb233058-74fc-45f4-8728-40da2f43fac8",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[757843, 18339, 364, 6, 34, "Text",ExpressionUUID->"ec690dee-1c91-441c-a4dc-a6c7d6628970",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[758210, 18347, 596, 13, 56, "Input",ExpressionUUID->"961116b4-e358-417a-a202-dd3a369f6f88",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[758809, 18362, 669, 17, 157, "Input",ExpressionUUID->"4c72b397-37b3-4337-b5ac-b7cc9eb89590",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[759481, 18381, 312, 6, 34, "Text",ExpressionUUID->"dd4e023c-08a6-48c1-9134-1a8fff2093d3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[759796, 18389, 692, 18, 61, "Input",ExpressionUUID->"b4aa871f-2a08-444b-a5ad-72daf9ee2a94",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[760491, 18409, 1130, 35, 261, "Input",ExpressionUUID->"38caf8fb-8dc3-41d8-9e46-4a7be710a9b4",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[761658, 18449, 479, 9, 34, "Text",ExpressionUUID->"797622bb-1f23-46ba-9844-c259cab5862b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[762140, 18460, 10171, 224, 584, "Input",ExpressionUUID->"40d3d94d-005a-4371-8f02-627f8015cc3a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[772326, 18687, 181, 4, 34, "Text",ExpressionUUID->"45d39a07-85ba-46c5-b15f-1e540d0d7173"],
Cell[CellGroupData[{
Cell[772532, 18695, 397, 9, 56, "Input",ExpressionUUID->"e4529938-65ff-4b49-815d-7dc5ffe122e4"],
Cell[772932, 18706, 2084, 44, 125, "Output",ExpressionUUID->"049017c9-fb7f-4e92-8b2a-d352a1b06e46"]
}, Open  ]],
Cell[775031, 18753, 162, 3, 34, "Text",ExpressionUUID->"28e814d4-879f-4c59-9686-a6270f63f050"],
Cell[775196, 18758, 24471, 567, 1825, "Input",ExpressionUUID->"88471b74-3dcf-4b3b-8b5f-b4d6711ac49c"],
Cell[799670, 19327, 520, 11, 34, "Text",ExpressionUUID->"b25c8c64-c469-4ac8-952a-610039f970f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[800215, 19342, 17033, 385, 1315, "Input",ExpressionUUID->"8b3c2485-540c-4a01-a11b-c5fc1b357849"],
Cell[817251, 19729, 14047, 257, 1276, "Output",ExpressionUUID->"9f7d7756-f234-4bc5-8368-f82003a4b8e5"]
}, Open  ]],
Cell[831313, 19989, 384, 6, 77, "Section",ExpressionUUID->"abd52f43-1490-415a-88b3-ac67dc9000c2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[831700, 19997, 221, 4, 61, "Subsection",ExpressionUUID->"cd63464d-38f4-44b8-bd06-342d0557f2a4"],
Cell[CellGroupData[{
Cell[831946, 20005, 1052, 26, 34, "Text",ExpressionUUID->"aa774917-5f74-4153-9f6f-2a25e1ccf8b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[833001, 20033, 6280, 132, 486, "Input",ExpressionUUID->"214892ea-435d-4da2-9984-b93f6eb3f6fb",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[839284, 20167, 4827, 106, 682, "Input",ExpressionUUID->"5267a07e-64d1-474d-813d-173f706860b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[844126, 20276, 57298, 1149, 301, "Output",ExpressionUUID->"82e6b686-045b-4e49-84f3-1c47f1fb130a"],
Cell[901427, 21427, 316, 8, 61, "Subsection",ExpressionUUID->"8953fac5-5305-4963-b88f-8cd78d7ebe7c"],
Cell[901746, 21437, 8582, 187, 647, "Input",ExpressionUUID->"db9764a1-b7f3-4544-9693-6b777bb62db3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[910353, 21628, 1399, 33, 232, "Input",ExpressionUUID->"2731d15b-d8a2-4ca3-ba64-f2cf641454b3"],
Cell[911755, 21663, 26919, 557, 314, "Output",ExpressionUUID->"7f6834cc-1678-4dd6-b0e7-c6b77f563ddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[938711, 22225, 8516, 174, 511, "Input",ExpressionUUID->"67bffbb8-0e88-473f-ae89-8143d881c420",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[947230, 22401, 2710, 53, 232, "Input",ExpressionUUID->"457ba464-6c21-4b5b-a248-861cb6b50b11",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[949955, 22457, 1048932, 17230, 430, 821139, 13495, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d6ec4cc8-2be0-47d2-a6cd-4d74ae2e6672"]
}, Open  ]]
}
]
*)

